
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE col
@tableName varchar(255),
@columnName varchar(255),
@columnType varchar(MAX)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @SQL varchar(MAX)
	IF NOT EXISTS (SELECT * FROM sys.columns WHERE object_id = OBJECT_ID(N'[dbo].[' + @tableName + ']') AND [name] = @columnName)
	BEGIN
		SELECT @SQL = 'ALTER TABLE [dbo].[' + @tableName +']'
		+ ' ADD [' + @columnName + '] ' + @columnType
		EXEC (@SQL)
		PRINT 'Created Column: ' + @tableName + '.' + @columnName
	END
	ELSE
	BEGIN
		SELECT @SQL = 'ALTER TABLE [dbo].[' + @tableName +']'
		+ ' ALTER COLUMN [' + @columnName + '] ' + @columnType
		EXEC (@SQL)		
	END
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE con
@tableName varchar(255),
@constraintName varchar(255),
@constraint varchar(255)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @SQL varchar(MAX)
	SELECT @SQL = 'ALTER TABLE [dbo].[' + @tableName + ']'
	+ ' ADD CONSTRAINT [DC_' + @tableName + '_' + @constraintName +'] '
	+ @constraint
	EXEC (@SQL)
	PRINT 'Created Constraint: CO_' + @tableName + '_' + @constraintName
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE ind
@tableName varchar(255),
@indexName varchar(255),
@columns varchar(MAX)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @SQL varchar(MAX)
	SELECT @SQL = 'CREATE NONCLUSTERED INDEX [IX_' + @tableName + '_' + @indexName +']'
	+ ' ON [dbo].[' + @tableName + '] '
	+ @columns
	EXEC (@SQL)
	PRINT 'Created Index: IX_' + @tableName + '_' + @indexName
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE tab
@tableName varchar(255)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @new bit
	SET @new = 0
	DECLARE @SQL varchar(MAX)
	IF object_id(@tableName, 'U') IS NULL
	BEGIN
		SELECT @SQL = 'CREATE TABLE [dbo].[' + @tableName +']'
		+ '(
				Ind int IDENTITY(1,1) NOT NULL,	
				CONSTRAINT PK_' + @tableName + ' PRIMARY KEY(Ind)
			)'
		EXEC (@SQL)
		PRINT 'Created Table: ' + @tableName
		SET @new = 1
	END
	RETURN @new
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE tab_noid
@tableName varchar(255)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @SQL varchar(MAX)
	IF object_id(@tableName, 'U') IS NULL
	BEGIN
		SELECT @SQL = 'CREATE TABLE [dbo].[' + @tableName +']'
		+ '(
				Ind int NOT NULL,	
				CONSTRAINT PK_' + @tableName + ' PRIMARY KEY(Ind)
			)'
		EXEC (@SQL)
		PRINT 'Created Table: ' + @tableName
	END
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE uni
@tableName varchar(255),
@constraintName varchar(255),
@columns varchar(MAX)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @SQL varchar(MAX)
	SELECT @SQL = 'ALTER TABLE [dbo].[' + @tableName + ']'
	+ ' ADD CONSTRAINT [UC_' + @tableName + '_' + @constraintName +']'
	+ ' UNIQUE NONCLUSTERED '
	+ @columns
	EXEC (@SQL)
	PRINT 'Created Unique Constraint: UC_' + @tableName + '_' + @constraintName
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE DropConstraints
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @name sysname
	DECLARE @tableName sysname
	DECLARE @SQL nvarchar(MAX)

	DECLARE Constraints CURSOR FOR
	SELECT
		OBJECT_NAME(object_id) AS name,
        OBJECT_NAME(parent_object_id) AS tableName
    FROM sys.objects
    WHERE OBJECTPROPERTY(parent_object_id, N'IsTable') = 1
	AND OBJECTPROPERTY(parent_object_id ,N'IsMSShipped') = 0
	AND type != 'PK'
	AND type_desc LIKE '%CONSTRAINT'

	OPEN Constraints
	FETCH NEXT FROM Constraints INTO @name, @tableName
	WHILE @@fetch_status = 0
	BEGIN
		SET @SQL = 'ALTER TABLE [dbo].[' + @tableName +']'
		+ ' DROP CONSTRAINT ' + @name
		EXEC (@SQL)
		PRINT 'Dropped Constraint: ' + @name
		FETCH NEXT FROM Constraints INTO @name, @tableName
	END
	CLOSE Constraints
	DEALLOCATE Constraints
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE DropFunctions
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @name varchar(255)
	DECLARE @SQL varchar(MAX)
	SELECT @name = (SELECT TOP 1 [name] FROM sysobjects WHERE [type] IN (N'FN', N'IF', N'TF', N'FS', N'FT') AND category = 0 ORDER BY [name])
	WHILE @name IS NOT NULL
	BEGIN
		SELECT @SQL = 'DROP FUNCTION [dbo].[' + RTRIM(@name) +']'
		EXEC (@SQL)
		PRINT 'Dropped Function: ' + @name
		SELECT @name = (SELECT TOP 1 [name] FROM sysobjects WHERE [type] IN (N'FN', N'IF', N'TF', N'FS', N'FT') AND category = 0 AND [name] > @name ORDER BY [name])
	END
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE DropIndexes
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @name sysname
	DECLARE @tableName sysname
	DECLARE @SQL nvarchar(MAX)

	DECLARE Indexes CURSOR FOR
	SELECT
		name,
		OBJECT_NAME(object_id) as tableName
	FROM sys.indexes
	WHERE index_id > 0
	--AND index_id < 255
	AND is_primary_key = 0
	AND OBJECTPROPERTY(object_id, N'IsTable') = 1
	AND OBJECTPROPERTY(object_id ,N'IsMSShipped') = 0
	AND INDEXPROPERTY(object_id, name, 'IsStatistics') = 0
	AND is_unique_constraint = 0

	OPEN Indexes
	FETCH NEXT FROM Indexes INTO @name, @tableName
	WHILE @@fetch_status = 0
	BEGIN
		SET @SQL = 'DROP INDEX [dbo].[' + @tableName +'].' + @name
		EXEC (@SQL)
		PRINT 'Dropped Index: ' + @name
		FETCH NEXT FROM Indexes INTO @name, @tableName
	END
	CLOSE Indexes
	DEALLOCATE Indexes
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE DropProcedures
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @name VARCHAR(128)
	DECLARE @SQL VARCHAR(254)
	SELECT @name = (SELECT TOP 1 [name] FROM sysobjects WHERE [type] = 'P' AND category = 0 ORDER BY [name])
	WHILE @name is not null
	BEGIN
		IF RTRIM(@name) != 'DropProcedures'
			BEGIN
				SELECT @SQL = 'DROP PROCEDURE [dbo].[' + RTRIM(@name) +']'
				EXEC (@SQL)
				PRINT 'Dropped Procedure: ' + @name
				
			END
		SELECT @name = (SELECT TOP 1 [name] FROM sysobjects WHERE [type] = 'P' AND category = 0 AND [name] > @name ORDER BY [name])
	END
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE DropStatistics
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @name sysname
	DECLARE @tableName sysname
	DECLARE @SQL nvarchar(MAX)

	DECLARE Stats CURSOR FOR
	SELECT
		name,
		OBJECT_NAME(object_id) as tableName
	FROM sys.stats
	WHERE user_created = 1

	OPEN Stats
	FETCH NEXT FROM Stats INTO @name, @tableName
	WHILE @@fetch_status = 0
	BEGIN
		SET @SQL = 'DROP STATISTICS [dbo].[' + @tableName +'].' + @name
		EXEC (@SQL)
		PRINT 'Dropped Statistics: ' + @name
		FETCH NEXT FROM Stats INTO @name, @tableName
	END
	CLOSE Stats
	DEALLOCATE Stats
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE deltab
@tableName varchar(255)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @SQL varchar(MAX)
	IF object_id(@tableName, 'U') IS NOT NULL
	BEGIN
		SELECT @SQL = 'DROP TABLE [dbo].[' + @tableName +']'
		EXEC (@SQL)
		PRINT 'Dropped Table: ' + @tableName
	END
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE DropViews
AS
BEGIN
	SET NOCOUNT ON;

	DECLARE @name varchar(255)
	DECLARE @SQL varchar(MAX)
	SELECT @name = (SELECT TOP 1 [name] FROM sysobjects WHERE [type] = 'V' AND category = 0 ORDER BY [name])
	WHILE @name IS NOT NULL
	BEGIN
		SELECT @SQL = 'DROP VIEW [dbo].[' + RTRIM(@name) +']'
		EXEC (@SQL)
		PRINT 'Dropped View: ' + @name
		SELECT @name = (SELECT TOP 1 [name] FROM sysobjects WHERE [type] = 'V' AND category = 0 AND [name] > @name ORDER BY [name])
	END
END

GO
EXEC DropFunctions
EXEC DropViews
EXEC DropConstraints
EXEC DropIndexes
EXEC DropStatistics
GO
DECLARE @t varchar(255)
SET @t = 'Ayarlar'

DECLARE @new bit
EXEC @new = tab @t

SELECT @new AS new INTO #New

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'TipInd', 'int'
EXEC col @t, 'KasaAcilmaTarihi', 'datetime'
EXEC col @t, 'AnaParaBirimi', 'nvarchar(5)'
EXEC col @t, 'FirmaAdi', 'nvarchar(MAX)'
EXEC col @t, 'PersonelGrupInd', 'int'
EXEC col @t, 'OtomasyonFirmaInd', 'int'
EXEC col @t, 'OtomasyonFirmaKodu', 'nvarchar(50)'
EXEC col @t, 'OtomasyonFirmaAdi', 'nvarchar(100)'
EXEC col @t, 'OtomasyonKsslFirmaInd', 'int'
EXEC col @t, 'OtomasyonKsslFirmaKodu', 'nvarchar(50)'
EXEC col @t, 'OtomasyonKsslFirmaAdi', 'nvarchar(100)'
EXEC col @t, 'Turtip', 'int'
EXEC col @t, 'StawizTip', 'int'
EXEC col @t, 'SayacAktarmaKodu', 'nvarchar(40)'
EXEC col @t, 'SayacAktarmaKodu2', 'nvarchar(40)'
EXEC col @t, 'GenelMetin', 'nvarchar(231)'
EXEC col @t, 'GenelSayi', 'int'
EXEC col @t, 'FaturaNo', 'nvarchar(50)'
EXEC col @t, 'FaturaNoSistemdenMi', 'bit'
EXEC col @t, 'IrsaliyeNo', 'nvarchar(50)'
EXEC col @t, 'IrsaliyeNoSistemdenMi', 'bit'
EXEC col @t, 'SiraliMi', 'bit'
EXEC col @t, 'OtomasyonKartlar', 'bit' -- 'False ya da NULL ya da 0' Tüm Kartlar, 'True ya da 1' İlk Kartı Kullan
EXEC col @t, 'KredMusSatGrup',   'bit' -- 'False ya da NULL ya da 0' Grupsuz,     'True ya da 1' Gruplu (Cariye göre)
EXEC col @t, 'KKGunSonuVardiyaOnay', 'bit' -- 'False ya da NULL ya da 0: KK Günsonu Girilmeden Vardiya Onaylanabilir,	'True ya da 1: KK Günsonu Girilmeden Vardiya Onaylanamaz
EXEC col @t, 'AyiriciKarakter', 'int' -- Ayırıcı karakterin ASCII kodu
EXEC col @t, 'SiraNumarasi', 'int' -- Alanın yazılacağı sıra
EXEC col @t, 'AlanAdi', 'nvarchar(50)' -- Tablodan çekilecek alan
EXEC col @t, 'KarakterSayisi', 'int' -- Dosyaya yazılacak alan için atanacak karakter sayısı
EXEC col @t, 'Hizalama', 'bit' -- 'False ya da NULL ya da 0: Sola dayalı,	'True ya da 1: Sağa dayalı
EXEC col @t, 'PartnerCardFirmaInd', 'int'
EXEC col @t, 'PartnerCardFirmaKodu', 'nvarchar(50)'
EXEC col @t, 'PartnerCardFirmaAdi', 'nvarchar(100)'
EXEC col @t, 'GiftCardFirmaInd', 'int'
EXEC col @t, 'GiftCardFirmaKodu', 'nvarchar(50)'
EXEC col @t, 'GiftCardFirmaAdi', 'nvarchar(100)'
EXEC col @t, 'PromosyonSatisiniGiderlestir', 'bit'
EXEC col @t, 'XmlVersiyon', 'nvarchar(20)'
EXEC col @t, 'PlakaIleEslestir', 'bit'
EXEC col @t, 'SayacAktarmaKodu2', 'nvarchar(40)'
EXEC col @t, 'VardiyaDisariAktar', 'bit'
EXEC col @t, 'VardiyaDisariAktarFormat', 'varchar(50)'
EXEC col @t, 'VardiyaDisariAktarEPosta', 'varchar(150)'
EXEC col @t, 'VardiyaDisariAktarGeriden', 'int'
EXEC col @t, 'BilancoNetKarZararHesaplansin', 'bit'
EXEC col @t, 'SatisFiyatiniGuncelleme', 'bit'
EXEC col @t, 'OtomasyonFirmasi', 'int'
EXEC col @t, 'VTSKaydet', 'bit'
EXEC col @t, 'TTSDisiSatislardaPlakaUzerindenVeresiyeFisKaydi', 'bit'
EXEC col @t, 'MobilKKHesapInd', 'int'
EXEC col @t, 'MobilKKHesapKodu', 'nvarchar(50)'
EXEC col @t, 'MobilKKHesapAdi', 'nvarchar(100)'
EXEC col @t, 'BelgeNumarasinaGoreSirala', 'bit'
EXEC col @t, 'FiloKoduKontroluYapilsin', 'bit'
EXEC col @t, 'BP', 'bit'


GO

DECLARE @new bit
SELECT @new = new FROM #New
DROP TABLE #New

IF @new = 1
BEGIN
	SET IDENTITY_INSERT Ayarlar ON

	INSERT INTO Ayarlar(Ind, Owner, TipInd, KasaAcilmaTarihi, AnaParaBirimi, FirmaAdi,		PersonelGrupInd,	OtomasyonFirmaInd,	OtomasyonFirmaKodu,	OtomasyonFirmaAdi,	OtomasyonKsslFirmaInd,	OtomasyonKsslFirmaKodu,	OtomasyonKsslFirmaAdi,	Turtip,	OtomasyonKartlar,	KredMusSatGrup,	KKGunSonuVardiyaOnay,	AyiriciKarakter,	SiraNumarasi,	AlanAdi,	KarakterSayisi,	Hizalama, OtomasyonFirmasi)
	SELECT              '1', NULL,  '301',  NULL,             'TL',         'Firma Adı',	NULL,				NULL,				NULL,				NULL,				NULL,					NULL,                   NULL,					0     ,	'False',			'False',		'False',				NULL,				NULL,			NULL,		NULL,			NULL,	  0
	SET IDENTITY_INSERT Ayarlar OFF
END
GO
DECLARE @t varchar(255)
SET @t = 'Basliklar'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'TipInd', 'int NOT NULL'
EXEC col @t, 'BelgeNo', 'nvarchar(20)'
EXEC col @t, 'Tarih', 'datetime'
EXEC col @t, 'HesapInd', 'int'
EXEC col @t, 'HesapKodu', 'nvarchar(50)'
EXEC col @t, 'HesapAdi', 'nvarchar(100)'
EXEC col @t, 'Aciklama', 'nvarchar(500)'
EXEC col @t, 'DepoInd', 'int'
EXEC col @t, 'DepoKodu', 'nvarchar(30)'
EXEC col @t, 'DepoAdi', 'nvarchar(50)'
EXEC col @t, 'Aktif', 'bit'
EXEC col @t, 'BankaKomisyonu', 'nvarchar(40)'
EXEC col @t, 'DurumInd', 'int'
EXEC col @t, 'FaturaInd', 'int'
EXEC col @t, 'GelirInd', 'int'
EXEC col @t, 'GelirKodu', 'nvarchar(30)'
EXEC col @t, 'GelirAdi', 'nvarchar(50)'
EXEC col @t, 'GiderInd', 'int'
EXEC col @t, 'GiderKodu', 'nvarchar(30)'
EXEC col @t, 'GiderAdi', 'nvarchar(50)'
EXEC col @t, 'Iskonto', 'decimal(28, 18)'--
EXEC col @t, 'VardiyaKartInd', 'int'
EXEC col @t, 'VardiyaNo', 'int'
EXEC col @t, 'KartNo', 'int'
EXEC col @t, 'FisPortfoyu', 'bit'
EXEC col @t, 'PlakaNo', 'nvarchar(30)'
EXEC col @t, 'OtomasyonVardiyaInd', 'int'
EXEC col @t, 'Baslangic', 'datetime'
EXEC col @t, 'Bitis', 'datetime'
EXEC col @t, 'Yuvarlama', 'decimal(28,10)'
EXEC col @t, 'TahsilatTutari', 'decimal(28,10)'
EXEC col @t, 'OdemeTarihi', 'datetime'
EXEC col @t, 'PerakendeKasaIslemTarihi', 'datetime'
EXEC col @t, 'KDVDahil', 'int'
EXEC col @t, 'FaturaIadeMi', 'bit'
EXEC col @t, 'TesisatKodu', 'nvarchar(30)'
EXEC col @t, 'KasaNo', 'int'
EXEC col @t, 'AltTipInd', 'int'
EXEC col @t, 'Aktarildi', 'bit'
EXEC col @t, 'AktarildiBG', 'bit'
EXEC col @t, 'FFarkiFaturaInd', 'int'

GO
DECLARE @t varchar(255)
SET @t = 'BilancoHesaplari'
EXEC deltab @t
EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'TipInd', 'int'
EXEC col @t, 'HesapKodu', 'nvarchar(30) NOT NULL'
EXEC col @t, 'HesapAdi', 'nvarchar(40) NOT NULL'
GO
--DELETE FROM BilancoHesaplari
SET IDENTITY_INSERT BilancoHesaplari ON
INSERT INTO BilancoHesaplari(Ind, Owner, TipInd, HesapKodu,HesapAdi)
SELECT '1', NULL, '208', 'BILANCO1', 'FON HESAPLARI' UNION ALL
SELECT '2', NULL, '208', 'BILANCO2', 'HUKUK ALACAKLARI' UNION ALL
SELECT '3', NULL, '208', 'BILANCO3', 'DEMİRBAŞ' UNION ALL
SELECT '4', NULL, '209', 'BILANCO4', 'PROMOSYON STOK' UNION ALL
SELECT '5', NULL, '208', 'BILANCO5', 'EMANET HESABI (AKTİF)' UNION ALL
SELECT '6', NULL, '208', 'BILANCO6', 'BANKA KREDİLERİ' UNION ALL
SELECT '7', NULL, '208', 'BILANCO7', 'SATICILAR (AKARYAKIT)' UNION ALL
SELECT '8', NULL, '208', 'BILANCO8', 'SATICILAR (L.P.G)' UNION ALL
SELECT '9', NULL, '208', 'BILANCO9', 'SATICILAR (MADENİ YAĞ)' UNION ALL
SELECT '10', NULL, '208', 'BILANCO10', 'SATICILAR (PROMOSYON)' UNION ALL
SELECT '11', NULL, '208', 'BILANCO11', 'EMANET HESABI (PASİF)' UNION ALL
SELECT '12', NULL, '208', 'BILANCO12', 'SERMAYE' UNION ALL
SELECT '13', NULL, '210', 'GIDER1', 'GIDER HESAPLARI (PERSONEL - Şube Bazlı)' UNION ALL 
SELECT '14', NULL, '211', 'GIDER2', 'GIDER HESAPLARI (VARDIYA)' UNION ALL
SELECT '15', NULL, '212', 'GIDER3', 'GELIR HESAPLARI (VARDIYA)' UNION ALL 
SELECT '16', NULL, '208', 'BILANCO13', 'İŞ AVANSI' UNION ALL
SELECT '17', NULL, '208', 'BILANCO14', 'STOK PARÇALAMA CARİSİ' UNION ALL
SELECT '18', NULL, '208', 'BILANCO15', 'SMS CARİLERİ'
SET IDENTITY_INSERT BilancoHesaplari OFF
GO
DECLARE @t varchar(255)
SET @t = 'Birimler'

DECLARE @new bit
EXEC @new = tab @t

SELECT @new AS new INTO #New

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'BirimAdi', 'nvarchar(15) NOT NULL'
EXEC col @t, 'ParentInd', 'int NOT NULL'
EXEC col @t, 'Carpan', 'decimal(28, 8) NOT NULL'
EXEC col @t, 'EFaturaBirim', 'nvarchar(20)'

EXEC uni @t, 'BirimAdi', '(BirimAdi)'

GO

DECLARE @new bit
SELECT @new = new FROM #New
DROP TABLE #New

IF @new = 1
BEGIN
	SET IDENTITY_INSERT Birimler ON

	INSERT INTO Birimler(Ind, Owner, BirimAdi, ParentInd, Carpan)
	SELECT '1', NULL, 'Adet', '1', '1.00000000'

	SET IDENTITY_INSERT Birimler OFF
END
GO
DECLARE @t varchar(255)
SET @t = 'ButceTahmin'

EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'AyYil', 'nvarchar(4)'
EXEC col @t, 'KartHesapInd', 'int'
Exec col @t, 'Tahmin', 'decimal(28,8) NOT NULL'
EXEC col @t, 'KartOwner', 'int'
EXEC col @t, 'IsOnaylandi', 'bit NOT NULL'


GO
DECLARE @t varchar(255)
SET @t = 'CariOdemeVadeleri'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'CariInd', 'int NOT NULL'
EXEC col @t, 'SubeInd', 'int NOT NULL'
EXEC col @t, 'Ay', 'int NOT NULL'
EXEC col @t, 'Gun', 'int NOT NULL'
EXEC col @t, 'Aktif', 'bit NOT NULL'
GO
DECLARE @t varchar(255)
SET @t = 'CariStokIskontoOranlari'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'CariInd', 'int NOT NULL'
EXEC col @t, 'StokInd', 'int NOT NULL'
EXEC col @t, 'IskontoOrani', 'decimal(18, 2)'
EXEC col @t, 'Aktif', 'bit NOT NULL'
GO
DECLARE @t varchar(255)
SET @t = 'CariStokRiskLimitleri'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'CariInd', 'int NOT NULL'
EXEC col @t, 'StokInd', 'int NOT NULL'
EXEC col @t, 'RiskLimitiLt', 'decimal(28, 8)'


GO
DECLARE @t varchar(255)
SET @t = 'CariTelefonlari'


--EXEC deltab @t --bunu anlamadım (eren)
EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'CariHesapInd', 'int'
EXEC col @t, 'Telefon', 'NVARCHAR(20)'
EXEC col @t, 'SMSGonderilebilir', 'BIT'

--GO
GO
DECLARE @t varchar(255)
SET @t = 'CariVadeIskontoOranlari'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'CariInd', 'int NOT NULL'
EXEC col @t, 'No', 'int NOT NULL'
EXEC col @t, 'Ay', 'int NOT NULL'
EXEC col @t, 'Gun', 'int NOT NULL'
EXEC col @t, 'IskontoOrani', 'decimal(18, 2)'
EXEC col @t, 'Aktif', 'bit NOT NULL'
GO
DECLARE @t varchar(255)
SET @t = 'CekBankaTipleri'

DECLARE @new bit
EXEC @new = tab @t

SELECT @new AS new INTO #New

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'Banka', 'nvarchar(20) NOT NULL'
EXEC col @t, 'KesideYeri', 'nvarchar(50)'
EXEC col @t, 'BorcluSube', 'nvarchar(50)'
EXEC col @t, 'BorcluHesap', 'nvarchar(50)'

GO

DECLARE @new bit
SELECT @new = new FROM #New
DROP TABLE #New

IF @new = 1
BEGIN
SET IDENTITY_INSERT CekBankaTipleri ON
INSERT INTO CekBankaTipleri(Ind, Owner, Banka, KesideYeri, BorcluSube, BorcluHesap)
SELECT '0', NULL, 'YOK','','','' UNION ALL
SELECT '1', NULL, 'Finansbank','','','' UNION ALL
SELECT '2', NULL, 'Akbank','','',''
SET IDENTITY_INSERT CekBankaTipleri OFF
END



GO
DECLARE @t varchar(255)
SET @t = 'CekTarihce'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'TipInd', 'int NOT NULL'
EXEC col @t, 'DurumInd', 'int NOT NULL'
EXEC col @t, 'CiroCariInd', 'int NOT NULL'
EXEC col @t, 'CiroBankaInd', 'int NOT NULL'
EXEC col @t, 'IslemAdi', 'nvarchar(250)'
EXEC col @t, 'CekNo', 'nvarchar(50) NOT NULL'
EXEC col @t, 'KayitTarihi', 'datetime NOT NULL'
EXEC col @t, 'IslemTarihi', 'datetime NOT NULL'

GO
DECLARE @t varchar(255)
SET @t = 'DBSBanka'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'BankaAdi', 'nvarchar(50)'
GO
DECLARE @t varchar(255)
SET @t = 'DBSBankaCariHesap'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'CariInd', 'int NOT NULL'
EXEC col @t, 'BankaInd', 'int NOT NULL'
EXEC col @t, 'Aktif', 'bit NOT NULL'
EXEC col @t, 'KullanilabilirKredi','decimal(18,4) NOT NULL'
GO
DECLARE @t varchar(255)
SET @t = 'Durumlar'

EXEC deltab @t
EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'Adi', 'nvarchar(100) NOT NULL'
EXEC col @t, 'Tablo', 'nvarchar(100) NOT NULL'

GO

SET IDENTITY_INSERT Durumlar ON

INSERT INTO Durumlar(Ind, Owner, Adi, Tablo)
SELECT '1', NULL, 'Yeni', 'Hareketler' UNION ALL
SELECT '2', NULL, 'İrsaliyeleşti', 'Hareketler' UNION ALL
SELECT '3', NULL, 'Faturalaştı', 'Hareketler' UNION ALL
SELECT '4', NULL, 'Portföyde', 'Hareketler' UNION ALL
SELECT '5', NULL, 'Tahsil Edildi', 'Hareketler' UNION ALL
SELECT '6', NULL, 'Cariye Ciro Edildi', 'Hareketler' UNION ALL
SELECT '7', NULL, 'Bankaya Ciro Edildi', 'Hareketler' UNION ALL
SELECT '8', NULL, 'Bankadan Tahsil Edildi', 'Hareketler' UNION ALL
SELECT '9', NULL, 'Karşılıksız Çıktı', 'Hareketler' UNION ALL
SELECT '10', NULL, 'Ödendi', 'Hareketler' UNION ALL
SELECT '11', NULL, 'İptal Edildi', 'Hareketler' UNION ALL
SELECT '12', NULL, 'İade Edildi', 'Hareketler' UNION ALL
SELECT '13', NULL, 'İrsaliyeden faturalaştı', 'Basliklar'   UNION ALL
SELECT '14', NULL, 'Onaylandı', 			  'Basliklar'   UNION ALL
SELECT '15', NULL, 'Sevk Edildi', 			  'Hareketler'  UNION ALL
SELECT '16', NULL, 'İptal Edildi', 			  'Basliklar'   UNION ALL
SELECT '17', NULL, 'Sevk Edildi', 			  'Basliklar' --UNION ALL --VT de kullanılmıyor, kodda statik kullanıldı.
SET IDENTITY_INSERT Durumlar OFF
GO
DECLARE @t varchar(255)
SET @t = 'Etiketler'

EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'EtiketAdi', 'nvarchar(50)'
EXEC col @t, 'IsGider', 'bit NOT NULL'


GO
DECLARE @t varchar(255)
SET @t = 'FiyatDegisimi'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'StokInd', 'int'
EXEC col @t, 'tarih', 'datetime'
EXEC col @t, 'ParaBirimi', 'nvarchar(10)'
EXEC col @t, 'Tutar', 'decimal(28, 8)'
EXEC col @t, 'DosyaGonderildi', 'bit'
EXEC col @t, 'YeniStok', 'bit'
EXEC col @t, 'YeniBarkod', 'bit'

GO
DECLARE @t varchar(255)
SET @t = 'FiyatDegisimiSubeGoruntuleme'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'tarih', 'datetime'

GO
DECLARE @t varchar(255)
SET @t = 'GelirGiderGrupEslestirme'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'GelirGrubuInd', 'int'
EXEC col @t, 'GiderGrubuInd', 'int'
EXEC col @t, 'ParentInd', 'int'

GO
DECLARE @t varchar(255)
SET @t = 'GelirGruplari'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'GrupAdi', 'nvarchar(50)'
EXEC col @t, 'ParentInd', 'int'
EXEC col @t, 'SiraNo', 'int'
GO
DECLARE @t varchar(255)
SET @t = 'GiderGruplari'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'GrupAdi', 'nvarchar(50)'
EXEC col @t, 'ParentInd', 'int'
EXEC col @t, 'SiraNo', 'int'
EXEC col @t, 'OzetRapordaGoster', 'bit'
GO
DECLARE @t varchar(255)
SET @t = 'Hareketler'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'TipInd', 'int NOT NULL'
EXEC col @t, 'BaslikInd', 'int'
EXEC col @t, 'CariHesapInd', 'int'
EXEC col @t, 'CariHesapKodu', 'nvarchar(50)'
EXEC col @t, 'CariHesapAdi', 'nvarchar(100)'
EXEC col @t, 'BankaHesapInd', 'int'
EXEC col @t, 'BankaHesapKodu', 'nvarchar(50)'
EXEC col @t, 'BankaHesapAdi', 'nvarchar(100)'
EXEC col @t, 'KKHesapInd', 'int'
EXEC col @t, 'KKHesapKodu', 'nvarchar(50)'
EXEC col @t, 'KKHesapAdi', 'nvarchar(100)'
EXEC col @t, 'GirisTarihi', 'datetime'
EXEC col @t, 'AktarimTarihi', 'datetime'
EXEC col @t, 'VadeTarihi', 'datetime'
EXEC col @t, 'CekHesapInd', 'int'
EXEC col @t, 'CekHesapAdi', 'nvarchar(50)'
EXEC col @t, 'CekNo', 'nvarchar(50)'
EXEC col @t, 'Aciklama', 'nvarchar(100)'
EXEC col @t, 'BankaAciklama', 'nvarchar(100)'
EXEC col @t, 'CekSahibi', 'nvarchar(100)'
EXEC col @t, 'StokInd', 'int'
EXEC col @t, 'StokKodu', 'nvarchar(50)'
EXEC col @t, 'StokAdi', 'nvarchar(100)'
EXEC col @t, 'Barkod', 'nvarchar(50)'
EXEC col @t, 'SatisFiyatiInd', 'int'
EXEC col @t, 'Miktar', 'decimal(28, 13)'
EXEC col @t, 'SatisFiyati', 'decimal(28, 8)'
EXEC col @t, 'AnaBirimAdi', 'nvarchar(15)'
EXEC col @t, 'BirimAdi', 'nvarchar(15)'
EXEC col @t, 'Carpan', 'decimal(28, 13)'
EXEC col @t, 'ParaBirimi', 'nvarchar(5)'
EXEC col @t, 'Kur', 'decimal(28, 8)'
EXEC col @t, 'Fiyat', 'decimal(28, 13)'
EXEC col @t, 'GercekFiyat', 'decimal(28, 13)'
EXEC col @t, 'AnaParaBirimi', 'nvarchar(15)'
EXEC col @t, 'KDVOrani', 'decimal(4, 2)'
EXEC col @t, 'Iskonto', 'decimal(28, 13)'
EXEC col @t, 'Tutar', 'decimal(28, 8)'
EXEC col @t, 'YazarKasaFisNo', 'nvarchar(30)'
EXEC col @t, 'DepoInd', 'int'
EXEC col @t, 'DepoKodu', 'nvarchar(30)'
EXEC col @t, 'DepoAdi', 'nvarchar(50)'
EXEC col @t, 'HedefBankaInd', 'int'
EXEC col @t, 'HedefBankaHesapKodu', 'nvarchar(50)'
EXEC col @t, 'HedefBankaHesapAdi', 'nvarchar(100)'
EXEC col @t, 'PersonelHesapInd', 'int'
EXEC col @t, 'PersonelHesapKodu', 'nvarchar(50)'
EXEC col @t, 'PersonelHesapAdi', 'nvarchar(100)'
EXEC col @t, 'DurumInd', 'int'
EXEC col @t, 'TeslimTarihi', 'datetime'
EXEC col @t, 'GelirInd', 'int'
EXEC col @t, 'GelirKodu', 'nvarchar(30)'
EXEC col @t, 'GelirAdi', 'nvarchar(50)'
EXEC col @t, 'GiderInd', 'int'
EXEC col @t, 'GiderKodu', 'nvarchar(30)'
EXEC col @t, 'GiderAdi', 'nvarchar(50)'
EXEC col @t, 'CiroBankaInd', 'int'
EXEC col @t, 'CiroBankaKodu', 'nvarchar(50)'
EXEC col @t, 'CiroBankaAdi', 'nvarchar(100)'
EXEC col @t, 'CiroCariInd', 'int'
EXEC col @t, 'CiroCariKodu', 'nvarchar(50)'
EXEC col @t, 'CiroCariAdi', 'nvarchar(100)'
EXEC col @t, 'Hakedilen', 'decimal(28, 8)'
EXEC col @t, 'Prim', 'decimal(28, 8)'
EXEC col @t, 'Gun', 'int'
EXEC col @t, 'VardiyaKartInd', 'int'
EXEC col @t, 'AdaGrubu', 'int'
EXEC col @t, 'SayacInd', 'int'
EXEC col @t, 'SayacAdi', 'nvarchar(50)'
EXEC col @t, 'SayacKodu', 'nvarchar(30)'
EXEC col @t, 'EskiEndeks', 'decimal(28, 8)'
EXEC col @t, 'YeniEndeks', 'decimal(28, 8)'
EXEC col @t, 'Aktarma', 'decimal(28, 8)'
EXEC col @t, 'AcikFazla', 'decimal(28, 8)'
EXEC col @t, 'IslemTarihi', 'datetime'
EXEC col @t, 'PerakendeInd', 'int'
EXEC col @t, 'SayimMiktari', 'decimal(28, 8)'
EXEC col @t, 'AlisFiyati', 'decimal(28, 8)'
EXEC col @t, 'GunSonu', 'nvarchar(50)'
EXEC col @t, 'VTSInd', 'int'
EXEC col @t, 'PlakaNo', 'nvarchar(50)'
EXEC col @t, 'Rid', 'int'
EXEC col @t, 'HedefHesapInd', 'int'
EXEC col @t, 'HedefHesapKodu', 'nvarchar(50)'
EXEC col @t, 'HedefHesapAdi', 'nvarchar(100)'
EXEC col @t, 'KaynakInd', 'int'
EXEC col @t, 'KaynakKodu', 'nvarchar(50)'
EXEC col @t, 'KaynakAdi', 'nvarchar(50)'
EXEC col @t, 'HedefInd', 'int'
EXEC col @t, 'HedefKodu', 'nvarchar(50)'
EXEC col @t, 'HedefAdi', 'nvarchar(50)'
EXEC col @t, 'NetMiktar', 'decimal(28, 8)'
EXEC col @t, 'PerakendeKasaIslemTarihi', 'datetime'
EXEC col @t, 'MaasIslenmeDurumu', 'int'
EXEC col @t, 'KasayaIslensinMi', 'bit'
EXEC col @t, 'KasiyerKodu', 'nvarchar(50)'
EXEC col @t, 'Agi', 'decimal(28,13)'
EXEC col @t, 'MaasDonemTarihi', 'datetime'
EXEC col @t, 'Aktarildi', 'bit'
EXEC col @t, 'Senet', 'bit'
EXEC col @t, 'OTVTutar', 'decimal(28, 13)'
EXEC col @t, 'KasaTahsilatInd', 'int'
EXEC col @t, 'SaticiKodu', 'nvarchar(50)'


EXEC ind @t,'Hareketler','(TipInd,BaslikInd,DepoInd,VardiyaKartInd,StokInd,GelirInd)'

GO
DECLARE @t varchar(255)
SET @t = 'HesapDetaylari'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'TipInd', 'int NOT NULL'
EXEC col @t, 'CariHesapInd', 'int'
EXEC col @t, 'Plaka', 'nvarchar(30)'
EXEC col @t, 'SayacKodu', 'nvarchar(50)'
EXEC col @t, 'SayacAdi', 'nvarchar(100)'
EXEC col @t, 'DepoInd', 'int'
EXEC col @t, 'SayacEndeksi', 'decimal(28, 8)'
EXEC col @t, 'AdaGrubu', 'int'
EXEC col @t, 'OtomasyonAktif', 'bit'
EXEC col @t, 'AzalanEndeks', 'bit'
EXEC col @t, 'OtomasyonKodu', 'nvarchar(50)'
EXEC col @t, 'GiderAdi', 'nvarchar(100)'
EXEC col @t, 'BankaInd', 'int'
EXEC col @t, 'KefaletLimiti', 'decimal(28,13)'
EXEC col @t, 'CekLimiti', 'decimal(28,13)'
EXEC col @t, 'CekCiroMarjOrani', 'decimal(28,13)'
EXEC col @t, 'DigerKrediKullanimDegeri', 'decimal(28,13)'
GO
DECLARE @t varchar(255)
SET @t = 'Hesaplar'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'TipInd', 'int NOT NULL'
EXEC col @t, 'HesapKodu', 'nvarchar(50) NOT NULL'
EXEC col @t, 'HesapAdi', 'nvarchar(100) NOT NULL'
EXEC col @t, 'StokInd', 'int'
EXEC col @t, 'Kapasite', 'decimal(28, 8)'
EXEC col @t, 'MinimumSeviye', 'decimal(28, 8)'
EXEC col @t, 'OzelKodInd', 'int'
EXEC col @t, 'OzelKodu', 'nvarchar(30)'
EXEC col @t, 'Adres', 'nvarchar(255)'
EXEC col @t, 'Telefon', 'nvarchar(16)'
EXEC col @t, 'Gsm', 'nvarchar(16)'
EXEC col @t, 'Faks', 'nvarchar(16)'
EXEC col @t, 'Sehir', 'nvarchar(10)'
EXEC col @t, 'EPosta', 'nvarchar(max)'
EXEC col @t, 'VergiDairesi', 'nvarchar(40)'
EXEC col @t, 'VergiNo', 'nvarchar(16)'
EXEC col @t, 'TcKimlikNo', 'nvarchar(16)'
EXEC col @t, 'RiskLimiti', 'decimal(28, 8)'
EXEC col @t, 'Aciklama', 'nvarchar(MAX)'
EXEC col @t, 'NetMaas', 'decimal(28, 8)'
EXEC col @t, 'GirisTarihi', 'datetime'
EXEC col @t, 'CikisTarihi', 'datetime'
EXEC col @t, 'AyrilmaSebebi', 'nvarchar(50)'
EXEC col @t, 'BankaInd', 'int'
EXEC col @t, 'BankaKomisyon', 'decimal(28, 8)'
EXEC col @t, 'MusteriKomisyon', 'decimal(28, 8)'
EXEC col @t, 'Vade', 'int'
EXEC col @t, 'BankaAdi', 'nvarchar(40)'
EXEC col @t, 'SubeAdi', 'nvarchar(40)'
EXEC col @t, 'Aktif', 'bit'
EXEC col @t, 'FaturaVadesi', 'int'
EXEC col @t, 'OdemeVadesi', 'int'
EXEC col @t, 'Faiz', 'decimal(28,8)' 
EXEC col @t, 'ParaBirimi', 'nvarchar(5)'
EXEC col @t, 'Raf', 'bit'
EXEC col @t, 'GrupInd', 'int'
EXEC col @t, 'Prim', 'decimal(28, 8)'
EXEC col @t, 'FisPortfoyu', 'bit'
EXEC col @t, 'OtomasyonKodu', 'nvarchar(30)'
EXEC col @t, 'GelirGiderEtiketleriInds', 'nvarchar(max)'
EXEC col @t, 'Iskonto', 'decimal(28, 8)'
EXEC col @t, 'AkaryakitIskonto', 'decimal(28, 8)'
EXEC col @t, 'TeminatKoduInd', 'int'
EXEC col @t, 'TeminatKodu', 'nvarchar(255)'
EXEC uni @t, 'Hesap', '(HesapKodu, TipInd)'
EXEC col @t, 'FiloKodu', 'nvarchar(255)'
EXEC col @t, 'FiloGrupKodu', 'nvarchar(255)'
EXEC col @t, 'RiskLimitiLt', 'decimal(28, 8)'
EXEC col @t, 'MuhasebeKodu', 'nvarchar(50)'
EXEC col @t, 'IskontoX', 'decimal(28, 8)'
EXEC col @t, 'AkaryakitIskontoX', 'decimal(28, 8)'
EXEC col @t, 'MuhteviyatDurumu', 'int'
EXEC col @t, 'HesapBankaAdi', 'nvarchar(100)'
EXEC col @t, 'HesapIbanNo', 'nvarchar(100)'
EXEC col @t, 'HesapNo', 'nvarchar(50)'
EXEC col @t, 'UyeIsyeriNo', 'nvarchar(50)'
EXEC col @t, 'IlgiliKisi', 'nvarchar(100)'
EXEC col @t, 'Agi', 'decimal(28,13)'
EXEC col @t, 'DekontCarisi', 'bit'
EXEC col @t, 'EFaturaOnayliGonder', 'bit'
EXEC col @t, 'EFaturaTuru', 'varchar(1)'
EXEC col @t, 'Ilce', 'varchar(50)'
EXEC col @t, 'DBSKullan', 'bit'
EXEC col @t, 'DBSGonder', 'bit'
EXEC col @t, 'DBSTipi', 'int'
EXEC col @t, 'DBSTeminatTutari', 'decimal(28,8)'
EXEC col @t, 'DBSEkTeminatTutari', 'decimal(28,8)' 
EXEC col @t, 'DBSEkRiskTutari', 'decimal(28,8)'
EXEC col @t, 'FiloLimitTakibiYap', 'bit'
EXEC col @t, 'DBSCekliRiskOrani', 'decimal(28,8)'
EXEC col @t, 'PersonelInd', 'int'
EXEC col @t, 'CekBankaTipi', 'int'
EXEC col @t, 'SaticiKodu', 'nvarchar(50)'

 


GO
DECLARE @t varchar(255)
SET @t = 'KDVGruplari'

DECLARE @new bit
EXEC @new = tab @t

SELECT @new AS new INTO #New

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'KDVKodu', 'int NOT NULL'
EXEC col @t, 'KDVAdi', 'nvarchar(50) NOT NULL'
EXEC col @t, 'KDVOrani', 'decimal(28, 8) NOT NULL'

EXEC uni @t, 'KDVKodu', '(KDVKodu)'

GO

DECLARE @new bit
SELECT @new = new FROM #New
DROP TABLE #New

IF @new = 1
BEGIN
	SET IDENTITY_INSERT KDVGruplari ON

	INSERT INTO KDVGruplari(Ind, Owner, KDVKodu, KDVAdi, KDVOrani)
	SELECT '1', NULL, '1', 'Yüzde 18', '18.00000000'

	SET IDENTITY_INSERT KDVGruplari OFF
END
GO
DECLARE @t varchar(255)
SET @t = 'Kullanicilar'

DECLARE @new bit
EXEC @new = tab @t

SELECT @new AS new INTO #New

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'KullaniciAdi', 'nvarchar(50)'
EXEC col @t, 'Sifre', 'nvarchar(50)'
EXEC col @t, 'AdiSoyadi', 'nvarchar(50)'
EXEC col @t, 'PersonelInd', 'int'
EXEC col @t, 'GelirGrubuInds', 'nvarchar(max)'
EXEC col @t, 'GiderGrubuInds', 'nvarchar(max)'
EXEC col @t, 'Pasif', 'bit'
EXEC col @t, 'CariInd', 'int' -- bkilinc //<BkilincNot:2010/03/02: Eklendi.
EXEC col @t, 'KasiyerKodu', 'nvarchar(50)' 

EXEC uni @t, 'KullaniciAdi', '(KullaniciAdi)'

GO

DECLARE @new bit
SELECT @new = new FROM #New
DROP TABLE #New

IF @new = 1
BEGIN
	SET IDENTITY_INSERT Kullanicilar ON

	INSERT INTO Kullanicilar(Ind, Owner, KullaniciAdi, Sifre, AdiSoyadi, PersonelInd)
	SELECT '1', NULL, 'admin', 'admin', 'Adı Soyadı', NULL

	SET IDENTITY_INSERT Kullanicilar OFF
END
GO
DECLARE @t varchar(255)
SET @t = 'KullaniciRolleri'

DECLARE @new bit
EXEC @new = tab @t

SELECT @new AS new INTO #New

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'SubeInd', 'int'
EXEC col @t, 'RolInd', 'int'
EXEC col @t, 'KullaniciInd', 'int'

GO

DECLARE @new bit
SELECT @new = new FROM #New
DROP TABLE #New

IF @new = 1
BEGIN
	SET IDENTITY_INSERT KullaniciRolleri ON

	INSERT INTO KullaniciRolleri(Ind, Owner, SubeInd, RolInd, KullaniciInd)
	SELECT '1', NULL, '0', '1', '1'

	SET IDENTITY_INSERT KullaniciRolleri OFF
END
GO
DECLARE @t varchar(255)
SET @t = 'Kur'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'KurInd', 'int NOT NULL'
EXEC col @t, 'ParaBirimi', 'nvarchar(5) NOT NULL'
EXEC col @t, 'Kur', 'decimal(28, 4) NOT NULL'
EXEC col @t, 'Tarih', 'datetime NOT NULL'
GO
DECLARE @t varchar(255)
SET @t = 'KurBilgileri'

DECLARE @new bit
EXEC @new = tab @t

SELECT @new AS new INTO #New

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'ParaBirimi', 'nvarchar(5) NOT NULL'
EXEC col @t, 'Kur', 'decimal(28, 4) NOT NULL'
EXEC col @t, 'IsAnaParaBirimi', 'bit'

EXEC uni @t, 'ParaBirimi', '(ParaBirimi)'

GO

DECLARE @new bit
SELECT @new = new FROM #New
DROP TABLE #New

IF @new = 1
BEGIN
	SET IDENTITY_INSERT KurBilgileri ON

	INSERT INTO KurBilgileri(Ind, Owner, ParaBirimi, Kur, IsAnaParaBirimi)
	SELECT '1', NULL, 'TL', '1.0000', '1'

	SET IDENTITY_INSERT KurBilgileri OFF
END
GO
DECLARE @t varchar(255)
SET @t = 'Lisans'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'MakineNumarasi', 'nvarchar(max)'
EXEC col @t, 'LisansAnahtar', 'nvarchar(max)'
GO
DECLARE @t varchar(255)
SET @t = 'LO_Bolum'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'Adi', 'varchar(100)'
EXEC col @t, 'Kodu', 'int NOT NULL'


GO
DECLARE @t varchar(255)
SET @t = 'LO_CariIstisna'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'CariInd', 'int'
EXEC col @t, 'IstisnaTipi', 'int'
GO
DECLARE @t varchar(255)
SET @t = 'LO_IsyeriEslestirme'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'Adi', 'varchar(100)'
EXEC col @t, 'Kodu', 'int NOT NULL'
EXEC col @t, 'SubeInd', 'int NOT NULL'
EXEC col @t, 'SubeAdi', 'varchar(100)'
EXEC col @t, 'SubeKodu', 'varchar(100)'
GO
DECLARE @t varchar(255)
SET @t = 'LO_KullaniciRol'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'KullaniciInd', 'int'
EXEC col @t, 'RolInd', 'int'
GO
DECLARE @t varchar(255)
SET @t = 'LO_OkcTanimlari'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'OkcNo', 'nvarchar(50)'
EXEC col @t, 'KumulatifToplam', 'decimal(28,13)'
EXEC col @t, 'ZBaslangicTarihi', 'datetime'

GO
DECLARE @t varchar(255)
SET @t = 'LO_OkcTanimlari_Market'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'OkcNo', 'nvarchar(50)'
EXEC col @t, 'KumulatifToplam', 'decimal(28,13)'
EXEC col @t, 'BelgeSeri', 'varchar(50)'

GO
DECLARE @t varchar(255)
SET @t = 'LO_SayacEslestirme'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'SayacAdi', 'nvarchar(50)'
EXEC col @t, 'SayacKodu', 'nvarchar(50)'
EXEC col @t, 'OkcInd', 'int'
EXEC col @t, 'OkcNo', 'nvarchar(50)'

GO
DECLARE @t varchar(255)
SET @t = 'LO_ZRaporuBilgileri'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'ZFisTarihi', 'datetime'
EXEC col @t, 'StokInd', 'int'
EXEC col @t, 'StokKodu', 'nvarchar(50)'
EXEC col @t, 'StokAdi', 'nvarchar(50)'
EXEC col @t, 'Miktar', 'decimal(28,13)'
EXEC col @t, 'Fiyat', 'decimal(28,13)'
EXEC col @t, 'Tutar', 'decimal(28,13)'
EXEC col @t, 'OkcNo', 'nvarchar(50)'
EXEC col @t, 'ZFisNo', 'int'
EXEC col @t, 'ZKumulatifToplam', 'decimal(28,13)'
EXEC col @t, 'KontrolEdildi', 'bit'
EXEC col @t, 'KontrolTarihi', 'datetime'
EXEC col @t, 'Onaylandi', 'bit'
EXEC col @t, 'OnayTarihi', 'datetime'
EXEC col @t, 'Aktarildi', 'bit'
EXEC col @t, 'AktarimTarihi', 'datetime'
EXEC col @t, 'AktifZFisNo', 'bit'


GO
DECLARE @t varchar(255)
SET @t = 'LO_ZRaporuMarketBilgileri'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'ZFisTarihi', 'datetime'
EXEC col @t, 'OkcNo', 'nvarchar(50)'
EXEC col @t, 'ZFisNo', 'int'
EXEC col @t, 'ZKumulatifToplam', 'decimal(28,13)'
EXEC col @t, 'KontrolEdildi', 'bit'
EXEC col @t, 'KontrolTarihi', 'datetime'
EXEC col @t, 'Onaylandi', 'bit'
EXEC col @t, 'OnayTarihi', 'datetime'
EXEC col @t, 'Aktarildi', 'bit'
EXEC col @t, 'AktarimTarihi', 'datetime'
EXEC col @t, 'KdvOrani', 'int'
EXEC col @t, 'Tutar', 'decimal(28,13)'
EXEC col @t, 'StokGrupAdi', 'nvarchar(50)'
EXEC col @t, 'StokGrupInd', 'int'



GO
DECLARE @t varchar(255)
SET @t = 'Lokasyon'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'LokasyonKodu', 'nvarchar(50) NOT NULL'
EXEC col @t, 'LokasyonAdi', 'nvarchar(100) NOT NULL'

EXEC uni @t, 'LokasyonKodu', '(LokasyonKodu)'
EXEC uni @t, 'LokasyonAdi', '(LokasyonAdi)'
GO
DECLARE @t varchar(255)
SET @t = 'LokasyonCari'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'CariInd', 'int NOT NULL'
EXEC col @t, 'LokasyonInd', 'int NOT NULL'
EXEC col @t, 'Aktif', 'bit NOT NULL'
EXEC col @t, 'Tutar','decimal(18,4) NOT NULL'
GO
DECLARE @t varchar(255)
SET @t = 'Menu'
EXEC deltab @t
EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'SayfaKodu', 'nvarchar(200)'
EXEC col @t, 'SayfaAdi', 'nvarchar(50)'
EXEC col @t, 'ParentInd', 'int'
EXEC col @t, 'SiraNo', 'int'
EXEC col @t, 'Sayfa', 'nvarchar(200)'
GO
--DELETE FROM Menu
SET IDENTITY_INSERT Menu ON
INSERT INTO Menu (Ind,Owner,SayfaKodu,SayfaAdi,ParentInd,SiraNo,Sayfa)
SELECT   '1', NULL, '', 'Stok', NULL, '2', NULL UNION ALL
SELECT   '7', NULL, '', 'Depo Kartı', '1', '1', NULL UNION ALL
SELECT   '8', NULL, 'Depo/depo*Depo/depobilgileri', 'Bilgileri', '7', '1', NULL UNION ALL
SELECT   '9', NULL, 'Depo/depo*Sayac/sayaclar', 'Sayaçlar', '7', '2', NULL UNION ALL
SELECT   '39', NULL, 'Cari/yenicari', 'Yeni', '132', '0', NULL UNION ALL
SELECT   '42', NULL, 'Cari/cari*Irsaliye/yenialisirsaliyesi', 'Alış İrsaliyesi Girişi', '145', '2', NULL UNION ALL
SELECT   '43', NULL, 'Banka/yenibankahesabi', 'Yeni', '264', '0', NULL UNION ALL
SELECT   '44', NULL, 'Banka/bankahesabi*Banka/bankahesabibilgi', 'Bilgileri', '264', '1', NULL UNION ALL
SELECT   '61', NULL, 'Personel/personel*Personel/personelbilgileri', 'Bilgileri', '267', '1', NULL UNION ALL
SELECT   '70', NULL, 'Cari/cari*Irsaliye/yenisatisirsaliyesi', 'Satış İrsaliyesi Girişi', '145', '3', NULL UNION ALL
SELECT   '74', NULL, 'Personel/yenipersonel', 'Yeni', '267', '0', NULL UNION ALL
SELECT   '80', NULL, 'Depo/yenidepo', 'Yeni', '7', '0', NULL UNION ALL
SELECT   '113', NULL, 'Cari/cari*CariIslem/carihareketdokumu', 'Hareket Dökümü', '146', '0', NULL UNION ALL
SELECT   '119', NULL, '', 'Banka', NULL, '5', NULL UNION ALL
SELECT   '120', NULL, 'Banka/bankahesabi*BankaIslem/yenibankaislem', 'Hareket Girişi', '265', '0', NULL UNION ALL
SELECT   '123', NULL, 'Banka/bankahesabi*BankaIslem/bankahareketdokumu', 'Banka Hareket Dökümü', '266', '0', NULL UNION ALL
SELECT   '124', NULL, 'Cari/cari*Cari/cariplaka', 'Plakaları', '132', '2', NULL UNION ALL
SELECT   '128', NULL, 'Cari/cari*Cari/caribilgileri', 'Bilgileri', '132', '1', NULL UNION ALL
SELECT   '129', NULL, 'Cari/cari*Cari/CariOtomasyonKodlari', 'Otomasyon Kodları', '132', '3', NULL UNION ALL
SELECT   '131', NULL, '', 'Cari', NULL, '3', NULL UNION ALL
SELECT   '132', NULL, '', 'Cari Kart', '131', '0', NULL UNION ALL
SELECT   '133', NULL, 'Cari/cari*CariIslem/yenicariislem', 'Hareket Girişi', '145', '4', NULL UNION ALL
SELECT   '136', NULL, 'Cari/cari*Fatura/yenialisfaturasi', 'Alış Faturası Girişi', '145', '0', NULL UNION ALL
SELECT   '137', NULL, 'Cari/cari*Fatura/yenisatisfaturasi', 'Satış Faturası Girişi', '145', '1', NULL UNION ALL
SELECT   '139', NULL, 'Kasa/kasa*Kasa/yenikasaislem', 'Hareket Girişi', '148', '1', NULL UNION ALL
SELECT   '144', NULL, 'Banka/bankahesabi*Banka/kkhesaplari', 'Kredi Kartları', '264', '2', NULL UNION ALL
SELECT   '145', NULL, '', 'İşlem', '131', '2', NULL UNION ALL
SELECT   '147', NULL, '', 'Personel', NULL, '8', NULL UNION ALL
SELECT   '148', NULL, '', 'Kasa', NULL, '4', NULL UNION ALL
SELECT   '150', NULL, 'Kasa/kasahareketdokumu', 'Hareket Dökümü', '148', '2', NULL UNION ALL
SELECT   '151', NULL, 'Banka/KrediKarti*Banka/kredikartitahsilat', 'Kredi Kartı Tahsilat', '265', '1', NULL UNION ALL
SELECT   '152', NULL, 'Cari/cari*Siparis/siparisver', 'Verilen Sipariş Girişi', '145', '6', NULL UNION ALL
SELECT   '155', NULL, 'Kasa/kasa*Kasa/kasaislem', 'Kasa', '148', '0', NULL UNION ALL
SELECT   '156', NULL, 'Personel/personel*Personel/personelhareketgirisi', 'Hareket Girişi', '268', '0', NULL UNION ALL
SELECT   '157', NULL, 'Cari/cari*Irsaliye/satisIrsaliyesiFaturalandirma', 'Satış İrsaliyesi Faturalandırma', '145', '8', NULL UNION ALL
SELECT   '158', NULL, 'Cari/cari*Irsaliye/alisIrsaliyesiFaturalandirma', 'Alış İrsaliyesi Faturalandırma', '145', '7', NULL UNION ALL
SELECT   '159', NULL, '', 'Gelir - Gider', NULL, '7', NULL UNION ALL
SELECT   '161', NULL, 'GelirGider/yenigiderkarti', 'Yeni Gider Kartı', '159', '1', NULL UNION ALL
SELECT   '162', NULL, 'GelirGider/gelir*GelirGider/gelirbilgi', 'Gelir Kart Bilgileri', '159', '2', NULL UNION ALL
SELECT   '163', NULL, 'GelirGider/gider*GelirGider/giderbilgi', 'Gider Kart Bilgileri', '159', '3', NULL UNION ALL
SELECT   '173', NULL, '', 'Çek - Senet', NULL, '6', NULL UNION ALL
SELECT   '174', NULL, 'Cek/cekislem', 'Çek/Senet İşlemleri', '173', '0', NULL UNION ALL
SELECT   '175', NULL, 'Menu/logout', 'Çıkış', NULL, '14', NULL UNION ALL
SELECT   '176', NULL, 'GelirGider/yenigelirkarti', 'Yeni Gelir Kartı', '159', '0', NULL UNION ALL
SELECT   '233', NULL, 'Banka/KrediKarti*BankaIslem/kkhareketdokumu', 'KK Hareket Dökümü', '266', '1', NULL UNION ALL
SELECT   '236', NULL, 'Cari/cari*Fatura/aflistesi', 'Alış Faturası Listesi(c)', '146', '1', NULL UNION ALL
SELECT   '237', NULL, 'Fatura/aflistesi', 'Alış Faturası Listesi', '146', '2', NULL UNION ALL
SELECT   '239', NULL, 'Cari/cari*Fatura/sflistesi', 'Satış Faturası Listesi(c)', '146', '3', NULL UNION ALL
SELECT   '240', NULL, 'Fatura/sflistesi', 'Satış Faturası Listesi', '146', '4', NULL UNION ALL
SELECT   '243', NULL, '', 'Vardiya Hesabı', NULL, '0', NULL UNION ALL
SELECT   '244', NULL, 'Vardiya/vardiya*Vardiya/perakende', 'Perakende', '270', '7', NULL UNION ALL
SELECT   '245', NULL, 'Vardiya/yenivardiya', 'Vardiya İşlemleri', '243', '0', NULL UNION ALL
SELECT   '246', NULL, 'Vardiya/vardiya*Vardiya/yeniveresiye*Vardiya/veresiyeFisListesi', 'Veresiye Girişi', '272', '0', NULL UNION ALL
SELECT   '247', NULL, 'Vardiya/vardiya*Vardiya/adapersonelatama', 'Ada - Personel - Nakit', '270', '0', NULL UNION ALL
SELECT   '248', NULL, 'Vardiya/vardiya*Vardiya/digerGirisKayitlari', 'Diğer Giriş Kayıtları', '270', '3', NULL UNION ALL
SELECT   '249', NULL, 'Vardiya/vardiya*Vardiya/digerCikisKayitlari', 'Diğer Çıkış Kayıtları', '270', '4', NULL UNION ALL
SELECT   '251', NULL, 'Personel/maasDagitim', 'Maaş Dağıtım', '268', '1', NULL UNION ALL
SELECT   '254', NULL, 'Vardiya/vardiya*Vardiya/veresiyeFisListesi', 'Veresiye Fiş Listesi', '272', '1', NULL UNION ALL
SELECT   '255', NULL, 'Vardiya/vardiya*Vardiya/veresiyeFisAktarma', 'Veresiye Fiş Aktarma', '272', '2', NULL UNION ALL
SELECT   '256', NULL, 'Vardiya/vardiya*Vardiya/sayaclar', 'Sayaçlar', '270', '1', NULL UNION ALL
SELECT   '257', NULL, 'Vardiya/eskiVardiya*Vardiya/sayacListesi', 'Sayaçlar', '271', '1', NULL UNION ALL
SELECT   '258', NULL, 'Vardiya/eskiVardiya*Vardiya/eskiAdaPersonelAtama', 'Ada - Personel - Nakit', '271', '0', NULL UNION ALL
SELECT   '259', NULL, 'Vardiya/eskiVardiya*Vardiya/tumSayacListesi', 'Tüm Sayaçlar', '271', '7', NULL UNION ALL
SELECT   '260', NULL, 'Vardiya/eskiVardiya*Vardiya/eskiDigerGirisKayitlari', 'Diğer Giriş Kayıtları', '271', '2', NULL UNION ALL
SELECT   '261', NULL, 'Vardiya/eskiVardiya*Vardiya/eskiDigerCikisKayitlari', 'Diğer Çıkış Kayıtları', '271', '3', NULL UNION ALL
SELECT   '262', NULL, 'Vardiya/eskiVardiya*Vardiya/eskiKrediKartListesi2', 'Kredi Kartlı Satışlar', '271', '5', NULL UNION ALL
SELECT   '263', NULL, 'Personel/maasDagitimListesi', 'Maaş Dağıtım Dökümü', '269', '2', NULL UNION ALL
SELECT   '264', NULL, '', 'Banka Kartı', '119', '0', NULL UNION ALL
SELECT   '265', NULL, '', 'İşlem', '119', '1', NULL UNION ALL
SELECT   '266', NULL, '', 'Raporlar', '119', '2', NULL UNION ALL
SELECT   '267', NULL, '', 'Personel Kartı', '147', '0', NULL UNION ALL
SELECT   '268', NULL, '', 'İşlem', '147', '1', NULL UNION ALL
SELECT   '269', NULL, '', 'Raporlar', '147', '2', NULL UNION ALL
SELECT   '270', NULL, '', 'Yeni Vardiya', '243', '1', NULL UNION ALL
SELECT   '271', NULL, '', 'Eski Vardiya', '243', '2', NULL UNION ALL
SELECT   '272', NULL, '', 'Veresiye', '270', '6', NULL UNION ALL
SELECT   '273', NULL, 'Vardiya/eskiVardiya*Vardiya/eskiVeresiyeListesi', 'Veresiye Fiş Listesi', '271', '4', NULL UNION ALL
SELECT   '274', NULL, 'Vardiya/eskiVardiya*Vardiya/eskiPerakendeListesi', 'Perakende', '271', '6', NULL UNION ALL
SELECT   '275', NULL, 'Vardiya/vardiya*Vardiya/liste', 'Liste', '270', '8', NULL UNION ALL
SELECT   '276', NULL, 'Vardiya/vardiya*Vardiya/krediKartliSatislar_son', 'Kredi Kartlı Satışlar', '270', '5', NULL UNION ALL
SELECT   '277', NULL, '', 'Veresiye', '243', '3', NULL UNION ALL
SELECT   '278', NULL, 'Vardiya/yeniveresiye*Vardiya/veresiyeFisListesi', 'Veresiye Girişi', '277', '0', NULL UNION ALL
SELECT   '279', NULL, 'Vardiya/veresiyeFisListesi', 'Veresiye Fiş Listesi', '277', '1', NULL UNION ALL
SELECT   '280', NULL, 'Personel/personel*Personel/personelhareketdokumu', 'Personel Hareket Dökümü', '269', '1', NULL UNION ALL
SELECT   '281', NULL, 'Vardiya/vardiya*Vardiya/tumsayaclar', 'Tüm Sayaçlar', '270', '2', NULL UNION ALL
SELECT   '282', NULL, 'Vardiya/vardiya*Vardiya/genelListe', 'Genel Liste', '270', '9', NULL UNION ALL
SELECT   '283', NULL, 'Vardiya/eskiVardiya*Vardiya/eskiListe', 'Liste', '271', '8', NULL UNION ALL
SELECT   '284', NULL, 'Vardiya/eskiVardiya*Vardiya/eskiGenelListe', 'Genel Liste', '271', '9', NULL UNION ALL
SELECT   '285', NULL, 'Vardiya/vardiya*VardiyaRaporlari/yeniVardiyaRaporlari', 'Raporlar', '270', '10', NULL UNION ALL
SELECT   '286', NULL, 'Vardiya/eskiVardiya*VardiyaRaporlari/eskiVardiyaRaporlari', 'Raporlar', '271', '10', NULL UNION ALL
SELECT   '287', NULL, 'Depo/depo*Depo/depoaktarim', 'Depo Aktarım', '7', '3', NULL UNION ALL
SELECT   '295', NULL, NULL, 'Satış kasası', NULL, '1', NULL UNION ALL
SELECT   '296', NULL, 'SatisKasasi/satisKasalari*SatisKasasi/satisKasasiKapatma', 'Satış Kasası Kapatma', '295', '0', NULL UNION ALL
SELECT   '297', NULL, '', 'Sayım', '1', '3', NULL UNION ALL
SELECT   '298', NULL, 'SayimOlcum/sayimolcum', 'Sayım/Ölçüm Girişi', '297', '0', NULL UNION ALL
SELECT   '299', NULL, 'SayimOlcum/sayimolcumislemleri', 'Sayım/Ölçüm İşlemleri', '297', '1', NULL UNION ALL
SELECT   '426', NULL, 'SayimOlcum/kontrolluSayimDosyasi', 'Kontrollü Sayım Dosyası', '297', '2', NULL UNION ALL
SELECT   '300', NULL, '', 'Sayım Raporları', '1', '4', NULL UNION ALL
SELECT   '301', NULL, 'SayimOlcumRaporlari/sayim*SayimOlcumRaporlari/tamsayimraporu', 'Tam Sayım Raporu', '300', '0', NULL UNION ALL
SELECT   '302', NULL, 'SayimOlcumRaporlari/sayilmayanUrunler', 'Sayılmayan Ürünler', '300', '1', NULL UNION ALL
SELECT   '303', NULL, 'SayimOlcumRaporlari/onayliSayim*SayimOlcumRaporlari/ozetSayim', 'Özet Sayım Raporu', '300', '2', NULL UNION ALL
SELECT   '305', NULL, 'GelirGider/gider*GiderRaporlari/giderHareketDokumu', 'Gider Hareket Dökümü', '159', '4', NULL UNION ALL
SELECT   '307', NULL, 'GelirGider/gelir*GelirGider/gelirhareketdokumu', 'Gelir Hareket Dökümü', '159', '5', NULL UNION ALL
SELECT   '309', NULL, 'SayimOlcumRaporlari/sayim*SayimOlcumRaporlari/acikfazlaverenurunlerraporu', 'Açık/Fazla Veren Ürünler Raporu', '300', '4', NULL UNION ALL
SELECT   '310', NULL, '', 'Raporlar', '1', '2', NULL UNION ALL
SELECT   '316', NULL, 'PersonelRaporlari/PersonelBorcAlacak', 'Personel B/A raporu', '269', '3', NULL UNION ALL
SELECT   '317', NULL, 'SatisKasasi/eskiAktifSatisKasaFilter*SatisKasasi/eskiAktifSatisKasalari', 'Eski aktif satış kasaları', '295', '1', NULL UNION ALL
SELECT   '318', NULL, 'SatisKasasi/eskiPasifSatisKasaFilter*SatisKasasi/eskiPasifSatisKasalari', 'Eski pasif satış kasaları', '295', '2', NULL UNION ALL
SELECT   '320', NULL, '', 'Raporlar', '173', '1', NULL UNION ALL
SELECT   '321', NULL, 'Cek/genelcekraporu', 'Genel Çek Raporu', '320', '0', NULL UNION ALL
SELECT   '322', NULL, 'Cari/cari*IrsaliyeHareket/irsaliyeDokumu', 'İrsaliye Dökümleri', '146', '7', NULL UNION ALL
SELECT   '323', NULL, 'Cari/cari*IrsaliyeHareket/irsaliyeDokumuPlakali', 'Plaka Bazlı İrsaliye Dökümleri', '146', '8', NULL UNION ALL
SELECT   '325', NULL, 'Butce/geliretiketi', 'Gelir Etiketleri', '326', '0', NULL UNION ALL
SELECT   '326', NULL, '', 'Bütçe', '159', '8', NULL UNION ALL
SELECT   '327', NULL, 'Butce/gideretiketi', 'Gider Etiketleri', '326', '1', NULL UNION ALL
SELECT   '328', NULL, 'Butce/yenigelirtahmini', 'Gelir Bütçe Tahmini', '326', '2', NULL UNION ALL
SELECT   '329', NULL, 'Butce/yenigidertahmini', 'Gider Bütçe Tahmini', '326', '3', NULL UNION ALL
SELECT   '332', NULL, '', 'Raporlar', '326', '19', NULL UNION ALL
SELECT   '333', NULL, 'Butce/gelirfinansraporu', 'Gelir Finans Raporu', '332', '0', NULL UNION ALL
SELECT   '334', NULL, 'Butce/giderfinansraporu', 'Gider Finans Raporu', '332', '1', NULL UNION ALL
SELECT   '336', NULL, 'Genel/tarih*MizanRaporu/GenelMizanRaporu', 'Genel Mizan Raporu', '335', '0', NULL UNION ALL
SELECT   '337', NULL, 'Genel/tarih*MizanRaporu/MizanNakitRaporu', 'Nakit Raporu', '335', '1', NULL UNION ALL
SELECT   '338', NULL, 'Genel/tarih*MizanRaporu/MizanBankaRaporu', 'Bankadaki Nakitler', '335', '2', NULL UNION ALL
SELECT   '339', NULL, 'Genel/tarih*MizanRaporu/MizanCariAlacakRaporu', 'Cari Alacak Raporu', '335', '3', NULL UNION ALL
SELECT   '341', NULL, 'Genel/tarih*MizanRaporu/MizanAlinanCekRaporu', 'Alınan Çekler Raporu', '335', '4', NULL UNION ALL
SELECT   '342', NULL, 'Genel/tarih*MizanRaporu/MizanMalMevcuduRaporu', 'Mal Mevcudu Raporu', '335', '6', NULL UNION ALL
SELECT   '343', NULL, 'Genel/tarih*MizanRaporu/MizanCariBorcRaporu', 'Cari Borç Raporu', '335', '7', NULL UNION ALL
SELECT   '344', NULL, 'Genel/tarih*MizanRaporu/MizanBankaBorcRaporu', 'Bankalara Olan Borçlar', '335', '8', NULL UNION ALL
SELECT   '345', NULL, 'Genel/tarih*MizanRaporu/MizanVerilenCekRaporu', 'Verilen Çekler Raporu', '335', '9', NULL UNION ALL
SELECT   '346', NULL, 'Cari/cari*Irsaliye/alisIrsaliyesiIslemleri', 'Alış İrsaliyesi İşlemleri', '145', '9', NULL UNION ALL
SELECT   '347', NULL, 'Cari/cari*Irsaliye/satisIrsaliyesiIslemleri', 'Satış İrsaliyesi İşlemleri', '145', '10', NULL UNION ALL
SELECT   '350', NULL, 'Cari/cari*Cek/caribazlicekraporu', 'Cari Bazlı Çek Raporu', '320', '2', NULL UNION ALL
SELECT   '353', NULL, 'GelirGiderIcmalRaporlari/GiderIcmalRaporu', 'Gider İcmal Raporu', '352', '0', NULL UNION ALL
SELECT   '355', NULL, 'GelirGiderIcmalRaporlari/GelirIcmalRaporu', 'Gelir İcmal Raporu', '352', '1', NULL UNION ALL
SELECT   '356', NULL, 'Cari/cari*CariIslem/FiyatBazindaIrsaliyeListesi', 'Fiyat Bazında Irsaliye Listesi', '146', '10', NULL UNION ALL
SELECT   '358', NULL, 'Kasa/KasaVirmanGirisi', 'Kasa Virman Girişi', '148', '3', NULL UNION ALL
SELECT   '359', NULL, 'Kasa/KasaVirmanIptal', 'Kasa Virman İptal', '148', '4', NULL UNION ALL
SELECT   '365', NULL, 'Genel/tarih*MizanRaporu/MizanPosRaporu', 'Pos Alacak Raporu', '335', '11', NULL UNION ALL
SELECT   '366', NULL, 'Genel/tarih*Kur/kur', 'Günlük Kur', '335', '0', NULL UNION ALL
SELECT   '367', NULL, 'BankaIslem/bankaIcmalRaporu', 'Banka İcmal Raporu	', '266', '2', NULL UNION ALL
SELECT   '513', NULL, 'BankaIslem/bankakredikullanimraporu', 'Kredi Kullanım Raporu', '266', '5', NULL UNION ALL
SELECT   '368', NULL, 'BankaIslem/kkIcmalRaporu', 'KK İcmal Raporu	', '266', '3', NULL UNION ALL
SELECT   '369', NULL, 'GelirGider/giderKartIcmalRapor', 'Gider Kart İcmal Raporu	', '159', '6', NULL UNION ALL
SELECT   '370', NULL, 'GelirGider/gelirKartIcmalRapor', 'Gelir Kart İcmal Raporu	', '159', '7', NULL UNION ALL
SELECT   '371', NULL, 'Fatura/gflistesi', 'Genel Fatura Listesi',  '146', '5', NULL UNION ALL
SELECT   '374', NULL, '',                                                               'Alarm Raporu',                           NULL,  '10', NULL            UNION ALL
SELECT   '375', NULL, 'Log/Logdokumu',                                                  'Hareket Dökümü',                         '374', '9',  NULL            UNION ALL
SELECT   '2',   NULL, '',                                                               'Stok Kartı',                             '1',   '0',  NULL            UNION ALL
SELECT   '11',  NULL, 'Stok/yenistok',                                                  'Yeni',                                   '2',   '0',  NULL            UNION ALL
SELECT   '3',   NULL, 'Stok/stok*stok/stokbilgileri',                                   'Bilgileri',                              '2',   '1', 'stokBilgileri'  UNION ALL
SELECT   '4',   NULL, 'Stok/stok*Stok/satisfiyatlari',                                  'Satış Fiyatları',                        '2',   '2',  NULL            UNION ALL
SELECT   '5',   NULL, 'Stok/stok*Stok/barkodlar',                                       'Barkodları',                             '2',   '3', 'stokBarkodlari' UNION ALL
SELECT   '515', NULL, 'Stok/stok*Stok/minMiktarlar',                                    'Minimum Miktarları',                     '2',   '10', NULL            UNION ALL
SELECT   '6',   NULL, 'Stok/stok*Stok/stokgrubu',                                       'Grubu',                                  '2',   '4',  NULL            UNION ALL
SELECT   '377', NULL, 'Stok/stokparcala',                                               'Parçalama',                              '2',   '5',  NULL			   UNION ALL
SELECT   '504', NULL, 'Stok/fiyatGuncelleme',                                           'Fiyat Güncelleme',                       '2',   '6',  NULL            UNION ALL
SELECT   '311', NULL, 'Stok/stok*SayimOlcumRaporlari/stokhareketdokumu',                'Stok Hareket Dökümü',                    '310', '0',  NULL            UNION ALL
SELECT   '312', NULL, 'SatisRaporu/satisraporu',                                        'Alış - Satış Raporu',                    '310', '1',  NULL            UNION ALL
SELECT   '516', NULL, 'SatisRaporu/kasiyerbazlisatisraporu',                            'Kasiyer Bazlı Satış Raporu',             '310', '11', NULL            UNION ALL
SELECT   '306', NULL, 'Depo/depo*Depo/deporapor',                                       'Depo Hareket Dökümü',                    '310', '2',  NULL            UNION ALL
SELECT   '340', NULL, 'Stok/stok*Stok/DonemselAlisSatisRaporu',                         'Cari Dönemsel Alış/Satış Raporu Raporu', '310', '4',  NULL            UNION ALL
SELECT   '348', NULL, 'Depo/depo*Depo/depoaktarimraporu',                               'Depo Aktarım Dökümü',                    '310', '5',  NULL            UNION ALL
SELECT   '349', NULL, 'Depo/geneldepoaktarimraporu',                                    'Genel Depo Aktarım Dökümü',              '310', '6',  NULL            UNION ALL
SELECT   '357', NULL, 'Depo/muhteviyatDepoListesi',                                     'Muhteviyat Genel Depo Listesi',          '310', '7',  NULL            UNION ALL
SELECT   '379', NULL, 'Stok/stokenazencok',                                             'En Çok ve En Az Satan Raporu',           '310', '8',  NULL			   UNION ALL
SELECT   '427', NULL, 'Stok/StokListesi',	                                            'Stok Listesi',					          '310', '9',  NULL			   UNION ALL
SELECT   '514', NULL, 'Stok/StokMiktarRiskRaporu',	                                    'Stok Miktar Risk Raporu',			      '310', '10', NULL			   UNION ALL
SELECT   '517', NULL, 'Stok/StokGrubuAyrintiliHareketler',								'Stok Grubu Ayrıntılı Hareketler Dökümü', '310', '12', NULL            UNION ALL
SELECT   '506', NULL, 'Stok/stok*Stok/stokKartEslestirme',								'Stok Kart Eşleştirme',					  '2',	 '8',  NULL			   UNION ALL
SELECT   '146', NULL, '', 															    'Raporlar', 							  '131', '4',  NULL 		   UNION ALL
SELECT   '308', NULL, 'CariIslem/borcluAlacakliCariListesi',                            'Borçlu - Alacaklı Listesi',              '146', '6',  NULL 		   UNION ALL
SELECT   '351', NULL, 'CariIslem/vadeliBorcListesi', 									'Vadeli Borç Listesi', 					  '146', '9',  NULL 		   UNION ALL
SELECT   '354', NULL, 'CariIslem/FisSorgulama', 										'Fiş Sorgulama', 						  '145', '11', NULL 		   UNION ALL
SELECT   '360', NULL, 'CariIslem/genelRiskLimitiRaporu',                                'Genel Risk Limiti Aşımı Raporu', 		  '146', '11', NULL 		   UNION ALL
SELECT   '361', NULL, 'CariIslem/GenelCekliRiskLimitRaporu', 							'Genel Çekli Risk Limiti Aşımı Raporu',   '146', '12', NULL 		   UNION ALL
SELECT   '362', NULL, 'CariIslem/tahsilatlarListesi', 								    'Tahsilatlar Listesi', 					  '146', '13', NULL 		   UNION ALL
SELECT   '381', NULL, 'CariIslem/carilistesi',                                          'Cari Listesi',                           '146', '14', NULL			   UNION ALL
SELECT   '511', NULL, 'CariIslem/FaturaIcmalRaporu',                                    'Fatura İcmal Raporu',                    '146', '15', NULL			   UNION ALL
SELECT   '313', NULL, '', 															    'Raporlar', 							  NULL,  '9',  NULL 		   UNION ALL
SELECT   '372', NULL, 'VardiyaRaporlari/vardiyaRaporu',									'Vardiya Raporu',  						  '313', '0',  NULL 		   UNION ALL
SELECT   '519', NULL, 'Raporlar/FaturaDengeRaporu',										'Fatura Denge Raporu',  				  '313', '1',  NULL 		   UNION ALL
SELECT   '429', NULL, 'VardiyaRaporlari/BosVardiyaRaporu',								'Boş Vardiya Raporu',		  			  '313', '1',  NULL			   UNION ALL
SELECT   '314', NULL, 'EnvanterRaporu/envanterRaporu',									'Envanter Raporu', 						  '313', '3',  NULL 		   UNION ALL
SELECT   '315', NULL, 'KarZararRaporu/speedKarZararRaporu',							    'Kar Zarar Raporu', 					  '313', '4',  NULL 		   UNION ALL
SELECT   '319', NULL, 'UrunHareketRaporu/UrunHareketRaporu',							'Ürün Hareket Raporu', 					  '313', '5',  NULL 		   UNION ALL
SELECT   '324', NULL, 'IcmalRaporu/icmalRaporu',										'İcmal Raporu', 						  '313', '6',  NULL 		   UNION ALL
SELECT   '335', NULL, '',																'Mizan Raporları', 						  '313', '7',  NULL 		   UNION ALL
SELECT   '352', NULL, '',																'Gelir - Gider İcmal Raporları', 		  '313', '8',  NULL 		   UNION ALL
SELECT   '431', NULL, 'GelirGiderGruplari/butceGelirGiderRaporu',						'Bütçe Gelir-Gider Raporu',				  '313', '9',  NULL 		   UNION ALL
SELECT   '363', NULL, 'BilancoRaporu/BilancoRaporu',									'Bilanço', 								  '313', '10', NULL 		   UNION ALL

SELECT   '380', NULL, '',                        										'Genel Raporlar',    			          '313', '11', NULL			   UNION ALL
SELECT   '500', NULL, 'Genel/rapor',                        		                    'Tümü',    							      '380', '1',  NULL			   UNION ALL
SELECT   '501', NULL, 'Genel/raporcari',                       		                    'Cari',    							      '380', '3',  NULL			   UNION ALL
SELECT   '502', NULL, 'Genel/raporstok',                       		                    'Stok',    							      '380', '2',  NULL			   UNION ALL
SELECT   '503', NULL, 'Genel/raporfinans',                     		                    'Finans',  							      '380', '4',  NULL			   UNION ALL

SELECT   '410', NULL, 'VadeFarkliBorcluAlacakliListesi/vadefarkliborclualacaklilistesi','Vade Farklı C/H Listesi',    	  		  '313', '12', NULL			   UNION ALL
SELECT   '393', NULL, 'Konsolide/alisSatis',				                			'Alış/Satış Konsolide Raporu', 		      '313', '13', NULL            UNION ALL
SELECT   '420', NULL, 'Raporlar/FinansalOngoruRaporu',                        			'Finansal Öngörü Raporu',    	  		  '313', '14', NULL			   UNION ALL
SELECT   '396', NULL, 'Genel/tarihAraligi*Sms/smsMain',			     					'SMS Raporları', 					      '313', '15', NULL 		   UNION ALL
SELECT   '422', NULL, 'Raporlar/DonAkUrHarVarRap',                        			    'Ürün Hareket & Vardiya Raporu',    	  '313', '16', NULL		       UNION ALL
SELECT   '425', NULL, 'Raporlar/AylikPrimTakipTablosu',     							'Aylık Prim Takip tablosu', 			  '313', '17', NULL 		   UNION ALL
SELECT   '505', NULL, 'Raporlar/DonemselAkaryakitAlisSatisRaporu',     					'Dönemsel Alış/Satış Raporu', 			  '313', '18', NULL 		   UNION ALL
SELECT   '518', NULL, 'Raporlar/SonVardiyalar',                        					'Son Vardiya Raporu',    	  		      '313', '1',  NULL			   UNION ALL
SELECT   '53',  NULL, '',                                                               'Ayarlar',                                NULL,  '11', NULL			   UNION ALL
SELECT   '230', NULL, 'Menu/varsayilanmenu',                                            'Menü',                                   '53',  '0',  NULL            UNION ALL
SELECT   '373', NULL, 'TarihKisiti/KisitAyar',                                          'Tarih Ayarları',                         '53',  '1',  NULL            UNION ALL
SELECT   '291', NULL, 'Rol/rol*OzelMenuAyarlari/ozelMenuAyarlari',                      'Özel Menü Ayarları',                     '53',  '2',  NULL            UNION ALL
SELECT   '252', NULL, 'VardiyaAyarlari/vardiyaayarlari',                                'Vardiya Ayarları',                       '53',  '3',  NULL            UNION ALL
SELECT   '33',  NULL, 'StokGruplari/stokgruplari',                                      'Stok Grupları',                          '53',  '4',  NULL            UNION ALL
SELECT   '253', NULL, 'PersonelGruplari/personelGruplari',                              'Personel Grupları',                      '53',  '5',  NULL            UNION ALL
SELECT   '242', NULL, 'Firma/firmaadi',                                                 'Lisans Bilgileri',                       '53',  '6',  NULL            UNION ALL
SELECT   '227', NULL, 'KDVGrubu/kdvgruplari*KDVGrubu/kdvgruplaribilgi',                 'KDV Grupları',                           '53',  '7',  NULL            UNION ALL
SELECT   '164', NULL, 'GelirGiderGruplari/gelirgruplari',                               'Gelir Grupları',                         '53',  '8',  NULL            UNION ALL
SELECT   '430', NULL, 'GelirGiderGruplari/gelirGiderGrupEslestirme',					'Gelir-Gider Grup Eşleştirme',			  '53',  '9',  NULL			   UNION ALL
SELECT   '28',  NULL, 'Birim/birimbilgileri',                                           'Stok Birimleri',                         '53',  '10', NULL            UNION ALL
SELECT   '238', NULL, 'Kur/kurbilgi',                                                   'Kurlar',                                 '53',  '11', NULL            UNION ALL
SELECT   '288', NULL, 'Kullanicilar/kullanicilar',                                      'Kullanıcılar',                           '53',  '12', NULL            UNION ALL
SELECT   '289', NULL, 'Rol/yenirol',                                                    'Yeni Rol',                               '53',  '13', NULL            UNION ALL
SELECT   '290', NULL, 'Rol/rol*Rol/rolbilgileri',                                       'Rol Bilgileri',                          '53',  '14', NULL            UNION ALL
SELECT   '165', NULL, 'GelirGiderGruplari/gidergruplari',                               'Gider Grupları',                         '53',  '15', NULL            UNION ALL
SELECT   '378', NULL, 'Sube/subegruplari',                                              'Şube Grupları',                          '53',  '16', NULL            UNION ALL
SELECT   '292', NULL, 'Sube/sube*Sube/subebilgileri',                                   'Şube Bilgileri',                         '53',  '17', NULL            UNION ALL
SELECT   '293', NULL, 'Sube/yenisube',                                                  'Yeni Şube',                              '53',  '18', NULL            UNION ALL
SELECT   '294', NULL, 'Cari/ozelKodlar',                                                'Cari Özel Kodları',                      '53',  '19', NULL            UNION ALL
SELECT   '330', NULL, 'Kullanicilar/kullaniciforbutce*Kullanicilar/gelirgrubuforbutce', 'Gelir Bütçe Yetki Ayarları',             '53',  '20', NULL            UNION ALL
SELECT   '331', NULL, 'Kullanicilar/kullaniciforbutce*Kullanicilar/gidergrubuforbutce', 'Gider Bütçe Yetki Ayarları',             '53',  '21', NULL            UNION ALL
SELECT   '364', NULL, 'BilancoRaporu/BilancoAyarlari',                                  'Hesap Ayarları',                         '53',  '22', NULL            UNION ALL
SELECT   '376', NULL, 'GenelTanimlar/GenelTanimlar',                                    'Genel Ayarlar',                          '53',  '23', NULL            UNION ALL
SELECT   '387', NULL, 'GenelTanimlar/GenelTanimlarSubeBazli',                           'Genel Ayarlar (Şube)',                   '53',  '24', NULL            UNION ALL
SELECT   '397', NULL, 'GenelTanimlar/GenelTanimlarSms',		                            'Genel Ayarlar (SMS)',                    '53',  '25', NULL            UNION ALL
SELECT   '383', NULL, 'Cari/teminatlar',                                                'Cari Teminat Kodları',                   '53',  '26', NULL            UNION ALL
SELECT   '398', NULL, 'Cari/CariKullanicilari',                                         'Cari Kullanıcı Ayarları',                '53',  '27', NULL            UNION ALL
SELECT   '384', NULL, 'Cari/cari*CariIslem/CariIrsaliyeliHareketDokumu',                'İrsaliye/Cari Hareket Dökümü',           '146', '0' , NULL            UNION ALL
SELECT	 '507', NULL, 'GenelTanimlar/TesisatTanimlari',									'Tesisat Tanımları',					  '53',  '28', NULL			   UNION ALL
SELECT	 '508', NULL, 'Banka/bankahesabi*BankaIslem/KKTahsilatListesi',					'KK Tahsilat Listesi',					  '266', '4',  NULL			   UNION ALL
--SELECT '385', NULL, '', 															    'Sayaç', 							      '310', '3' , NULL 		   UNION ALL
SELECT   '304', NULL, 'Genel/tarihAraligi*SayacRaporlari/sayacHareketDokumu',			'Sayaç Fiyat Değişim',    				  '310', '3',  NULL            UNION ALL
SELECT   '386', NULL, 'Genel/tarihAraligi*SayacRaporlari/sayacSHareketDokumu',		    'Sayaç Şube Bazlı Fiyat Değişim',         '310', '4',  NULL            UNION ALL
--SELECT '153', NULL, 'Cari/cari*Siparis/siparisal', 									'Alınan Sipariş Girişi',				  '145', '5',  NULL 		   UNION ALL
SELECT   '153', NULL, 'Siparis/siparisal',												'Sipariş Girişi',				  		  '394', '5',  NULL 		   UNION ALL
SELECT   '388', NULL, 'Personel/personel*Personel/personelcarileri', 					'Carileri', 							  '267', '2',  NULL 		   UNION ALL
SELECT   '389', NULL, 'CariIslem/aslistesi',							                'Sipariş Listesi',    			          '394', '15', NULL            UNION ALL
SELECT   '390', NULL, 'CariIslem/asolistesi',							                'Onaylanan Siparişler',		              '394', '16', NULL            UNION ALL
SELECT   '391', NULL, 'CariIslem/asilistesi',							                'İptal Edilmiş Siparişler',		          '394', '18', NULL            UNION ALL
SELECT   '392', NULL, 'CariIslem/aselistesi',							                'Teslim Edilmiş Siparişler', 		      '394', '17', NULL            UNION ALL
SELECT   '394', NULL, '', 															    'Siparişler', 							  '131', '3' , NULL 		   UNION ALL
SELECT   '395', NULL, 'Genel/tarihAraligi*Siparis/karlilik',							'Personel Karlılık Raporu',	 		      '269', '4',  NULL            UNION ALL
SELECT   '399', NULL, 'Cek/cekAktarim',		 											'Verilen Çek Aktar', 					  '173', '0',  NULL 		   UNION ALL
SELECT   '400', NULL, 'Cek/CiroluCeklerRaporu', 										'Cirolu Çekler Raporu',					  '320', '3',  NULL 		   UNION ALL
SELECT   '421', NULL, 'Sifre/sifre',													'Şifre Değiştir',			  			   NULL, '12', NULL			   UNION ALL
SELECT   '428', NULL, 'Servis/servis',													'Servis',					  			   NULL, '13', NULL			   UNION ALL
SELECT	 '509', NULL, 'Servis/YardimMasasi',											'Yardım Masası',						  '428', '0',  NULL			   UNION ALL
SELECT	 '510', NULL, 'Servis/Islemler',												'İşlemler',								  '428', '1',  NULL			   UNION ALL            
SELECT   '512', NULL, 'Stok/iceriAktar',                                                'İçeri Aktar',                            '2',   '9',  NULL			   UNION ALL            
SELECT   '520', NULL, 'Stok/FiyatiDegisenUrunler',                                      'Fiyatı Değişen Ürünler',                 '310', '13', NULL			   UNION ALL  
SELECT   '521', NULL, 'EFatura/Ayarlar',                                                'E-Fatura Ayarları',                      '53',  '29', NULL			   UNION ALL  
SELECT   '522', NULL, 'EFatura/FaturaKutusu',                                           'E-Fatura Kutusu',                        '145', '12', NULL			   UNION ALL
SELECT	 '523', NULL, 'SatisRaporu/PerakendeSatisRaporu',								'Perakende Satış Raporu',				  '310', '14', NULL			   UNION ALL
SELECT	 '524', NULL, 'Stok/subefiyatkopyala',											'Şube Fiyat Kopyala',					  '2',   '7',  NULL			   UNION ALL
SELECT   '525', NULL, 'Cek/genelsenetraporu',											'Genel Senet Raporu',					  '320', '1',  NULL			   UNION ALL
SELECT   '526', NULL, 'Genel/tarih*MizanRaporu/MizanAlinanSenetRaporu',					'Alınan Senetler Raporu',				  '335', '5',  NULL			   UNION ALL
SELECT   '527', NULL, 'Genel/tarih*MizanRaporu/MizanVerilenSenetRaporu',				'Verilen Senetler Raporu',				  '335', '10', NULL			   UNION ALL
SELECT   '528', NULL, 'Genel/tarih*ZFisiKontrolRaporu',									'Z Fişi Kontrol Raporu',				  '313', '19', NULL            UNION ALL
SELECT   '529', NULL, 'Cari/cari*Cek/caribazlisenetraporu',							    'Cari Bazlı Senet Raporu',				  '320', '3',  NULL            UNION ALL
SELECT   '530', NULL, 'SayimOlcumRaporlari/sayim*SayimOlcumRaporlari/fireraporu',		'Fire Raporu',				              '300', '5',  NULL            UNION ALL
SELECT   '534', NULL, '',                        										'DBS',    			                       NULL, '6',  NULL			   UNION ALL
SELECT   '535', NULL, '',                        										'İşlem',     		                      '534', '0',  NULL			   UNION ALL
SELECT   '536', NULL, 'DBS/FaturaKutusu',                        						'Fatura Kutusu',     		              '535', '0',  NULL	           UNION ALL
SELECT   '537', NULL, 'KarZararRaporu/stokMaliyetRaporu',                        		'Stok  Maliyet Raporu',     		      '313', '4',  NULL            UNION ALL
SELECT   '538', NULL, '',                        		                                'Özet Raporlar',     		              '313', '12', NULL            UNION ALL
SELECT   '539', NULL, 'OzetRapor/bankaIcmal',                        		            'Banka İcmal',     		                  '538', '0' , NULL            UNION ALL
SELECT   '540', NULL, 'OzetRapor/market',                        		                'Market',     		                      '538', '0' , NULL            UNION ALL
SELECT   '541', NULL, 'OzetRapor/akaryakit',                        		            'Akaryakıt',     		                  '538', '0' , NULL            UNION ALL
SELECT   '542', NULL, 'OzetRapor/genel',                        		                'Genel',     		                      '538', '0' , NULL            UNION ALL
SELECT   '543', NULL, '',                        		                                'İstasyon Raporları',     		          '313', '5',  NULL            UNION ALL
SELECT   '544', NULL, 'IstasyonRaporlari/istasyonsatis',                   		        'Satış',         		                  '543', '0' , NULL            UNION ALL
SELECT   '545', NULL, 'IstasyonRaporlari/istasyonkarsilastirma',                   		'Karşılaştırma',         		          '543', '1' , NULL            UNION ALL
SELECT   '546', NULL, 'IstasyonRaporlari/istasyonkasalar',                      		'Kasalar',         		                  '543', '2' , NULL            UNION ALL
SELECT   '547', NULL, 'IstasyonRaporlari/istasyondolum',                      		    'Dolum',         		                  '543', '3' , NULL            UNION ALL
SELECT   '548', NULL, 'IstasyonRaporlari/istasyondolumplakabazli',                      'Dolum (Plaka Bazlı)',         		      '543', '4' , NULL            UNION ALL
SELECT   '549', NULL, 'Raporlar/AkaryakitSatisRaporu',                                  'Akaryakıt Satış Raporu',         		  '313', '19', NULL            UNION ALL
SELECT	 '550', NULL, 'GenelTanimlar/Lokasyon',									        'Lokasyon Tanımları',					  '53',  '30', NULL            UNION ALL
SELECT	 '551', NULL, 'CariIslem/irsaliyeraporu',									    'İrsaliye Raporu',					      '146', '16', NULL            UNION ALL
SELECT   '552', NULL, 'DBS/primraporu',                        						    'Prim Raporu',     		                  '535', '1',  NULL            UNION ALL
SELECT   '553', NULL, 'DBS/satisraporu',                        						'Satış Raporu',     		              '535', '2',  NULL            UNION ALL
SELECT   '554', NULL, 'OzetRapor/gunluk',                        		                'Günlük',     		                      '538', '1' , NULL            UNION ALL
SELECT   '555', NULL, 'DBS/carilistesi',                        						'Cari Listesi',     		              '535', '3',  NULL            UNION ALL
SELECT   '556', NULL, 'Cari/cari*Irsaliye/topluSatisIrsaliyesiFaturalandirma',          'T. Satış İrsaliyesi Faturalandırma',     '145', '8',  NULL            UNION ALL
SELECT	 '557', NULL, 'CariIslem/kurfarki',												'Kur Farkı İşlemleri',					  '145', '13', NULL			   UNION ALL
SELECT   '558', NULL, 'Personel/primDagitim',											'Prim Dağıtım',							  '268', '2',  NULL            UNION ALL   
SELECT   '560', NULL, 'EIrsaliye/Ayarlar',                                              'E-Irsaliye Ayarlar',                      '53',  '29', NULL	       UNION ALL  
SELECT   '559', NULL, 'EIrsaliye/IrsaliyeKutusu',                                       'E-Fatura Kutusu',                        '145', '14', NULL			   

SET IDENTITY_INSERT Menu OFF
GO
DECLARE @t varchar(255)
SET @t = 'Muh_AppConfig'

EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'Anahtar', 'varchar(100)'
EXEC col @t, 'Deger', 'nvarchar(1024)'
GO
DECLARE @t varchar(255)
SET @t = 'Muh_Ayar'

EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'Anahtar', 'varchar(100)'
EXEC col @t, 'Deger', 'varchar(100)'





GO
DECLARE @t varchar(255)
SET @t = 'Muh_BankaHesapEslestir'

EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'HititHesapAdi',  'varchar(100)  NULL'
EXEC col @t, 'HititHesapKodu',  'varchar(50)  NULL'
EXEC col @t, 'HititHesapInd', 'int NULL'
EXEC col @t, 'HesapAdi',  'varchar(100)  NULL'
EXEC col @t, 'HesapId', 'varchar(50)  NULL'





GO
DECLARE @t varchar(255)
SET @t = 'Muh_BelgeSeri'

EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'Tipi', 'varchar(50)'
EXEC col @t, 'Seri', 'varchar(3)'





GO
DECLARE @t varchar(255)
SET @t = 'Muh_CariHesapEslestir'

EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'HititHesapKodu',  'varchar(50)  NULL'
EXEC col @t, 'HititHesapInd', 'int NULL'
EXEC col @t, 'HesapKodu',  'varchar(50)  NULL'
EXEC col @t, 'HesapAdi',  'varchar(250)  NULL'
EXEC col @t, 'VeritabaniAyarInd', 'int NULL'







GO
DECLARE @t varchar(255)
SET @t = 'Muh_DepoEslestir'

EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'DepoId', 'varchar(50)'
EXEC col @t, 'DepoAdi', 'varchar(100)'
EXEC col @t, 'HititDepoInd', 'int NOT NULL'
EXEC col @t, 'HititDepoAdi', 'varchar(100) NOT NULL'





GO
DECLARE @t varchar(255)
SET @t = 'Muh_IsyeriEslestir'

EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'VeritabaniAyarInd', 'int NOT NULL'
EXEC col @t, 'IsletmeId', 'varchar(50) NOT NULL'
EXEC col @t, 'IsletmeAdi', 'varchar(100) NOT NULL'
EXEC col @t, 'SubeId', 'varchar(50)'
EXEC col @t, 'SubeAdi', 'varchar(100)'
EXEC col @t, 'HititSubeInd', 'int NOT NULL'
EXEC col @t, 'HititSubeAdi', 'varchar(100) NOT NULL'





GO
DECLARE @t varchar(255)
SET @t = 'Muh_LogAktarim'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'MetodAdi', 'nvarchar(100)'
EXEC col @t, 'LogTarihi', 'datetime'
EXEC col @t, 'HataMesaji', 'text'
EXEC col @t, 'HataMesajiDetay', 'text'
EXEC col @t, 'SqlLogTip', 'nvarchar(100)'
EXEC col @t, 'KullaniciAdi', 'nvarchar(50)'
EXEC col @t, 'Sifre', 'nvarchar(50)'
GO
DECLARE @t varchar(255)
SET @t = 'Muh_PosKasaEslestir'

EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'HititHesapAdi',  'varchar(100)  NULL'
EXEC col @t, 'HititHesapKodu',  'varchar(50)  NULL'
EXEC col @t, 'HititHesapInd', 'int NULL'
EXEC col @t, 'HesapAdi',  'varchar(100)  NULL'
EXEC col @t, 'HesapId', 'varchar(50)  NULL'





GO
DECLARE @t varchar(255)
SET @t = 'Muh_VeritabaniAyar'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'Alias', 'varchar(50) NOT NULL'
EXEC col @t, 'Sunucu', 'varchar(250) NOT NULL'
EXEC col @t, 'VeritabaniAdi', 'varchar(100) NOT NULL'
EXEC col @t, 'KullaniciAdi', 'varchar(50) NOT NULL'
EXEC col @t, 'Parola', 'varchar(50) NOT NULL'




GO
DECLARE @t varchar(255)
SET @t = 'Muh_ZRaporuMarket'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'ZFisTarihi', 'datetime'
EXEC col @t, 'OkcNo', 'nvarchar(50)'
EXEC col @t, 'ZFisNo', 'int'
EXEC col @t, 'ZKumulatifToplam', 'decimal(28,13)'
EXEC col @t, 'KontrolEdildi', 'bit'
EXEC col @t, 'KontrolTarihi', 'datetime'
EXEC col @t, 'Onaylandi', 'bit'
EXEC col @t, 'OnayTarihi', 'datetime'
EXEC col @t, 'Aktarildi', 'bit'
EXEC col @t, 'AktarimTarihi', 'datetime'
EXEC col @t, 'StokInd', 'int'
EXEC col @t, 'StokKodu', 'nvarchar(50)'
EXEC col @t, 'StokAdi', 'nvarchar(150)'
EXEC col @t, 'KdvOrani', 'int'
EXEC col @t, 'Miktar', 'decimal(28,13)'
EXEC col @t, 'Fiyat', 'decimal(28,13)'
EXEC col @t, 'Tutar', 'decimal(28,13)'
EXEC col @t, 'KasaTarihi', 'datetime'
EXEC col @t, 'AktifZFisNo', 'bit'


GO
DECLARE @t varchar(255)
SET @t = 'OtomasyonEntegrasyon'

EXEC tab @t

EXEC col @t, 'Tarih', 'datetime'
EXEC col @t, 'VardiyaTarihi', 'datetime'
EXEC col @t, 'VardiyaNo', 'int'
EXEC col @t, 'SubeKodu', 'nvarchar(30)'
EXEC col @t, 'FiloAdi', 'nvarchar(MAX)'
EXEC col @t, 'FiloKodu', 'nvarchar(6)'
EXEC col @t, 'Plaka', 'nvarchar(9)'
EXEC col @t, 'PompaciKodu', 'nvarchar(9)'
EXEC col @t, 'YakitTipi', 'nvarchar(MAX)'
EXEC col @t, 'OdemeTipiKodu', 'nvarchar(MAX)'
EXEC col @t, 'SatisMiktar', 'decimal(28, 8)'
EXEC col @t, 'BirimFiyat', 'decimal(28, 8)'
EXEC col @t, 'ToplamFiyat', 'decimal(28, 8)'
EXEC col @t, 'TabancaNo', 'nvarchar(2)'
EXEC col @t, 'CpuNo', 'nvarchar(2)'
EXEC col @t, 'KasaFisNo', 'nvarchar(6)'
GO
DECLARE @t varchar(255)
SET @t = 'OtomasyonEntegrasyonTank'

EXEC tab @t

EXEC col @t, 'Tarih', 'datetime'
EXEC col @t, 'SubeInd', 'int'
EXEC col @t, 'TankNo', 'int'
EXEC col @t, 'TankAdi', 'nvarchar(50)'
EXEC col @t, 'StokKodu', 'nvarchar(50)'
EXEC col @t, 'StokAdi', 'nvarchar(50)'
EXEC col @t, 'TankKapasite', 'int'
EXEC col @t, 'TankSeviye', 'decimal(28, 8)'
EXEC col @t, 'TankHacim', 'decimal(28, 8)'
EXEC col @t, 'TankSuSeviyesi', 'decimal(28, 8)'
EXEC col @t, 'TankSicakligi', 'decimal(28, 8)'
GO
DECLARE @t varchar(255)
SET @t = 'OtomasyonEntegrasyonYedek'

EXEC tab @t

EXEC col @t, 'BolgeInd', 'int'
EXEC col @t, 'SubeInd', 'int'
EXEC col @t, 'Tarih', 'datetime'
EXEC col @t, 'VardiyaTarihi', 'datetime'
EXEC col @t, 'VardiyaNo', 'int'
EXEC col @t, 'FiloAdi', 'nvarchar(MAX)'
EXEC col @t, 'FiloKodu', 'nvarchar(6)'
EXEC col @t, 'Plaka', 'nvarchar(9)'
EXEC col @t, 'PompaciKodu', 'nvarchar(9)'
EXEC col @t, 'YakitTipi', 'nvarchar(MAX)'
EXEC col @t, 'OdemeTipiKodu', 'nvarchar(MAX)'
EXEC col @t, 'SatisMiktar', 'decimal(28, 8)'
EXEC col @t, 'BirimFiyat', 'decimal(28, 8)'
EXEC col @t, 'ToplamFiyat', 'decimal(28, 8)'
EXEC col @t, 'TabancaNo', 'nvarchar(2)'
EXEC col @t, 'CpuNo', 'nvarchar(2)'
EXEC col @t, 'KasaFisNo', 'nvarchar(6)'
GO
DECLARE @t varchar(255)
SET @t = 'OtomasyonKodlari'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'HesapInd', 'int NOT NULL'
EXEC col @t, 'OtomasyonKodu', 'nvarchar(30) NOT NULL'

GO
DECLARE @t varchar(255)
SET @t = 'OtomasyonVardiya'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'SubeId', 'int'
EXEC col @t, 'KayitDurumu', 'int'
EXEC col @t, 'DosyaVardiyaKodu', 'nvarchar(50)'
EXEC col @t, 'VardiyaTarihi', 'datetime'
EXEC col @t, 'VardiyaNo', 'int'
EXEC col @t, 'AktarimDurumu', 'text'
GO
DECLARE @t varchar(255)
SET @t = 'OtomasyonVardiyaDetay'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'SatisTarihi', 'datetime'
EXEC col @t, 'OtomasyonVardiyaInd', 'int'
EXEC col @t, 'OtomasyonVardiyaSubeInd', 'int'
EXEC col @t, 'SatisTipi', 'int'
EXEC col @t, 'StokKodu', 'nvarchar(50)'
EXEC col @t, 'Miktar', 'numeric(18, 4)'
EXEC col @t, 'Birim', 'nvarchar(50)'
EXEC col @t, 'BirimFiyat', 'numeric(18, 2)'
EXEC col @t, 'IskontoTutari', 'numeric(18, 4)'
EXEC col @t, 'PompaNo', 'nvarchar(50)'
EXEC col @t, 'TabancaNo', 'nvarchar(50)'
EXEC col @t, 'KazanilanPuan', 'numeric(18, 2)'
EXEC col @t, 'KazanilanTutar', 'numeric(18, 2)'
EXEC col @t, 'KartNo', 'nvarchar(50)'
EXEC col @t, 'RfId', 'nvarchar(50)'
EXEC col @t, 'KartTipi', 'nvarchar(50)'
EXEC col @t, 'FisNo', 'nvarchar(50)'
EXEC col @t, 'OtomasyonSatisId', 'numeric(38,0)'
EXEC col @t, 'Plaka', 'nvarchar(50)'
EXEC col @t, 'PersonelOtomasyonKodu', 'nvarchar(50)'
EXEC col @t, 'UstIsilDeger', 'numeric(18, 8)'
EXEC col @t, 'Yogunluk', 'numeric(18, 8)'
EXEC col @t, 'Aktarildi', 'bit'
EXEC col @t, 'AktarildiDurum', 'nvarchar(256)'
EXEC col @t, 'Tutar', 'numeric(28, 13)'
EXEC col @t, 'OtomasyonMusteriId', 'nvarchar(50)'
EXEC col @t, 'OtomasyonSatisTipId', 'int'
EXEC col @t, 'OtomasyonPompaciAdi', 'nvarchar(50)'
EXEC col @t, 'OtomasyonFirmaKodu', 'int'
EXEC col @t, 'OtomasyonOdemeTipi', 'int'
EXEC col @t, 'DenemeSayisi', 'int'
GO
DECLARE @t varchar(255)
SET @t = 'OtomasyonVardiyalari'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'FileName', 'nvarchar(max)'
EXEC col @t, 'Icerik', 'nvarchar(max)'
EXEC col @t, 'Aktif', 'bit NOT NULL'
EXEC col @t, 'DosyaVardiyaId', 'Bigint'
EXEC col @t, 'DolumBilgisi', 'Decimal'
EXEC con @t, 'Aktif', 'DEFAULT ((1)) FOR Aktif'
GO
DECLARE @t varchar(255)
SET @t = 'OtomasyonVardiyaSatisTipleri'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'TipId', 'int'
EXEC col @t, 'TipAdi', 'nvarchar(50)'
GO
DECLARE @t varchar(255)
SET @t = 'OtomasyonVardiyaSube'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'OtomasyonFirmaKodu', 'int'
EXEC col @t, 'SubeId', 'int'
EXEC col @t, 'OtomasyonSubeKodu', 'nvarchar(50)'
EXEC col @t, 'CngTransfer', 'bit'
EXEC con @t, 'CngTransfer', 'DEFAULT ((1)) FOR CngTransfer'
EXEC col @t, 'AkaryakitTransfer', 'bit'
EXEC con @t, 'AkaryakitTransfer', 'DEFAULT ((1)) FOR AkaryakitTransfer'
GO
DECLARE @t varchar(255)
SET @t = 'OtomasyonVardiyaSubeTransfer'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'OtomasyonVardiyaSubeId', 'int'
EXEC col @t, 'IsCng', 'bit'
EXEC col @t, 'SatisTipi1', 'bit'
EXEC col @t, 'SatisTipi2', 'bit'
EXEC col @t, 'SatisTipi3', 'bit'
GO
DECLARE @t varchar(255)
SET @t = 'OzelKodlar'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'OzelKodu', 'nvarchar(30)'
GO
DECLARE @t varchar(255)
SET @t = 'OzelKodlarCariHesap'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'CariInd', 'int NOT NULL'
EXEC col @t, 'OzelKodInd', 'int NOT NULL'
EXEC col @t, 'Aktif', 'bit NOT NULL'
GO
DECLARE @t varchar(255)
SET @t = 'PersonelGruplari'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'GrupAdi', 'nvarchar(50)'
EXEC col @t, 'ParentInd', 'int'
EXEC col @t, 'SiraNo', 'int'

EXEC uni @t, 'GrupAdi', '(GrupAdi)'
GO
DECLARE @t varchar(255)
SET @t = 'PrimHedefi'

EXEC tab @t
EXEC col @t, 'BaslikInd', 'int'
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'HedefTipi', 'int NOT NULL'
EXEC col @t, 'BaslangicTarihi', 'datetime NOT NULL'
EXEC col @t, 'BitisTarihi', 'datetime NOT NULL'
EXEC col @t, 'IslemTarihi', 'datetime NOT NULL'
EXEC col @t, 'KayitTarihi', 'datetime NOT NULL'
EXEC col @t, 'Aciklama', 'nvarchar(100)'
EXEC col @t, 'StokInd', 'int'
EXEC col @t, 'StokAdi', 'nvarchar(50)'
EXEC col @t, 'StokGrupInd', 'int'
EXEC col @t, 'StokGrupAdi', 'nvarchar(50)'
EXEC col @t, 'Hedef1', 'decimal(28,2)'
EXEC col @t, 'Hedef2', 'decimal(28,2)'
EXEC col @t, 'Hedef3', 'decimal(28,2)'
EXEC col @t, 'Hedef4', 'decimal(28,2)'
EXEC col @t, 'Oran1', 'decimal(4,2)'
EXEC col @t, 'Oran2', 'decimal(4,2)'
EXEC col @t, 'Oran3', 'decimal(4,2)'
EXEC col @t, 'Adet', 'decimal(28,2)'
EXEC col @t, 'BirimFiyat', 'decimal(28,3)'
GO
DECLARE @t varchar(255)
SET @t = 'Roller'

DECLARE @new bit
EXEC @new = tab @t

SELECT @new AS new INTO #New

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'RolAdi', 'nvarchar(100) NOT NULL'
EXEC col @t, 'Yetkiler', 'nvarchar(2000) NOT NULL'

EXEC uni @t, 'RolAdi', '(RolAdi)'

GO

DECLARE @new bit
SELECT @new = new FROM #New
DROP TABLE #New

IF @new = 1
BEGIN
	SET IDENTITY_INSERT Roller ON

 	INSERT [dbo].[Roller] ([Ind], [Owner], [RolAdi], [Yetkiler]) VALUES (1, NULL, N'Administrator', N'0,86,13,14,15,16,17,18,19,88,20,21,22,23,24,25,84,118,134,135,94,95,96,97,98,99,100,101,102,103,104,26,27,28,29,30,31,32,33,69,34,73,66,75,80,89,120,122,123,130,131,77,35,36,37,82,83,129,132,38,39,68,74,81,107,108,109,110,111,112,113,114,115,116,40,41,42,125,126,127,128,117,43,44,45,46,47,87,136,137,138,139,48,70,105,49,85,71,72,119,124,121,50,90,91,92,93,106,51,52,53,54,78,133,55,76,79,56,57,58,59,60,61,62,63,64,65,67')

	SET IDENTITY_INSERT Roller OFF
END
GO
DECLARE @t varchar(255)
SET @t = 'RolMenuleri'

DECLARE @new bit
EXEC @new = tab @t

SELECT @new AS new INTO #New

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'SayfaInd', 'int'
EXEC col @t, 'ParentInd', 'int'
EXEC col @t, 'SayfaAdi', 'nvarchar(100)'
EXEC col @t, 'RolInd', 'int NOT NULL'
EXEC col @t, 'SiraNo', 'int'

GO

DECLARE @new bit
SELECT @new = new FROM #New
DROP TABLE #New

IF @new = 1
BEGIN
	SET IDENTITY_INSERT RolMenuleri ON

	INSERT INTO RolMenuleri(Ind, Owner, SayfaInd, ParentInd, SayfaAdi, RolInd, SiraNo)
    SELECT '1', NULL, '53', NULL, 'Ayarlar', '1', '1' UNION ALL
	SELECT '2', NULL, '291', '53', 'Özel Menü Ayarları', '1', '1'  UNION ALL
	SELECT '3', NULL, '243', NULL, N'Vardiya Hesabı', '1', '0' UNION ALL
    SELECT '4', NULL, '245', '243', N'Vardiya İşlemleri', '1', '0' UNION ALL
	SELECT '5', NULL, '270', '243', N'Yeni Vardiya', '1', '1' UNION ALL
    SELECT '6', NULL, '247', '270', N'Ada - Personel - Nakit', '1', '0'  UNION ALL
	SELECT '7', NULL, '256', '270', N'Sayaçlar', '1', '1'  UNION ALL
	SELECT '8', NULL, '281', '270', N'Tüm Sayaçlar', '1','2'  UNION ALL
	SELECT '9', NULL, '248', '270', N'Diğer Giriş Kayıtları', '1', '3' UNION ALL
	SELECT '10',NULL, '249','270', N'Diğer Çıkış Kayıtları','1','4' UNION ALL
	SELECT '11',NULL,'276','270',N'Kredi Kartlı Satışlar','1','5' UNION ALL
	SELECT '12',NULL, '272', '270', N'Veresiye', '1', '6' UNION ALL
	SELECT '13', NULL, '246', '272', N'Veresiye Girişi', '1', '0'  UNION ALL	
	SELECT '14', NULL, '254', '272', N'Veresiye Fiş Listesi', '1', '1'  UNION ALL
	SELECT '15', NULL, '255', '272', N'Veresiye Fiş Aktarma', '1', '2'  UNION ALL
	SELECT '16', NULL, '244', '270', N'Perakende', '1', '7'  UNION ALL
	SELECT '17', NULL, '275', '270', N'Liste', '1', '8'  UNION ALL
	SELECT '18', NULL, '282', '270', N'Genel Liste', '1', '9'  UNION ALL
	SELECT '19', NULL, '285', '270', N'Raporlar', '1', '10'  UNION ALL
	SELECT '20', NULL, '271', '243', N'Eski Vardiya', '1', '2'  UNION ALL
	SELECT '21', NULL, '258', '271', N'Ada - Personel - Nakit', '1', '0'  UNION ALL
	SELECT '22', NULL, '257', '271', N'Sayaçlar', '1', '1'  UNION ALL
	SELECT '23', NULL, '260', '271', N'Diğer Giriş Kayıtları', '1', '2'  UNION ALL
	SELECT '24', NULL, '261', '271', N'Diğer Çıkış Kayıtları', '1', '3'  UNION ALL
	SELECT '25', NULL, '273', '271', N'Veresiye Fiş Listesi', '1', '4'  UNION ALL
	SELECT '26', NULL, '262', '271', N'Kredi Kartlı Satışlar', '1', '5'  UNION ALL
	SELECT '27', NULL, '274', '271', N'Perakende', '1', '6'  UNION ALL
	SELECT '28', NULL, '259', '271', N'Tüm Sayaçlar', '1', '7'  UNION ALL
	SELECT '29', NULL, '283', '271', N'Liste', '1', '8'  UNION ALL
	SELECT '30', NULL, '284', '271', N'Genel Liste', '1', '9'  UNION ALL
	SELECT '31', NULL, '286', '271', N'Raporlar', '1', '10'  UNION ALL
	SELECT '32', NULL, '277', '243', N'Veresiye', '1', '3'  UNION ALL
	SELECT '33', NULL, '278', '277', N'Veresiye Girişi', '1', '0'  UNION ALL
	SELECT '34', NULL, '279', '277', N'Veresiye Fiş Listesi', '1', '1'  UNION ALL
	SELECT '35', NULL, '295', NULL, N'Satış kasası', '1', '1'  UNION ALL
	SELECT '36', NULL, '296', '295', N'Satış Kasası Kapatma', '1', '0'  UNION ALL
	SELECT '37', NULL, '317', '295', N'Eski aktif satış kasaları', '1', '1'  UNION ALL
	SELECT '38', NULL, '318', '295', N'Eski pasif satış kasaları', '1', '2'  UNION ALL
	SELECT '39', NULL, '1', NULL, N'Stok', '1', '2'  UNION ALL
	SELECT '40', NULL, '2', '1', N'Stok Kartı', '1', '0'  UNION ALL
	SELECT '41', NULL, '11', '2', N'Yeni', '1', '0'  UNION ALL
	SELECT '42', NULL, '3', '2', N'Bilgileri', '1', '1'  UNION ALL
	SELECT '43', NULL, '4', '2', N'Satış Fiyatları', '1', '2'  UNION ALL
	SELECT '44', NULL, '5', '2', N'Barkodları', '1', '3'  UNION ALL
	SELECT '45', NULL, '6', '2', N'Grubu', '1', '4'  UNION ALL
	SELECT '46', NULL, '377', '2', N'Parçalama', '1', '5'  UNION ALL
	SELECT '47', NULL, '504', '2', N'Fiyat Güncelleme', '1', '6'  UNION ALL
	SELECT '48', NULL, '524', '2', N'Şube Fiyat Kopyala', '1', '7'  UNION ALL
	SELECT '49', NULL, '506', '2', N'Stok Kart Eşleştirme', '1', '8'  UNION ALL
	SELECT '50', NULL, '512', '2', N'İçeri Aktar', '1', '9'  UNION ALL
	SELECT '51', NULL, '515', '2', N'Minimum Miktarları', '1', '10'  UNION ALL
	SELECT '52', NULL, '7', '1', N'Depo Kartı', '1', '1'  UNION ALL
	SELECT '53', NULL, '80', '7', N'Yeni', '1', '0'  UNION ALL
	SELECT '54', NULL, '8', '7', N'Bilgileri', '1', '1'  UNION ALL
	SELECT '55', NULL, '9', '7', N'Sayaçlar', '1', '2'  UNION ALL
	SELECT '56', NULL, '287', '7', N'Depo Aktarım', '1', '3'  UNION ALL
	SELECT '57', NULL, '310', '1', N'Raporlar', '1', '2'  UNION ALL
	SELECT '58', NULL, '311', '310', N'Stok Hareket Dökümü', '1', '0'  UNION ALL
	SELECT '59', NULL, '312', '310', N'Alış - Satış Raporu', '1', '1'  UNION ALL
	SELECT '60', NULL, '306', '310', N'Depo Hareket Dökümü', '1', '2'  UNION ALL
	SELECT '61', NULL, '304', '310', N'Sayaç Fiyat Değişim', '1', '3'  UNION ALL
	SELECT '62', NULL, '340', '310', N'Cari Dönemsel Alış/Satış Raporu Raporu', '1', '4'  UNION ALL
	SELECT '63', NULL, '386', '310', N'Sayaç Şube Bazlı Fiyat Değişim', '1', '4'  UNION ALL
	SELECT '64', NULL, '348', '310', N'Depo Aktarım Dökümü', '1', '5'  UNION ALL
	SELECT '65', NULL, '349', '310', N'Genel Depo Aktarım Dökümü', '1', '6'  UNION ALL
	SELECT '66', NULL, '357', '310', N'Muhteviyat Genel Depo Listesi', '1', '7'  UNION ALL
	SELECT '67', NULL, '379', '310', N'En Çok ve En Az Satan Raporu', '1', '8'  UNION ALL
	SELECT '68', NULL, '427', '310', N'Stok Listesi', '1', '9'  UNION ALL
	SELECT '69', NULL, '514', '310', N'Stok Miktar Risk Raporu', '1', '10'  UNION ALL
	SELECT '70', NULL, '516', '310', N'Kasiyer Bazlı Satış Raporu', '1', '11'  UNION ALL
	SELECT '71', NULL, '517', '310', N'Stok Grubu Ayrıntılı Hareketler Dökümü', '1', '12'  UNION ALL
	SELECT '72', NULL, '520', '310', N'Fiyatı Değişen Ürünler', '1', '13'  UNION ALL
	SELECT '73', NULL, '523', '310', N'Perakende Satış Raporu', '1', '14'  UNION ALL
	SELECT '74', NULL, '297', '1', N'Sayım', '1', '3'  UNION ALL
	SELECT '75', NULL, '298', '297', N'Sayım/Ölçüm Girişi', '1', '0'  UNION ALL
	SELECT '76', NULL, '299', '297', N'Sayım/Ölçüm İşlemleri', '1', '1'  UNION ALL
	SELECT '77', NULL, '426', '297', N'Kontrollü Sayım Dosyası', '1', '2'  UNION ALL
	SELECT '78', NULL, '300', '1', N'Sayım Raporları', '1', '4'  UNION ALL
	SELECT '79', NULL, '301', '300', N'Tam Sayım Raporu', '1', '0'  UNION ALL
	SELECT '80', NULL, '302', '300', N'Sayılmayan Ürünler', '1', '1'  UNION ALL
	SELECT '81', NULL, '303', '300', N'Özet Sayım Raporu', '1', '2'  UNION ALL
	SELECT '82', NULL, '309', '300', N'Açık/Fazla Veren Ürünler Raporu','1', '4'  UNION ALL
	SELECT '83', NULL, '530', '300', N'Fire Raporu', '1', '5'  UNION ALL
	SELECT '84', NULL, '131', NULL, N'Cari', 1, 3  UNION ALL
	SELECT '85', NULL, '132', '131', N'Cari Kart', '1', '0'  UNION ALL
	SELECT '86', NULL, '39', '132', N'Yeni', '1', '0'  UNION ALL
	SELECT '87', NULL, '128', '132', N'Bilgileri', '1', '1'  UNION ALL
	SELECT '88', NULL, '124', '132', N'Plakaları', '1', '2'  UNION ALL
	SELECT '89', NULL, '129', '132', N'Otomasyon Kodları', '1', '3'  UNION ALL
	SELECT '90', NULL, '145', '131', N'İşlem', '1', '2'  UNION ALL
	SELECT '91', NULL, '136', '145', N'Alış Faturası Girişi', '1', '0'  UNION ALL
	SELECT '92', NULL, '137', '145', N'Satış Faturası Girişi', '1', '1'  UNION ALL
	SELECT '93', NULL, '42', '145', N'Alış İrsaliyesi Girişi', '1', '2'  UNION ALL
	SELECT '94', NULL, '70', '145', N'Satış İrsaliyesi Girişi', '1', '3'  UNION ALL
	SELECT '95', NULL, '133', '145', N'Hareket Girişi', '1', '4'  UNION ALL
	SELECT '96', NULL, '152', '145', N'Verilen Sipariş Girişi', '1', '6'  UNION ALL
	SELECT '97', NULL, '158', '145', N'Alış İrsaliyesi Faturalandırma', '1', '7'  UNION ALL
	SELECT '98', NULL, '157', '145', N'Satış İrsaliyesi Faturalandırma', '1', '8'  UNION ALL
	SELECT '99', NULL, '556', '145', N'T. Satış İrsaliyesi Faturalandırma', '1', '8'  UNION ALL
	SELECT '100', NULL, '346', '145', N'Alış İrsaliyesi İşlemleri', '1', '9'  UNION ALL
	SELECT '101', NULL, '347', '145', N'Satış İrsaliyesi İşlemleri', '1', '10'  UNION ALL
	SELECT '102', NULL, '354', '145', N'Fiş Sorgulama', '1', '11'  UNION ALL
	SELECT '103', NULL, '522', '145', N'E-Fatura Kutusu', '1', '12'  UNION ALL
	SELECT '104', NULL, '557', '145', N'Kur Farkı İşlemleri', '1', '13'  UNION ALL
	SELECT '105', NULL, '394', '131', N'Siparişler', '1', '3'  UNION ALL
	SELECT '106', NULL, '153', '394', N'Sipariş Girişi', '1', '5'  UNION ALL
	SELECT '107', NULL, '389', '394', N'Sipariş Listesi', '1', '15'  UNION ALL
	SELECT '108', NULL, '390', '394', N'Onaylanan Siparişler', '1', '16'  UNION ALL
	SELECT '109', NULL, '392', '394', N'Teslim Edilmiş Siparişler', '1', '17'  UNION ALL
	SELECT '110', NULL, '391', '394', N'İptal Edilmiş Siparişler', '1', '18'  UNION ALL
	SELECT '111', NULL, '146', '131', N'Raporlar', '1', '4'  UNION ALL
	SELECT '112', NULL, '113', '146', N'Hareket Dökümü', '1', '0'  UNION ALL
	SELECT '113', NULL, '384', '146', N'İrsaliye/Cari Hareket Dökümü', '1', '0'  UNION ALL
	SELECT '114', NULL, '236', '146', N'Alış Faturası Listesi(c)', '1', '1'  UNION ALL
	SELECT '115', NULL, '237', '146', N'Alış Faturası Listesi', '1', '2' UNION ALL
	SELECT '116', NULL, '239', '146', N'Satış Faturası Listesi(c)', '1', '3'  UNION ALL
	SELECT '117', NULL, '240', '146', N'Satış Faturası Listesi', '1', '4'  UNION ALL
	SELECT '118', NULL, '371', '146', N'Genel Fatura Listesi', '1', '5'  UNION ALL
	SELECT '119', NULL, '308', '146', N'Borçlu - Alacaklı Listesi', '1', '6'  UNION ALL
	SELECT '120', NULL, '322', '146', N'İrsaliye Dökümleri', '1', '7'  UNION ALL
	SELECT '121', NULL, '323', '146', N'Plaka Bazlı İrsaliye Dökümleri', '1', '8'  UNION ALL
	SELECT '122', NULL, '351', '146', N'Vadeli Borç Listesi', '1', '9'  UNION ALL
	SELECT '123', NULL, '356', '146', N'Fiyat Bazında Irsaliye Listesi', '1', '10'  UNION ALL
	SELECT '124', NULL, '360', '146', N'Genel Risk Limiti Aşımı Raporu', '1', '11'  UNION ALL
	SELECT '125', NULL, '361', '146', N'Genel Çekli Risk Limiti Aşımı Raporu', 1, 12  UNION ALL
	SELECT '126', NULL, '362', '146', N'Tahsilatlar Listesi', '1', '13'  UNION ALL
	SELECT '127', NULL, '381', '146', N'Cari Listesi', '1', '14'  UNION ALL
	SELECT '128', NULL, '511', '146', N'Fatura İcmal Raporu', '1', '15'  UNION ALL
	SELECT '129', NULL, '551', '146', N'İrsaliye Raporu', '1', '16'  UNION ALL
	SELECT '130', NULL, '148', NULL, N'Kasa', '1', '4'  UNION ALL
	SELECT '131', NULL, '155', '148', N'Kasa', '1', '0'  UNION ALL
	SELECT '132', NULL, '139', '148', N'Hareket Girişi', '1', '1'  UNION ALL
	SELECT '133', NULL, '150', '148', N'Hareket Dökümü', '1', '2'  UNION ALL
	SELECT '134', NULL, '358', '148', N'Kasa Virman Girişi', '1', '3'  UNION ALL
	SELECT '135', NULL, '359', '148', N'Kasa Virman İptal', '1', '4'  UNION ALL
	SELECT '136', NULL, '119', NULL, N'Banka', '1', '5'  UNION ALL
	SELECT '137', NULL, '264', '119', N'Banka Kartı', '1', '0'  UNION ALL
	SELECT '138', NULL, '43', '264', N'Yeni', '1', '0'  UNION ALL
	SELECT '139', NULL, '44', '264', N'Bilgileri', '1', '1'  UNION ALL
	SELECT '140', NULL, '144', '264', N'Kredi Kartları', '1', '2'  UNION ALL
	SELECT '141', NULL, '265', '119', N'İşlem', '1', '1'  UNION ALL
	SELECT '142', NULL, '120', '265', N'Hareket Girişi', '1', '0'  UNION ALL
	SELECT '143', NULL, '151', '265', N'Kredi Kartı Tahsilat', '1', '1'  UNION ALL
	SELECT '144', NULL, '266', '119', N'Raporlar', '1', '2'  UNION ALL
	SELECT '145', NULL, '123', '266', N'Banka Hareket Dökümü', '1', '0'  UNION ALL
	SELECT '146', NULL, '233', '266', N'KK Hareket Dökümü', '1', '1'  UNION ALL
	SELECT '147', NULL, '367', '266', N'Banka İcmal Raporu	', '1', '2'  UNION ALL
	SELECT '148', NULL, '368', '266', N'KK İcmal Raporu	', '1', '3'  UNION ALL
	SELECT '149', NULL, '508', '266', N'KK Tahsilat Listesi', '1', '4'  UNION ALL
	SELECT '150', NULL, '513', '266', N'Kredi Kullanım Raporu', '1', '5'  UNION ALL
	SELECT '151', NULL, '173', NULL, N'Çek - Senet', '1', '6'  UNION ALL
	SELECT '152', NULL, '174', '173', N'Çek/Senet İşlemleri', '1', '0'  UNION ALL
	SELECT '153', NULL, '399', '173', N'Verilen Çek Aktar', '1', '0'  UNION ALL
	SELECT '154', NULL, '320', '173', N'Raporlar', '1', '1'  UNION ALL
	SELECT '155', NULL, '321', '320', N'Genel Çek Raporu', '1', '0'  UNION ALL
	SELECT '156', NULL, '525', '320', N'Genel Senet Raporu', '1', '1'  UNION ALL
	SELECT '157', NULL, '350', '320', N'Cari Bazlı Çek Raporu', '1', '2'  UNION ALL
	SELECT '158', NULL, '529', '320', N'Cari Bazlı Senet Raporu', '1', '3'  UNION ALL
	SELECT '159', NULL, '400', '320', N'Cirolu Çekler Raporu', '1', '3'  UNION ALL
	SELECT '160', NULL, '534', NULL, N'DBS', '1', '6'  UNION ALL
	SELECT '161', NULL, '535', '534', N'İşlem', '1', '0'  UNION ALL
	SELECT '162', NULL, '536', '535', N'Fatura Kutusu', '1', '0'  UNION ALL
	SELECT '163', NULL, '552', '535', N'Prim Raporu', '1', '1'  UNION ALL
	SELECT '164', NULL, '553', '535', N'Satış Raporu', '1', '2'  UNION ALL
	SELECT '165', NULL, '555', '535', N'Cari Listesi', '1', '3'  UNION ALL
	SELECT '166', NULL, '159', NULL, N'Gelir - Gider', '1', '7'  UNION ALL
	SELECT '167', NULL, '176', '159', N'Yeni Gelir Kartı', '1', '0'  UNION ALL
	SELECT '168', NULL, '161', '159', N'Yeni Gider Kartı', '1', '1'  UNION ALL
	SELECT '169', NULL, '162', '159', N'Gelir Kart Bilgileri', '1', '2'  UNION ALL
	SELECT '170', NULL, '163', '159', N'Gider Kart Bilgileri', '1', '3'  UNION ALL
	SELECT '171', NULL, '305', '159', N'Gider Hareket Dökümü', '1', '4'  UNION ALL
	SELECT '172', NULL, '307', '159', N'Gelir Hareket Dökümü', '1', '5'  UNION ALL
	SELECT '173', NULL, '369', '159', N'Gider Kart İcmal Raporu	', '1', '6'  UNION ALL
	SELECT '174', NULL, '370', '159', N'Gelir Kart İcmal Raporu	', '1', '7'  UNION ALL
	SELECT '175', NULL, '326', '159', N'Bütçe', '1', '8'  UNION ALL
	SELECT '176', NULL, '325', '326', N'Gelir Etiketleri', '1', '0'  UNION ALL
	SELECT '177', NULL, '327', '326', N'Gider Etiketleri', '1', '1'  UNION ALL
	SELECT '178', NULL, '328', '326', N'Gelir Bütçe Tahmini','1', '2'  UNION ALL
	SELECT '179', NULL, '329', '326', N'Gider Bütçe Tahmini', '1', '3'  UNION ALL
	SELECT '180', NULL, '332', '326', N'Raporlar', '1', '19'  UNION ALL
	SELECT '181', NULL, '333', '332', N'Gelir Finans Raporu', '1', '0'  UNION ALL
	SELECT '182', NULL, '334', '332', N'Gider Finans Raporu', '1', '1'  UNION ALL
	SELECT '183', NULL, '147', NULL, N'Personel', '1', '8'  UNION ALL
	SELECT '184', NULL, '267', '147', N'Personel Kartı', '1', '0'  UNION ALL
	SELECT '185', NULL, '74', '267', N'Yeni', '1', '0'  UNION ALL
	SELECT '186', NULL, '61', '267', N'Bilgileri', '1', '1'  UNION ALL
	SELECT '187', NULL, '388', '267', N'Carileri', '1', '2'  UNION ALL
	SELECT '188', NULL, '268', '147', N'İşlem', '1', '1'  UNION ALL
	SELECT '189', NULL, '156', '268', N'Hareket Girişi', '1', '0'  UNION ALL
	SELECT '190', NULL, '251', '268', N'Maaş Dağıtım', '1', '1'  UNION ALL
	SELECT '191', NULL, '558', '268', N'Prim Dağıtım', '1', '2'  UNION ALL
	SELECT '192', NULL, '269', '147', N'Raporlar', '1', '2'  UNION ALL
	SELECT '193', NULL, '280', '269', N'Personel Hareket Dökümü', '1', '1'  UNION ALL
	SELECT '194', NULL, '263', '269', N'Maaş Dağıtım Dökümü', '1', '2'  UNION ALL
	SELECT '195', NULL, '316', '269', N'Personel B/A raporu', '1', '3'  UNION ALL
	SELECT '196', NULL, '395', '269', N'Personel Karlılık Raporu', '1', '4'  UNION ALL
	SELECT '197', NULL, '313', NULL, N'Raporlar', '1', '9'  UNION ALL
	SELECT '198', NULL, '372', '313', N'Vardiya Raporu', '1', '0'  UNION ALL
	SELECT '199', NULL, '518', '313', N'Son Vardiya Raporu', '1', '1'  UNION ALL
	SELECT '200', NULL, '519', '313', N'Fatura Denge Raporu', '1', '1'  UNION ALL
	SELECT '201', NULL, '429', '313', N'Boş Vardiya Raporu', '1', '1'  UNION ALL
	SELECT '202', NULL, '314', '313', N'Envanter Raporu', '1', '3'  UNION ALL
	SELECT '203', NULL, '315', '313', N'Kar Zarar Raporu', '1', '4'  UNION ALL
	SELECT '204', NULL, '537', '313', N'Stok  Maliyet Raporu', '1', '4'  UNION ALL
	SELECT '205', NULL, '543', '313', N'İstasyon Raporları', '1', '5'  UNION ALL
	SELECT '206', NULL, '544', '543', N'Satış', '1', '0'  UNION ALL
	SELECT '207', NULL, '545', '543', N'Karşılaştırma', '1', '1'  UNION ALL
	SELECT '208', NULL, '546', '543', N'Kasalar', '1', '2'  UNION ALL
	SELECT '209', NULL, '547', '543', N'Dolum', '1', '3'  UNION ALL
	SELECT '210', NULL, '548', '543', N'Dolum (Plaka Bazlı)', '1', '4'  UNION ALL
	SELECT '211', NULL, '319', '313', N'Ürün Hareket Raporu', '1', '5'  UNION ALL
	SELECT '212', NULL, '324', '313', N'İcmal Raporu', '1', '6'  UNION ALL
	SELECT '213', NULL, '335', '313', N'Mizan Raporları', '1', '7'  UNION ALL
	SELECT '214', NULL, '336', '335', N'Genel Mizan Raporu', '1','0'  UNION ALL
	SELECT '215', NULL, '366', '335', N'Günlük Kur', '1', '0'  UNION ALL
	SELECT '216', NULL, '337', '335', N'Nakit Raporu', '1', '1'  UNION ALL
	SELECT '217', NULL, '338', '335', N'Bankadaki Nakitler', '1', '2'  UNION ALL
	SELECT '218', NULL, '339', '335', N'Cari Alacak Raporu', '1', '3'  UNION ALL
	SELECT '219', NULL, '341', '335', N'Alınan Çekler Raporu', '1', '4'  UNION ALL
	SELECT '220', NULL, '526', '335', N'Alınan Senetler Raporu', '1', '5'  UNION ALL
	SELECT '221', NULL, '342', '335', N'Mal Mevcudu Raporu', '1', '6'  UNION ALL
	SELECT '222', NULL, '343', '335', N'Cari Borç Raporu', '1', '7'  UNION ALL
	SELECT '223', NULL, '344', '335', N'Bankalara Olan Borçlar', '1', '8'  UNION ALL
	SELECT '224', NULL, '345', '335', N'Verilen Çekler Raporu', '1', '9'  UNION ALL
	SELECT '225', NULL, '527', '335', N'Verilen Senetler Raporu', '1', '10'  UNION ALL
	SELECT '226', NULL, '365', '335', N'Pos Alacak Raporu', '1', '11'  UNION ALL
	SELECT '227', NULL, '352', '313', N'Gelir - Gider İcmal Raporları', '1', '8'  UNION ALL
	SELECT '228', NULL, '353', '352', N'Gider İcmal Raporu', '1', '0'  UNION ALL
	SELECT '229', NULL, '355', '352', N'Gelir İcmal Raporu', '1', '1'  UNION ALL
	SELECT '230', NULL, '431', '313', N'Bütçe Gelir-Gider Raporu', '1', '9'  UNION ALL
	SELECT '231', NULL, '363', '313', N'Bilanço', '1', '10'  UNION ALL
	SELECT '232', NULL, '380', '313', N'Genel Raporlar', '1', '11'  UNION ALL
	SELECT '233', NULL, '500', '380', N'Tümü', '1', '1'  UNION ALL
	SELECT '234', NULL, '502', '380', N'Stok', '1', '2'  UNION ALL
	SELECT '235', NULL, '501', '380', N'Cari', '1', '3'  UNION ALL
	SELECT '236', NULL, '503', '380', N'Finans', '1', '4'  UNION ALL
	SELECT '237', NULL, '410', '313', N'Vade Farklı C/H Listesi', '1', '12'  UNION ALL
	SELECT '238', NULL, '538', '313', N'Özet Raporlar', '1', '12'  UNION ALL
	SELECT '239', NULL, '539', '538', N'Banka İcmal', '1', '0'  UNION ALL
	SELECT '240', NULL, '540', '538', N'Market', '1', '0'  UNION ALL
	SELECT '241', NULL, '541', '538', N'Akaryakıt', '1', '0'  UNION ALL
	SELECT '242', NULL, '542', '538', N'Genel', '1', '0'  UNION ALL
	SELECT '243', NULL, '554', '538', N'Günlük', '1', '1'  UNION ALL
	SELECT '244', NULL, '393', '313', N'Alış/Satış Konsolide Raporu', '1', '13'  UNION ALL
	SELECT '245', NULL, '420', '313', N'Finansal Öngörü Raporu', '1', '14'  UNION ALL
	SELECT '246', NULL, '396', '313', N'SMS Raporları', '1', '15'  UNION ALL
	SELECT '247', NULL, '422', '313', N'Ürün Hareket & Vardiya Raporu', '1', '16'  UNION ALL
	SELECT '248', NULL, '425', '313', N'Aylık Prim Takip tablosu', '1', '17'  UNION ALL
	SELECT '249', NULL, '505', '313', N'Dönemsel Alış/Satış Raporu', '1', '18'  UNION ALL
	SELECT '250', NULL, '528', '313', N'Z Fişi Kontrol Raporu', '1', '19'  UNION ALL
	SELECT '251', NULL, '549', '313', N'Akaryakıt Satış Raporu', '1', '19'  UNION ALL
	SELECT '252', NULL, '374', NULL, N'Alarm Raporu', '1', '10'  UNION ALL
	SELECT '253', NULL, '375', '374', N'Hareket Dökümü', '1', '9'  UNION ALL
	SELECT '254', NULL, '53', NULL, N'Ayarlar', '1', '11'  UNION ALL
	SELECT '255', NULL, '230', '53', N'Menü', '1', '0'  UNION ALL
	SELECT '256', NULL, '373', '53', N'Tarih Ayarları', '1', '1'  UNION ALL
	SELECT '257', NULL, '291', '53', N'Özel Menü Ayarları', '1', '2'  UNION ALL
	SELECT '258', NULL, '252', '532', N'Vardiya Ayarları', '1', '3'  UNION ALL
	SELECT '259', NULL, '33', '53', N'Stok Grupları', '1', '4'  UNION ALL
	SELECT '260', NULL, '253', '53', N'Personel Grupları', '1', '5'  UNION ALL
	SELECT '261', NULL, '242', '53', N'Lisans Bilgileri', '1', '6'  UNION ALL
	SELECT '262', NULL, '227', '53', N'KDV Grupları', '1', '7'  UNION ALL
	SELECT '263', NULL, '164', '53', N'Gelir Grupları', '1', '8'  UNION ALL
	SELECT '264', NULL, '430', '53', N'Gelir-Gider Grup Eşleştirme', '1', '9'  UNION ALL
	SELECT '265', NULL, '28', '53', N'Stok Birimleri', '1', '10'  UNION ALL
	SELECT '266', NULL, '238', '53', N'Kurlar', '1', '11'  UNION ALL
	SELECT '267', NULL, '288', '53', N'Kullanıcılar', '1', '12'  UNION ALL
	SELECT '268', NULL, '289', '53', N'Yeni Rol', '1', '13'  UNION ALL
	SELECT '269', NULL, '290', '53', N'Rol Bilgileri', '1', '14'  UNION ALL
	SELECT '270', NULL, '165', '53', N'Gider Grupları', '1', '15'  UNION ALL
	SELECT '271', NULL, '378', '53', N'Şube Grupları', '1', '16'  UNION ALL
	SELECT '272', NULL, '292', '53', N'Şube Bilgileri', '1', '17'  UNION ALL
	SELECT '273', NULL, '293', '53', N'Yeni Şube', '1', '18'  UNION ALL
	SELECT '274', NULL, '294', '53', N'Cari Özel Kodları', '1', '19'  UNION ALL
	SELECT '275', NULL, '330', '53', N'Gelir Bütçe Yetki Ayarları', '1', '20'  UNION ALL
	SELECT '276', NULL, '331', '53', N'Gider Bütçe Yetki Ayarları', '1', '21'  UNION ALL
	SELECT '277', NULL, '364', '53', N'Hesap Ayarları', '1', '22'  UNION ALL
	SELECT '278', NULL, '376', '53', N'Genel Ayarlar', '1', '23'  UNION ALL
	SELECT '279', NULL, '387', '53', N'Genel Ayarlar (Şube)', '1', '24'  UNION ALL
	SELECT '280', NULL, '397', '53', N'Genel Ayarlar (SMS)', '1', '25'  UNION ALL
	SELECT '281', NULL, '383', '53', N'Cari Teminat Kodları', '1', '26'  UNION ALL
	SELECT '282', NULL, '398', '53', N'Cari Kullanıcı Ayarları', '1', '27' UNION ALL
	SELECT '283', NULL, '507', '53', N'Tesisat Tanımları', '1', '28' UNION ALL
	SELECT '284', NULL, '521', '53', N'E-Fatura Ayarları', '1', '29' UNION ALL
	SELECT '285', NULL, '550', '53', N'Lokasyon Tanımları', '1', '30' UNION ALL
	SELECT '286', NULL, '421', NULL, N'Şifre Değiştir', '1', '12' UNION ALL
	SELECT '287', NULL, '428', NULL, N'Servis', '1', '13' UNION ALL
	SELECT '288', NULL, '509', '428', N'Yardım Masası', '1', '0' UNION ALL
	SELECT '289', NULL, '510', '428', N'İşlemler', '1', '1' UNION ALL  
	SELECT '290', NULL, '175', NULL, N'Çıkış', '1', '14'  
	SET IDENTITY_INSERT RolMenuleri OFF
	 
END
GO
 

DECLARE @t varchar(255)
SET @t = 'SatisFiyatiSiralama'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'FiyatInd', 'int NOT NULL'
EXEC col @t, 'SiraNo', 'int NOT NULL'
GO
DECLARE @t varchar(255)
SET @t = 'SatisKasasi'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'IslemInd', 'int'
EXEC col @t, 'Tablo', 'nvarchar(200)'
EXEC col @t, 'KullaniciInd', 'int'
EXEC col @t, 'BaslikInd', 'int'
EXEC col @t, 'Tarih', 'datetime'
EXEC col @t, 'IsYeniSatis', 'bit'
EXEC col @t, 'PerakendeKasaIslemTarihi', 'datetime'

EXEC ind @t,'SatisKasasi','(KullaniciInd,IsYeniSatis,Owner,Tablo)'
GO
DECLARE @t varchar(255)
SET @t = 'Sehirler'

EXEC deltab @t
EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'SehirAdi', 'nvarchar(50)'
EXEC col @t, 'SehirPlakaKodu', 'nvarchar(3)'

GO

SET IDENTITY_INSERT Sehirler ON

INSERT INTO Sehirler(Ind, Owner, SehirAdi, SehirPlakaKodu)
SELECT '1', NULL, 'Adana' ,'01' UNION ALL
SELECT '2', NULL, 'Adıyaman' ,'02' UNION ALL
SELECT '3', NULL, 'Afyon' ,'03' UNION ALL    
SELECT '4', NULL, 'Ağrı' ,'04' UNION ALL      
SELECT '5', NULL, 'Amasya' ,'05' UNION ALL   
SELECT '6', NULL, 'Ankara' ,'06' UNION ALL  
SELECT '7', NULL, 'Antalya' ,'07' UNION ALL      
SELECT '8', NULL, 'Artvin' ,'08' UNION ALL
SELECT '9', NULL, 'Aydın' ,'09' UNION ALL
SELECT '10', NULL, 'Balıkesir' ,'10' UNION ALL
SELECT '11', NULL, 'Bilecik' ,'11' UNION ALL
SELECT '12', NULL, 'Bingöl' ,'12' UNION ALL
SELECT '13', NULL, 'Bitlis' ,'13' UNION ALL
SELECT '14', NULL, 'Bolu' ,'14' UNION ALL	      
SELECT '15', NULL, 'Burdur' ,'15' UNION ALL	      
SELECT '16', NULL, 'Bursa' ,'16' UNION ALL	      
SELECT '17', NULL, 'Çanakkale' ,'17' UNION ALL	  
SELECT '18', NULL, 'Çankırı' ,'18' UNION ALL	      
SELECT '19', NULL, 'Çorum' ,'19' UNION ALL	      
SELECT '20', NULL, 'Denizli' ,'20' UNION ALL	      
SELECT '21', NULL, 'Diyarbakır' ,'21' UNION ALL	  
SELECT '22', NULL, 'Edirne' ,'22' UNION ALL	      
SELECT '23', NULL, 'Elazığ' ,'23' UNION ALL	      
SELECT '24', NULL, 'Erzincan' ,'24' UNION ALL	  
SELECT '25', NULL, 'Erzurum' ,'25' UNION ALL	      
SELECT '26', NULL, 'Eskişehir' ,'26' UNION ALL	  
SELECT '27', NULL, 'Gaziantep' ,'27' UNION ALL	  
SELECT '28', NULL, 'Giresun' ,'28' UNION ALL	      
SELECT '29', NULL, 'Gümüşhane' ,'29' UNION ALL	      
SELECT '30', NULL, 'Hakkari' ,'30' UNION ALL	      
SELECT '31', NULL, 'Hatay' ,'31' UNION ALL	          
SELECT '32', NULL, 'Isparta' ,'32' UNION ALL	      
SELECT '33', NULL, 'İçel' ,'33' UNION ALL	          
SELECT '34', NULL, 'İstanbul' ,'34' UNION ALL	      
SELECT '35', NULL, 'İzmir' ,'35' UNION ALL	          
SELECT '36', NULL, 'Kars' ,'36' UNION ALL	          
SELECT '37', NULL, 'Kastamonu' ,'37' UNION ALL	      
SELECT '38', NULL, 'Kayseri' ,'38' UNION ALL	      
SELECT '39', NULL, 'Kırklareli' ,'39' UNION ALL	  
SELECT '40', NULL, 'Kırşehir' ,'40' UNION ALL	      
SELECT '41', NULL, 'Kocaeli' ,'41' UNION ALL	      
SELECT '42', NULL, 'Konya' ,'42' UNION ALL	          
SELECT '43', NULL, 'Kütahya' ,'43' UNION ALL	      
SELECT '44', NULL, 'Malatya' ,'44' UNION ALL	      
SELECT '45', NULL, 'Manisa' ,'45' UNION ALL	      
SELECT '46', NULL, 'K.Maraş' ,'46' UNION ALL	      
SELECT '47', NULL, 'Mardin' ,'47' UNION ALL	      
SELECT '48', NULL, 'Muğla' ,'48' UNION ALL	          
SELECT '49', NULL, 'Muş' ,'49' UNION ALL	          
SELECT '50', NULL, 'Nevşehir' ,'50' UNION ALL	      
SELECT '51', NULL, 'Niğde' ,'51' UNION ALL	          
SELECT '52', NULL, 'Ordu' ,'52' UNION ALL	          
SELECT '53', NULL, 'Rize' ,'53' UNION ALL	          
SELECT '54', NULL, 'Sakarya' ,'54' UNION ALL	  
SELECT '55', NULL, 'Samsun' ,'55' UNION ALL
SELECT '56', NULL, 'Siirt' ,'56' UNION ALL
SELECT '57', NULL, 'Sinop' ,'57' UNION ALL
SELECT '58', NULL, 'Sivas' ,'58' UNION ALL
SELECT '59', NULL, 'Tekirdağ' ,'59' UNION ALL
SELECT '60', NULL, 'Tokat' ,'60' UNION ALL
SELECT '61', NULL, 'Trabzon' ,'61' UNION ALL
SELECT '62', NULL, 'Tunceli' ,'62' UNION ALL
SELECT '63', NULL, 'Şanlıurfa' ,'63' UNION ALL
SELECT '64', NULL, 'Uşak' ,'64' UNION ALL
SELECT '65', NULL, 'Van' ,'65' UNION ALL
SELECT '66', NULL, 'Yozgat' ,'66' UNION ALL
SELECT '67', NULL, 'Zonguldak' ,'67' UNION ALL
SELECT '68', NULL, 'Aksaray' ,'68' UNION ALL
SELECT '69', NULL, 'Bayburt' ,'69' UNION ALL
SELECT '70', NULL, 'Karaman' ,'70' UNION ALL
SELECT '71', NULL, 'Kırıkkale' ,'71' UNION ALL
SELECT '72', NULL, 'Batman' ,'72' UNION ALL
SELECT '73', NULL, 'Şırnak' ,'73' UNION ALL
SELECT '74', NULL, 'Bartın' ,'74' UNION ALL
SELECT '75', NULL, 'Ardahan' ,'75' UNION ALL
SELECT '76', NULL, 'Iğdır' ,'76' UNION ALL
SELECT '77', NULL, 'Yalova' ,'77' UNION ALL
SELECT '78', NULL, 'Karabük' ,'78' UNION ALL
SELECT '79', NULL, 'Kilis' ,'79' UNION ALL
SELECT '80', NULL, 'Osmaniye' ,'80' UNION ALL
SELECT '81', NULL, 'Düzce' ,'81' UNION ALL
SELECT '82', NULL, 'Kıbrıs','82'

SET IDENTITY_INSERT Sehirler OFF
GO
DECLARE @t varchar(255)
SET @t = 'Socar_Logs'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'AppName', 'nvarchar(128)'
EXEC col @t, 'EventType', 'nvarchar(256)'
EXEC col @t, 'KayitInd', 'numeric(38,0)'

EXEC col @t, 'HataMesaji', 'text'
EXEC col @t, 'HataMesajiDetay', 'text'
EXEC col @t, 'Tarih', 'datetime'
GO
DECLARE @t varchar(255)
SET @t = 'StokDetaylari'

DECLARE @newStokDetaylari bit
EXEC @newStokDetaylari = tab @t

SELECT @newStokDetaylari AS new INTO #NewStokDetaylari

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'TipInd', 'int NOT NULL'
EXEC col @t, 'StokInd', 'int'
EXEC col @t, 'Barkod', 'nvarchar(50)'
EXEC col @t, 'FiyatAdi', 'nvarchar(40)'
EXEC col @t, 'BirimInd', 'int'
EXEC col @t, 'ParaBirimi', 'nvarchar(10)'
EXEC col @t, 'Tutar', 'decimal(28, 8)'
EXEC col @t, 'IsAnaFiyat', 'bit'
EXEC col @t, 'MuhasebeKodu', 'nvarchar(13)'
EXEC col @t, 'GiderInd', 'int'
EXEC col @t, 'MinStokMiktari', 'decimal(28,13)'
EXEC col @t, 'GiderMiCariMi', 'int' 
GO

DROP TABLE #NewStokDetaylari
GO
--DECLARE @newStokDetaylari bit
--SELECT @newStokDetaylari = new FROM #NewStokDetaylari
--DROP TABLE #NewStokDetaylari

--IF @newStokDetaylari = 0
--BEGIN
--	UPDATE StokDetaylari SET MinStokMiktari = 0 WHERE TipInd = 523 AND MinStokMiktari IS NULL
--END
--DECLARE @t1 varchar(255)
--SET @t1 = 'StokDetaylari'
--	EXEC col @t1, 'MinStokMiktari', 'decimal(28,13) NOT NULL'
--GO

GO
DECLARE @t varchar(255)
SET @t = 'StokGrupFireOranlari'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'SubeInd', 'int NOT NULL'
EXEC col @t, 'StokGrubuInd', 'int NOT NULL'
EXEC col @t, 'FireOrani', 'decimal(18, 2)'
EXEC col @t, 'Aktif', 'bit NOT NULL'
GO
DECLARE @t varchar(255)
SET @t = 'StokGruplari'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'GrupAdi', 'nvarchar(50)'
EXEC col @t, 'ParentInd', 'int'
EXEC col @t, 'SiraNo', 'int'
EXEC col @t, 'VergiMuafiyetKodu', 'nvarchar(50)'
EXEC col @t, 'OzetRapordaGoster', 'bit'
GO
DECLARE @t varchar(255)
SET @t = 'StokIcerik'

EXEC tab @t

EXEC col @t, 'Ind', 'int NOT NULL'
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'ParentStokInd', 'int NOT NULL'
EXEC col @t, 'StokInd', 'int NOT NULL'
EXEC col @t, 'Miktar', 'numeric(18, 2) NOT NULL'
GO
DECLARE @t varchar(255)
SET @t = 'Stoklar'

DECLARE @new1 bit
EXEC @new1 = tab @t

SELECT @new1 AS new INTO #New

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'StokKodu', 'nvarchar(50) NOT NULL'
EXEC col @t, 'StokAdi', 'nvarchar(100) NOT NULL'
EXEC col @t, 'AnaBirimInd', 'int NOT NULL'
EXEC col @t, 'GrupInd', 'int NOT NULL'
EXEC col @t, 'AlisKDVGrupInd', 'int NOT NULL'
EXEC col @t, 'SatisKDVGrupInd', 'int NOT NULL'
EXEC col @t, 'Aktif', 'bit NOT NULL'
EXEC col @t, 'MuhasebeKodu', 'nvarchar(50)'
EXEC col @t, 'KasiyerKoduVarMi', 'bit NULL'
EXEC uni @t, 'StokKodu', '(StokKodu)'
EXEC col @t, 'KasiyerFiyatDegistirebilir', 'bit'
EXEC con @t, 'KasiyerFiyatDegistirebilir', 'DEFAULT ((0)) FOR KasiyerFiyatDegistirebilir'
EXEC col @t, 'GTIPKodu', 'nvarchar(50)'
EXEC col @t, 'OtvTutar', 'decimal(18,5)'
EXEC col @t, 'TartiliUrunMu', 'bit NULL'
GO

DECLARE @new1 bit
SELECT @new1 = new FROM #New
DROP TABLE #New

IF @new1 = 0
BEGIN
	UPDATE Stoklar SET KasiyerFiyatDegistirebilir = 0 WHERE KasiyerFiyatDegistirebilir IS NULL
END
DECLARE @t1 varchar(255)
SET @t1 = 'Stoklar'
	EXEC col @t1, 'KasiyerFiyatDegistirebilir', 'bit NOT NULL'
GO
GO
DECLARE @t varchar(255)
SET @t = 'SubeGruplari'
EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'SubeGrupAdi', 'nvarchar(max) NOT NULL'
EXEC ind @t,'SubeGruplari','(Owner)'
GO
DECLARE @t varchar(255)
SET @t = 'Subeler'

DECLARE @new bit
EXEC @new = tab @t

SELECT @new AS new INTO #New

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'SubeKodu', 'nvarchar(30) NOT NULL'
EXEC col @t, 'SubeAdi', 'nvarchar(40) NOT NULL'
EXEC col @t, 'Adres', 'nvarchar(100)'
EXEC col @t, 'Telefon', 'nvarchar(15)'
EXEC col @t, 'Faks', 'nvarchar(15)'
EXEC col @t, 'IsMerkez', 'bit'
EXEC col @t, 'IsSatis', 'bit'
EXEC col @t, 'IsOtomasyonEntegrasyon', 'bit'
EXEC col @t, 'Fatura', 'nvarchar(max)'
EXEC col @t, 'TopluFatura', 'nvarchar(max)'
EXEC uni @t, 'SubeKodu', '(SubeKodu)'
EXEC col @t, 'EPosta', 'nvarchar(max)'
EXEC col @t, 'PrimOran', 'decimal(28, 8)'
EXEC col @t, 'PrimBildirilen', 'decimal(28, 8)'
EXEC col @t, 'EntegrasyonTipi', 'bit' 
EXEC con @t, 'EntegrasyonTipi', 'DEFAULT ((0)) FOR EntegrasyonTipi'
EXEC col @t, 'FireOran', 'decimal(28, 8)'

GO

DECLARE @new bit
SELECT @new = new FROM #New
DROP TABLE #New

IF @new = 1
BEGIN
	SET IDENTITY_INSERT Subeler ON

	INSERT INTO Subeler(Ind, Owner, SubeKodu,  SubeAdi,       Adres, Telefon, Faks, IsMerkez, IsSatis, IsOtomasyonEntegrasyon, Fatura, TopluFatura, EPosta,PrimOran,PrimBildirilen, EntegrasyonTipi,FireOran)
	SELECT 				'1', NULL,  'merkez',  'Merkez Şube', '',    '',      '',   '1',      '0',     '0',                    '',     '',          ''	  ,NULL     ,NULL,			'0',NULL

	SET IDENTITY_INSERT Subeler OFF
END
ELSE
BEGIN
	UPDATE Subeler SET EntegrasyonTipi = 0 WHERE EntegrasyonTipi IS NULL
END
DECLARE @t varchar(255)
SET @t = 'Subeler'
	EXEC col @t, 'EntegrasyonTipi', 'bit NOT NULL'
GO
GO
DECLARE @t varchar(255)
SET @t = 'Teminatlar'
EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'TeminatKodu', 'nvarchar(255)'
GO
DECLARE @t varchar(255)
SET @t = 'TesisatTanimlari'

EXEC tab @t

EXEC col @t, 'Owner', 'int'
EXEC col @t, 'TesisatKodu', 'nvarchar(50) NOT NULL'
EXEC col @t, 'TesisatAdi', 'nvarchar(100) NOT NULL'

EXEC uni @t, 'TesisatKodu', '(TesisatKodu)'
EXEC uni @t, 'TesisatAdi', '(TesisatAdi)'
GO
DECLARE @t varchar(255)
SET @t = 'Tipler'
EXEC deltab @t
EXEC tab_noid @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'TipAdi', 'nvarchar(100) NOT NULL'
EXEC col @t, 'Tablo', 'nvarchar(100) NOT NULL'
EXEC col @t, 'Islogged', 'nvarchar(5)'
GO
INSERT INTO Tipler(Ind, Owner, TipAdi, Tablo,Islogged)
SELECT '82', NULL, 'VTS pompaci hareketi', 'VTS','TRUE' UNION ALL
SELECT '83', NULL, 'VTS TTS hareketi', 'VTS','TRUE' UNION ALL
SELECT '84', NULL, 'VTS EP hareketi', 'VTS','TRUE' UNION ALL
SELECT '501', NULL, 'Satis Fiyati', 'StokDetaylari','TRUE' UNION ALL
SELECT '502', NULL, 'Barkod', 'StokDetaylari','TRUE' UNION ALL
SELECT '512', NULL, 'Stok Muhasebe Kodlari', 'StokDetaylari','FALSE' UNION ALL
SELECT '504', NULL, 'Perakende satis', 'Satis','TRUE' UNION ALL
SELECT   '505', NULL, 'Eski aktif satis kasasi', 'SatisKasasi','FALSE' UNION ALL
SELECT   '506', NULL, 'Eski pasif satis kasasi', 'SatisKasasi','FALSE' UNION ALL
SELECT   '1',   NULL, 'Verilen Siparis',                           'Hareketler',      'TRUE'  UNION ALL
SELECT   '2',   NULL, 'Alis Irsaliyesi hareketi',                  'Hareketler',      'TRUE'  UNION ALL
SELECT   '3',   NULL, 'Alis Faturasi hareketi',                    'Hareketler',      'TRUE'  UNION ALL
SELECT   '4',   NULL, 'Alinan Siparis',                            'Hareketler',      'TRUE'  UNION ALL
SELECT   '5',   NULL, 'Satis Irsaliyesi hareketi',                 'Hareketler',      'TRUE'  UNION ALL
SELECT   '6',   NULL, 'Satis Faturasi hareketi',                   'Hareketler',      'TRUE'  UNION ALL
SELECT   '7',   NULL, 'Doviz girisi',                              'Hareketler',      'TRUE'  UNION ALL
SELECT   '8',   NULL, 'Doviz cikisi',                              'Hareketler',      'TRUE'  UNION ALL
SELECT   '9',   NULL, 'Cari nakit tahsilat',                       'Hareketler',      'TRUE'  UNION ALL
SELECT   '10',  NULL, 'Cari kredi kartli tahsilat',                'Hareketler',      'TRUE'  UNION ALL
SELECT   '11',  NULL, 'Cari alinan cek/senet',                     'Hareketler',      'TRUE'  UNION ALL
SELECT   '12',  NULL, 'Cari bankadan tahsilat',                    'Hareketler',      'TRUE'  UNION ALL
SELECT   '13',  NULL, 'Cari nakit odeme',                          'Hareketler',      'TRUE'  UNION ALL
SELECT   '14',  NULL, 'Cari verilen cek/senet',                    'Hareketler',      'TRUE'  UNION ALL
SELECT   '15',  NULL, 'Cari bankadan odeme',                       'Hareketler',      'TRUE'  UNION ALL
SELECT   '16',  NULL, 'Depo aktarim',                              'Hareketler',      'TRUE'  UNION ALL
SELECT   '17',  NULL, 'Banka hesabina para yatirma',               'Hareketler',      'TRUE'  UNION ALL
SELECT   '18',  NULL, 'Personel hesabina odeme',                   'Hareketler',      'TRUE'  UNION ALL
SELECT   '19',  NULL, 'Banka hesabindan para cekme',               'Hareketler',      'TRUE'  UNION ALL
SELECT   '20',  NULL, 'Personel hesabindan tahsilat',              'Hareketler',      'TRUE'  UNION ALL
SELECT   '21',  NULL, 'EFT - Havale',                              'Hareketler',      'TRUE'  UNION ALL
SELECT   '22',  NULL, 'Personel hesabina EFT - Havale',            'Hareketler',      'TRUE'  UNION ALL
SELECT   '23',  NULL, 'Devir satiri',                              'Hareketler',      'FALSE' UNION ALL
SELECT   '24',  NULL, 'Fatura ozet satiri',                        'Hareketler',      'TRUE'  UNION ALL
SELECT   '25',  NULL, 'Kasa Gelir',                                'Hareketler',      'TRUE'  UNION ALL
SELECT   '26',  NULL, 'Kasa Gider',                                'Hareketler',      'TRUE'  UNION ALL
SELECT   '27',  NULL, 'Banka Gelir',                               'Hareketler',      'TRUE'  UNION ALL
SELECT   '28',  NULL, 'Banka Gider',                               'Hareketler',      'TRUE'  UNION ALL
SELECT   '29',  NULL, 'Depo Giris',                                'Hareketler',      'TRUE'  UNION ALL
SELECT   '30',  NULL, 'Depo Cikis',                                'Hareketler',      'TRUE'  UNION ALL
SELECT   '31',  NULL, 'Maas Odemesi',                              'Hareketler',      'TRUE'  UNION ALL
SELECT   '32',  NULL, 'Yeni vardiya karti ada atamasi',            'Hareketler',      'FALSE' UNION ALL
SELECT   '33',  NULL, 'Yeni vardiya karti personel atamasi',       'Hareketler',      'FALSE' UNION ALL
SELECT   '34',  NULL, 'Eski vardiya karti ada atamasi',            'Hareketler',      'FALSE' UNION ALL
SELECT   '35',  NULL, 'Eski vardiya karti personel atamasi',       'Hareketler',      'FALSE' UNION ALL
SELECT   '37',  NULL, 'Eski vardiya veresiye fisi hareketi',       'Hareketler',      'FALSE' UNION ALL
SELECT   '38',  NULL, 'Market / Eski vardiya nakit satiri',        'Hareketler',      'FALSE' UNION ALL
SELECT   '39',  NULL, 'Eski vardiya sayac hareket satiri',         'Hareketler',      'FALSE' UNION ALL
SELECT   '40',  NULL, 'Eski vardiya parekende satis',              'Hareketler',      'FALSE' UNION ALL
SELECT   '41',  NULL, 'Yeni vardiya veresiye fisi hareketi',       'Hareketler',      'FALSE' UNION ALL
SELECT   '42',  NULL, 'Yeni vardiya nakit satiri',                 'Hareketler',      'FALSE' UNION ALL
SELECT   '43',  NULL, 'Yeni vardiya parekende satis',              'Hareketler',      'FALSE' UNION ALL
SELECT   '44',  NULL, 'Yeni vardiya sayac hareket satiri',         'Hareketler',      'FALSE' UNION ALL
SELECT   '45',  NULL, 'Yeni vardiya kasa gelir',                   'Hareketler',      'FALSE' UNION ALL
SELECT   '46',  NULL, 'Yeni vardiya cari tahsilat - nakit',        'Hareketler',      'FALSE' UNION ALL
SELECT   '47',  NULL, 'Yeni vardiya personel hesabindan tahsilat', 'Hareketler',      'FALSE' UNION ALL
SELECT   '48',  NULL, 'Yeni vardiya banka hesabindan para cekme',  'Hareketler',      'FALSE' UNION ALL
SELECT   '49',  NULL, 'Yeni vardiya kasa gider',                   'Hareketler',      'FALSE' UNION ALL
SELECT   '50',  NULL, 'Yeni vardiya cari odeme',                   'Hareketler',      'FALSE' UNION ALL
SELECT   '51',  NULL, 'Yeni vardiya personel hesabina odeme',      'Hareketler',      'FALSE' UNION ALL
SELECT   '52',  NULL, 'Yeni vardiya banka hesabina para yatirma',  'Hareketler',      'FALSE' UNION ALL
SELECT   '53',  NULL, 'Yeni vardiya alinan cek',                   'Hareketler',      'FALSE' UNION ALL
SELECT   '54',  NULL, 'Yeni vardiya kredi karti slip girisi',      'Hareketler',      'FALSE' UNION ALL
SELECT   '55',  NULL, 'Personel Hesap Acik',                       'Hareketler',      'FALSE' UNION ALL
SELECT   '56',  NULL, 'Personel Hesap Fazla',                      'Hareketler',      'FALSE' UNION ALL
SELECT   '57',  NULL, 'Fatura Gider hareketi',                     'Hareketler',      'TRUE'  UNION ALL
SELECT   '58',  NULL, 'Kasasiz Cari Tahsilat',                     'Hareketler',      'TRUE'  UNION ALL
SELECT   '59',  NULL, 'Kasasiz Cari Odeme',                        'Hareketler',      'TRUE'  UNION ALL
SELECT   '60',  NULL, 'Yeni vardiya kredi karti gunsonu girisi',   'Hareketler',      'TRUE'  UNION ALL
SELECT   '61',  NULL, 'Eski vardiya kredi karti gunsonu girisi',   'Hareketler',      'TRUE'  UNION ALL
SELECT   '70',  NULL, 'Yeni vardiya perakende depo cikis',         'Hareketler',      'FALSE' UNION ALL
SELECT   '71',  NULL, 'Eski vardiya stok durumu',                  'Hareketler',      'FALSE' UNION ALL
SELECT   '72',  NULL, 'Pasif depo cikis',                          'Hareketler',      'TRUE'  UNION ALL
SELECT   '73',  NULL, 'Pasif satis perakende hareketi',            'Hareketler',      'TRUE'  UNION ALL
SELECT   '74',  NULL, 'Pasif satis faturasi hareketi',             'Hareketler',      'TRUE'  UNION ALL
SELECT   '75',  NULL, 'Pasif satis irsaliyesi hareketi',           'Hareketler',      'TRUE'  UNION ALL
SELECT   '76',  NULL, 'Pasif Personel Hesap Fazla',                'Hareketler',      'TRUE'  UNION ALL
SELECT   '77',  NULL, 'Pasif Personel Hesap Acik',                 'Hareketler',      'TRUE'  UNION ALL
SELECT   '78',  NULL, 'Pasif Kredi karti slip girisi',             'Hareketler',      'TRUE'  UNION ALL
SELECT   '79',  NULL, 'Pasif Eski vardiya nakit satiri ',          'Hareketler',      'TRUE'  UNION ALL
SELECT   '80',  NULL, 'isleme Konmamis Satis Hareketi',            'Hareketler',      'TRUE'  UNION ALL
SELECT   '81',  NULL, 'iptal Edilen Satis Hareketi',               'Hareketler',      'TRUE'  UNION ALL
SELECT   '85',  NULL, 'Kasa Virman Hareketi',                      'Hareketler',      'TRUE'  UNION ALL
SELECT   '111', NULL, 'Eski vardiya veresiye fisi',                'Hareketler',      'FALSE' UNION ALL
SELECT   '112', NULL, 'Sayim olcum Hareketi',                      'Hareketler',      'TRUE'  UNION ALL
SELECT   '511', NULL, 'Fatura Gelir Hareketi',                     'Hareketler',      'TRUE'  UNION ALL
SELECT   '86',  NULL, 'Pesin Satis Faturasi Hareketi',             'Hareketler',      'FALSE' UNION ALL
SELECT   '87',  NULL, 'Alis Faturasi Cari Dagilimi',               'Hareketler',      'FALSE' UNION ALL
SELECT   '118', NULL, 'Satis Olcum Bilgisi', 					   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '201', NULL, 'Cari Kart Hesabi', 						   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '202', NULL, 'Banka Hesabi', 							   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '203', NULL, 'Kredi Karti Hesabi', 					   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '204', NULL, 'Personel', 								   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '205', NULL, 'Depo', 									   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '206', NULL, 'Gelir Hesabi', 							   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '207', NULL, 'Gider Hesabi', 							   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '208', NULL, 'Bilanco Hesaplari - Cari', 				   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '209', NULL, 'Bilanco Hesaplari - Stok', 				   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '210', NULL, 'Gider Hesaplari - Personel', 			   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '211', NULL, 'Gider Hesaplari - Vardiya', 				   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '212', NULL, 'Gelir Hesaplari - Vardiya', 				   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '507', NULL, 'Cari gelir girisi',                         'Hesaplar',        'TRUE'  UNION ALL
SELECT   '508', NULL, 'Cari gider girisi', 						   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '509', NULL, 'Cari virman girisi', 					   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '510', NULL, 'Cari virman cikisi', 					   'Hesaplar',        'TRUE'  UNION ALL
SELECT   '213', NULL, 'Pesin Cari Kart Hesabi',					   'Hesaplar',        'FALSE' UNION ALL
SELECT   '101', NULL, 'Alis Faturasi',                             'Basliklar',       'TRUE'  UNION ALL
SELECT   '102', NULL, 'Satis Faturasi',                            'Basliklar',       'TRUE'  UNION ALL
SELECT   '103', NULL, 'Alis irsaliyesi',                           'Basliklar',       'TRUE'  UNION ALL
SELECT   '104', NULL, 'Satis irsaliyesi',                          'Basliklar',       'TRUE'  UNION ALL
SELECT   '105', NULL, 'Kredi Karti Tahsilati',                     'Basliklar',       'TRUE'  UNION ALL
SELECT   '106', NULL, 'Vardiya',                                   'Basliklar',       'TRUE'  UNION ALL
SELECT   '107', NULL, 'Maas Dagitim',                              'Basliklar',       'TRUE'  UNION ALL
SELECT   '108', NULL, 'Eski vardiya karti',                        'Basliklar',       'FALSE' UNION ALL
SELECT   '109', NULL, 'Yeni vardiya karti',                        'Basliklar',       'TRUE'  UNION ALL
SELECT   '110', NULL, 'Yeni vardiya veresiye fisi',                'Basliklar',       'FALSE' UNION ALL
SELECT   '113', NULL, 'Sayim Olcum Onaylama',                      'Basliklar',       'TRUE'  UNION ALL
SELECT   '115', NULL, 'Pasif satis faturasi',                      'Basliklar',       'TRUE'  UNION ALL
SELECT   '116', NULL, 'Pasif satis irsaliyesi',                    'Basliklar',       'TRUE'  UNION ALL
SELECT   '117', NULL, 'Kasa Kapatma Baslik',                       'Basliklar',       'TRUE'  UNION ALL
SELECT   '503', NULL, 'Depo Aktarim Belgesi',                      'Basliklar',       'TRUE'  UNION ALL
SELECT   '119', NULL, 'Pesin Satis Faturasi',                      'Basliklar',       'FALSE' UNION ALL
SELECT   '120', NULL, 'Alinan Siparis',	                           'Basliklar',       'FALSE' UNION ALL
SELECT   '401', NULL, 'Plaka', 								       'HesapDetaylari',  'TRUE'  UNION ALL
SELECT   '402', NULL, 'Sayac', 									   'HesapDetaylari',  'TRUE'  UNION ALL
SELECT   '403', NULL, 'Bilanco Iliskili Hesaplari', 			   'HesapDetaylari',  'TRUE'  UNION ALL
SELECT   '404', NULL, 'Sube Gruplari', 							   'HesapDetaylari',  'TRUE'  UNION ALL 
SELECT   '405', NULL, 'Personel Carileri', 					       'HesapDetaylari',  'FALSE' UNION ALL
SELECT   '301', NULL, 'Firma adi', 					 			   'Ayarlar',         'TRUE'  UNION ALL
SELECT   '302', NULL, 'Kasa acilma tarihi', 			 		   'Ayarlar',         'FALSE' UNION ALL
SELECT   '303', NULL, 'Gelir Gider Ayari', 			 			   'Ayarlar',         'FALSE' UNION ALL
SELECT   '304', NULL, 'Vardiya Ayarlari',				 		   'Ayarlar',         'TRUE'  UNION ALL
SELECT   '305', NULL, 'VTS son kayit tarihi ve saati', 			   'Ayarlar',         'TRUE'  UNION ALL
SELECT   '306', NULL, 'islem Yapabilme Tarih Araligi', 			   'Ayarlar',         'TRUE'  UNION ALL
SELECT   '307', NULL, 'Acilista DashBoard Gorunsun', 	 		   'Ayarlar',         'FALSE' UNION ALL
SELECT   '308', NULL, 'Genel Rapor',					 		   'Ayarlar',         'FALSE' UNION ALL
SELECT   '309', NULL, 'Bilanco KarZararina KDV Eklensinmi',		   'Ayarlar',         'FALSE' UNION ALL
SELECT   '310', NULL, 'Sayfalama - Sayfadaki Kayit Sayisi',		   'Ayarlar',         'FALSE' UNION ALL
SELECT   '311', NULL, 'Kar Zarar Maliyet Hesabi',				   'Ayarlar',         'FALSE' UNION ALL
SELECT   '312', NULL, 'Kasa Calisma Modu',		 			       'Ayarlar',         'FALSE' UNION ALL
SELECT   '313', NULL, 'Listeleme-Dikey Genisletilmis',			   'Ayarlar',         'FALSE' UNION ALL
SELECT   '314', NULL, 'Kasa Hareket Dokumu Siralama Tipi',		   'Ayarlar',         'FALSE' UNION ALL
SELECT   '315', NULL, 'Tarih Araligi Aktif',					   'Ayarlar',         'FALSE' UNION ALL
SELECT   '316', NULL, 'Kredi Karti Komisyon Hesaplama Yontemi',	   'Ayarlar',         'FALSE' UNION ALL
SELECT   '330', NULL, 'Pasif Cariler Gosterilmesin',			   'Ayarlar',         'FALSE' UNION ALL
SELECT   '331', NULL, 'Pasif Carilerde islem Yapilabilsin',		   'Ayarlar',         'FALSE' UNION ALL
SELECT   '317', NULL, 'Fatura KDV Dahil',						   'Ayarlar',         'FALSE' UNION ALL
SELECT   '318', NULL, 'Fatura Otomatik Belge No',				   'Ayarlar',         'FALSE' UNION ALL
SELECT   '332', NULL, 'E-Posta Ayari',							   'Ayarlar',         'FALSE' UNION ALL 
SELECT   '333', NULL, 'Fatura On izlemeli Basilsin',               'Ayarlar',         'FALSE' UNION ALL
SELECT   '334', NULL, 'Al. Siparis Otomatik Belge No',             'Ayarlar',         'FALSE' UNION ALL
SELECT   '335', NULL, 'SMS Kullanici Bilgileri',	               'Ayarlar',         'FALSE' UNION ALL
SELECT   '340', NULL, 'Devir Lisansi',							   'Ayarlar',         'FALSE' UNION ALL
SELECT   '341', NULL, 'Kar Zarar KDVli',						   'Ayarlar',         'FALSE' UNION ALL
SELECT   '342', NULL, 'Bilanco subelerde ozgun hesaplansin',	   'Ayarlar',         'FALSE' UNION ALL
SELECT   '344', NULL, 'Kontrollu Sayim Dosyasi Ayarlari',		   'Ayarlar',         'FALSE' UNION ALL
SELECT   '518', NULL, 'Tesisat Tanimi Zorunlu Secilsin',		   'Ayarlar',		  'FALSE' UNION ALL
SELECT   '513', NULL, 'Perakende Satis iadesi',					   'Hareketler',      'TRUE'  UNION ALL
SELECT   '514', NULL, 'Smart Card Gideri',						   'StokDetaylari',   'TRUE'  UNION ALL
SELECT   '515', NULL, 'Extra Card Gideri',						   'StokDetaylari',   'TRUE'  UNION ALL
SELECT   '516', NULL, 'Cari Kodu Otomatik Verilsin',               'Ayarlar',         'FALSE' UNION ALL
SELECT   '517', NULL, 'iskonto Alis Fiyatini Etkilesin',           'Ayarlar',         'FALSE' UNION ALL
SELECT   '519', NULL, 'Vardiya Kasa Kayitlari Detayli Gosterilsin','Ayarlar',         'FALSE' UNION ALL
SELECT   '520', NULL, 'Kredili Banka Hesabi',                      'HesapDetaylari',  'FALSE' UNION ALL
SELECT	 '521', NULL, 'Tasit Tanima',							   'Basliklar',	      'FALSE' UNION ALL
SELECT   '522', NULL, 'Manuel',									   'Basliklar',       'FALSE' UNION ALL
SELECT   '523', NULL, 'Minimum Stok Miktari',					   'StokDetaylari',   'FALSE' UNION ALL
SELECT   '524', NULL, 'Pasif Stoklar Gosterilmesin',			   'Stoklar',         'FALSE' UNION ALL
SELECT   '525', NULL, 'Pasif Stoklar Kullanilamasin',			   'Stoklar',         'FALSE' UNION ALL
SELECT   '526', NULL, 'Promosyon ve indirim icin Gider Karti Kullan','StokDetaylari', 'FALSE' UNION ALL
SELECT   '527', NULL, 'Promosyon ve indirim icin Cari Kart Kullan',  'StokDetaylari', 'FALSE' UNION ALL
SELECT   '528', NULL, 'Bilancoya esas Net Kar Zarar hesaplansin',  'Ayarlar',		  'FALSE' UNION ALL
SELECT   '529', NULL, 'Depo Transferlerinde Depo Mevcudu Kontrol Edilmesin',  'Ayarlar','FALSE' UNION ALL
SELECT   '530', NULL, 'Ayni Muhasebe Kodu Farkli Carilerde Kullanilabilsin',  'Ayarlar','FALSE' UNION ALL
SELECT   '531', NULL, 'Market icin Online Aktarim Kullanilsin',    'Ayarlar',          'FALSE' UNION ALL
SELECT   '532', NULL, 'Yeni vardiya cari tahsilat - kredi karti',    'Hareketler',    'FALSE' UNION ALL
SELECT   '533', NULL, 'Vardiya cari kredi kartli tahsilat',    'Hareketler',          'FALSE' UNION ALL
SELECT   '534', NULL, 'Mobil Odeme Cari Hesabi',    'Ayarlar',          'FALSE' UNION ALL
SELECT   '535', NULL, 'Merkez Şube Haricinde Alis ve Alis-Iade Faturalari Belirli Gun Oncesine Kadar Girilemesin', 'Ayarlar', 'FALSE' UNION ALL
SELECT   '536', NULL, 'Cari DBS','Hareketler','TRUE'  UNION ALL
SELECT   '537', NULL, 'Kasa Hareket Girisinde Gelir-Gider Karti Secimi Yapilabilsin', 'Ayarlar', 'FALSE' UNION ALL
SELECT   '538', NULL, 'Cari Bakiyesi Risk Limitinden Fazla ise Irsaliye Kesilemesin', 'Ayarlar', 'FALSE' UNION ALL
SELECT   '539', NULL, 'Gelir Gider Hareket Dokumunde Gecen Seneye Ait Devir Tutarlari Getirilmesin', 'Ayarlar', 'FALSE' UNION ALL
SELECT   '540', NULL, 'Cariler Birden Fazla Ozel Kod ile Calisabilsin', 'Ayarlar', 'FALSE' UNION ALL
SELECT   '541', NULL, 'Ayni Muhasebe Kodu Farkli Stoklarda Kullanilabilsin',  'Ayarlar','FALSE' UNION ALL
SELECT   '542', NULL, 'Cariler Birden Fazla Ozel Kod ile Ve-li Calisabilsin', 'Ayarlar','FALSE' UNION ALL
SELECT   '543', NULL, 'Personel Maaşını Ödemeye Esas Tarihe Göre Hesapla', 'Ayarlar','FALSE' UNION ALL
SELECT   '544', NULL, 'Diğer şubelerin hareketleri görünmesin', 'Ayarlar','FALSE' UNION ALL
SELECT   '545', NULL, 'Fatura Yuvarlama Üst Sınırı', 'Ayarlar', 'FALSE'	UNION ALL
SELECT   '546', NULL, 'Kar Marjı için Satış Fiyatını Tarihe Göre Getir', 'Ayarlar', 'FALSE'	UNION ALL
SELECT   '547', NULL, 'Faturalarda ki Üst Açıklama E-Fatura da Görünmesin', 'Ayarlar', 'FALSE'	UNION ALL
SELECT   '548', NULL, 'IBM-Pos Online Kasiyer Bazlı Aktarım Yapılsın', 'Ayarlar', 'FALSE'	UNION ALL
SELECT   '549', NULL, 'Cari Hareket Dökümü Döviz Alanları Gösterilsin', 'Ayarlar', 'FALSE'	UNION ALL
SELECT   '550', NULL, 'Kasiyer Kasa Kapatabilsin', 'Ayarlar', 'FALSE'	UNION ALL
SELECT	 '88',  NULL, 'Kur Farki Hareketi', 'Hareketler', 'TRUE' UNION ALL
SELECT	 '89',  NULL, 'Prim Dagitim Hareketi', 'Hareketler', 'FALSE' UNION ALL
SELECT 	 '121', NULL, 'Prim Dagitim Baslik', 'Basliklar', 'FALSE'

GO
DECLARE @t varchar(255)
SET @t = 'VTS'

EXEC tab @t

EXEC col @t, 'Owner','int'
EXEC col @t, 'TipInd','int NOT NULL'
EXEC col @t, 'GirisTarihi','datetime'
EXEC col @t, 'Aciklama','nvarchar(100)'
EXEC col @t, 'StokInd','int'
EXEC col @t, 'StokKodu','nvarchar(30)'
EXEC col @t, 'StokAdi','nvarchar(40)'
EXEC col @t, 'Miktar','decimal(28, 8)'
EXEC col @t, 'AnaBirimAdi','nvarchar(15)'
EXEC col @t, 'BirimAdi','nvarchar(15)'
EXEC col @t, 'Carpan','decimal(28, 8)'
EXEC col @t, 'Fiyat','decimal(28, 8)'
EXEC col @t, 'AnaParaBirimi','nvarchar(15)'
EXEC col @t, 'Iskonto','decimal(28, 8)'
EXEC col @t, 'Tutar','decimal(28, 8)'
EXEC col @t, 'YazarKasaFisNo','nvarchar(30)'
EXEC col @t, 'PersonelHesapInd','int'
EXEC col @t, 'PersonelHesapKodu','nvarchar(50)'
EXEC col @t, 'PersonelHesapAdi','nvarchar(50)'
EXEC col @t, 'DurumInd','int'
EXEC col @t, 'SayacInd','int'
EXEC col @t, 'SayacAdi','nvarchar(50)'
EXEC col @t, 'SayacKodu','nvarchar(30)'
EXEC col @t, 'OzelKodu','nvarchar(30)'
EXEC col @t, 'PlakaNo','nvarchar(30)'
EXEC col @t, 'Aktif','bit'
EXEC col @t, 'KDVOrani','decimal(28, 8)'
EXEC col @t, 'Rid','int'
EXEC col @t, 'SaleBegin','datetime'
EXEC col @t, 'FlowBegin','datetime'
EXEC col @t, 'FlowEnd','datetime'
EXEC col @t, 'IsSent','nvarchar(1)'
EXEC col @t, 'InvoicePeriodNr','nvarchar(8)'
EXEC col @t, 'OnlQueryId','int'
EXEC col @t, 'IsOnline','nvarchar(1)'
EXEC col @t, 'DealerId','int'
EXEC col @t, 'StationId','int'
EXEC col @t, 'CustomerId','int'
EXEC col @t, 'FleetId','int'
EXEC col @t, 'FleetName','nvarchar(64)'
EXEC col @t, 'GroupId','int'
EXEC col @t, 'VehicleId','int'
EXEC col @t, 'IdunitId','int'
EXEC col @t, 'IdunitCode','nvarchar(64)'
EXEC col @t, 'ProductId','int'
EXEC col @t, 'Odometer','int'
EXEC col @t, 'EngineHour','int'
EXEC col @t, 'EcrSaleTime','datetime'
EXEC col @t, 'EcrReceiptNr','int'
EXEC col @t, 'EcrPaymentType','int'
EXEC col @t, 'PostxnNr','nvarchar(64)'
EXEC col @t, 'RegionId','int'
EXEC col @t, 'CityId','int'
EXEC col @t, 'DistrictId','int'
EXEC col @t, 'SalesmanId','int'
EXEC col @t, 'SalesregionCode','nvarchar(12)'
EXEC col @t, 'SentTime','datetime'
EXEC col @t, 'EformDetailId','int'
EXEC col @t, 'PoasrrpId','nvarchar(32)'
EXEC col @t, 'EnterpriseInd','int'
EXEC col @t, 'VardiyaKartInd','int'
EXEC col @t, 'VardiyaTarihi','datetime'
EXEC col @t, 'VardiyaNo','int'
GO
DECLARE @t varchar(255)
SET @t = 'Yetkiler'
EXEC deltab @t
EXEC tab @t
EXEC col @t, 'Owner', 'int'
EXEC col @t, 'YetkiAdi', 'nvarchar(255) NOT NULL'
EXEC col @t, 'GrupAdi', 'nvarchar(255)'
GO
--DELETE FROM Yetkiler
SET IDENTITY_INSERT Yetkiler ON
INSERT INTO Yetkiler(Ind, Owner, YetkiAdi, GrupAdi)
SELECT '20', NULL, 'Birim Kaydedebilir - Güncelleyebilir - Silebilir', 'Birim' UNION ALL
SELECT '26', NULL, 'Çek/Senet Silebilir', 'Çek-Senet' UNION ALL
SELECT '27', NULL, 'Çek/Senet Kaydedebilir', 'Çek-Senet' UNION ALL
SELECT '28', NULL, 'Depo Açabilir', 'Depo' UNION ALL
SELECT '29', NULL, 'Depo Aktarım Yapabilir', 'Depo' UNION ALL
SELECT '30', NULL, 'Alış Faturası Kapatabilir', 'Fatura' UNION ALL
SELECT '31', NULL, 'Fatura Kesebilir', 'Fatura' UNION ALL
SELECT '32', NULL, 'Fatura İptal Edebilir', 'Fatura' UNION ALL
SELECT '33', NULL, 'Satış Faturası Kapatabilir', 'Fatura' UNION ALL
SELECT '34', NULL, 'Gelir ve Gider Kaydedebilir', 'Gelir/Gider' UNION ALL
SELECT '40', NULL, 'KDV Grubu Kaydedebilir - Güncelleyebilir - Silebilir', 'KDV' UNION ALL
SELECT '41', NULL, 'Kullanici Kaydedebilir - Güncelleyebilir - Silebilir', 'Kullanıcılar' UNION ALL
SELECT '42', NULL, 'Kur Kaydedebilir - Güncelleyebilir - Silebilir', 'Kur' UNION ALL
SELECT '43', NULL, 'Personel Kaydedebilir', 'Personel' UNION ALL
SELECT '44', NULL, 'Personel Hareketi Yapabilir', 'Personel' UNION ALL
SELECT '45', NULL, 'Maaş Dağıtım Yapabilir', 'Personel' UNION ALL
SELECT '46', NULL, 'Maaş Dağıtım İptal Edebilir', 'Personel' UNION ALL
SELECT '47', NULL, 'Personel Grubu Kaydedebilir', 'Personel' UNION ALL
SELECT '48', NULL, 'Rol Kaydedebilir', 'Rol' UNION ALL
SELECT '56', NULL, 'Ada - Personel Ataması Yapabilir', 'Vardiya' UNION ALL
SELECT '57', NULL, 'Vardiya Onaylayabilir', 'Vardiya' UNION ALL
SELECT '58', NULL, 'Vardiya İptal Edebilir', 'vardiya' UNION ALL
SELECT '59', NULL, 'Vardiya Diğer Kayıtlar Kaydedebilir - Güncelleyebilir - Silebilir', 'Vardiya' UNION ALL
SELECT '60', NULL, 'Vardiya Kartı Silebilir', 'Vardiya' UNION ALL
SELECT '61', NULL, 'Kredi Kartı İşlemleri Yapabilir', 'Vardiya' UNION ALL
SELECT '62', NULL, 'Vardiya Açabilir', 'Vardiya' UNION ALL
SELECT '63', NULL, 'Vardiya Sayaç Hareket Kaydedebilir - Güncelleyebilir - Silebilir', 'Vardiya' UNION ALL
SELECT '64', NULL, 'Vardiya Geri Dönüş Yapabilir', 'Vardiya' UNION ALL
SELECT '65', NULL, 'Veresiye Kaydedebilir', 'Vardiya' UNION ALL
SELECT '67', NULL, 'Eski Veresiye Kaydedebilir', 'Vardiya' UNION ALL
SELECT '69', NULL, 'Fatura Düzeltebilir', 'Fatura' UNION ALL
SELECT '70', NULL, 'Satış Kasası Onaylayabilir', 'Satış' UNION ALL
SELECT '71', NULL, 'Sayım/Ölçüm Yapabilir', 'Sayım' UNION ALL
SELECT '72', NULL, 'Sayım/Ölçüm Onaylayabilir', 'Sayım' UNION ALL
SELECT '124',NULL, 'Sayım/Sayıma Esas Depo Miktarlarını Güncelleyebilir', 'Sayım' UNION ALL
SELECT '73', NULL, 'Bütçe Onaylayabilir', 'Gelir/Gider' UNION ALL
SELECT '119', NULL, 'Sayım/Ölçüm Geri Dönüş Yapabilir', 'Sayım' UNION ALL
SELECT '55', NULL, 'Şube Açabilir',                                                  'Şube'  	UNION ALL
SELECT '79', NULL, 'Şube Grubu Açabilir',                                            'Şube'  	UNION ALL
SELECT '76', NULL, 'Şube Grubu Detayı Güncelleyebilir',                              'Şube'  	UNION ALL
SELECT '77', NULL, 'Hesap Ayarı Kaydedebilir',                                       'Hesap' 	UNION ALL
SELECT '51', NULL, 'Stok Kaydedebilir',                                              'Stok'  	UNION ALL
SELECT '52', NULL, 'Stoğa Satış Fiyatı Kaydedebilir - Güncelleyebilir - Silebilir ', 'Stok'  	UNION ALL
SELECT '53', NULL, 'Stoğa Barkod Kaydedebilir - Güncelleyebilir - Silebilir  ',      'Stok'  	UNION ALL
SELECT '54', NULL, 'Stok Güncelleyebilir',                                           'Stok'  	UNION ALL
SELECT '78', NULL, 'Stok Parçalayabilir',                                            'Stok'  	UNION ALL
SELECT '66', NULL, 'Vardiya Ayarları Kaydedebilir', 								 'Genel' 	UNION ALL
SELECT '75', NULL, 'Genel Ayarları Değiştirebilir',                                  'Genel' 	UNION ALL
SELECT '80', NULL, 'Genel Rapor İsteyebilir',			                             'Genel' 	UNION ALL
SELECT '120',NULL, 'Fiyat Değişikliklerini Görebilir',	                             'Genel' 	UNION ALL
SELECT '122',NULL, 'Tesisat Tanımı Kaydedebilir',									 'Genel'    UNION ALL
SELECT '123',NULL, 'Tesisat Tanımı Silebilir',										 'Genel'    UNION ALL
SELECT '38', NULL, 'Kasa İşlem Yapabilir',                                           'Kasa'  	UNION ALL
SELECT '39', NULL, 'Kasa İşlem Silebilir',                                           'Kasa'  	UNION ALL
SELECT '68', NULL, 'Kasa Açabilir',                                                  'Kasa'  	UNION ALL
SELECT '74', NULL, 'Kasa Virman Girişi Yapabilir',                                   'Kasa'  	UNION ALL
SELECT '81', NULL, 'Kasa Kapatabilir',                                               'Kasa'     UNION ALL
SELECT '35', NULL, 'İrsaliye Faturalaştırabilir',                                    'İrsaliye' UNION ALL
SELECT '36', NULL, 'İrsaliye Kesebilir', 											 'İrsaliye' UNION ALL
SELECT '37', NULL, 'İrsaliye İptal Edebilir', 										 'İrsaliye' UNION ALL
SELECT '82', NULL, 'İrsaliye Aktarabilir',		 									 'İrsaliye' UNION ALL
SELECT '83', NULL, 'İrsaliye Transfer Edebilir',	 								 'İrsaliye' UNION ALL
SELECT '21', NULL, 'Cari Hesap Açabilir', 											 'Cari' 	UNION ALL
SELECT '22', NULL, 'Cari Özel Kod Kaydedebilir - Güncelleyebilir - Silebilir', 		 'Cari' 	UNION ALL
SELECT '23', NULL, 'Cari Plaka Kaydedebilir - Güncelleyebilir - Silebilir', 		 'Cari' 	UNION ALL
SELECT '24', NULL, 'Cari Hareket Silebilir', 										 'Cari' 	UNION ALL
SELECT '25', NULL, 'Cari Hareket Yapabilir', 										 'Cari' 	UNION ALL
SELECT '84', NULL, 'Cari Teminat Kodu Kaydedebilir - Güncelleyebilir - Silebilir',   'Cari'		UNION ALL
SELECT '49', NULL, 'Sayaç Kaydedebilir - Güncelleyebilir - Silebilir', 				 'Sayaç' 	UNION ALL
SELECT '85', NULL, 'Sayaç Kartı - Endeks Güncelleyebilir',			 				 'Sayaç' 	UNION ALL
SELECT '86', NULL, 'Logo Aktarımı Yapabilir',						 				 'Aktarim' 	UNION ALL
SELECT '13', NULL, 'Banka Hesabı Açabilir', 										 'Banka' 	UNION ALL
SELECT '14', NULL, 'Banka Hesabı Güncelleyebilir', 									 'Banka'	UNION ALL
SELECT '15', NULL, 'Kredi Kartı Kaydedebilir - Güncelleyebilir - Silebilir', 		 'Banka' 	UNION ALL
SELECT '16', NULL, 'Kredi Kartı Tahsil Yapabilir', 									 'Banka' 	UNION ALL
SELECT '17', NULL, 'Banka İşlem Silebilir', 										 'Banka' 	UNION ALL
SELECT '18', NULL, 'Banka İşlem Yapabilir', 										 'Banka' 	UNION ALL
SELECT '19', NULL, 'Kredi Kartı Hareketi Silebilir', 								 'Banka' 	UNION ALL
SELECT '88', NULL, 'Bakiye Görebilir',				 								 'Banka' 	UNION ALL
SELECT '87', NULL, 'Personel Carisi Kaydedebilir', 									 'Personel' UNION ALL
SELECT '89', NULL, 'Şube Bazlı Genel Ayarları Değiştirebilir',                       'Genel' 	UNION ALL
SELECT '90', NULL, 'Sipariş Onaylayabilir', 										 'Sipariş'  UNION ALL
SELECT '50', NULL, 'Sipariş Alabilir - Verebilir',                                   'Sipariş'  UNION ALL
SELECT '91', NULL, 'Sipariş İptal Edebilir',                                   		 'Sipariş'  UNION ALL
SELECT '92', NULL, 'Sipariş Sevk Edebilir',                                   		 'Sipariş'  UNION ALL
SELECT '93', NULL, 'Onaylanan Sipariş Geri Alabilir',                          		 'Sipariş'  UNION ALL
SELECT '106',NULL, 'Teslim Edilmiş Sipariş Geri Alabilir',                     		 'Sipariş'  UNION ALL
SELECT '94', NULL, 'Cari nakit tahsilatı için giriş yapabilir',                      'Cari Hareket Girişi' UNION ALL
SELECT '95', NULL, 'Cari kredi kartı tahsilatı için giriş yapabilir',                'Cari Hareket Girişi' UNION ALL
SELECT '96', NULL, 'Cari alınan çek/senet girişi yapabilir',                         'Cari Hareket Girişi' UNION ALL
SELECT '97', NULL, 'Cari bankadan tahsilatı için giriş yapabilir',                   'Cari Hareket Girişi' UNION ALL
SELECT '98', NULL, 'Cari nakit ödemesi için giriş yapabilir',                        'Cari Hareket Girişi' UNION ALL
SELECT '99', NULL, 'Cari verilen çek/senet girişi yapabilir',                        'Cari Hareket Girişi' UNION ALL
SELECT '100',NULL, 'Cari bankadan ödemesi için giriş yapabilir',                     'Cari Hareket Girişi' UNION ALL
SELECT '101',NULL, 'Cari gelir girişi yapabilir',                                    'Cari Hareket Girişi' UNION ALL
SELECT '102',NULL, 'Cari gider girişi yapabilir',                                    'Cari Hareket Girişi' UNION ALL
SELECT '103',NULL, 'Cari virman girişi yapabilir',                                   'Cari Hareket Girişi' UNION ALL
SELECT '104',NULL, 'Cari virman çıkışı yapabilir',                                   'Cari Hareket Girişi' UNION ALL
SELECT '105', NULL, 'Eski Aktif Satış Kasası Açabilir', 							 'Satış' 			   UNION ALL
---
SELECT '107', NULL, 'Döviz Girişi yapabilir',	           							 'Kasa Hareket Girişi' UNION ALL
SELECT '108', NULL, 'Döviz Çıkışı yapabilir',	           							 'Kasa Hareket Girişi' UNION ALL
SELECT '109', NULL, 'Cari nakit tahsilatı yapabilir',      							 'Kasa Hareket Girişi' UNION ALL
SELECT '110', NULL, 'Cari nakit ödemesi yapabilir',      							 'Kasa Hareket Girişi' UNION ALL
SELECT '111', NULL, 'Banka hesabına para yatırabilir',    							 'Kasa Hareket Girişi' UNION ALL
SELECT '112', NULL, 'Personel hesabına ödeme yapabilir',  							 'Kasa Hareket Girişi' UNION ALL
SELECT '113', NULL, 'Banka hesabından para çekebilir',     							 'Kasa Hareket Girişi' UNION ALL
SELECT '114', NULL, 'Personel hesabından tahsilat yapabilir',						 'Kasa Hareket Girişi' UNION ALL
SELECT '115', NULL, 'Kasaya gelir kaydedebilir',      							     'Kasa Hareket Girişi' UNION ALL
SELECT '116', NULL, 'Kasaya gider kaydedebilir',        							 'Kasa Hareket Girişi' UNION ALL
---
SELECT '117', NULL, 'Diğer programlara muhasebe aktarımı yapabilir',				 'Muhasebe Aktarım'	   UNION ALL
SELECT '118', NULL, 'Cari Otomasyon Kodu Kaydedebilir - Güncelleyebilir - Silebilir','Cari'			       UNION ALL
SELECT '121', NULL, 'Vardiya İşlemi Yapabilir',										 'Servis'              UNION ALL
SELECT '125', NULL, 'Menü Ekleyebilir',                                              'Menü'                UNION ALL
SELECT '126', NULL, 'Menü Güncelleyebilir',                                          'Menü'                UNION ALL
SELECT '127', NULL, 'Menü Silebilir',                                                'Menü'                UNION ALL
SELECT '128', NULL, 'Menü Sıralaması Güncelleyebilir',                               'Menü'                UNION ALL
SELECT '129', NULL, 'İrsaliye İçindeki Fiyatları Değiştirebilir',                    'İrsaliye'            UNION ALL
SELECT '130', NULL, 'Lokasyon Kaydedebilir',									     'Genel'               UNION ALL
SELECT '131', NULL, 'Lokasyon Silebilir',										     'Genel'               UNION ALL
SELECT '132', NULL, 'İrsaliye Bilgilerini Değiştirebilir',                           'İrsaliye'			   UNION ALL
SELECT '133', NULL, 'Stok Alış Fiyatını Değiştirebilir',							 'Stok'	               UNION ALL
SELECT '134', NULL, 'Cari Hareket Güncelleyebilir',							         'Cari'				   UNION ALL
SELECT '135', NULL, 'Kur Farkını Tahsil Edebilir',									 'Cari'				   UNION ALL
SELECT '136', NULL, 'Prim Hedefi Tanımlayabilir',									 'Personel'			   UNION ALL
SELECT '137', NULL, 'Prim Hedefi Silebilir',										 'Personel'			   UNION ALL
SELECT '138', NULL, 'Prim Dağıtımı Yapabilir',										 'Personel'			   UNION ALL
SELECT '139', NULL, 'Prim Dağıtımı Silebilir',										 'Personel'			   

SET IDENTITY_INSERT Yetkiler OFF
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AlisHareketleri]
AS
		SELECT 
		hf.Ind,
		hf.TipInd,
		hf.StokInd,
		hf.Fiyat,
		hf.GercekFiyat,
		hf.Miktar,
		hf.Iskonto,
		b.Iskonto AS BaslikIskonto,
        CASE WHEN hf.Iskonto <> 0 THEN  (hf.Fiyat - hf.Iskonto/hf.Miktar) * (ISNULL(b.Iskonto /(select top 1 (CASE SUM(h.Tutar) - SUM(Iskonto) WHEN 0 THEN 1 ELSE SUM(h.Tutar) - SUM(Iskonto) END)  from Hareketler h where BaslikInd=b.Ind group by h.BaslikInd),0)) 
		ELSE   hf.Fiyat*(ISNULL(b.Iskonto/(select top 1 (CASE SUM(h.Tutar) - SUM(Iskonto) WHEN 0 THEN 1 ELSE SUM(h.Tutar) - SUM(Iskonto) END) from Hareketler h where BaslikInd=b.Ind group by h.BaslikInd),0))  END AS HareketBaslikIskonto,
		b.Tarih,
		b.HesapInd,
		Hesaplar.OzelKodInd,
		hed.Owner,--b.Owner,--AMAÇ : MERKEZE GİRİLEN ANCAK DEPO OLARAK ŞUBE DEPOSU SEÇİLEN FATURALARDA ALIŞ FİYATININ ŞUBE ALIŞ FİYATI OLMASI SAĞLANDI
		hf.KDVOrani,
		hf.BirimAdi
	FROM 
		Hareketler as hf WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON hf.BaslikInd = b.Ind
		LEFT JOIN Hesaplar WITH(NOLOCK) ON  Hesaplar.Ind = b.HesapInd
		INNER JOIN Hareketler hs WITH(NOLOCK) ON hs.BaslikInd = b.Ind-- BU KISIM YOKTU , AMAÇ : MERKEZE GİRİLEN ANCAK DEPO OLARAK ŞUBE DEPOSU SEÇİLEN FATURALARDA ALIŞ FİYATININ ŞUBE ALIŞ FİYATI OLMASI SAĞLANDI
		INNER JOIN Hesaplar hed WITH(NOLOCK) ON hs.DepoInd = hed.Ind--BU KISIM YOKTU ,AMAÇ : MERKEZE GİRİLEN ANCAK DEPO OLARAK ŞUBE DEPOSU SEÇİLEN FATURALARDA ALIŞ FİYATININ ŞUBE ALIŞ FİYATI OLMASI SAĞLANDI
	WHERE 
		hf.TipInd = 3 AND hs.TipInd = 29 AND hf.StokInd = hs.StokInd 
		--hf.TipInd = 3 AMAÇ : MERKEZE GİRİLEN ANCAK DEPO OLARAK ŞUBE DEPOSU SEÇİLEN FATURALARDA ALIŞ FİYATININ ŞUBE ALIŞ FİYATI OLMASI SAĞLANDI
		AND (b.Aktif IS NULL OR b.Aktif = 1)
	UNION ALL
	SELECT 
		h.Ind,
		3 AS TipInd,
		h.StokInd,
		ISNULL(h.Fiyat, 0) as Fiyat,
		0.00 as GercekFiyat,
		h.Miktar,
		h.Iskonto,
		b.Iskonto AS BaslikIskonto,
        0.00 AS HareketBaslikIskonto,
		b.Tarih,
		b.HesapInd,
		Hesaplar.OzelKodInd,
		b.Owner,
		h.KDVOrani,
		h.BirimAdi
	FROM
		Hareketler as h
		LEFT JOIN Basliklar as b ON h.BaslikInd = b.Ind
		LEFT JOIN Hesaplar ON Hesaplar.Ind = h.DepoInd
	WHERE
		h.TipInd = 29 
		AND b.TipInd = 503
	UNION ALL
	SELECT 
		h.Ind,
		h.TipInd,
		h.StokInd,
		(h.Fiyat / (1 + (k.KdvOrani / 100))) AS Fiyat,
		NULL AS GercekFiyat,
		h.Miktar,
		h.Iskonto,
		b.Iskonto AS BaslikIskonto,
        0.00 AS HareketBaslikIskonto,
		b.Tarih,
		b.HesapInd,
		Hesaplar.OzelKodInd,
		b.Owner,
		h.KDVOrani,
		h.BirimAdi
	FROM 
		Hareketler as h
		LEFT JOIN Basliklar as b ON h.BaslikInd = b.Ind
		LEFT JOIN Hesaplar ON Hesaplar.Ind = b.HesapInd
		LEFT OUTER JOIN dbo.Stoklar AS s ON s.Ind = h.StokInd
		LEFT JOIN dbo.KDVGruplari AS k ON k.Ind = s.AlisKDVGrupInd
	WHERE 
		h.TipInd = 2
		AND b.DurumInd IS NULL		
		AND (b.Aktif IS NULL OR b.Aktif = 1)

GO
GO
CREATE FUNCTION StokSatisFiyati
(
	@Owner INT,
	@StokInd INT
)
RETURNS DECIMAL(28,11)
AS
BEGIN
	DECLARE @_Result DECIMAL(28,11)
	DECLARE @_FiyatInd INT

	if (@Owner=0) set @Owner = null

	SELECT 
		TOP 1
		@_FiyatInd = FiyatInd
	FROM 
		SatisFiyatiSiralamaWithStokInd 
	WHERE 
		Owner = @Owner AND 
		StokInd = @StokInd 
	ORDER BY 
		SiraNo 


	IF (@_FiyatInd IS NULL)
	BEGIN	

		if (@_Result is null)
		begin
			SELECT @_Result = Tutar
			FROM StokDetaylari
			WHERE StokInd = @StokInd AND Owner = @Owner
				AND TipInd = 501 and IsAnaFiyat = 1
		end

		if (@_Result is null)
		begin
			SELECT @_Result = Tutar
			FROM StokDetaylari
			WHERE StokInd = @StokInd AND Owner is null
				AND TipInd = 501 and IsAnaFiyat = 1
		end


		if (@_Result is null)
		begin
			SELECT 
				@_Result = Tutar 
			FROM 
				dbo.CBSatisFiyatiListesi
			WHERE 
				Owner is null AND
				(StokInd=@StokInd) AND
				TipInd=501 
		end

	END
	ELSE
	BEGIN

		SELECT 
			@_Result = Tutar 
		FROM 
			dbo.CBSatisFiyatiListesi 
		WHERE 
			Ind=@_FiyatInd

	END

	RETURN @_Result 

END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AlisFiyatlariForGenelKural]
AS
	SELECT 
		Owner,
		Tarih,
		StokInd, 
		ROW_NUMBER() OVER(
		PARTITION BY StokInd, Owner
		ORDER BY Owner DESC, Tarih DESC, Ind DESC) AS Position, 
		Fiyat,
		BirimAdi,
		KDVOrani,
		HesapInd,
		Iskonto,
        HareketBaslikIskonto,
		Miktar
	FROM 
		AlisHareketleri  WITH(NOLOCK)

GO
/****** Object:  View [dbo].[VeresiyedenGelenFaturaBasliklar]    Script Date: 09/01/2008 11:21:35 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VeresiyedenGelenFaturaBasliklar]
AS
SELECT
	Basliklar.Ind,
	Basliklar.Aktif,
	Basliklar.TipInd,
	Basliklar.BelgeNo,
	Basliklar.Tarih,
	Basliklar.Aciklama,
	Basliklar.GelirInd,
	Basliklar.GelirKodu,
	Basliklar.GiderInd,
	Basliklar.GiderKodu,
	Basliklar.GelirAdi,
	Basliklar.GiderAdi,
	Basliklar.HesapInd,
	Basliklar.HesapKodu,
	Basliklar.HesapAdi,

	--09.07.2014'ten önce
    --(SUM(Hareketler.Tutar)+Basliklar.Yuvarlama) as Tutar,
	--SUM(((Hareketler.Tutar * 100)/(100+KDVOrani)-Hareketler.Iskonto)*(1+KDVOrani/100)) as SatirIskontoluTutar,
	--SUM(((Hareketler.Tutar * 100)/(100+KDVOrani)-Hareketler.Iskonto)) as SatirIskontoluMatrah,
	--(SUM(((Hareketler.Tutar * 100)/(100+KDVOrani)-Hareketler.Iskonto)*(1+KDVOrani/100))* (1-Basliklar.Iskonto/SUM(((Hareketler.Tutar * 100)/(100+KDVOrani)-Hareketler.Iskonto)))) AS iskontoluToplam,
	--(SUM((tutar * 100 / (100 + kdvOrani) - Hareketler.Iskonto) * kdvOrani / 100)*(1-basliklar.Iskonto/SUM((Hareketler.Tutar * 100)/(100+KDVOrani)-Hareketler.Iskonto))) as KDVTutari,
	--SUM(((Hareketler.Tutar * 100)/(100+KDVOrani)-Hareketler.Iskonto)) - (SUM(Hareketler.Iskonto)+(Basliklar.Iskonto)) + ((SUM((tutar * 100 / (100 + kdvOrani) - -Hareketler.Iskonto) * kdvOrani / 100)*(1-basliklar.Iskonto/SUM((Hareketler.Tutar * 100)/(100+KDVOrani)-Hareketler.Iskonto)))) + (Basliklar.Yuvarlama)  as NetToplam,
	--09.07.2014'ten önce

	--09.07.2014 Semih Zafer YILMAZ - KDV hariç irsaliye ve ürün bazlı iskonto girişlerinden sonra aşağıdaki şekilde değiştirildi
	(SUM(Hareketler.Tutar)+Basliklar.Yuvarlama) as Tutar,
	SUM((Hareketler.Tutar-Hareketler.Iskonto)*(1+KDVOrani/100)) as SatirIskontoluTutar,
	SUM((Hareketler.Tutar-Hareketler.Iskonto)) as SatirIskontoluMatrah,
	case 
	when SUM((Hareketler.Tutar-Hareketler.Iskonto)) != 0
	then
	(SUM((Hareketler.Tutar-Hareketler.Iskonto)*(1+KDVOrani/100))* (1-Basliklar.Iskonto/SUM((Hareketler.Tutar-Hareketler.Iskonto)))) END AS iskontoluToplam,
	case 
	when SUM((Hareketler.Tutar-Hareketler.Iskonto)) != 0
	then
	(SUM((tutar - Hareketler.Iskonto) * kdvOrani / 100)*(1-basliklar.Iskonto/SUM(Hareketler.Tutar-Hareketler.Iskonto))) END AS KDVTutari,
	case 
	when SUM(Hareketler.Iskonto)> 0 AND SUM(Basliklar.Iskonto) = 0 then 
	     SUM((Hareketler.Tutar-Hareketler.Iskonto)) - (Basliklar.Iskonto) + ((SUM((tutar - Hareketler.Iskonto) * kdvOrani / 100)*(1-basliklar.Iskonto/SUM(Hareketler.Tutar -Hareketler.Iskonto)))) + (Basliklar.Yuvarlama) 
	     when SUM(Basliklar.Iskonto) > 0 AND Sum(Hareketler.Iskonto) = 0 AND SUM(Hareketler.Tutar -Hareketler.Iskonto) != 0 then
		 SUM((Hareketler.Tutar-Hareketler.Iskonto)) - (SUM(Hareketler.Iskonto)+(Basliklar.Iskonto)) + ((SUM((tutar - Hareketler.Iskonto) * kdvOrani / 100)*(1-basliklar.Iskonto/SUM(Hareketler.Tutar -Hareketler.Iskonto)))) + (Basliklar.Yuvarlama)
	     when SUM(Basliklar.Iskonto) > 0 AND Sum(Hareketler.Iskonto) > 0 AND SUM(Hareketler.Tutar -Hareketler.Iskonto) != 0 then  
	     SUM(Hareketler.Tutar-Hareketler.Iskonto) + SUM((tutar -Hareketler.Iskonto) * kdvOrani / 100)*(1-basliklar.Iskonto/SUM(Hareketler.Tutar -Hareketler.Iskonto)) + (Basliklar.Yuvarlama)- (Basliklar.Iskonto)
		 when SUM(Hareketler.Tutar -Hareketler.Iskonto) != 0 then
		 SUM((Hareketler.Tutar-Hareketler.Iskonto)) - (SUM(Hareketler.Iskonto)+(Basliklar.Iskonto)) + ((SUM((tutar - Hareketler.Iskonto) * kdvOrani / 100)*(1-basliklar.Iskonto/SUM(Hareketler.Tutar -Hareketler.Iskonto)))) + (Basliklar.Yuvarlama) 
	end as NetToplam,
	--SUM((Hareketler.Tutar-Hareketler.Iskonto)) - (SUM(Hareketler.Iskonto)+(Basliklar.Iskonto)) + ((SUM((tutar - Hareketler.Iskonto) * kdvOrani / 100)*(1-basliklar.Iskonto/SUM(Hareketler.Tutar -Hareketler.Iskonto)))) + (Basliklar.Yuvarlama)  as NetToplam,
	--09.07.2014 Semih Zafer YILMAZ
	Basliklar.Iskonto,
	Basliklar.Owner,
	Basliklar.Yuvarlama,
	Basliklar.OdemeTarihi,
SUM(Hareketler.Iskonto)+(Basliklar.Iskonto) ToplamIskonto
FROM
Hareketler WITH(NOLOCK)
LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.BaslikInd = Basliklar.Ind
WHERE	(dbo.Basliklar.Aktif IS NULL OR dbo.Basliklar.Aktif = 1)
		AND Basliklar.TipInd=102 AND Hareketler.TipInd=6 AND Basliklar.DurumInd=12

GROUP BY
	Basliklar.Ind,
	Basliklar.Aktif,
	Basliklar.TipInd,
	Basliklar.BelgeNo,
	Basliklar.Tarih,
	Basliklar.Aciklama,
	Basliklar.HesapInd,
	Basliklar.HesapKodu,
	Basliklar.HesapAdi,
	Basliklar.Iskonto,
	Basliklar.Owner,
	Basliklar.GelirInd,
	Basliklar.GelirKodu,
	Basliklar.GiderInd,
	Basliklar.GiderKodu,
	Basliklar.GelirAdi,
	Basliklar.GiderAdi,
	Basliklar.Yuvarlama,Basliklar.OdemeTarihi
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[fn_KKTahsilView] 
(

)
RETURNS TABLE 
AS
RETURN 
(
		SELECT		
					dbo.Basliklar.Tarih AS Tarih, 
					dbo.Basliklar.HesapKodu AS BelgeNo, 
					dbo.Basliklar.Aciklama AS Aciklama, 
					dbo.Basliklar.TipInd AS TipInd,
					dbo.Basliklar.TahsilatTutari AS Tahsilat, 
					dbo.Hesaplar.BankaInd AS BankaInd,
					'False' AS IsKomisyon ,
					dbo.Basliklar.Owner AS Owner,
					dbo.Basliklar.HesapInd AS KKHesapInd,
					dbo.Basliklar.Ind AS BaslikInd,
					dbo.Basliklar.Iskonto
		FROM         dbo.Basliklar INNER JOIN
							  dbo.Hareketler ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd INNER JOIN
							  dbo.Hesaplar ON dbo.Basliklar.HesapInd = dbo.Hesaplar.Ind
		WHERE     (dbo.Basliklar.TipInd = 105) AND (dbo.Hareketler.Tutar > 0)

		GROUP BY dbo.Hareketler.BaslikInd,
				 dbo.Basliklar.Tarih, 
				 dbo.Basliklar.TipInd, 
				 dbo.Basliklar.Iskonto,
				 dbo.Hesaplar.BankaKomisyon,
				 dbo.Basliklar.HesapKodu, 
				dbo.Hesaplar.BankaInd,
				dbo.Basliklar.Owner,
				dbo.Hareketler.KKHesapInd,
				dbo.Basliklar.Aciklama,
				dbo.Basliklar.HesapInd,
				dbo.Basliklar.TahsilatTutari,
				dbo.Basliklar.Ind,
				dbo.Basliklar.Iskonto 

		UNION ALL

		SELECT		Basliklar.Tarih AS Tarih, 
					Basliklar.HesapKodu AS BelgeNo, 			
					'Komisyon' AS Aciklama, 
					Basliklar.TipInd AS TipInd,
					CASE WHEN dbo.Basliklar.Iskonto IS NOT NULL THEN
					dbo.Basliklar.TahsilatTutari * dbo.Basliklar.Iskonto / 100
					ELSE
					dbo.Basliklar.TahsilatTutari * Hesaplar.BankaKomisyon / 100
					END	AS Tahsilat, 
					Hesaplar.BankaInd AS BankaInd, 
					'True' AS IsKomisyon,
					Basliklar.Owner AS Owner,
					dbo.Basliklar.HesapInd AS KKHesapInd,
					dbo.Basliklar.Ind AS BaslikInd,
					dbo.Basliklar.Iskonto

		FROM         dbo.Basliklar  INNER JOIN
							  dbo.Hareketler ON Basliklar.Ind = Hareketler.BaslikInd INNER JOIN
							  dbo.Hesaplar ON Basliklar.HesapInd = Hesaplar.Ind

		WHERE     (Basliklar.TipInd = 105) AND (Hareketler.Tutar > 0)

					GROUP BY dbo.Hareketler.BaslikInd,
					dbo.Basliklar.Tarih, 
					dbo.Basliklar.TipInd, 
					dbo.Basliklar.Iskonto,
					dbo.Hesaplar.BankaKomisyon,
					dbo.Basliklar.HesapKodu, 
					dbo.Hesaplar.BankaInd,
					dbo.Basliklar.Owner,
					dbo.Hareketler.KKHesapInd,
					dbo.Basliklar.Aciklama,
					dbo.Basliklar.HesapInd,
					dbo.Basliklar.TahsilatTutari,
					dbo.Basliklar.Ind,
					dbo.Basliklar.Iskonto
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KrediKartiTahsil]
AS
SELECT 
* FROM fn_KKTahsilView()   GROUP BY BaslikInd, Iskonto, TipInd, IsKomisyon,Aciklama,Tarih,BelgeNo,Tahsilat,BankaInd,Owner,KKHesapInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KDVOrani]
AS
SELECT     dbo.Stoklar.Ind, KDVGruplari_1.KDVOrani AS AlisKDVOrani, dbo.KDVGruplari.KDVOrani AS SatisKDVOrani, dbo.Stoklar.Owner
FROM         dbo.Stoklar WITH(NOLOCK) INNER JOIN
                      dbo.KDVGruplari AS KDVGruplari_1 WITH(NOLOCK)  ON dbo.Stoklar.AlisKDVGrupInd = KDVGruplari_1.Ind INNER JOIN
                      dbo.KDVGruplari WITH(NOLOCK) ON dbo.Stoklar.SatisKDVGrupInd = dbo.KDVGruplari.Ind
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[StogaAitFiyatKDV]
AS
SELECT		dbo.StokDetaylari.StokInd AS Ind, 
			dbo.StokDetaylari.Tutar, 
			dbo.KDVOrani.SatisKDVOrani,
			dbo.StokDetaylari.Owner

FROM        dbo.StokDetaylari WITH(NOLOCK) LEFT JOIN dbo.KDVOrani WITH(NOLOCK)
			ON dbo.StokDetaylari.StokInd = dbo.KDVOrani.Ind

WHERE		dbo.StokDetaylari.TipInd=501 AND 
			dbo.StokDetaylari.IsAnaFiyat='True'
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[SayacaAitDepoStok]
AS
SELECT		dbo.HesapDetaylari.Ind, 
			dbo.HesapDetaylari.DepoInd, 
			dbo.Hesaplar.StokInd,
			dbo.HesapDetaylari.Owner,
			dbo.HesapDetaylari.OtomasyonKodu

FROM        dbo.HesapDetaylari WITH(NOLOCK) INNER JOIN dbo.Hesaplar WITH(NOLOCK)
			ON dbo.Hesaplar.Ind = dbo.HesapDetaylari.DepoInd

WHERE		HesapDetaylari.TipInd=402

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[SayacOzet]
AS
SELECT		dbo.SayacaAitDepoStok.Ind, 
			dbo.SayacaAitDepoStok.DepoInd, 
			dbo.SayacaAitDepoStok.StokInd, 
			dbo.StogaAitFiyatKDV.Tutar,
            dbo.StogaAitFiyatKDV.SatisKDVOrani,
			dbo.SayacaAitDepoStok.Owner

FROM        dbo.SayacaAitDepoStok WITH(NOLOCK) INNER JOIN dbo.StogaAitFiyatKDV 
			WITH(NOLOCK) ON dbo.SayacaAitDepoStok.StokInd = dbo.StogaAitFiyatKDV.Ind
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[SayacForVardiya]
AS
SELECT		0 AS Ind,
			dbo.HesapDetaylari.Ind AS SayacInd, 
			dbo.HesapDetaylari.SayacKodu, 
			dbo.HesapDetaylari.SayacAdi, 
			dbo.HesapDetaylari.SayacEndeksi AS EskiEndeks, 
			dbo.SayacOzet.Tutar AS Fiyat,
			dbo.HesapDetaylari.AzalanEndeks,
			dbo.HesapDetaylari.AdaGrubu,
			dbo.HesapDetaylari.Owner,
			dbo.HesapDetaylari.OtomasyonAktif,
			dbo.HesapDetaylari.OtomasyonKodu,
			dbo.SayacOzet.StokInd
FROM        dbo.HesapDetaylari WITH(NOLOCK) INNER JOIN dbo.SayacOzet 
			WITH(NOLOCK) ON dbo.HesapDetaylari.Ind = dbo.SayacOzet.Ind
WHERE		dbo.HesapDetaylari.TipInd=402


GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go

CREATE FUNCTION [dbo].[fnSplit](
    @sInputList nvarchar(MAX) -- List of delimited items
  , @sDelimiter nvarchar(MAX) = ',' -- delimiter that separates items
) RETURNS @List TABLE (item nvarchar(MAX))

BEGIN
DECLARE @sItem nvarchar(MAX)
WHILE CHARINDEX(@sDelimiter,@sInputList,0) <> 0
 BEGIN
 SELECT
  @sItem=RTRIM(LTRIM(SUBSTRING(@sInputList,1,CHARINDEX(@sDelimiter,@sInputList,0)-1))),
  @sInputList=RTRIM(LTRIM(SUBSTRING(@sInputList,CHARINDEX(@sDelimiter,@sInputList,0)+LEN(@sDelimiter),LEN(@sInputList))))
 
 IF LEN(@sItem) > 0
  INSERT INTO @List SELECT @sItem
 END

IF LEN(@sInputList) > 0
 INSERT INTO @List SELECT @sInputList -- Put the last item in
RETURN
END


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[AkaryakitMiktariDevir] 
(	
	@StokInd nvarchar(4000),
	@DepoInds nvarchar(max),
	@tarih datetime
)
RETURNS 
@Dokum TABLE 
(
	Owner int,
	StokInd int,
	StokKodu nvarchar(30),
	StokAdi nvarchar(40),
	Devir decimal(28,8),
	SatisFiyati decimal(28,8)
)
AS
BEGIN
		INSERT INTO @Dokum
		SELECT
			StokHareketDevir.Owner,
			StokHareketDevir.StokInd,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			SUM(StokHareketDevir.Giren-StokHareketDevir.Cikan) as Devir,
			StokDetaylari.Tutar as SatisFiyati
		FROM
		StokHareketDevir(@StokInd,@DepoInds,@tarih)
		LEFT JOIN Stoklar ON StokHareketDevir.StokInd = Stoklar.Ind
		LEFT JOIN StokDetaylari ON Stoklar.Ind = StokDetaylari.StokInd AND StokDetaylari.IsAnaFiyat ='True'
		GROUP BY
			StokHareketDevir.Owner,
			StokHareketDevir.StokInd,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			StokDetaylari.Tutar


		DECLARE @x int
		SELECT @x=COUNT(*) FROM
		StokHareketDevir(@StokInd,@DepoInds,@tarih)
		LEFT JOIN Stoklar ON StokHareketDevir.StokInd = Stoklar.Ind
		LEFT JOIN StokDetaylari ON Stoklar.Ind = StokDetaylari.StokInd AND StokDetaylari.IsAnaFiyat ='True'

		IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
			Stoklar.Owner,
			@StokInd as StokInd,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			0 as Devir,
			StokDetaylari.Tutar as SatisFiyati
		FROM Stoklar
		LEFT JOIN StokDetaylari ON Stoklar.Ind = StokDetaylari.StokInd AND StokDetaylari.IsAnaFiyat ='True'
		WHERE Stoklar.Ind = @StokInd

	RETURN
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[AkaryakitMiktariDevirButun] 
(	
	@DepoInds nvarchar(max),
	@tarih datetime
)
RETURNS 
@Dokum TABLE 
(
	Owner int,
	StokInd int,
	StokKodu nvarchar(30),
	StokAdi nvarchar(40),
	Devir decimal(28,8),
	SatisFiyati decimal(28,8)
)
AS
BEGIN
		INSERT INTO @Dokum
		SELECT
			StokHareketDevirButun.Owner,
			StokHareketDevirButun.StokInd,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			SUM(StokHareketDevirButun.Giren-StokHareketDevirButun.Cikan) as Devir,
			StokDetaylari.Tutar as SatisFiyati
		FROM
		StokHareketDevirButun(@DepoInds,@tarih)
		LEFT JOIN Stoklar ON StokHareketDevirButun.StokInd = Stoklar.Ind
		LEFT JOIN StokDetaylari ON Stoklar.Ind = StokDetaylari.StokInd AND StokDetaylari.IsAnaFiyat ='True'
		GROUP BY
			StokHareketDevirButun.Owner,
			StokHareketDevirButun.StokInd,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			StokDetaylari.Tutar


		DECLARE @x int
		SELECT @x=COUNT(*) FROM
		StokHareketDevirButun(@DepoInds,@tarih)
		LEFT JOIN Stoklar ON StokHareketDevirButun.StokInd = Stoklar.Ind
		LEFT JOIN StokDetaylari ON Stoklar.Ind = StokDetaylari.StokInd AND StokDetaylari.IsAnaFiyat ='True'

		IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
			Stoklar.Owner,
			Stoklar.Ind as StokInd,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			0 as Devir,
			StokDetaylari.Tutar as SatisFiyati
		FROM Stoklar
		LEFT JOIN StokDetaylari ON Stoklar.Ind = StokDetaylari.StokInd AND StokDetaylari.IsAnaFiyat ='True'
		

	RETURN
END
GO
CREATE VIEW [dbo].[EskiVardiyaSayacHareketleri]
AS
SELECT    
	dbo.Hareketler.YeniEndeks 
	, dbo.Hareketler.EskiEndeks
	, dbo.Hareketler.Ind
	, dbo.Hareketler.Owner
	, dbo.Hareketler.TipInd
	, dbo.Hareketler.Tutar
	, dbo.Hareketler.Fiyat
	, dbo.Hareketler.GercekFiyat
	, (dbo.Hareketler.YeniEndeks - dbo.Hareketler.EskiEndeks) Miktar
	, dbo.Hareketler.Iskonto 
	, dbo.Hareketler.SayacInd
	,dbo.Hareketler.SayacAdi
	, dbo.Hareketler.SayacKodu
	, (dbo.Hareketler.YeniEndeks - dbo.Hareketler.EskiEndeks-dbo.Hareketler.Aktarma) AS Fark
	, dbo.Hareketler.VardiyaKartInd
	, b.Tarih
	, b.VardiyaNo
	, 'Vardiya kabul' as Aciklama
	, dbo.Hareketler.Aktarma
	, dbo.HesapDetaylari.DepoInd
	, dbo.Hesaplar.StokInd
,KdvOrani
FROM         dbo.Hareketler WITH(NOLOCK) LEFT OUTER JOIN
                      dbo.Basliklar AS b WITH(NOLOCK) ON dbo.Hareketler.VardiyaKartInd = b.Ind LEFT OUTER JOIN
                      dbo.HesapDetaylari WITH(NOLOCK) ON dbo.Hareketler.SayacInd = dbo.HesapDetaylari.Ind LEFT OUTER JOIN
                      dbo.Hesaplar WITH(NOLOCK) ON dbo.Hesaplar.Ind = dbo.HesapDetaylari.DepoInd
WHERE    (dbo.Hareketler.TipInd = 39) AND (b.TipInd = 108) AND dbo.Hareketler.YeniEndeks != dbo.Hareketler.EskiEndeks AND dbo.Hareketler.Tutar != 0
 
GO
CREATE VIEW [dbo].[GirisCikisHareketleriEnvanter]
AS
 --ALIMLAR
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Owner as EnvanterOwner,
		Hesaplar.Kapasite,
		3 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		(h.Miktar * h.Carpan) as Giren,
		0.00 as Cikan
		,
		(
			SELECT 								
				SUM
				(
					Case
						WHEN(Fiyat=0 or Miktar = 0) 
							THEN 
								0
						ELSE 
							Fiyat*(CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END)
					END					
				)
				/
				SUM
				(
					Case
						WHEN(Fiyat=0 or Miktar = 0) 
							Then 
								1
						else 
							(CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END)
					End
				) 
			FROM Hareketler WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=3
		) AS Fiyat
		,h.DepoInd 
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL(
		(
			SELECT 
				TOP 1 Iskonto
			FROM
				Hareketler WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd = 3
		),0) AS HareketlerIskonto,
        (
			SELECT 								
				(SUM
				(
					Case
						WHEN(Fiyat=0 or Miktar = 0) 
							THEN 
								0
						ELSE 
							Fiyat*(CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END)
					END					
				) - SUM(Iskonto))
				/
				SUM
				(
					Case
						WHEN(Fiyat=0 or Miktar = 0) 
							Then 
								1
						else 
							(CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END)
					End
				) 
			FROM Hareketler WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=3
		) *(ISNULL(b.Iskonto/(select top 1 (CASE SUM(h.Tutar) - SUM(Iskonto) WHEN 0 THEN 1 ELSE SUM(h.Tutar) - SUM(Iskonto) END) from Hareketler h where BaslikInd=b.Ind group by h.BaslikInd),0))  AS HareketBaslikIskonto
		,h.Ind
		,0 AS KullaniciInd 
		,h.NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
		, 0 AS Tutar
		, b.FaturaIadeMi
	FROM
		Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind  = h.BaslikInd
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd 
	WHERE 
		b.Aktif != 0	
		AND h.TipInd = 29 AND (b.DurumInd != 11 or b.DurumInd IS NULL)	
		AND b.TipInd = 101
	UNION ALL
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Owner as EnvanterOwner,
		Hesaplar.Kapasite,
		2 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		(h.Miktar * h.Carpan) as Giren,
		0.00 as Cikan,
		(
			SELECT SUM((Fiyat/(1+KDVOrani/100))*Miktar)/SUM(Miktar) FROM Hareketler WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=2
		) AS Fiyat
		,h.DepoInd 
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL((h.Iskonto), 0.00) as HareketIskonto,
                0.00	AS HareketBaslikIskonto
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
		, 0 AS Tutar
		, b.FaturaIadeMi
	FROM 
		Hareketler as h
		LEFT JOIN Basliklar as b ON h.BaslikInd = b.Ind --AND b.TipInd = 103
		LEFT JOIN Hesaplar ON Hesaplar.Ind = h.DepoInd 
	WHERE 
		h.TipInd = 29 AND (b.DurumInd != 11 or b.DurumInd IS NULL)
		AND b.TipInd = 103
	UNION ALL
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Owner as EnvanterOwner,
		Hesaplar.Kapasite,
		29 AS TipIndAltHareket,
		b.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		(h.Miktar * h.Carpan) as Giren,
		0.00 as Cikan,
		ISNULL(h.Fiyat, 0) as Fiyat,--0.00 AS Fiyat,
		h.DepoInd
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL((h.Iskonto), 0.00) as HareketIskonto,
                0.00	AS HareketBaslikIskonto
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
		, 0 AS Tutar
		, b.FaturaIadeMi
	FROM
		Hareketler as h
		LEFT JOIN Basliklar as b ON h.BaslikInd = b.Ind --AND b.TipInd = 503
		LEFT JOIN Hesaplar ON Hesaplar.Ind = h.DepoInd
	WHERE
		h.TipInd = 29 
		AND b.TipInd = 503
	-- SATISLAR
	UNION ALL
	SELECT
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		h.Owner as Owner,
		Hesaplar.Owner as EnvanterOwner,
		Hesaplar.Kapasite,
		6 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		(
			SELECT SUM(Fiyat* Miktar )/SUM(Miktar) FROM Hareketler WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=6
		) AS Fiyat
		,h.DepoInd 
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL(
		(
			SELECT 
				TOP 1 Iskonto
			FROM
				Hareketler WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd = 6
		),0) AS HareketlerIskonto,
        (
			SELECT 								
				(SUM
				(
					Case
						WHEN(Fiyat=0 or Miktar = 0) 
							THEN 
								0
						ELSE 
							Fiyat*(CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END)
					END					
				) - SUM(Iskonto))
				/
				SUM
				(
					Case
						WHEN(Fiyat=0 or Miktar = 0) 
							Then 
								1
						else 
							(CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END)
					End
				) 
			FROM Hareketler WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=6
		)  * (ISNULL(b.Iskonto/(select top 1 (CASE SUM(h.Tutar) - SUM(Iskonto) WHEN 0 THEN 1 ELSE SUM(h.Tutar) - SUM(Iskonto) END) from Hareketler h where BaslikInd=b.Ind group by h.BaslikInd),0))  AS HareketBaslikIskonto
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
		, 0 AS Tutar
		, b.FaturaIadeMi
	FROM
		Hareketler as h
		LEFT JOIN Basliklar as b ON b.Ind = h.BaslikInd 
		LEFT JOIN Hesaplar ON Hesaplar.Ind = h.DepoInd 
	WHERE 
		b.TipInd = 102
		AND b.Aktif != 0
		AND h.TipInd = 30
		AND (b.DurumInd IS NULL OR b.DurumInd != 11)
	UNION ALL 
	SELECT
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Owner as EnvanterOwner,
		Hesaplar.Kapasite,
		5 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		(
			SELECT SUM((Fiyat/(1+KDVOrani/100))*Miktar)/SUM(Miktar) FROM Hareketler WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=5
		) AS Fiyat
		,h.DepoInd 
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL((h.Iskonto), 0.00) as HareketIskonto,
        0.00 AS HareketBaslikIskonto
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
		, 0 AS Tutar
		, b.FaturaIadeMi
	FROM
		Hareketler as h
		LEFT JOIN Basliklar as b ON h.BaslikInd = b.Ind		
		LEFT JOIN Hesaplar ON Hesaplar.Ind = h.DepoInd 
	WHERE 
		h.TipInd = 30 AND (b.DurumInd != 11 or b.DurumInd IS NULL)
		AND b.TipInd = 104
		AND (b.DurumInd IS NULL OR b.DurumInd != 11)
	UNION ALL
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Owner as EnvanterOwner,
		Hesaplar.Kapasite,
		30 AS TipIndAltHareket,
		b.TipInd as TipInd,		
		h.Miktar,		
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		ISNULL(h.Fiyat, 0) as Fiyat,
		h.DepoInd 
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL((h.Iskonto), 0.00) as HareketIskonto,
                0.00	AS HareketBaslikIskonto
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		, NULL as KasiyerKodu
		, 0 AS Tutar
		, b.FaturaIadeMi
	FROM 
		Hareketler as h
		LEFT JOIN Basliklar as b ON h.BaslikInd = b.Ind 
		LEFT JOIN Hesaplar ON Hesaplar.Ind = h.DepoInd
	WHERE
		h.TipInd = 30 
		AND b.TipInd = 503
	-- DIGERLERI
	UNION ALL
	
    
	SELECT 
		0 as BaslikInd,
		h.StokInd as StokInd,
		Hareketler.GirisTarihi as Tarih,
		NULL as DurumInd,
		NULL as Belge,
		h.Aciklama as Aciklama,
		NULL as FaturaInd,
		NULL as HesapInd,
		30 as TipIndBaslik,
		h.Owner as Owner,
		h.Owner as EnvanterOwner,
		0 as Kapasite,
		30 AS TipIndAltHareket,
		30 as TipInd,
		
		h.Miktar,
		
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		ISNULL(h.Fiyat, 0) as Fiyat,
		h.DepoInd 
		,0.00 Kalan,
		0 as BaslikIskonto,
		0 as HareketIskonto,
                0.00	AS HareketBaslikIskonto
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		, NULL as KasiyerKodu
		, 0 AS Tutar
		, NULL AS FaturaIadeMi
	FROM 
		Hareketler as h
		LEFT JOIN Hareketler ON Hareketler.Ind = h.PerakendeInd
		LEFT JOIN SatisKasasi as sk ON sk.IslemInd = h.PerakendeInd
	WHERE
		h.TipInd = 30 AND h.BaslikInd = 0 AND sk.IsYeniSatis = 0 AND h.Aciklama IS NOT NULL AND h.Aciklama = 'Pos Satış Bundle İçerik Ürün'
	-- DIGERLERI
	UNION ALL

	SELECT 
		0 as BaslikInd,
		h.StokInd as StokInd,
		Hareketler.GirisTarihi as Tarih,
		NULL as DurumInd,
		NULL as Belge,
		h.Aciklama as Aciklama,
		NULL as FaturaInd,
		NULL as HesapInd,
		29 as TipIndBaslik,
		h.Owner as Owner,
		h.Owner as EnvanterOwner,
		0 as Kapasite,
		29 AS TipIndAltHareket,
		29 as TipInd,
		
		h.Miktar,
		
		h.Carpan,
		(h.Miktar * h.Carpan) as Giren,
		0.00 as Cikan,
		ISNULL(h.Fiyat, 0) as Fiyat,
		h.DepoInd 
		,0.00 Kalan,
		0 as BaslikIskonto,
		0 as HareketIskonto,
                0.00	AS HareketBaslikIskonto
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		, NULL as KasiyerKodu
		, 0 AS Tutar
		, NULL AS FaturaIadeMi
	FROM  
		Hareketler as h
		LEFT JOIN Hareketler ON Hareketler.Ind = h.PerakendeInd
		LEFT JOIN SatisKasasi as sk ON sk.IslemInd = h.PerakendeInd
	WHERE
		h.TipInd = 29 AND h.BaslikInd = 0 AND sk.IsYeniSatis = 0 AND h.Aciklama IS NOT NULL AND h.Aciklama = 'Pos Satış Bundle Ana Ürün Giriş'
	-- DIGERLERI
	UNION ALL
	
	
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		h.Owner as Owner,
		h.Owner as EnvanterOwner,
		0.00 as Kapasite,
		112 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		1 as Carpan,
		ISNULL((SELECT TOP 1 ABS(h.SayimMiktari-h.Miktar) FROM Hareketler WHERE BaslikInd=h.BaslikInd AND TipInd=29 AND StokInd=h.StokInd),0) AS Giren,
		ISNULL((SELECT TOP 1  ABS(h.Miktar-h.SayimMiktari) FROM Hareketler WHERE BaslikInd=h.BaslikInd AND TipInd=30 AND StokInd=h.StokInd),0) AS Cikan,
		CASE WHEN h.AlisFiyati IS NULL THEN h.SatisFiyati ELSE h.AlisFiyati  END AS Fiyat,
		h.DepoInd 
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL((h.Iskonto), 0.00) as HareketIskonto,
                0.00	AS HareketBaslikIskonto
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		, NULL as KasiyerKodu
		, 0 AS Tutar
		, b.FaturaIadeMi
	FROM
		Hareketler as h
		LEFT JOIN Basliklar as b ON h.BaslikInd = b.Ind AND b.TipInd = 113
	WHERE
		h.TipInd = 112 
		AND b.TipInd = 113
	UNION ALL
	SELECT 
		h.VardiyaNo as BaslikInd,
		h.StokInd as StokInd,
		h.Tarih as Tarih,
		NULL as DurumInd,
		CAST(VardiyaNo AS  NVARCHAR)+'.Vardiya' as Belge,
		'Vardiya hesap kabul' as Aciklama,
		0 as FaturaInd,
		NULL as HesapInd,
		39 as TipIndBaslik,
		h.Owner as Owner,
		h.Owner as EnvanterOwner,
		0.00 as Kapasite,
		39 AS TipIndAltHareket,
		h.TipInd as TipInd,
		(h.Fark) as Miktar,
		1 as Carpan,
		0.00 as Giren,
		(h.Fark) as Cikan,
		(h.Tutar/h.Fark)* (100/(100+h.KdvOrani)) As Fiyat,
		h.DepoInd,
		0.00 Kalan,
		0.00 as BaslikIskonto,
		0.00 as HareketIskonto,
        0.00 as HareketBaslikIskonto
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		,NULL AS KasiyerKodu
		,Tutar
		,NULL AS FaturaIadeMi
	FROM
		EskiVardiyaSayacHareketleri as h
	WHERE
		h.TipInd = 39 AND h.Fark != 0 AND h.Miktar != 0
	UNION ALL
	SELECT
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		h.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		h.Owner as Owner,
		h.Owner as EnvanterOwner,
		0.00 as Kapasite,
		40 AS TipIndAltHareket,
		h.TipInd as TipInd,		
		h.Miktar,
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		h.Fiyat * (100/(100+h.KdvOrani)) as Fiyat,
		Hareketler.DepoInd
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL((h.Iskonto), 0.00) as HareketIskonto,
                0.00	AS HareketBaslikIskonto
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		, NULL AS KasiyerKodu
		, 0 AS Tutar
		, b.FaturaIadeMi
	FROM
		Hareketler as h
		LEFT JOIN Hareketler ON Hareketler.PerakendeInd = h.Ind
		LEFT JOIN Basliklar as b ON b.Ind = h.VardiyaKartInd AND b.TipInd = 108
	WHERE h.TipInd = 40
	UNION ALL
	SELECT
		NULL as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		NULL as DurumInd,
		NULL as Belge,
		h.Aciklama as Aciklama,
		0 as FaturaInd,
		NULL as HesapInd,
		504 as TipIndBaslik,
		h.Owner as Owner,
		h.Owner as EnvanterOwner,
		0.00 as Kapasite,
		504 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		h.Fiyat * (100/(100+h.KdvOrani)) as Fiyat,		
		Hareketler.DepoInd
		,0.00 Kalan,
		0.00 as BaslikIskonto,
		0.00 as HareketIskonto,
        0.00 AS HareketBaslikIskonto
		,h.Ind
		,sk.KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi,
		h.KasiyerKodu AS KasiyerKodu
		, 0 AS Tutar
		, b.FaturaIadeMi
	FROM 
		SatisKasasi as sk
		LEFT JOIN Hareketler h ON h.Ind=sk.IslemInd 
		LEFT JOIN Hareketler ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
		LEFT JOIN Basliklar b ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0 AND b.TipInd = 505









GO



GO
CREATE VIEW [dbo].[SatisRaporDokumuView]
AS
SELECT    
		g.EnvanterOwner as Owner, 
		g.Tarih,
		g.DepoInd, 
		g.StokInd, 
		s.GrupInd, 
		s.StokKodu, 
		s.StokAdi, 
		g.HesapInd,
		g.BaslikInd,
		g.Fiyat AS SatisFiyati,	
		k.KdvOrani AS KDVOrani,
		SUM(g.Miktar * ISNULL(g.Carpan,1)) AS Miktar, 
		SUM(g.Miktar * g.Carpan * g.Fiyat) AS Tutar,
		g.TipIndAltHareket,
		g.Ind AS Ind,
		g.KasiyerKodu,
		CAST(CASE WHEN g.FaturaIadeMi IS NULL THEN 0 ELSE g.FaturaIadeMi END AS bit) AS FaturaIadeMi,
		SUM(ISNULL(HareketlerIskonto,0)) AS HareketlerIskonto,
		SUM(ISNULL(HareketBaslikIskonto,0) * g.Miktar) AS HareketBaslikIskonto
	FROM
		GirisCikisHareketleriEnvanter AS g  WITH(NOLOCK)
		LEFT JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = g.StokInd 
		LEFT JOIN dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.SatisKDVGrupInd
	WHERE
		g.TipIndAltHareket IN (5,6,39,40,504) AND g.Miktar > 0
	GROUP BY
		g.EnvanterOwner, 
		g.Tarih,
		g.DepoInd, 
		g.StokInd,
		s.GrupInd, 
		s.StokKodu, 
		s.StokAdi, 
		g.HesapInd,
		g.BaslikInd,
		g.Ind,
		g.TipIndAltHareket,
		g.Fiyat,
		k.KdvOrani,
		g.KasiyerKodu,
		g.FaturaIadeMi





GO



GO
CREATE VIEW [dbo].[AlisRaporDokumuView]
AS
	SELECT 
		GCH.EnvanterOwner as Owner,
		GCH.Tarih,
		GCH.DepoInd,
		GCH.StokInd,
		S.GrupInd,
		S.StokKodu,
		S.StokAdi,
		GCH.HesapInd,
		GCH.BaslikInd,
		GCH.TipIndAltHareket,
		KDV.KDVOrani,
		CAST(CASE WHEN GCH.FaturaIadeMi IS NULL THEN 0 ELSE GCH.FaturaIadeMi END AS bit) AS FaturaIadeMi,
		CASE GCH.TipIndAltHareket
			WHEN 112 THEN SUM(GCH.Giren)
			ELSE SUM(GCH.Miktar * ISNULL(GCH.Carpan, 1))
		END AS Miktar,
		CASE GCH.TipIndAltHareket
			WHEN 3 THEN SUM( ( CASE WHEN GCH.NetMiktar=0 THEN GCH.Miktar ELSE ISNULL(GCH.NetMiktar, GCH.Miktar) END ) * GCH.Carpan * GCH.Fiyat) 
			WHEN 2 THEN SUM(GCH.Miktar * GCH.Carpan * GCH.Fiyat)
			WHEN 112 THEN SUM(GCH.Giren * GCH.Fiyat)
			END as Tutar, --KDV hariç 
		SUM(ISNULL(HareketlerIskonto,0)) as HareketlerIskonto,
		SUM(ISNULL(HareketBaslikIskonto,0) * GCH.Miktar) as HareketBaslikIskonto
	FROM
		GirisCikisHareketleriEnvanter GCH WITH(NOLOCK)
		LEFT JOIN Stoklar S WITH(NOLOCK) ON S.Ind = GCH.StokInd
		LEFT JOIN KDVGruplari KDV WITH(NOLOCK) ON KDV.Ind = S.AlisKDVGrupInd
	WHERE
		GCH.TipIndAltHareket IN (2,3,112) AND GCH.Giren > 0
	GROUP BY
		GCH.EnvanterOwner,
		GCH.Tarih,
		GCH.DepoInd,
		GCH.StokInd,
		S.GrupInd,
		S.StokKodu,
		S.StokAdi,
		GCH.HesapInd,
		GCH.BaslikInd,
		GCH.TipIndAltHareket,
		GCH.Fiyat,
		KDV.KDVOrani,
		GCH.FaturaIadeMi

 
GO
CREATE VIEW [dbo].[GirisCikisHareketleri]
AS
 /*ALIMLAR*/ SELECT b.Ind AS BaslikInd, h.StokInd AS StokInd, b.Tarih AS Tarih, b.DurumInd, b.BelgeNo AS Belge, b.Aciklama AS Aciklama, b.FaturaInd, b.HesapInd, b.TipInd AS TipIndBaslik, Hesaplar.Owner AS Owner, 
                         Hesaplar.Owner AS EnvanterOwner, Hesaplar.Kapasite, 3 AS TipIndAltHareket, h.TipInd AS TipInd, h.Miktar, h.Carpan, (h.Miktar * h.Carpan) AS Giren, 0.00 AS Cikan,
                             (SELECT        SUM(CASE WHEN (Fiyat = 0 OR
                                                         Miktar = 0) THEN 0 ELSE Fiyat * (CASE WHEN NetMiktar = 0 THEN Miktar ELSE ISNULL(NetMiktar, Miktar) END) END) / SUM(CASE WHEN (Fiyat = 0 OR
                                                         Miktar = 0) THEN 1 ELSE (CASE WHEN NetMiktar = 0 THEN Miktar ELSE ISNULL(NetMiktar, Miktar) END) END)
                               FROM            Hareketler
                               WHERE        BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd = 3) AS Fiyat, h.DepoInd, 0.00 Kalan, ISNULL((b.Iskonto), 0.00) AS BaslikIskonto, ISNULL
                             ((SELECT        TOP 1 Iskonto
                                 FROM            Hareketler WITH (NOLOCK)
                                 WHERE        BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd = 3), 0) AS HareketlerIskonto,
                             (SELECT        (SUM(CASE WHEN (Fiyat = 0 OR
                                                         Miktar = 0) THEN 0 ELSE Fiyat * (CASE WHEN NetMiktar = 0 THEN Miktar ELSE ISNULL(NetMiktar, Miktar) END) END) - SUM(Iskonto)) / SUM(CASE WHEN (Fiyat = 0 OR
                                                         Miktar = 0) THEN 1 ELSE (CASE WHEN NetMiktar = 0 THEN Miktar ELSE ISNULL(NetMiktar, Miktar) END) END/*10*/ )
                               FROM            Hareketler WITH (NOLOCK)
                               WHERE        BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd = 3) * (ISNULL(b.Iskonto /
                             (SELECT        TOP 1 (CASE SUM(h.Tutar) - SUM(Iskonto) WHEN 0 THEN 1 ELSE SUM(h.Tutar) - SUM(Iskonto) END)
                               FROM            Hareketler h WITH (NOLOCK)
                               WHERE        BaslikInd = b.Ind
                               GROUP BY h.BaslikInd), 0)) AS HareketBaslikIskonto, h.Ind, 0 AS KullaniciInd, h.NetMiktar, b.HesapAdi AS HesapAdi, NULL AS KasiyerKodu, 0 AS Tutar, b.FaturaIadeMi
FROM            Hareketler AS h WITH (NOLOCK) LEFT JOIN
                         Basliklar AS b WITH (NOLOCK) ON b.Ind = h.BaslikInd LEFT JOIN
                         Hesaplar WITH (NOLOCK) ON Hesaplar.Ind = h.DepoInd
WHERE        b.Aktif != 0 AND h.TipInd = 29 AND (b.DurumInd != 11 OR
                         b.DurumInd IS NULL) AND b.TipInd = 101
UNION ALL
SELECT        b.Ind AS BaslikInd, h.StokInd AS StokInd, b.Tarih AS Tarih, b.DurumInd, b.BelgeNo AS Belge, b.Aciklama AS Aciklama, b.FaturaInd, b.HesapInd, b.TipInd AS TipIndBaslik, Hesaplar.Owner AS Owner, 
                         Hesaplar.Owner AS EnvanterOwner, Hesaplar.Kapasite, 2 AS TipIndAltHareket, h.TipInd AS TipInd, h.Miktar, h.Carpan, (h.Miktar * h.Carpan) AS Giren, 0.00 AS Cikan,
                             (SELECT        SUM(Fiyat * Miktar) / SUM(Miktar)
                               FROM            Hareketler
                               WHERE        BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd = 2) AS Fiyat, h.DepoInd, 0.00 Kalan, ISNULL((b.Iskonto), 0.00) AS BaslikIskonto, ISNULL((h.Iskonto), 0.00) AS HareketIskonto, 
                         0.00 AS HareketBaslikIskonto, h.Ind, 0 AS KullaniciInd, NULL NetMiktar, b.HesapAdi AS HesapAdi, NULL AS KasiyerKodu, 0 AS Tutar, b.FaturaIadeMi
FROM            Hareketler AS h WITH (NOLOCK) LEFT JOIN
                         Basliklar AS b WITH (NOLOCK) ON h.BaslikInd = b.Ind /*AND b.TipInd = 103*/ LEFT JOIN
                         Hesaplar WITH (NOLOCK) ON Hesaplar.Ind = h.DepoInd
WHERE        h.TipInd = 29 AND (b.DurumInd != 11 OR
                         b.DurumInd IS NULL) AND b.TipInd = 103
UNION ALL
SELECT        b.Ind AS BaslikInd, h.StokInd AS StokInd, b.Tarih AS Tarih, b.DurumInd, b.BelgeNo AS Belge, b.Aciklama AS Aciklama, b.FaturaInd, b.HesapInd, b.TipInd AS TipIndBaslik, Hesaplar.Owner AS Owner, 
                         Hesaplar.Owner AS EnvanterOwner, Hesaplar.Kapasite, 29 AS TipIndAltHareket, b.TipInd AS TipInd, h.Miktar, h.Carpan, (h.Miktar * h.Carpan) AS Giren, 0.00 AS Cikan, ISNULL(h.Fiyat, 0) AS Fiyat, /*0.00 AS Fiyat,*/ h.DepoInd, 
                         0.00 Kalan, ISNULL((b.Iskonto), 0.00) AS BaslikIskonto, ISNULL((h.Iskonto), 0.00) AS HareketIskonto, 0.00 AS HareketBaslikIskonto, h.Ind, 0 AS KullaniciInd, NULL NetMiktar, b.HesapAdi AS HesapAdi, NULL AS KasiyerKodu, 
                         0 AS Tutar, b.FaturaIadeMi
FROM            Hareketler AS h WITH (NOLOCK) LEFT JOIN
                         Basliklar AS b WITH (NOLOCK) ON h.BaslikInd = b.Ind /*AND b.TipInd = 503*/ LEFT JOIN
                         Hesaplar WITH (NOLOCK) ON Hesaplar.Ind = h.DepoInd
WHERE        h.TipInd = 29 AND b.TipInd = 503
/* SATISLAR*/ UNION ALL
SELECT        b.Ind AS BaslikInd, h.StokInd AS StokInd, b.Tarih AS Tarih, b.DurumInd, b.BelgeNo AS Belge, b.Aciklama AS Aciklama, b.FaturaInd, b.HesapInd, b.TipInd AS TipIndBaslik, h.Owner AS Owner, 
                         /*11112011 den once OWNER "Hesaplar"dan aliniyordu... Devirde, bir subede kayitli olan stok hareketini butun subeler icin giriyordu... */ Hesaplar.Owner AS EnvanterOwner, Hesaplar.Kapasite, 6 AS TipIndAltHareket, 
                         h.TipInd AS TipInd, h.Miktar, h.Carpan, 0.00 AS Giren, (h.Miktar * h.Carpan) AS Cikan,
                             (SELECT        SUM(Fiyat * (1 + (KDVOrani / 100)) * Miktar) / SUM(Miktar)
                               FROM            Hareketler
                               WHERE        BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd = 6) AS Fiyat, h.DepoInd, 0.00 Kalan, ISNULL((b.Iskonto), 0.00) AS BaslikIskonto, ISNULL((h.Iskonto), 0.00) AS HareketIskonto, 
                         0.00 AS HareketBaslikIskonto, h.Ind, 0 AS KullaniciInd, NULL NetMiktar, b.HesapAdi AS HesapAdi, NULL AS KasiyerKodu, 0 AS Tutar, b.FaturaIadeMi
FROM            Hareketler AS h LEFT JOIN
                         Basliklar AS b ON b.Ind = h.BaslikInd LEFT JOIN
                         Hesaplar ON Hesaplar.Ind = h.DepoInd
WHERE        b.TipInd = 102 AND b.Aktif != 0 AND h.TipInd = 30 AND (b.DurumInd IS NULL OR
                         b.DurumInd != 11)
UNION ALL
SELECT        b.Ind AS BaslikInd, h.StokInd AS StokInd, b.Tarih AS Tarih, b.DurumInd, b.BelgeNo AS Belge, b.Aciklama AS Aciklama, b.FaturaInd, b.HesapInd, b.TipInd AS TipIndBaslik, Hesaplar.Owner AS Owner, 
                         Hesaplar.Owner AS EnvanterOwner, Hesaplar.Kapasite, 5 AS TipIndAltHareket, h.TipInd AS TipInd, h.Miktar, h.Carpan, 0.00 AS Giren, (h.Miktar * h.Carpan) AS Cikan,
                             (SELECT        SUM(Fiyat * Miktar) / SUM(Miktar)
                               FROM            Hareketler
                               WHERE        BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd = 5) AS Fiyat, h.DepoInd, 0.00 Kalan, ISNULL((b.Iskonto), 0.00) AS BaslikIskonto, ISNULL((h.Iskonto), 0.00) AS HareketIskonto, 
                         0.00 AS HareketBaslikIskonto, h.Ind, 0 AS KullaniciInd, NULL NetMiktar, b.HesapAdi AS HesapAdi, NULL AS KasiyerKodu, 0 AS Tutar, b.FaturaIadeMi
FROM            Hareketler AS h LEFT JOIN
                         Basliklar AS b ON h.BaslikInd = b.Ind /*AND b.TipInd = 104		*/ LEFT JOIN
                         Hesaplar ON Hesaplar.Ind = h.DepoInd
WHERE        h.TipInd = 30 AND (b.DurumInd != 11 OR
                         b.DurumInd IS NULL) AND b.TipInd = 104 AND (b.DurumInd IS NULL OR
                         b.DurumInd != 11)
UNION ALL
SELECT        b.Ind AS BaslikInd, h.StokInd AS StokInd, b.Tarih AS Tarih, b.DurumInd, b.BelgeNo AS Belge, b.Aciklama AS Aciklama, b.FaturaInd, b.HesapInd, b.TipInd AS TipIndBaslik, Hesaplar.Owner AS Owner, 
                         Hesaplar.Owner AS EnvanterOwner, Hesaplar.Kapasite, 30 AS TipIndAltHareket, b.TipInd AS TipInd, h.Miktar, h.Carpan, 0.00 AS Giren, (h.Miktar * h.Carpan) AS Cikan, ISNULL(h.Fiyat, 0) AS Fiyat, h.DepoInd, 0.00 Kalan, 
                         ISNULL((b.Iskonto), 0.00) AS BaslikIskonto, ISNULL((h.Iskonto), 0.00) AS HareketIskonto, 0.00 AS HareketBaslikIskonto, h.Ind, 0 AS KullaniciInd, NULL NetMiktar, NULL AS HesapAdi, NULL AS KasiyerKodu, 0 AS Tutar, 
                         b.FaturaIadeMi
FROM            Hareketler AS h LEFT JOIN
                         Basliklar AS b ON h.BaslikInd = b.Ind /*AND b.TipInd = 503*/ LEFT JOIN
                         Hesaplar ON Hesaplar.Ind = h.DepoInd
WHERE        h.TipInd = 30 AND b.TipInd = 503
/* DIGERLERI*/ UNION ALL
SELECT        0 AS BaslikInd, h.StokInd AS StokInd, Hareketler.GirisTarihi AS Tarih, NULL AS DurumInd, NULL AS Belge, h.Aciklama AS Aciklama, NULL AS FaturaInd, NULL AS HesapInd, 30 AS TipIndBaslik, h.Owner AS Owner, 
                         h.Owner AS EnvanterOwner, 0 AS Kapasite, 30 AS TipIndAltHareket, 30 AS TipInd, h.Miktar, h.Carpan, 0.00 AS Giren, (h.Miktar * h.Carpan) AS Cikan, ISNULL(h.Fiyat, 0) AS Fiyat, h.DepoInd, 0.00 Kalan, 0 AS BaslikIskonto, 
                         0 AS HareketIskonto, 0.00 AS HareketBaslikIskonto, h.Ind, 0 AS KullaniciInd, NULL NetMiktar, NULL AS HesapAdi, NULL AS KasiyerKodu, 0 AS Tutar, NULL AS FaturaIadeMi
FROM            Hareketler AS h LEFT JOIN
                         Hareketler ON Hareketler.Ind = h.PerakendeInd LEFT JOIN
                         SatisKasasi AS sk ON sk.IslemInd = h.PerakendeInd
WHERE        h.TipInd = 30 AND h.BaslikInd = 0 AND sk.IsYeniSatis = 0 AND h.Aciklama IS NOT NULL AND h.Aciklama = 'Pos Satış Bundle İçerik Ürün'
/* DIGERLERI*/ UNION ALL
SELECT        0 AS BaslikInd, h.StokInd AS StokInd, Hareketler.GirisTarihi AS Tarih, NULL AS DurumInd, NULL AS Belge, h.Aciklama AS Aciklama, NULL AS FaturaInd, NULL AS HesapInd, 29 AS TipIndBaslik, h.Owner AS Owner, 
                         h.Owner AS EnvanterOwner, 0 AS Kapasite, 29 AS TipIndAltHareket, 29 AS TipInd, h.Miktar, h.Carpan, (h.Miktar * h.Carpan) AS Giren, 0.00 AS Cikan, ISNULL(h.Fiyat, 0) AS Fiyat, h.DepoInd, 0.00 Kalan, 0 AS BaslikIskonto, 
                         0 AS HareketIskonto, 0.00 AS HareketBaslikIskonto, h.Ind, 0 AS KullaniciInd, NULL NetMiktar, NULL AS HesapAdi, NULL AS KasiyerKodu, 0 AS Tutar, NULL AS FaturaIadeMi
FROM            Hareketler AS h LEFT JOIN
                         Hareketler ON Hareketler.Ind = h.PerakendeInd LEFT JOIN
                         SatisKasasi AS sk ON sk.IslemInd = h.PerakendeInd
WHERE        h.TipInd = 29 AND h.BaslikInd = 0 AND sk.IsYeniSatis = 0 AND h.Aciklama IS NOT NULL AND h.Aciklama = 'Pos Satış Bundle Ana Ürün Giriş'
/* DIGERLERI*/ UNION ALL
SELECT        b.Ind AS BaslikInd, h.StokInd AS StokInd, b.Tarih AS Tarih, b.DurumInd, b.BelgeNo AS Belge, b.Aciklama AS Aciklama, b.FaturaInd, b.HesapInd, b.TipInd AS TipIndBaslik, h.Owner AS Owner, h.Owner AS EnvanterOwner, 
                         0.00 AS Kapasite, 112 AS TipIndAltHareket, h.TipInd AS TipInd, h.Miktar, 1 AS Carpan, 
                         /*S(ELECT TOP 1  ABS(h.Miktar-h.SayimMiktari) FROM Hareketler WHERE BaslikInd=h.BaslikInd AND TipInd=30 AND StokInd=h.StokInd) AS Cikan,*/ ISNULL
                             ((SELECT        TOP 1 ABS(h.SayimMiktari - h.Miktar)
                                 FROM            Hareketler
                                 WHERE        BaslikInd = h.BaslikInd AND TipInd = 29 AND StokInd = h.StokInd), 0) AS Giren, ISNULL
                             ((SELECT        TOP 1 ABS(h.Miktar - h.SayimMiktari)
                                 FROM            Hareketler
                                 WHERE        BaslikInd = h.BaslikInd AND TipInd = 30 AND StokInd = h.StokInd), 0) AS Cikan, CASE WHEN h.AlisFiyati IS NULL THEN h.SatisFiyati ELSE h.AlisFiyati END AS Fiyat, /*			END as Fiyat,*/ h.DepoInd, 0.00 Kalan, 
                         ISNULL((b.Iskonto), 0.00) AS BaslikIskonto, ISNULL((h.Iskonto), 0.00) AS HareketIskonto, 0.00 AS HareketBaslikIskonto, h.Ind, 0 AS KullaniciInd, NULL NetMiktar, NULL AS HesapAdi, NULL AS KasiyerKodu, 0 AS Tutar, 
                         b.FaturaIadeMi
FROM            Hareketler AS h LEFT JOIN
                         Basliklar AS b ON h.BaslikInd = b.Ind AND b.TipInd = 113
WHERE        h.TipInd = 112 AND b.TipInd = 113
/*	b.TipInd = 503 AND h.TipInd = 29*/ UNION ALL
SELECT        h.VardiyaNo AS BaslikInd, h.StokInd AS StokInd, h.Tarih AS Tarih, NULL AS DurumInd, CAST(VardiyaNo AS NVARCHAR) + '.Vardiya' AS Belge, 'Vardiya hesap kabul' AS Aciklama, 0 AS FaturaInd, NULL AS HesapInd, 
                         39 AS TipIndBaslik, h.Owner AS Owner, h.Owner AS EnvanterOwner, 0.00 AS Kapasite, 39 AS TipIndAltHareket, h.TipInd AS TipInd, (h.Fark) AS Miktar, 1 AS Carpan, 0.00 AS Giren, (h.Fark) AS Cikan, 
                         /* h.Tutar / h.Fark AS Fiyat,*/ h.fiyat, h.DepoInd, 0.00 Kalan, 0.00 AS BaslikIskonto, 0.00 AS HareketIskonto, 0.00 AS HareketBaslikIskonto, h.Ind, 0 AS KullaniciInd, NULL NetMiktar, NULL AS HesapAdi, NULL 
                         AS KasiyerKodu/*Miktar*Fiyat AS Tutar--SATIŞ Rapor dökümünde miktar*fiyat geliyordu, buralarda direkt tutarın gelmesiyle Vardiya Raporunda tutarlılık sağlandı*/ , /*h.tutar,*/ h.Miktar * h.Fiyat AS Tutar, NULL 
                         AS FaturaIadeMi
FROM            EskiVardiyaSayacHareketleri AS h
WHERE        h.TipInd = 39 AND h.Fark != 0 AND h.Miktar != 0
/*Miktarın 0 olmaması şartı olmazsa stok hareket dökümünde 0.00 lı kayıt geliyor*/ UNION ALL
SELECT        b.Ind AS BaslikInd, h.StokInd AS StokInd, b.Tarih AS Tarih, b.DurumInd, b.BelgeNo AS Belge, h.Aciklama AS Aciklama, b.FaturaInd, b.HesapInd, b.TipInd AS TipIndBaslik, h.Owner AS Owner, h.Owner AS EnvanterOwner, 
                         0.00 AS Kapasite, 40 AS TipIndAltHareket, h.TipInd AS TipInd, h.Miktar, h.Carpan, 0.00 AS Giren, (h.Miktar * h.Carpan) AS Cikan, h.Fiyat AS Fiyat, Hareketler.DepoInd, 0.00 Kalan, ISNULL((b.Iskonto), 0.00) AS BaslikIskonto, 
                         ISNULL((h.Iskonto), 0.00) AS HareketIskonto, 0.00 AS HareketBaslikIskonto, h.Ind, 0 AS KullaniciInd, NULL NetMiktar, NULL AS HesapAdi, NULL AS KasiyerKodu, 0 AS Tutar, b.FaturaIadeMi
FROM            Hareketler AS h LEFT JOIN
                         Hareketler ON Hareketler.PerakendeInd = h.Ind LEFT JOIN
                         Basliklar AS b ON b.Ind = h.VardiyaKartInd AND b.TipInd = 108
WHERE        h.TipInd = 40
UNION ALL
SELECT        NULL AS BaslikInd, h.StokInd AS StokInd, /*sk.Tarih as Tarih,*/ b.Tarih AS Tarih, NULL AS DurumInd, NULL AS Belge, h.Aciklama AS Aciklama, 0 AS FaturaInd, NULL AS HesapInd, 504 AS TipIndBaslik, h.Owner AS Owner, 
                         h.Owner AS EnvanterOwner, 0.00 AS Kapasite, 504 AS TipIndAltHareket, h.TipInd AS TipInd, h.Miktar, h.Carpan, 0.00 AS Giren, (h.Miktar * h.Carpan) AS Cikan, h.Fiyat AS Fiyat, Hareketler.DepoInd, 0.00 Kalan, 
                         0.00 AS BaslikIskonto, 0.00 AS HareketIskonto, 0.00 AS HareketBaslikIskonto, h.Ind, sk.KullaniciInd, NULL NetMiktar, NULL AS HesapAdi, h.KasiyerKodu AS KasiyerKodu, 0 AS Tutar, b.FaturaIadeMi
FROM            SatisKasasi AS sk LEFT JOIN
                         Hareketler h ON h.Ind = sk.IslemInd LEFT JOIN
                         Hareketler ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd = h.StokInd LEFT JOIN
                         Basliklar b ON b.Ind = sk.BaslikInd
WHERE        h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0 AND b.TipInd = 505

GO




GO
CREATE VIEW [dbo].[AlisRaporDokumu]
AS
SELECT
	g.Owner,
	g.Tarih,
	g.DepoInd, 
	g.StokInd, 
	s.GrupInd, 
	s.StokKodu, 
	s.StokAdi, 
	g.HesapInd,
	g.BaslikInd, 
	g.TipIndAltHareket,
	CASE g.TipIndAltHareket
		WHEN 2 THEN (ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WITH(NOLOCK) WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00))
		ELSE k.KDVOrani
		END AS KDVOrani,
	CASE g.TipIndAltHareket
		WHEN 112 THEN SUM(g.Giren)
		ELSE SUM(g.Miktar * ISNULL(g.Carpan,1))
		END AS Miktar, 
	CASE g.TipIndAltHareket
		WHEN 3 THEN SUM( ( CASE WHEN g.NetMiktar=0 THEN g.Miktar ELSE ISNULL(g.NetMiktar, g.Miktar) END ) * g.Carpan * g.Fiyat) 
		WHEN 2 THEN SUM( g.Miktar * g.Carpan * (g.Fiyat / (1 + (k.KdvOrani / 100))))
		WHEN 112 THEN SUM(g.Giren * g.Fiyat)
		END as Tutar
FROM
	GirisCikisHareketleri as g WITH(NOLOCK) 
	LEFT OUTER JOIN dbo.Stoklar AS s ON s.Ind = g.StokInd 
	LEFT JOIN dbo.KDVGruplari AS k ON k.Ind = s.AlisKDVGrupInd
WHERE
	g.TipIndAltHareket IN (2, 3 , 112) AND g.Giren > 0
GROUP BY
	g.Owner, 
	g.Tarih,
	g.DepoInd, 
	g.StokInd,
	s.GrupInd, 
	s.StokKodu, 
	s.StokAdi, 
	g.HesapInd,
	g.BaslikInd,
	g.TipIndAltHareket,
	g.Fiyat, 
	k.KdvOrani

GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AlisMaliyetFLifo]
AS
	SELECT
		*
	FROM
		(
			SELECT 
				* 
			FROM 
				AlisRaporDokumu
--			WHERE
--				TipIndAltHareket = 3
--			UNION ALL
--			SELECT
--				g.Owner,
--				g.Tarih,
--				g.DepoInd, 
--				g.StokInd, 
--				s.GrupInd, 
--				s.StokKodu, 
--				s.StokAdi, 
--				g.HesapInd,
--				g.BaslikInd, 
--				(ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00)) AS KDVOrani,
--				SUM(g.Miktar * ISNULL(g.Carpan,1)) AS Miktar, 
--				SUM(
--					g.Miktar 
--					* g.Carpan 
--					* (g.Fiyat / (1 + (k.KdvOrani / 100)))
--				) as Tutar,
--				g.TipIndAltHareket
--			FROM
--				GirisCikisHareketleri as g  
--				LEFT OUTER JOIN dbo.Stoklar AS s ON s.Ind = g.StokInd
--				LEFT JOIN dbo.KDVGruplari AS k ON k.Ind = s.AlisKDVGrupInd
--			WHERE
--				g.TipIndAltHareket = 2 AND g.DurumInd = 3
--			GROUP BY
--				g.Owner, 
--				g.Tarih,
--				g.DepoInd, 
--				g.StokInd,
--				s.GrupInd, 
--				s.StokKodu, 
--				s.StokAdi, 
--				g.HesapInd,
--				g.BaslikInd,
--				g.TipIndAltHareket,
--				g.Fiyat
--				, k.KdvOrani
			UNION ALL
			SELECT
				g.Owner,
				g.Tarih,
				g.DepoInd, 
				g.StokInd, 
				s.GrupInd, 
				s.StokKodu, 
				s.StokAdi, 
				g.HesapInd,
				g.BaslikInd, 
				k.KDVOrani AS KDVOrani,
				SUM(g.Giren 
				--* ISNULL(g.Carpan,1)
				) AS Miktar, 
				SUM(
					g.Giren 
					--* ISNULL(g.Carpan, 1) 
					* g.Fiyat
				) as Tutar,
				g.TipIndAltHareket
			FROM
				GirisCikisHareketleri as g  WITH(NOLOCK)
				LEFT OUTER JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = g.StokInd
				LEFT JOIN dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.AlisKDVGrupInd
			WHERE
				(g.TipIndAltHareket = 112 OR g.TipIndBaslik = 503) AND g.Giren > 0
				--g.TipIndAltHareket NOT IN (2,3)
			GROUP BY
				g.Owner, 
				g.Tarih,
				g.DepoInd, 
				g.StokInd,
				s.GrupInd, 
				s.StokKodu, 
				s.StokAdi, 
				g.HesapInd,
				g.BaslikInd,
				g.TipIndAltHareket,
				g.Fiyat
				, k.KdvOrani
		) AS g
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[ToplamtutarForBasliklar]
AS
	SELECT  
		SUM
		(
			(
				CASE WHEN SubH.NetMiktar=0 THEN 
				SubH.Miktar 
				ELSE ISNULL
					(
						SubH.NetMiktar
						,SubH.Miktar
					) 
				END
			)
			*
			SubH.Carpan
			*
			SubH.Fiyat
			-
			SubH.Iskonto
		) as ToplamTutar
		, SubH.BaslikInd
	FROM 
		Hareketler SubH WITH(NOLOCK)
	GROUP BY 
		SubH.BaslikInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[GirisCikisHareketleriIskontolu]
AS
	SELECT
			  g.*
			, ISNULL(
					(
						SELECT
							(
								(
									(
										(
											CASE WHEN g.NetMiktar=0 
											THEN g.Miktar 
											ELSE ISNULL(g.NetMiktar,g.Miktar) 
											END
										) 
										*
										g.Carpan
									) 
									* 
									100 
									/ 
									SUM(
										(
											CASE WHEN h.NetMiktar=0 
											THEN h.Miktar 
											ELSE ISNULL(h.NetMiktar,h.Miktar) 
											END
										) 
										*
										h.Carpan
									   )
								)
								/
								100
							)
							*
							SUM(h.Iskonto)
						FROM
							Hareketler as h
						WHERE
							h.BaslikInd=g.BaslikInd 
							AND h.TipInd=g.TipIndAltHareket 
							AND h.StokInd=g.StokInd
							AND (h.Miktar IS NOT NULL AND h.Miktar > 0)
					)
					, 0.00
				  )  AS HareketIskonto
			, ISNULL(
						( 
							SELECT  
								SUM(
									(
										CASE WHEN SubH.NetMiktar=0 
										THEN SubH.Miktar 
										ELSE ISNULL(SubH.NetMiktar,SubH.Miktar) 
										END
									) 
									*
									SubH.Carpan
									*
									SubH.Fiyat
									-
									SubH.Iskonto
								   ) 
							FROM 
								Hareketler SubH 
							WHERE  
								SubH.BaslikInd=g.BaslikInd
								AND (SubH.Miktar IS NOT NULL AND SubH.Miktar > 0)
						), 0.00
					) as ToplamTutar 
		FROM
			GirisCikisHareketleri as g WITH(NOLOCK)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[DepoGirenCikanMiktarlari]
AS
SELECT
	h2.Ind,
	g.Fiyat,
	g.Owner,
	g.StokInd,
	g.DepoInd,
	g.Giren,
	g.Cikan
FROM
	GirisCikisHareketleri as g WITH(NOLOCK)
	LEFT OUTER JOIN dbo.Hareketler AS h2 WITH(NOLOCK) ON h2.BaslikInd = g.BaslikInd

GO
CREATE VIEW [dbo].[FaturaOzet]
AS
	WITH Ozet as 
	(
		 SELECT
			b.Ind
			, 3 as TipInd
			, b.Owner
			, b.Aktif
			,b.FaturaIadeMi
			, 			
			ISNULL
			(
				SUM((h.Miktar*h.Fiyat-h.Iskonto) * (1+KDVOrani/100)) 
				* 
				(
					1-(b.Iskonto/(	CASE( 
											SELECT 
												SUM
												(
													CASE h.TipInd
														WHEN 57 THEN (h.Tutar) / (1+KDVOrani/100)
														WHEN 3 THEN (h.Miktar * h.Fiyat - h.Iskonto)
														ELSE 0
													END					
												) 
												FROM 
												Hareketler AS h WHERE h.BaslikInd = b.Ind 
										)
									WHEN 0 THEN CASE b.Iskonto WHEN 0 THEN 1 ELSE b.Iskonto END 
									END 		
								   )										
					  )
				)
				+ 

				b.Yuvarlama

				,
				
				0
			)
			+ 
			ISNULL
			(						
				SUM(CASE h.TipInd WHEN 57 THEN h.Tutar ELSE 0 END) 
				*		
				(
					1 - (b.Iskonto/(CASE(
											SELECT 
												SUM
												(
														CASE h.TipInd
															WHEN 57 THEN (h.Tutar) / (1+KDVOrani/100)
															WHEN 3 THEN (h.Miktar * h.Fiyat - h.Iskonto)
															ELSE 0
														END					
												) 
											FROM 
											Hareketler AS h WHERE h.BaslikInd = b.Ind
										)
										WHEN 0 THEN CASE b.Iskonto WHEN 0 THEN 1 ELSE b.Iskonto END 
									END 		
								  )
										
						)						
				)
			,
			0
			)	
			  AS Borc
			  , 0 AS Alacak
			  , CASE WHEN (h.TipInd = 3)
			    THEN (SUM(ISNULL(h.NetMiktar, h.Miktar) * h.Carpan * h.Fiyat))
			    else 0 end 
			    + 
				CASE WHEN (h.TipInd = 57)
			    THEN (
						SELECT
							SUM(Tutar * 100 / (KDVOrani + 100))
						FROM
							Hareketler AS h3 WITH(NOLOCK)
						WHERE
							h3.BaslikInd = b.Ind AND h3.TipInd = 57
					  )
				ELSE 0 END AS Matrah
				, SUM
				  (
					isnull
					(
						h.Iskonto, 0
					) 
					--* 
					--isnull
					--(
					--	h.KDVOrani,0
					--) 
					--/ 
					--100
				   ) AS SatirIskonto
				, b.OdemeTarihi
				, b.Aciklama
				, b.Tarih AS GirisTarihi
				, b.BelgeNo
				, b.PlakaNo AS PlakaNo
				, b.HesapInd, 
                b.Iskonto AS FaturaIskonto
				, b.GelirInd
				, b.GelirKodu
				, b.GelirAdi
				, b.GiderInd, 
                b.GiderKodu
				, b.GiderAdi
				, hs.HesapKodu
				, hs.HesapAdi, b.Yuvarlama
				,b.KDVDahil
			FROM
				Basliklar AS b WITH(NOLOCK)
				LEFT OUTER JOIN Hareketler AS h WITH(NOLOCK) ON b.Ind = h.BaslikInd 
				LEFT OUTER JOIN Hesaplar AS hs WITH(NOLOCK) ON hs.Ind = b.HesapInd
			WHERE     
				b.TipInd = 101 
				AND 
				(
					h.TipInd = 3 
					or h.TipInd = 57
				) 
				AND 
				(
					b.Aktif IS NULL 
					OR
                    b.Aktif <> 'false'
				)
			GROUP BY 
				b.Ind
				, b.Aktif
				, b.Iskonto
				, h.Iskonto
				, h.TipInd
				, b.Owner
				, b.Aciklama
				, b.Tarih, 
                b.BelgeNo
				,b.PlakaNo
				, b.HesapInd
				, hs.HesapKodu
				, hs.HesapAdi
				, b.Iskonto
				, b.GelirInd, 
                b.GelirKodu
				, b.GiderInd
				, b.GiderKodu
				, b.GelirAdi
				, b.GiderAdi
				, b.Yuvarlama, 
                b.OdemeTarihi
				,b.KDVDahil
				,b.FaturaIadeMi
				
			UNION ALL
			SELECT     
				b.Ind
				, 6
				, b.Owner
				, b.Aktif
				,b.FaturaIadeMi
				, 0 AS Borc, 
					ISNULL
					(
						SUM((h.Miktar*h.Fiyat-h.Iskonto) * (1+KDVOrani/100)) 
						* 
						(
							1-(ISNULL(b.Iskonto/NULLIF((SELECT 
													SUM
													(
															CASE h.TipInd
																WHEN 511 THEN (h.Tutar) / (1+KDVOrani/100)
																WHEN 6 THEN (h.Miktar * h.Fiyat - h.Iskonto)
																ELSE 0
															END					
													) 
												FROM 
												Hareketler AS h WHERE h.BaslikInd = b.Ind 
										   ),0),0)										
							  )
						)
						+ 

						b.Yuvarlama

						,
						
						0
					)
					+ 
					ISNULL
					(						
						SUM(CASE h.TipInd WHEN 511 THEN h.Tutar ELSE 0 END) 
						*		
						(
							1 - (ISNULL(b.Iskonto/NULLIF((SELECT 
													SUM
													(
															CASE h.TipInd
																WHEN 511 THEN (h.Tutar) / (1+KDVOrani/100)
																WHEN 6 THEN (h.Miktar * h.Fiyat - h.Iskonto)
																ELSE 0
															END					
													) 
												FROM 
												Hareketler AS h WITH(NOLOCK) WHERE h.BaslikInd = b.Ind
										  ),0),0)
												
								)							
						)
					,
					0
					)						
				AS Alacak,
				CASE WHEN (h.TipInd = 6) 
				THEN (SUM(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto)) 
				else 0 end
				+ 
				CASE WHEN (h.TipInd = 511) 
				THEN (SELECT SUM(Tutar * 100 / (KDVOrani + 100)) FROM Hareketler AS h3 WHERE h3.BaslikInd = b.Ind AND h3.TipInd = 511) 
				ELSE 0 END AS Matrah
				, ISNULL(SUM(h.Iskonto * h.KDVOrani / 100),0) AS SatirIskonto
				, b.OdemeTarihi
				, b.Aciklama
				, b.Tarih AS GirisTarihi
				, b.BelgeNo
				,b.PlakaNo AS PlakaNo
				, b.HesapInd, 
                b.Iskonto AS FaturaIskonto
				, b.GelirInd
				, b.GelirKodu
				, b.GelirAdi
				, b.GiderInd, 
                b.GiderKodu
				, b.GiderAdi
				, hs.HesapKodu
				, hs.HesapAdi
				, b.Yuvarlama
				,b.KDVDahil
				
			FROM         
				Basliklar AS b WITH(NOLOCK)
				LEFT OUTER JOIN Hareketler AS h WITH(NOLOCK) ON b.Ind = h.BaslikInd 
				LEFT OUTER JOIN Hesaplar AS hs WITH(NOLOCK) ON hs.Ind = b.HesapInd
			WHERE     
				b.TipInd = 102 
				AND (
						h.TipInd = 6 
						or h.TipInd = 511
					) 
				AND (
						b.Aktif IS NULL 
						OR b.Aktif <> 'false'
					) 
				AND (
						b.DurumInd <> 12 OR
						b.DurumInd IS NULL
					)
			GROUP BY 
				b.Ind
				, b.Aktif
				, b.Iskonto
				, h.TipInd
				, b.Owner
				, b.Aciklama
				, b.Tarih, 
                b.BelgeNo
				,b.PlakaNo
				, b.HesapInd
				, hs.HesapKodu
				, hs.HesapAdi
				, b.Iskonto
				, b.GelirInd, 
                b.GelirKodu
				, b.GiderInd
				, b.GiderKodu
				, b.GelirAdi
				, b.GiderAdi
				, b.Yuvarlama, 
                b.OdemeTarihi
				,b.KDVDahil
				,b.FaturaIadeMi
				
			UNION ALL
			
			SELECT     
				vgfb.Ind
				, h.TipInd
				, vgfb.Owner, 
                vgfb.Aktif,
				NULL AS FaturaIadeMi
				, 0 AS Borc
				, vgfb.NetToplam AS Alacak, 
                SUM(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto) 
				+ 
				CASE WHEN (
							(
								SELECT     
									COUNT(*)
								FROM         
									Hareketler AS h3
								WHERE     
									h3.BaslikInd = vgfb.Ind 
									AND h3.TipInd = 57
							) > 0
						  ) 
				THEN (
						SELECT     
							SUM(Tutar * 100 / (KDVOrani + 100))
                        FROM          
							Hareketler AS h3
                        WHERE      
							h3.BaslikInd = vgfb.Ind 
							AND h3.TipInd = 57
					  ) 
				ELSE 0 END AS Matrah, 
                SUM
				(
					h.Iskonto 
					* 
					h.KDVOrani 
					/ 
					100
				) AS SatirIskonto
				, vgfb.OdemeTarihi, 
                vgfb.Aciklama
				, vgfb.Tarih AS GirisTarihi, 
                vgfb.BelgeNo
				,'' AS PLakaNo
				, vgfb.HesapInd, 
                vgfb.Iskonto AS FaturaIskonto
				, vgfb.GelirInd, 
                vgfb.GelirKodu
				, vgfb.GelirAdi
				, vgfb.GiderInd, 
                vgfb.GiderKodu
				, vgfb.GiderAdi
				, hs.HesapKodu
				, hs.HesapAdi, 
                vgfb.Yuvarlama
				, 1 KDVDahil
			FROM
				VeresiyedenGelenFaturaBasliklar AS vgfb WITH(NOLOCK) LEFT OUTER JOIN
                Hareketler AS h WITH(NOLOCK) ON vgfb.Ind = h.BaslikInd LEFT OUTER JOIN
                Hesaplar AS hs WITH(NOLOCK) ON hs.Ind = vgfb.HesapInd
			WHERE     
				vgfb.TipInd = 102 
				AND h.TipInd = 6 
				AND (
						vgfb.Aktif IS NULL OR
						vgfb.Aktif <> 'false'
					)
			GROUP BY 
				vgfb.Ind
				, vgfb.Aktif
				, vgfb.Iskonto, 
                h.TipInd
				, vgfb.Owner
				, vgfb.Aciklama, 
                vgfb.Tarih
				, vgfb.BelgeNo
				, PlakaNo
				, vgfb.HesapInd, 
                hs.HesapKodu
				, hs.HesapAdi
				, vgfb.Iskonto
				, vgfb.OdemeTarihi, 
                vgfb.GelirInd
				, vgfb.GelirKodu
				, vgfb.GiderInd, 
                vgfb.GiderKodu
				, vgfb.GelirAdi
				, vgfb.GiderAdi, 
                vgfb.NetToplam
				, vgfb.Yuvarlama 
	)
	select 
		TOP 100 PERCENT
		Ind, 
		TipInd,
		Owner,
		Aktif,
		FaturaIadeMi,
		sum(Borc) as Borc,
		sum(Alacak) as Alacak,
		sum(Matrah) as Matrah,
		sum(SatirIskonto) as SatirIskonto,
		OdemeTarihi,
		Aciklama,
		GirisTarihi,
		BelgeNo,
		PlakaNo,
		HesapInd,
		FaturaIskonto,
		GelirInd,
		GelirKodu,
		GelirAdi,
		GiderInd,
		GiderKodu,
		GiderAdi,
		Hesapkodu,
		HesapAdi,
		Yuvarlama
		,KDVDahil
	from
		Ozet WITH(NOLOCK)
	group by Ind,
		TipInd,
		Owner,
		Aktif,
		OdemeTarihi,
		Aciklama,
		GirisTarihi,
		BelgeNo,
		PlakaNo,
		HesapInd,
		FaturaIskonto,
		GelirInd,
		GelirKodu,
		GelirAdi,
		GiderInd,
		GiderKodu,
		GiderAdi,
		Hesapkodu,
		HesapAdi,
		Yuvarlama
		,KDVDahil
		,FaturaIadeMi
		
		
GO
CREATE VIEW [dbo].[FaturaOzet2]
AS
	WITH Ozet as 
	(
		 SELECT
			b.Ind
			, 3 as TipInd
			, b.Owner
			, b.Aktif
			,CASE WHEN (h.TipInd = 3) 
			  THEN (
					SUM
					(
						(
							ISNULL
							(
								h.NetMiktar
								, h.Miktar
							) 
							* 
							h.Fiyat 
							- 
							h.Iskonto
						) 
						* 
						(
							1 
							+ 
							h.KDVOrani 
							/ 
							100
						)
					)
                    
				   )
					*
					(
						 
						CASE WHEN ( (	select SUM(
										CASE h4.TipInd
											WHEN 57 THEN (h4.Tutar) / (1+KDVOrani/100)
											WHEN 3 THEN (h4.Miktar * h4.Fiyat - h4.Iskonto)
											ELSE 0
										END
										)
							from Hareketler h4 where h4.TipInd in(3,57) And h4.BaslikInd = b.Ind
						) in (0, NULL))
						THEN 1
						ELSE 
							1 
							- 
							b.Iskonto 
							/
							(select SUM(
										CASE h4.TipInd
											WHEN 57 THEN (h4.Tutar) / (1+KDVOrani/100)
											WHEN 3 THEN (h4.Miktar * h4.Fiyat - h4.Iskonto)
											ELSE 0
										END
										)
								from Hareketler h4 where h4.TipInd in(3,57) And h4.BaslikInd = b.Ind
							)
							END	
						)	
					 
				   + 
				   b.Yuvarlama
		      ELSE 0 END 
			  + 
			  CASE WHEN (h.TipInd = 57)
			  THEN (
					SELECT
						SUM(h3.Tutar)
						*
						(
							 
							CASE WHEN ((	select SUM(
											CASE h4.TipInd
												WHEN 57 THEN (h4.Tutar) / (1+KDVOrani/100)
												WHEN 3 THEN (h4.Miktar * h4.Fiyat - h4.Iskonto)
												ELSE 0
											END
											)
								from Hareketler h4 where h4.TipInd in(3,57) And h4.BaslikInd = b.Ind
							) in (0, NULL))
							THEN 1
							ELSE
								1 
								- 
								b.Iskonto 
								/
								(	select SUM(
											CASE h4.TipInd
												WHEN 57 THEN (h4.Tutar) / (1+KDVOrani/100)
												WHEN 3 THEN (h4.Miktar * h4.Fiyat - h4.Iskonto)
												ELSE 0
											END
											)
									from Hareketler h4 WITH(NOLOCK) where h4.TipInd in(3,57) And h4.BaslikInd = b.Ind
								)
								END
						)	
                    FROM
						Hareketler AS h3 WITH(NOLOCK)
						
                    WHERE
						h3.BaslikInd = b.Ind AND h3.TipInd = 57 
				   )
			  ELSE 0 END AS Borc
			  , 0 AS Alacak
			  , CASE WHEN (h.TipInd = 3)
			    THEN (SUM(ISNULL(h.NetMiktar, h.Miktar) * h.Carpan * h.Fiyat - h.Iskonto))
			    else 0 end 
			    + 
				CASE WHEN (h.TipInd = 57)
			    THEN (
						SELECT
							SUM(Tutar * 100 / (KDVOrani + 100))
						FROM
							Hareketler AS h3
						WHERE
							h3.BaslikInd = b.Ind AND h3.TipInd = 57
					  )
				ELSE 0 END AS Matrah
				, SUM
				  (
					isnull
					(
						h.Iskonto, 0
					) 
					* 
					isnull
					(
						h.KDVOrani,0
					) 
					/ 
					100
				   ) AS SatirIskonto
				, b.OdemeTarihi
				, b.Aciklama
				, b.Tarih AS GirisTarihi
				, b.BelgeNo
				, b.HesapInd, 
                b.Iskonto AS FaturaIskonto
				, b.GelirInd
				, b.GelirKodu
				, b.GelirAdi
				, b.GiderInd, 
                b.GiderKodu
				, b.GiderAdi
				, hs.HesapKodu
				, hs.HesapAdi, b.Yuvarlama
				,b.KDVDahil
				,ISNULL(b.FaturaIadeMi,0) AS FaturaIadeMi
			FROM
				Basliklar AS b WITH(NOLOCK)
				LEFT OUTER JOIN Hareketler AS h WITH(NOLOCK) ON b.Ind = h.BaslikInd 
				LEFT OUTER JOIN Hesaplar AS hs WITH(NOLOCK) ON hs.Ind = b.HesapInd
				
			WHERE     
				b.TipInd = 101 
				AND 
				(
					h.TipInd = 3 
					or h.TipInd = 57
				) 
				AND 
				(
					b.Aktif IS NULL 
					OR
                    b.Aktif <> 'false'
				)
			GROUP BY 
				b.Ind
				, b.Aktif
				, b.Iskonto
				, h.TipInd
				, b.Owner
				, b.Aciklama
				, b.Tarih, 
                b.BelgeNo
				, b.HesapInd
				, hs.HesapKodu
				, hs.HesapAdi
				, b.Iskonto
				, b.GelirInd, 
                b.GelirKodu
				, b.GiderInd
				, b.GiderKodu
				, b.GelirAdi
				, b.GiderAdi
				, b.Yuvarlama, 
                b.OdemeTarihi
				,b.KDVDahil
				,ISNULL(b.FaturaIadeMi,0)
			UNION ALL
			SELECT     
				b.Ind
				, 6
				, b.Owner
				, b.Aktif
				, 0 AS Borc, 
				CASE WHEN (h.TipInd = 6) 
                THEN (
						SUM((h.Miktar * h.Fiyat - h.Iskonto) * (1 + h.KDVOrani / 100)) 
						*
						(
							
							CASE WHEN ((	select SUM(
											CASE h4.TipInd
												WHEN 511 THEN (h4.Tutar) / (1+KDVOrani/100)
												WHEN 6 THEN (h4.Miktar * h4.Fiyat - h4.Iskonto)
												ELSE 0
											END
											)
								from Hareketler h4 WITH(NOLOCK) where h4.TipInd in(6,511) And h4.BaslikInd = b.Ind
							) in (0, NULL))
							THEN 
								1
							ELSE
								1 
								- 
								b.Iskonto 
								/ 
								(	select SUM(
											CASE h4.TipInd
												WHEN 511 THEN (h4.Tutar) / (1+KDVOrani/100)
												WHEN 6 THEN (h4.Miktar * h4.Fiyat - h4.Iskonto)
												ELSE 0
											END
											)
								from Hareketler h4 WITH(NOLOCK) where h4.TipInd in(6,511) And h4.BaslikInd = b.Ind
							)
							END		
							
						) 
					)
					+ 
					b.Yuvarlama 
				ELSE 0 END
				+ 
				CASE WHEN (h.TipInd = 511) 
				THEN (
						SELECT SUM(Tutar) 
								* 
								(
									
									CASE WHEN (( select SUM(
													CASE h4.TipInd
														WHEN 511 THEN (h4.Tutar) / (1+KDVOrani/100)
														WHEN 6 THEN (h4.Miktar * h4.Fiyat - h4.Iskonto)
														ELSE 0
													END
												)
										from Hareketler h4 WITH(NOLOCK) where h4.TipInd in(6,511) And h4.BaslikInd = b.Ind
									) in (0 , NULL))
									THEN 1
									ELSE 
										1
										-
										b.Iskonto 
										/
										( select SUM(
													CASE h4.TipInd
														WHEN 511 THEN (h4.Tutar) / (1+KDVOrani/100)
														WHEN 6 THEN (h4.Miktar * h4.Fiyat - h4.Iskonto)
														ELSE 0
													END
												)
										from Hareketler h4 WITH(NOLOCK) where h4.TipInd in(6,511) And h4.BaslikInd = b.Ind
									)
									END		
									
								) 
						FROM Hareketler AS h3 WITH(NOLOCK) WHERE h3.BaslikInd = b.Ind AND h3.TipInd = 511
					) 
				ELSE 0 END AS Alacak,
				CASE WHEN (h.TipInd = 6) 
				THEN (SUM(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto)) 
				else 0 end
				+ 
				CASE WHEN (h.TipInd = 511) 
				THEN (SELECT SUM(Tutar * 100 / (KDVOrani + 100)) FROM Hareketler AS h3 WITH(NOLOCK) WHERE h3.BaslikInd = b.Ind AND h3.TipInd = 511) 
				ELSE 0 END AS Matrah
				, ISNULL(SUM(h.Iskonto * h.KDVOrani / 100),0) AS SatirIskonto
				, b.OdemeTarihi
				, b.Aciklama
				, b.Tarih AS GirisTarihi
				, b.BelgeNo
				, b.HesapInd, 
                b.Iskonto AS FaturaIskonto
				, b.GelirInd
				, b.GelirKodu
				, b.GelirAdi
				, b.GiderInd, 
                b.GiderKodu
				, b.GiderAdi
				, hs.HesapKodu
				, hs.HesapAdi
				, b.Yuvarlama
				,b.KDVDahil
				,ISNULL(b.FaturaIadeMi,0)
			FROM         
				Basliklar AS b WITH(NOLOCK)
				LEFT OUTER JOIN Hareketler AS h WITH(NOLOCK) ON b.Ind = h.BaslikInd 
				LEFT OUTER JOIN Hesaplar AS hs WITH(NOLOCK) ON hs.Ind = b.HesapInd
			WHERE     
				b.TipInd = 102 
				AND (
						h.TipInd = 6 
						or h.TipInd = 511
					) 
				AND (
						b.Aktif IS NULL 
						OR b.Aktif <> 'false'
					) 
				AND (
						b.DurumInd <> 12 OR
						b.DurumInd IS NULL
					)
			GROUP BY 
				b.Ind
				, b.Aktif
				, b.Iskonto
				, h.TipInd
				, b.Owner
				, b.Aciklama
				, b.Tarih, 
                b.BelgeNo
				, b.HesapInd
				, hs.HesapKodu
				, hs.HesapAdi
				, b.Iskonto
				, b.GelirInd, 
                b.GelirKodu
				, b.GiderInd
				, b.GiderKodu
				, b.GelirAdi
				, b.GiderAdi
				, b.Yuvarlama, 
                b.OdemeTarihi
				,b.KDVDahil
				,ISNULL(b.FaturaIadeMi,0)
			UNION ALL
			SELECT     
				vgfb.Ind
				, h.TipInd
				, vgfb.Owner, 
                vgfb.Aktif
				, 0 AS Borc
				, vgfb.NetToplam AS Alacak, 
                SUM(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto) 
				+ 
				CASE WHEN (
							(
								SELECT     
									COUNT(*)
								FROM         
									Hareketler AS h3
								WHERE     
									h3.BaslikInd = vgfb.Ind 
									AND h3.TipInd = 57
							) > 0
						  ) 
				THEN (
						SELECT     
							SUM(Tutar * 100 / (KDVOrani + 100))
                        FROM          
							Hareketler AS h3 WITH(NOLOCK)
                        WHERE      
							h3.BaslikInd = vgfb.Ind 
							AND h3.TipInd = 57
					  ) 
				ELSE 0 END AS Matrah, 
                SUM
				(
					h.Iskonto 
					* 
					h.KDVOrani 
					/ 
					100
				) AS SatirIskonto
				, vgfb.OdemeTarihi, 
                vgfb.Aciklama
				, vgfb.Tarih AS GirisTarihi, 
                vgfb.BelgeNo
				, vgfb.HesapInd, 
                vgfb.Iskonto AS FaturaIskonto
				, vgfb.GelirInd, 
                vgfb.GelirKodu
				, vgfb.GelirAdi
				, vgfb.GiderInd, 
                vgfb.GiderKodu
				, vgfb.GiderAdi
				, hs.HesapKodu
				, hs.HesapAdi, 
                vgfb.Yuvarlama
				, 1 KDVDahil
				, 0 FaturaIadeMi
			FROM
				VeresiyedenGelenFaturaBasliklar AS vgfb WITH(NOLOCK) LEFT OUTER JOIN
                Hareketler AS h WITH(NOLOCK) ON vgfb.Ind = h.BaslikInd LEFT OUTER JOIN
                Hesaplar AS hs WITH(NOLOCK) ON hs.Ind = vgfb.HesapInd
			WHERE     
				vgfb.TipInd = 102 
				AND h.TipInd = 6 
				AND (
						vgfb.Aktif IS NULL OR
						vgfb.Aktif <> 'false'
					)
			GROUP BY 
				vgfb.Ind
				, vgfb.Aktif
				, vgfb.Iskonto, 
                h.TipInd
				, vgfb.Owner
				, vgfb.Aciklama, 
                vgfb.Tarih
				, vgfb.BelgeNo
				, vgfb.HesapInd, 
                hs.HesapKodu
				, hs.HesapAdi
				, vgfb.Iskonto
				, vgfb.OdemeTarihi, 
                vgfb.GelirInd
				, vgfb.GelirKodu
				, vgfb.GiderInd, 
                vgfb.GiderKodu
				, vgfb.GelirAdi
				, vgfb.GiderAdi, 
                vgfb.NetToplam
				, vgfb.Yuvarlama 
	)
	select 
		TOP 100 PERCENT
		Ind, 
		TipInd,
		Owner,
		Aktif,
		sum(Borc) as Borc,
		sum(Alacak) as Alacak,
		sum(Matrah) as Matrah,
		sum(SatirIskonto) as SatirIskonto,
		OdemeTarihi,
		Aciklama,
		GirisTarihi,
		BelgeNo,
		HesapInd,
		FaturaIskonto,
		GelirInd,
		GelirKodu,
		GelirAdi,
		GiderInd,
		GiderKodu,
		GiderAdi,
		Hesapkodu,
		HesapAdi,
		Yuvarlama
		,KDVDahil
		,FaturaIadeMi
	from
		Ozet
	group by Ind,
		TipInd,
		Owner,
		Aktif,
		OdemeTarihi,
		Aciklama,
		GirisTarihi,
		BelgeNo,
		HesapInd,
		FaturaIskonto,
		GelirInd,
		GelirKodu,
		GelirAdi,
		GiderInd,
		GiderKodu,
		GiderAdi,
		Hesapkodu,
		HesapAdi,
		Yuvarlama
		,KDVDahil
		,FaturaIadeMi
--	SELECT
--		fosys.Ind,
--		fosys.TipInd,
--		fosys.Owner,
--		fosys.Aktif,
--		ISNULL(fobaorc.Borc, 0) AS Borc,
--		ISNULL(foalc.Alacak, 0) AS Alacak,
--		fosys.Matrah,
--		fosys.SatirIskonto,
--		fosys.OdemeTarihi,
--		fosys.Aciklama,
--		fosys.GirisTarihi,
--		fosys.BelgeNo,
--		fosys.HesapInd,
--		fosys.FaturaIskonto,
--		fosys.GelirInd,
--		fosys.GelirKodu,
--		fosys.GelirAdi,
--		fosys.GiderInd,
--		fosys.GiderKodu,
--		fosys.GiderAdi,
--		fosys.HesapKodu,
--		fosys.HesapAdi,
--		fosys.Yuvarlama,
--		fosys.KdvDahil
--	FROM
--		FaturaOzet AS fosys
--		LEFT JOIN
--		(SELECT
--		*
--	FROM
--		(
--			SELECT
--				b.Ind,
--				CASE WHEN (h.TipInd = 3) 
--			  THEN (
--					SUM
--					(
--						(
--							ISNULL
--							(
--								h.NetMiktar
--								, h.Miktar
--							) 
--							* 
--							h.Fiyat 
--							- 
--							h.Iskonto
--						) 
--						* 
--						(
--							1 
--							+ 
--							h.KDVOrani 
--							/ 
--							100
--						)
--					) 
--                    *
--					(
--						CASE WHEN (SUM(ISNULL(h.NetMiktar, h.Miktar) * h.Fiyat - h.Iskonto) = 0)
--						THEN 0
--						ELSE 1 - b.Iskonto / SUM(ISNULL(h.NetMiktar, h.Miktar) * h.Fiyat - h.Iskonto)
--						END
--					)
--				   ) 
--				   + 
--				   b.Yuvarlama
--		      ELSE 0 END 
--			  + 
--			  CASE WHEN (h.TipInd = 57)
--			  THEN (
--					SELECT
--						SUM(Tutar)
--                    FROM
--						Hareketler AS h3
--                    WHERE
--						h3.BaslikInd = b.Ind AND h3.TipInd = 57
--				   )
--			  ELSE 0 END AS Borc
--			FROM
--				Basliklar AS b 
--				LEFT OUTER JOIN Hareketler AS h ON b.Ind = h.BaslikInd 
--			WHERE     
--				b.TipInd = 101 
--				AND 
--				(
--					h.TipInd = 3 
--					or h.TipInd = 57
--				) 
--				AND 
--				(
--					b.Aktif IS NULL 
--					OR
--                    b.Aktif <> 'false'
--				)
--			GROUP BY 
--				b.Ind
--				, b.Iskonto
--				, h.TipInd
--				--, b.HesapInd
--				, b.Yuvarlama
--		) AS fobaorcpre) AS fobaorc ON fobaorc.Ind = fosys.Ind
--		LEFT JOIN
--		(SELECT
--		*
--	FROM
--		(
--			SELECT     
--				b.Ind,
--				CASE WHEN (h.TipInd = 6) 
--                THEN (SUM((h.Miktar * h.Fiyat - h.Iskonto) * (1 + h.KDVOrani / 100)) 
--                      *
--					  (
--						CASE WHEN (SUM(h.Miktar * h.Fiyat - h.Iskonto) = 0)
--						THEN 0
--						ELSE 1 - b.Iskonto / SUM(h.Miktar * h.Fiyat - h.Iskonto)
--						END
--					   )
--					  ) 
--					  + 
--					  b.Yuvarlama 
--				ELSE 0 END
--				+ 
--				CASE WHEN (h.TipInd = 511) 
--				THEN (SELECT SUM(Tutar) FROM Hareketler AS h3 WHERE h3.BaslikInd = b.Ind AND h3.TipInd = 511) ELSE 0 END AS Alacak
--			FROM         
--				Basliklar AS b 
--				LEFT OUTER JOIN Hareketler AS h ON b.Ind = h.BaslikInd 
--			WHERE     
--				b.TipInd = 102 
--				AND (
--						h.TipInd = 6 
--						or h.TipInd = 511
--					) 
--				AND (
--						b.Aktif IS NULL 
--						OR b.Aktif <> 'false'
--					) 
--				AND (
--						b.DurumInd <> 12 OR
--						b.DurumInd IS NULL
--					)
--			GROUP BY 
--				b.Ind
--				, b.Iskonto
--				, h.TipInd
--				--, b.HesapInd
--				, b.Yuvarlama
--		) AS foalcpre) AS foalc ON foalc.Ind = fosys.Ind




GO

/*
UNION ALL

FisPortfoyu alani aktif olarak kullanilmaya baslanmistir, alttaki kisim yanlis olarak kullanildigindan kapatilmistir. -sahap
SELECT     
	h.Ind,
	b.Tarih as Tarih, 
	b.HesapInd AS CariHesapInd, 
	h.TipInd, 
	h.Owner, 
	h.Tutar AS Borc, 
	0.00 AS Alacak,
	NULL as DurumInd,
	b.Aciklama as Aciklama
FROM         dbo.Hareketler AS h LEFT OUTER JOIN
                      dbo.Basliklar AS b ON b.Ind = h.BaslikInd
WHERE     (h.TipInd = 37) AND (b.FisPortfoyu = 'True')
*/
CREATE VIEW [dbo].[CariHesapHareketleri]
AS
SELECT     Ind, GirisTarihi AS Tarih, HesapInd AS CariHesapInd, TipInd, Owner, CASE WHEN (TipInd IN (6)) THEN Alacak ELSE 0 END AS Borc, 
                      CASE WHEN (TipInd IN (3)) THEN Borc ELSE 0 END AS Alacak, NULL AS DurumInd, Aciklama
FROM         dbo.FaturaOzet2 WITH(NOLOCK)
UNION ALL
SELECT     Ind, GirisTarihi AS Tarih, CariHesapInd, TipInd, Owner, CASE WHEN (TipInd IN (13, 15, 507, 510)) THEN Tutar * ISNULL(Kur,1) ELSE 0 END AS Borc, 
                      CASE WHEN (TipInd IN (9, 12, 508, 509)) THEN Tutar * ISNULL(Kur,1) ELSE 0 END AS Alacak, NULL AS DurumInd, Aciklama
FROM         dbo.Hareketler WITH(NOLOCK)
WHERE     (TipInd = 9) OR
                      (TipInd = 12) OR
                      (TipInd = 13) OR
                      (TipInd = 15) OR
                      (TipInd = 507) OR
                      (TipInd = 508) OR
                      (TipInd = 509) OR
                      (TipInd = 510)
UNION ALL
SELECT     Hareketler_1.Ind, Hareketler_1.GirisTarihi AS Tarih, Hareketler_1.CariHesapInd, Hareketler_1.TipInd, Hareketler_1.Owner, 0 AS Borc, 
                      Hareketler_1.Tutar * ISNULL(Kur,1) AS Alacak, NULL AS DurumInd, Hareketler_1.Aciklama
FROM         dbo.Hareketler AS Hareketler_1 WITH(NOLOCK) LEFT OUTER JOIN
                      dbo.Basliklar AS b WITH(NOLOCK) ON b.Ind = Hareketler_1.BaslikInd
WHERE     (Hareketler_1.TipInd IN (10,533))
UNION ALL
SELECT     Ind, GirisTarihi AS Tarih, HedefHesapInd AS CariHesapInd, TipInd, Owner, CASE WHEN (TipInd IN (509)) THEN Tutar * ISNULL(Kur,1) ELSE 0 END AS Borc, 
                      CASE WHEN (Hareketler_2.TipInd IN (510)) THEN Tutar * ISNULL(Kur,1) ELSE 0 END AS Alacak, NULL AS DurumInd, Aciklama
FROM         dbo.Hareketler AS Hareketler_2 WITH(NOLOCK)
WHERE     (TipInd = 509 OR
                      TipInd = 510) AND (HedefHesapInd IS NOT NULL)
UNION ALL
SELECT     Ind, GirisTarihi AS Tarih, CariHesapInd, TipInd, Owner, 0.00 AS Borc, CASE WHEN (TipInd = 11 AND DurumInd IN (4, 6, 8, 7, 5, 12)) 
                      THEN Hareketler_3.Tutar * ISNULL(Kur,1) ELSE 0 END AS Alacak, DurumInd, Aciklama
FROM         dbo.Hareketler AS Hareketler_3 WITH(NOLOCK)
WHERE     (TipInd = 11) AND (DurumInd <> 9)
UNION ALL
SELECT     Ind, IslemTarihi AS Tarih, CariHesapInd, TipInd, Owner, Tutar * ISNULL(Kur,1) AS Borc, 0.00 AS Alacak, DurumInd, Aciklama
FROM         dbo.Hareketler AS Hareketler_3
WHERE     (TipInd = 11) AND (DurumInd = 12)
UNION ALL
SELECT     Ind, GirisTarihi AS Tarih, CariHesapInd, TipInd, Owner, Tutar * ISNULL(Kur,1) AS Borc, 0.00 AS Alacak, DurumInd, Aciklama
FROM         dbo.Hareketler AS Hareketler_4 WITH(NOLOCK)
WHERE     (TipInd = 14) AND (DurumInd = 4 OR
                      DurumInd = 10 OR
                      DurumInd = 12)
UNION ALL
SELECT     Ind, GirisTarihi AS Tarih, CariHesapInd, TipInd, Owner, 0.00 AS Borc, Tutar * ISNULL(Kur,1) AS Alacak, DurumInd, Aciklama
FROM         dbo.Hareketler AS Hareketler_4 WITH(NOLOCK)
WHERE     (TipInd = 14) AND (DurumInd = 12)
UNION ALL
SELECT     Ind, IslemTarihi AS Tarih, CiroCariInd AS CariHesapInd, TipInd, Owner, Tutar * ISNULL(Kur,1) AS Borc, 0 AS Alacak, DurumInd, Aciklama
FROM         dbo.Hareketler AS Hareketler_5 WITH(NOLOCK)
WHERE     (TipInd = 11) AND (DurumInd = 6)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CariBakiyeListesi]
AS
SELECT     h.Ind, h.Owner, h.HesapKodu, h.HesapAdi, SUM(c.Borc - c.Alacak) AS Bakiye
FROM         dbo.Hesaplar AS h WITH(NOLOCK) LEFT OUTER JOIN
                      dbo.CariHesapHareketleri AS c WITH(NOLOCK) ON c.CariHesapInd = h.Ind
WHERE     (h.TipInd = 201)
GROUP BY h.Ind, h.Owner, h.HesapKodu, h.HesapAdi

GO
CREATE VIEW [dbo].[MaasDagitimListesi]
AS
SELECT     
	dbo.Basliklar.Ind, 
	dbo.Basliklar.TipInd,
	dbo.Basliklar.Owner, 
	dbo.Basliklar.Tarih AS GirisTarihi, 
	dbo.Basliklar.Aciklama, 
	SUM(CASE  WHEN Hareketler.MaasIslenmeDurumu=1 THEN dbo.Hareketler.Hakedilen
			  WHEN Hareketler.Tutar IS NULL	THEN 0 
			  ELSE (Hareketler.Tutar) 
			  END
		) 
	AS Maas, 
	SUM(CASE WHEN Hareketler.Prim IS NULL 
			 THEN 0 
			 ELSE Hareketler.Prim 
			 END
		) AS Prim, 
	SUM(CASE WHEN Hareketler.Agi IS NULL
			 THEN 0
			 ELSE Hareketler.Agi
			 END
	   ) AS Agi,
	case WHEN SUM(CASE Hareketler.MaasIslenmeDurumu WHEN 0 THEN 0
													WHEN 1 THEN  dbo.Hareketler.Tutar 
													WHEN 2 THEN dbo.Hareketler.Tutar 
													END
				  ) < 0  
		 THEN 0 
		 ELSE SUM(CASE Hareketler.MaasIslenmeDurumu WHEN 0 THEN 0
													WHEN 1 THEN  dbo.Hareketler.Tutar  --kalanı giderleştir
													WHEN 2 THEN  dbo.Hareketler.Tutar   -- maaşı giderleştir
													END
				  )
		 END 
 AS Odenen,
    SUM(Hareketler.Hakedilen) as Hakedilen,
	SUM(Hareketler.Tutar-(Hareketler.Hakedilen+Hareketler.Prim+Hareketler.Agi)) AS AcikFazla,
	dbo.Basliklar.GiderInd,
	dbo.Basliklar.GiderKodu,
	dbo.Basliklar.GiderAdi, 
	Hareketler.MaasIslenmeDurumu
FROM dbo.Basliklar WITH(NOLOCK)
	 INNER JOIN dbo.Hareketler WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
WHERE (dbo.Basliklar.TipInd = 107) 
GROUP BY 
	dbo.Basliklar.Ind, 
	dbo.Basliklar.TipInd,
	dbo.Basliklar.Owner, 
	dbo.Basliklar.Tarih, 
	dbo.Basliklar.Aciklama, 
	dbo.Hareketler.TipInd,
	dbo.Basliklar.GiderInd,
	dbo.Basliklar.GiderKodu,
	dbo.Basliklar.GiderAdi,
	Hareketler.MaasIslenmeDurumu
 

GO


CREATE VIEW [dbo].[GiderHareketleri]
AS
SELECT        f.Owner, f.TipInd, f.GirisTarihi, t .TipAdi AS Yer, f.Aciklama, f.GiderInd, h.HesapKodu AS GiderKodu, f.GiderAdi, NULL AS Maas, f.Matrah AS Matrah, f.Borc - f.Matrah AS KDV, 
                         /*0.00 AS KDV,kapatıldı*/ f.Borc AS Tutar, /*0.00 AS TahsilatTutari,*/ NULL AS CariHesapAdi, NULL AS BaslikInd, NULL AS PersonelHesapInd, NULL AS VardiyaKartInd
FROM            FaturaOzet2 AS f LEFT JOIN
                         Tipler AS t ON t .Ind = 101 LEFT JOIN
                         Hesaplar AS h ON h.Ind = f.GiderInd
WHERE        (f.TipInd = 3) AND (f.GiderInd IS NOT NULL) AND (f.GiderInd > 0)
UNION ALL
SELECT        b.Owner AS Owner, b.TipInd, b.Tarih AS GirisTarihi, t .TipAdi AS Yer, 'Komisyon' AS Aciklama, b.GiderInd, hes.HesapKodu AS GiderKodu, b.GiderAdi, NULL AS Maas, 0.00 AS Matrah, 0.00 AS KDV, 
                         CASE WHEN b.Iskonto IS NOT NULL 
                         /*önceki tahsilatların banka komisyon oranlarını kaybetmemek üzere tahsil esnasındaki komisyon oranı başlığa eklendi*/ THEN b.TahsilatTutari * b.Iskonto / 100 ELSE b.TahsilatTutari * h.BankaKomisyon / 100 END AS Tutar, /*b.TahsilatTutari AS TahsilatTutari,*/ NULL
                          AS CariHesapAdi, NULL AS BaslikInd, NULL AS PersonelHesapInd, NULL AS VardiyaKartInd
FROM            Basliklar AS b LEFT JOIN
                         dbo.Hesaplar AS h ON b.HesapInd = h.Ind LEFT JOIN
                         dbo.Hesaplar AS hes ON b.GiderInd = hes.Ind LEFT JOIN
                         Tipler AS t ON t .Ind = b.TipInd
WHERE        b.TipInd = 105 AND b.TahsilatTutari > 0 AND b.GiderInd IS NOT NULL AND b.GiderInd > 0
UNION ALL
SELECT        m.Owner, m.TipInd, m.GirisTarihi, t .TipAdi AS Yer, m.Aciklama, m.GiderInd, h.HesapKodu AS GiderKodu, m.GiderAdi, m.Maas, 
                         CASE m.MaasIslenmeDurumu WHEN 0 THEN m.Hakedilen WHEN 1 THEN m.Odenen WHEN 2 THEN m.Hakedilen END AS Matrah, 0.00 AS KDV, 
                         CASE m.MaasIslenmeDurumu WHEN 0 THEN m.Hakedilen WHEN 1 THEN m.Odenen WHEN 2 THEN m.Hakedilen END AS Tutar, /*0.00 AS TahsilatTutari,*/ NULL AS CariHesapAdi, NULL AS BaslikInd, NULL 
                         AS PersonelHesapInd, NULL AS VardiyaKartInd
FROM            MaasDagitimListesi AS m LEFT JOIN
                         Tipler AS t ON t .Ind = m.TipInd LEFT JOIN
                         Hesaplar AS h ON h.Ind = m.GiderInd
WHERE        m.GiderInd IS NOT NULL AND m.GiderInd > 0
UNION ALL
SELECT        h.Owner, h.TipInd, h.GirisTarihi, t .TipAdi AS Yer, h.Aciklama, h.GiderInd, hes.HesapKodu AS GiderKodu, h.GiderAdi, NULL AS Maas, CASE WHEN h.KDVOrani IS NULL THEN h.Tutar ELSE h.Tutar / (1 + h.KDVOrani / 100) 
                         END AS Matrah, ((h.Tutar / (1 + h.KDVOrani / 100)) * KDVOrani) / 100 AS KDV, h.Tutar, /*0.00 AS TahsilatTutari,*/ h.CariHesapAdi, CASE WHEN h.TipInd = 508 THEN ISNULL(h.BaslikInd, 0) ELSE NULL END AS BaslikInd, 
                         CASE WHEN h.TipInd = 508 THEN ISNULL(h.PersonelHesapInd, 0) ELSE NULL END AS PersonelHesapInd, CASE WHEN h.TipInd = 508 THEN ISNULL(h.VardiyaKartInd, 0) ELSE NULL END AS VardiyaKartInd
FROM            Hareketler AS h LEFT JOIN
                         Tipler AS t ON t .Ind = h.TipInd LEFT JOIN
                         Hesaplar AS hes ON hes.Ind = h.GiderInd
WHERE        (h.TipInd = 13 OR
                         h.TipInd = 15 OR
                         h.TipInd = 14 OR
                         h.TipInd = 18 OR
                         h.TipInd = 22 OR
                         h.TipInd = 26 OR
                         h.TipInd = 28 OR
                         h.TipInd = 508) AND h.GiderInd IS NOT NULL AND h.GiderInd > 0
UNION ALL
SELECT        h.Owner, h.TipInd, b.Tarih, t .TipAdi AS Yer, h.Aciklama, h.GiderInd, h.GiderKodu, h.GiderAdi, NULL AS Maas, h.Fiyat AS Matrah, /*h.Tutar as Matrah,*/ ((h.Tutar / (1 + h.KDVOrani / 100)) * KDVOrani) / 100 AS KDV, h.Tutar, 
                         h.CariHesapAdi, NULL AS BaslikInd, NULL AS PersonelHesapInd, NULL AS VardiyaKartInd
FROM            Hareketler AS h LEFT JOIN
                         Tipler AS t ON t .Ind = h.TipInd LEFT JOIN
                         Basliklar AS b ON b.Ind = h.BaslikInd 
						 --LEFT JOIN FaturaOzet2 AS f ON f.Ind = h.BaslikInd
WHERE        h.TipInd = 57 AND b.GiderInd IS NULL

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[IrsaliyeVeVeresiyeFisHareketleri]
AS
	SELECT
		b.Ind, 
		b.Owner, 
		b.TipInd, 
		b.HesapInd, 
		b.HesapKodu, 
		b.HesapAdi, 
		b.Tarih AS IslemTarihi, 
		b.BelgeNo, 
		t.TipAdi AS IslemTipi, 
		h.StokInd,
		h.Miktar,
		h.Carpan,
		h.Fiyat,
		h.Miktar * h.Fiyat * h.Carpan AS Tutar, 
		h.YazarKasaFisNo, 
		(
			CASE WHEN (b.FaturaInd IS NULL OR b.FaturaInd < 1) THEN
				CASE WHEN (b.DurumInd = 11) THEN
					'İptal Edilmiş'
				ELSE
					'Faturalandırılmamış'
				END
			ELSE 
				'Faturalandırılmış' END
		) AS Durum,
		(
			CASE WHEN (b.FaturaInd IS NULL OR b.FaturaInd < 1) THEN 
				CAST(0 as bit) 
			ELSE 
				CAST(1 as bit) 
			END
		) AS FaturalandirilmaDurumu
	FROM         
		dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN
        dbo.Basliklar AS b WITH(NOLOCK) ON b.Ind = h.BaslikInd LEFT OUTER JOIN
        dbo.Tipler AS t WITH(NOLOCK) ON t.Ind = b.TipInd
	WHERE     
		(b.TipInd IN (103, 104)) AND (h.TipInd IN (2, 5))
	UNION ALL
	SELECT     
		b.Ind, 
		b.Owner, 
		b.TipInd, 
		b.HesapInd, 
		b.HesapKodu, 
		b.HesapAdi, 
		b.Tarih AS İslemTarihi, 
		b.BelgeNo, 
		t.TipAdi AS IslemTipi, 
        h.StokInd,
		h.Miktar,
		h.Carpan,
		h.Fiyat,
		h.Miktar * h.Fiyat * h.Carpan AS Tutar, 
		h.YazarKasaFisNo, 
		(
			CASE WHEN (b.FaturaInd IS NULL OR b.FaturaInd < 1) THEN 
				CASE WHEN (b.DurumInd = 11) THEN
					'İptal Edilmiş'
				ELSE
					'Faturalandırılmamış'
				END
			ELSE 
				'Faturalandırılmış' END
		) AS Durum,
		(
			CASE WHEN (b.FaturaInd IS NULL OR b.FaturaInd < 1) THEN 
				CAST(0 as bit) 
			ELSE 
				CAST(1 as bit) END
		) AS FaturalandirilmaDurumu
	FROM         
		dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN
        dbo.Basliklar AS b WITH(NOLOCK) ON b.Ind = h.BaslikInd LEFT OUTER JOIN
        dbo.Tipler AS t WITH(NOLOCK) ON t.Ind = b.TipInd
	WHERE     
		(h.TipInd IN (37)) AND (b.TipInd = 111)

GO
CREATE VIEW [dbo].[KasaVirmanHareketleri]
AS
SELECT
	h.Ind,
	h.HedefInd as Owner,
	h.TipInd,
	h.GirisTarihi,
	h.AktarimTarihi,
	h.HedefInd,
	h.HedefKodu,
	h.HedefAdi,
	h.KaynakInd,
	h.KaynakKodu,
	h.KaynakAdi,
	h.ParaBirimi,
	h.Kur,
	h.Aciklama, 
	h.Tutar as GirenTutar,
	0.00 as CikanTutar,
	h.Aktarildi 
FROM Hareketler as h WITH(NOLOCK)
WHERE h.TipInd = 85

UNION ALL

SELECT
	h.Ind,
	h.KaynakInd as Owner,
	h.TipInd,
	h.GirisTarihi,
	h.AktarimTarihi,
	h.HedefInd,
	h.HedefKodu,
	h.HedefAdi,
	h.KaynakInd,
	h.KaynakKodu,
	h.KaynakAdi,
	h.ParaBirimi,
	h.Kur,
	h.Aciklama, 
	0.00 as GirenTutar,
	h.Tutar as CikanTutar,
	h.Aktarildi 

FROM Hareketler as h WITH(NOLOCK)
WHERE h.TipInd = 85



GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CarilerinSonFaturaTarihiListesi]
AS 
SELECT 
			Hesaplar.Owner,
			
			(CASE WHEN (Hesaplar.Owner IS NULL)
			 THEN 0
			 ELSE NULL
			 END) AS OwnerSG,
			Hesaplar.Ind,
			Hesaplar.TipInd,
			Hesaplar.HesapKodu,
			Hesaplar.HesapAdi,
			Hesaplar.OzelKodu,
			Hesaplar.TeminatKodu,
			Hesaplar.Telefon,
			Hesaplar.GSM,
			Hesaplar.Faks,
			MAX(f.GirisTarihi) as SonFaturaTarihi
FROM Hesaplar WITH(NOLOCK)
LEFT JOIN FaturaOzet2 as f WITH(NOLOCK) ON f.TipInd = 6 AND f.HesapInd = Hesaplar.Ind
WHERE Hesaplar.TipInd = 201
GROUP BY
	Hesaplar.Owner,
	Hesaplar.Ind,
	Hesaplar.TipInd,
	Hesaplar.HesapKodu,
	Hesaplar.HesapAdi,
	Hesaplar.OzelKodu,
	Hesaplar.TeminatKodu,
	Hesaplar.Telefon,
	Hesaplar.GSM,
	Hesaplar.Faks
GO
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [dbo].[BankaHesapHareketleri]
AS

SELECT
	h.Ind,
	h.Owner,
    h.HedefBankaHesapKodu as KarsiBankaHesapKodu,
	h.HedefBankaHesapAdi as KarsiBankaHesapAdi,
	h.HedefBankaInd as KarsiBankaHesapInd,
	h.BankaHesapKodu as AsilBankaHesapKodu,
	h.BankaHesapAdi as AsilBankaHesapAdi,
	h.BankaHesapInd as AsilBankaHesapInd,
	h.GiderKodu as GiderKodu,
	h.GiderAdi as GiderAdi,
	h.GiderInd as GiderInd,
	h.GelirKodu as GelirKodu,
	h.GelirAdi as GelirAdi,
	h.GelirInd as GelirInd,
	h.TipInd,
	h.BankaHesapInd,
	h.BankaHesapKodu,
	h.BankaHesapAdi,
	h.GirisTarihi,
	h.Aciklama,
	h.PersonelHesapInd,
	h.PersonelHesapKodu,
	h.PersonelHesapAdi,
	null as Bakiye,
	(CASE WHEN h.VardiyaKartInd IS NOT NULL 
				THEN CAST(b.VardiyaNo as nvarchar)+'.Vardiya' 
				ELSE NULL
				END) as BelgeNo,
	(CASE WHEN (h.TipInd IN (12,17,27))
		THEN h.Tutar
		ELSE 0.00
	END) as Yatirilan,
	(CASE WHEN (h.TipInd IN (15,19,22,28))
		THEN h.Tutar
		WHEN h.TipInd = 21 AND h.ParaBirimi = 'TL'
		THEN h.Tutar / ISNULL(h.Kur,1) 
		WHEN h.TipInd = 21 AND h.ParaBirimi != 'TL' AND h.ParaBirimi != hsp.ParaBirimi
		THEN h.Tutar * ISNULL(h.Kur,1)
		WHEN h.TipInd = 21
		THEN h.Tutar
		ELSE 0.00
	END) as Cekilen,
	h.CariHesapInd,
	h.CariHesapAdi,
	h.CariHesapKodu,
	null AS HesapKodu,
	h.ParaBirimi as ParaBirimi
FROM Hareketler as h WITH(NOLOCK)
LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd
LEFT JOIN Hesaplar hsp WITH(NOLOCK) ON hsp.Ind=h.BankaHesapInd  
WHERE h.TipInd IN (12,15,17,19,21,22,27,28)

UNION ALL

SELECT
	h.Ind,
	h.Owner,
	h.HedefBankaHesapKodu as KarsiBankaHesapKodu,
	h.HedefBankaHesapAdi as KarsiBankaHesapAdi,
	h.HedefBankaInd as KarsiBankaHesapInd,
    h.BankaHesapKodu as AsilBankaHesapKodu,
	h.BankaHesapAdi as AsilBankaHesapAdi,
	h.BankaHesapInd as AsilBankaHesapInd,
	h.GiderKodu as GiderKodu,
	h.GiderAdi as GiderAdi,
	h.GiderInd as GiderInd,
	h.GelirKodu as GelirKodu,
	h.GelirAdi as GelirAdi,
	h.GelirInd as GelirInd,
	h.TipInd,
	hsp.Ind as BankaHesapInd,
	hsp.HesapKodu as BankaHesapKodu,
	hsp.HesapAdi as BankaHesapAdi,
	h.GirisTarihi,
	h.Aciklama,
	h.PersonelHesapInd,
	h.PersonelHesapKodu,
	h.PersonelHesapAdi,
	null as Bakiye,
	CASE WHEN h.VardiyaKartInd IS NOT NULL 
				THEN CAST(b.VardiyaNo as nvarchar)+'.Vardiya' 
				ELSE NULL
				END as BelgeNo,
	h.Tutar as  Yatirilan,
	0.00 as Cekilen,
    h.CariHesapInd,
	h.CariHesapAdi,
	h.CariHesapKodu,
	null AS HesapKodu,
	h.ParaBirimi as ParaBirimi
FROM Hareketler as h WITH(NOLOCK)
LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd 
LEFT JOIN Hesaplar hsp WITH(NOLOCK) ON hsp.Ind=h.HedefBankaInd 
WHERE h.TipInd = 21
--SELECT
--	h.Ind,
--	h.Owner,
--	h.TipInd,
--	h.HedefBankaInd as BankaHesapInd,
--	h.HedefBankaHesapKodu as BankaHesapKodu,
--	h.HedefBankaHesapAdi as BankaHesapAdi,
--	h.GirisTarihi,
--	h.Aciklama,
--	h.PersonelHesapInd,
--	h.PersonelHesapKodu,
--	null as Bakiye,
--	CASE WHEN h.VardiyaKartInd IS NOT NULL 
--				THEN CAST(b.VardiyaNo as nvarchar)+'.Vardiya' 
--				ELSE NULL
--				END as BelgeNo,
--	h.Tutar as  Yatirilan,
--	0.00 as Cekilen,
--    h.CariHesapInd,
--	h.CariHesapAdi
--FROM Hareketler as h
--LEFT JOIN Basliklar as b ON b.Ind = h.VardiyaKartInd 
--WHERE h.TipInd = 21

UNION ALL

SELECT
	h.Ind,
	h.Owner,
	h.HedefBankaHesapKodu as KarsiBankaHesapKodu,
	h.HedefBankaHesapAdi as KarsiBankaHesapAdi,
	h.HedefBankaInd as KarsiBankaHesapInd,
	h.BankaHesapKodu as AsilBankaHesapKodu,
	h.BankaHesapAdi as AsilBankaHesapAdi,
	h.BankaHesapInd as AsilBankaHesapInd,
	h.GiderKodu as GiderKodu,
	h.GiderAdi as GiderAdi,
	h.GiderInd as GiderInd,
	h.GelirKodu as GelirKodu,
	h.GelirAdi as GelirAdi,
	h.GelirInd as GelirInd,
	h.TipInd,
	h.CiroBankaInd as BankaHesapInd,
	h.CiroBankaKodu as BankaHesapKodu,
	h.CiroBankaAdi as BankaHesapAdi,
	h.IslemTarihi as GirisTarihi,
	h.Aciklama,
	null as PersonelHesapInd,
	null as PersonelHesapKodu,
	null as PersonelHesapAdi,
	null as Bakiye,
	h.CekNo as BelgeNo,
	h.Tutar as Yatirilan,
	0.00 as Cekilen,
    h.CariHesapInd,
	h.CariHesapAdi,
	h.CariHesapKodu,
	null AS HesapKodu,
	h.ParaBirimi as ParaBirimi
FROM Hareketler as h WITH(NOLOCK)
WHERE 
	h.TipInd = 11
	AND h.DurumInd = 8

UNION ALL

SELECT
	h.Ind,
	h.Owner,
	h.HedefBankaHesapKodu as KarsiBankaHesapKodu,
	h.HedefBankaHesapAdi as KarsiBankaHesapAdi,
	h.HedefBankaInd as KarsiBankaHesapInd,
	h.BankaHesapKodu as AsilBankaHesapKodu,
	h.BankaHesapAdi as AsilBankaHesapAdi,
	h.BankaHesapInd as AsilBankaHesapInd,
	h.GiderKodu as GiderKodu,
	h.GiderAdi as GiderAdi,
	h.GiderInd as GiderInd,
	h.GelirKodu as GelirKodu,
	h.GelirAdi as GelirAdi,
	h.GelirInd as GelirInd,
	h.TipInd,
	h.BankaHesapInd,
	h.BankaHesapKodu,
	h.BankaHesapAdi,
	ISNULL(h.IslemTarihi, h.VadeTarihi) as GirisTarihi,
	h.Aciklama,
	null as PersonelHesapInd,
	null as PersonelHesapKodu,
	null as PersonelHesapAdi,
	null as Bakiye,
	h.CekNo as BelgeNo,
	0.00 as Yatirilan,
	h.Tutar as Cekilen,
    h.CariHesapInd,
	h.CariHesapAdi,
	h.CariHesapKodu,
	null AS HesapKodu,
	h.ParaBirimi as ParaBirimi
FROM Hareketler as h WITH(NOLOCK)
WHERE 
	h.TipInd = 14
	AND h.DurumInd = 10

UNION ALL

SELECT
	b.Ind,
	h.Owner,
	h.HedefBankaHesapKodu as KarsiBankaHesapKodu,
	h.HedefBankaHesapAdi as KarsiBankaHesapAdi,
	h.HedefBankaInd as KarsiBankaHesapInd,
	h.BankaHesapKodu as AsilBankaHesapKodu,
	h.BankaHesapAdi as AsilBankaHesapAdi,
	h.BankaHesapInd as AsilBankaHesapInd,
	h.GiderKodu as GiderKodu,
	h.GiderAdi as GiderAdi,
	h.GiderInd as GiderInd,
	h.GelirKodu as GelirKodu,
	h.GelirAdi as GelirAdi,
	h.GelirInd as GelirInd,
	h.TipInd,
	h.BankaHesapInd,
	h.BankaHesapKodu,
	h.BankaHesapAdi,
	h.GirisTarihi,
	b.Aciklama,
	h.PersonelHesapInd,
	h.PersonelHesapKodu,
	h.PersonelHesapAdi,
	null as Bakiye,
	b.BelgeNo,
	0.00 as Yatirilan,
	(h.Tutar) as Cekilen,
    h.CariHesapInd,
	h.CariHesapAdi,
	h.CariHesapKodu,
	null AS HesapKodu,
	h.ParaBirimi as ParaBirimi
FROM Basliklar as b WITH(NOLOCK)
LEFT  JOIN Hareketler as h WITH(NOLOCK) ON h.BaslikInd = b.Ind
WHERE b.TipInd = 107 AND b.HesapInd IS NOT NULL
	AND h.Tutar >0
--GROUP BY
--	b.Ind,
--	h.Owner,
--	h.TipInd,
--	h.BankaHesapInd,
--	h.BankaHesapKodu,
--	h.BankaHesapAdi,
--	h.GirisTarihi,
--	b.Aciklama,
--	b.BelgeNo,
--    h.CariHesapInd,
--	h.CariHesapAdi

UNION ALL

SELECT
	b.Ind,	
	b.Owner,
	null as KarsiBankaHesapKodu,
	null as KarsiBankaHesapAdi,
	null as KarsiBankaHesapInd,
	null as AsilBankaHesapKodu,
	null as AsilBankaHesapAdi,
	null as AsilBankaHesapInd,
	null as GiderKodu,
	null as GiderAdi,
	null as GiderInd,
	null as GelirKodu,
	null as GelirAdi,
	null as GelirInd,		
	b.TipInd,	
	Hesaplar.BankaInd AS BankaHesapInd,
	h.HesapKodu as BankaHesapKodu,
	h.HesapAdi as BankaHesapAdi,
	b.Tarih AS GirisTarihi, 
	b.Aciklama,
	null as PersonelHesapInd,
	null as PersonelHesapKodu,
	null as PersonelHesapAdi,
	null as Bakiye,
	b.HesapKodu as BelgeNo,
	b.TahsilatTutari as Yatirilan,
	0.00 AS Cekilen	,
    null as CariHesapInd,
	null as CariHesapAdi,
	null as CariHesapKodu,
	b.HesapKodu AS HesapKodu,
	h.ParaBirimi as ParaBirimi
FROM dbo.Basliklar as b WITH(NOLOCK)
INNER JOIN dbo.Hesaplar WITH(NOLOCK) ON b.HesapInd = dbo.Hesaplar.Ind
LEFT JOIN Hesaplar as h WITH(NOLOCK) ON Hesaplar.BankaInd = h.Ind
WHERE (b.TipInd = 105)

UNION ALL

SELECT
	b.Ind AS Ind,	
	b.Owner,
    null as KarsiBankaHesapKodu,
	null as KarsiBankaHesapAdi,
	null as KarsiBankaHesapInd,
	null as AsilBankaHesapKodu,
	null as AsilBankaHesapAdi,
	null as AsilBankaHesapInd,
	null as GiderKodu,
	null as GiderAdi,
	null as GiderInd,
	null as GelirKodu,
	null as GelirAdi,
	null as GelirInd,				
	b.TipInd,	
	Hesaplar.BankaInd AS BankaHesapInd,
	h.HesapKodu as BankaHesapKodu,
	h.HesapAdi as BankaHesapAdi,
	b.Tarih AS GirisTarihi, 
	'Komisyon' as Aciklama,
	null as PersonelHesapInd,
	null as PersonelHesapKodu,
	null as PersonelHesapAdi,
	null as Bakiye,
	b.HesapKodu as BelgeNo,
	0.00 as Yatirilan,
	CASE WHEN b.Iskonto IS NOT NULL THEN --önceki tahsilatların banka komisyon oranlarını kaybetmemek üzere tahsil esnasındaki komisyon oranı başlığa eklendi
	b.TahsilatTutari * b.Iskonto / 100
	ELSE
	b.TahsilatTutari * Hesaplar.BankaKomisyon / 100
	END AS Cekilen,
    null as CariHesapInd,
	null as CariHesapAdi,
	null as CariHesapKodu,
	b.HesapKodu AS HesapKodu,
	h.ParaBirimi as ParaBirimi
FROM dbo.Basliklar as b WITH(NOLOCK)
INNER JOIN dbo.Hesaplar WITH(NOLOCK) ON b.HesapInd = dbo.Hesaplar.Ind
LEFT JOIN Hesaplar as h WITH(NOLOCK) ON Hesaplar.BankaInd = h.Ind
WHERE (b.TipInd = 105)




GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[EskiVardiyaTarihleri]
AS

SELECT 
	DISTINCT Basliklar.Tarih,
	Basliklar.Owner,
	Basliklar.VardiyaNo,
	h.ParaBirimi,
	h.Kur,
	h.AktarimTarihi
FROM Basliklar WITH(NOLOCK)
LEFT JOIN Hareketler as h WITH(NOLOCK) ON h.VardiyaKartInd = Basliklar.Ind AND h.TipInd = 38 
WHERE Basliklar.TipInd = 108 AND h.ParaBirimi IS NOT NULL

GO
CREATE VIEW [dbo].[KasaHareketleri]
AS
SELECT
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	(
		CASE WHEN (h.TipInd In (7))
		THEN ISNULL(h.Tutar,0)
		ELSE 0.00
		END
	) as Giren,
	(
		CASE WHEN (h.TipInd In (8))
		THEN ISNULL(h.Tutar,0)
		ELSE 0.00
		END
	) as Cikan,
	null as HesapAdi, 
	null as HesapKodu, 
	h.Aciklama,
	h.GirisTarihi,
	h.AktarimTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd, 
	0.00 AS Bakiye,
	h.Aktarildi,
	h.KasaTahsilatInd 
FROM Hareketler as h WITH(NOLOCK)
WHERE (h.TipInd in (7,8))

UNION ALL 

SELECT
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	ISNULL(h.Tutar,0)  as Giren,
	0.00 as Cikan,
	h.CariHesapAdi as HesapAdi, 
	h.CariHesapKodu as HesapKodu, 
	isnull(h.GelirAdi ,'') + ' ' + isnull(h.Aciklama,'') as Aciklama,
	h.GirisTarihi,
	h.AktarimTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Aktarildi,
	h.KasaTahsilatInd 	
FROM Hareketler as h WITH(NOLOCK)
WHERE (h.TipInd = 9 
	AND h.VardiyaKartInd IS NULL 
	AND h.Tutar>0 )
	AND h.KasayaIslensinMi IS NULL 

UNION ALL 

SELECT
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	0.00  as Giren,
	ISNULL(h.Tutar,0) as Cikan,
	h.CariHesapAdi as HesapAdi, 
	h.CariHesapKodu as HesapKodu, 
	isnull(h.GiderAdi ,'') + ' ' + isnull(h.Aciklama,'') as Aciklama,
	h.GirisTarihi,
	h.AktarimTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Aktarildi,
	h.KasaTahsilatInd 
FROM Hareketler as h WITH(NOLOCK)
WHERE (h.TipInd = 13 
	AND h.VardiyaKartInd IS NULL 
	AND h.Tutar>0 )
	AND h.KasayaIslensinMi IS NULL 

UNION ALL

SELECT
	k.Ind,
	0 as KdvOrani,
	k.Owner,
	k.TipInd,
	null,
	null,
	null,
	null as MuhasebeKodu,
	k.ParaBirimi,
	CASE WHEN k.Kur > 0 THEN k.Kur ELSE Case k.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	ISNULL(k.GirenTutar,0) as Giren,
	0.00 as Cikan,
	null as HesapAdi, 
	null as HesapKodu, 
	k.Aciklama,
	k.GirisTarihi,
	k.AktarimTarihi,
	null as VadeTarihi,
	null as VardiyaKartInd, 
	0.00 AS Bakiye,
	k.Aktarildi,
	null as KasaTahsilatInd
FROM KasaVirmanHareketleri as k WITH(NOLOCK)
WHERE k.GirenTutar > 0

UNION ALL

SELECT
	k.Ind,
    0 as KdvOrani,
	k.Owner,
	k.TipInd,
	null,
	null,
	null,
	null as MuhasebeKodu,
	k.ParaBirimi,
	CASE WHEN k.Kur > 0 THEN k.Kur ELSE Case k.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	0.00 as Giren,
	ISNULL(k.CikanTutar,0) as Cikan,
	null as HesapAdi, 
	null as HesapKodu, 
	k.Aciklama,
	k.GirisTarihi,
	k.AktarimTarihi,
	null as VadeTarihi,
	null as VardiyaKartInd
	, 0.00 AS Bakiye,
	k.Aktarildi,
	null as KasaTahsilatInd
FROM KasaVirmanHareketleri as k WITH(NOLOCK)
WHERE k.CikanTutar > 0

UNION ALL

SELECT
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	ISNULL(h.Tutar,0) as Giren,
	0.00 as Cikan,
	h.CariHesapAdi as HesapAdi, 
	h.CariHesapKodu as HesapKodu, 
	h.Aciklama,
	h.IslemTarihi as GirisTarihi,
	h.VadeTarihi as VadeTarihi,
	h.AktarimTarihi as AktarimTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Aktarildi,
	h.KasaTahsilatInd 
FROM Hareketler as h WITH(NOLOCK)
WHERE h.TipInd = 11 
	AND h.DurumInd=5 
	AND h.VardiyaKartInd IS NULL

UNION ALL

SELECT
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	Hesaplar.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	(
		CASE WHEN (h.TipInd In (19))
		THEN ISNULL(h.Tutar,0)
		ELSE 0.00
		END
	) as Giren,
	(
		CASE WHEN (h.TipInd In (17))
		THEN ISNULL(Tutar,0)
		ELSE 0.00
		END
	) as Cikan,
	h.BankaHesapAdi as HesapAdi, 
	h.BankaHesapKodu as HesapKodu, 
	h.Aciklama,
	h.GirisTarihi,
	h.AktarimTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd	
	, 0.00 AS Bakiye,
	h.Aktarildi,
	h.KasaTahsilatInd 
FROM Hareketler as h WITH(NOLOCK)
LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.BankaHesapInd
WHERE h.TipInd in (17,19) 
	AND h.VardiyaKartInd IS NULL

UNION ALL

SELECT 
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	ISNULL(h.Tutar,0) AS Giren,
	0 AS Cikan,
	h.GelirAdi AS HesapAdi,
	h.GelirKodu AS HesapKodu,
	h.Aciklama,
	h.GirisTarihi,
	h.AktarimTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Aktarildi, 
	h.KasaTahsilatInd
FROM Hareketler as h WITH(NOLOCK)
WHERE h.TipInd = 25
	AND h.VardiyaKartInd IS NULL 

UNION ALL

SELECT 
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	0 AS Giren,
	ISNULL(h.Tutar,0) AS Cikan,
	h.GiderAdi AS HesapAdi,
	h.GiderKodu AS HesapKodu,
	h.Aciklama,
	h.GirisTarihi,
	h.AktarimTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Aktarildi,
	h.KasaTahsilatInd 
FROM Hareketler as h WITH(NOLOCK)
WHERE h.TipInd = 26 
	AND h.VardiyaKartInd IS NULL

UNION ALL

SELECT
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	(
		CASE WHEN (h.TipInd In (20))
		THEN ISNULL(h.Tutar,0)
		ELSE 0.00
		END
	) as Giren,
	(
		CASE WHEN (h.TipInd In (18))
		THEN ISNULL(h.Tutar, 0)
		ELSE 0.00
		END
	) as Cikan,
	h.PersonelHesapAdi as HesapAdi, 
	h.PersonelHesapKodu as HesapKodu, 
	h.Aciklama,
	h.GirisTarihi,
	h.AktarimTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Aktarildi,
	h.KasaTahsilatInd 
FROM Hareketler as h WITH(NOLOCK)
WHERE h.TipInd IN (18,20) 
	AND h.VardiyaKartInd IS NULL
	AND h.KasayaIslensinMi IS NULL 



UNION ALL

SELECT 
	e.VardiyaNo AS Ind,
    0 as KdvOrani,
	e.Owner,
	38 as TipInd,	
	null,
	null,	
	null,	
	null as MuhasebeKodu,
	e.ParaBirimi,
	CASE WHEN e.Kur > 0 THEN e.Kur ELSE Case e.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	SUM(CASE WHEN(h.ParaBirimi = e.ParaBirimi AND h.TipInd = 38)
		THEN ISNULL(h.Tutar,0)
		ELSE 0.00
		END) as Giren,
	0.00 as Cikan,
	CAST(e.VardiyaNo AS varchar(50)) + '. Vardiya' as HesapAdi,
	NULL AS HesapKodu,
	'Vardiya kabul' AS Aciklama,
	e.Tarih AS GirisTarihi,
	e.AktarimTarihi AS AktarimTarihi,
	NULL AS VadeTarihi,
	NULL as VardiyaKartInd, 
	0.00 AS Bakiye,
	h.Aktarildi,
	h.KasaTahsilatInd
FROM EskiVardiyaTarihleri as e WITH(NOLOCK)
LEFT JOIN Basliklar WITH(NOLOCK) ON Basliklar.TipInd = 108 AND Basliklar.Tarih = e.Tarih AND Basliklar.VardiyaNo = e.VardiyaNo AND Basliklar.Owner = e.Owner
LEFT JOIN Hareketler as h WITH(NOLOCK) ON h.VardiyaKartInd = Basliklar.Ind AND h.TipInd = 38  AND e.ParaBirimi = h.ParaBirimi
WHERE Basliklar.TipInd = 108 
	AND Basliklar.Tarih = e.Tarih
	AND Basliklar.Owner = e.Owner
	AND Basliklar.VardiyaNo = e.VardiyaNo
	AND e.ParaBirimi = h.ParaBirimi
GROUP BY 
	e.ParaBirimi,
	e.Kur,
	e.VardiyaNo,
	e.Owner,
	e.Tarih,
	e.AktarimTarihi,
	h.TipInd,
	h.Aktarildi,
	h.KDVOrani,
	h.KasaTahsilatInd 

UNION ALL

SELECT
	b.Ind as Ind,
	h.KDVOrani,
	b.Owner,
	h.TipInd as TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	ISNULL(h.Tutar,0) as Giren,
	0.00 as Cikan,
	h.PersonelHesapAdi as HesapAdi, 
	h.PersonelHesapKodu as HesapKodu,  
	'Vardiya kabul' as Aciklama,
	b.Tarih as GirisTarihi,
	h.AktarimTarihi as AktarimTarihi,
	null as VadeTarihi,
	null as VardiyaKartInd, 
	0.00 AS Bakiye,
	h.Aktarildi,
	h.KasaTahsilatInd 
FROM Basliklar as b WITH(NOLOCK)
LEFT JOIN Hareketler as h WITH(NOLOCK) ON h.BaslikInd = b.Ind
WHERE
	b.TipInd = 505
	AND h.TipInd = 38

UNION ALL

SELECT 
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd AS TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	0.00 AS Giren,
	h.Tutar AS Cikan,
	h.PersonelHesapAdi AS HesapAdi,
	h.PersonelHesapKodu AS HesapKodu,
	Basliklar.Aciklama AS Aciklama,
	h.GirisTarihi AS GirisTarihi,
	h.AktarimTarihi AS AktarimTarihi,
	null AS VadeTarihi, 
	null as VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Aktarildi,
	h.KasaTahsilatInd 
FROM Hareketler as h WITH(NOLOCK)
LEFT JOIN  Basliklar WITH(NOLOCK) ON h.BaslikInd = Basliklar.Ind
WHERE  h.TipInd = 31
	AND Basliklar.TipInd = 107
	AND Basliklar.HesapInd IS NULL 
	AND h.Tutar >0
GO



GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CariIrsaliyeTutarListesi]
AS
WITH IrsaliyeDokum(Ind, HesapKodu, HesapAdi, AlisTutar, SatisTutar) AS (SELECT     dbo.Basliklar.HesapInd, dbo.Basliklar.HesapKodu, dbo.Basliklar.HesapAdi, 
                       (CASE WHEN Hareketler.TipInd = 2 THEN Miktar * Fiyat ELSE 0 END) 
                       AS AlisTutar, 
                       (CASE WHEN Hareketler.TipInd = 5 THEN Miktar * Fiyat ELSE 0 END) 
                       AS SatisTutar
 FROM         dbo.Hareketler WITH(NOLOCK) LEFT OUTER JOIN
                       dbo.Basliklar WITH(NOLOCK) ON dbo.Hareketler.BaslikInd = dbo.Basliklar.Ind
 WHERE     (dbo.Hareketler.TipInd IN (2, 5)) AND (dbo.Hareketler.DurumInd IS NULL) AND 
                       (dbo.Basliklar.HesapInd > 0)
 UNION ALL
 SELECT     Basliklar_1.HesapInd, Basliklar_1.HesapKodu, Basliklar_1.HesapAdi, 
                       0 AS AlisTutar, Hareketler_1.Miktar * Hareketler_1.Fiyat AS SatisTutar
 FROM         dbo.Basliklar AS Basliklar_1 WITH(NOLOCK) INNER JOIN
                       dbo.Hareketler AS Hareketler_1 WITH(NOLOCK) ON 
                       Basliklar_1.Ind = Hareketler_1.BaslikInd
 WHERE     (Basliklar_1.TipInd = 111) AND (Hareketler_1.TipInd = 37) AND 
                       (Basliklar_1.DurumInd IS NULL) AND (Basliklar_1.FisPortfoyu IS NULL OR
                       Basliklar_1.FisPortfoyu = 0) AND (Hareketler_1.DurumInd IS NULL) AND 
                       (Basliklar_1.HesapInd > 0))

    SELECT     TOP (100) PERCENT Ind, HesapKodu, HesapAdi, SUM(AlisTutar) AS Alis, SUM(SatisTutar) AS Satis, SUM(SatisTutar - AlisTutar) AS Tutar
     FROM         IrsaliyeDokum AS IrsaliyeDokum_1 WITH(NOLOCK)
     GROUP BY Ind, HesapKodu, HesapAdi
     ORDER BY Ind
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KrediKartiTahsilat]
AS

SELECT
	b.Ind,
	b.Owner,
	b.TahsilatTutari,
	b.HesapInd,
	(CASE WHEN(b.TahsilatTutari >0)
		THEN(SUM(h.Tutar) - b.TahsilatTutari) 
		ELSE 0
	END)as TahsilatDevir

FROM Basliklar as b WITH(NOLOCK)
LEFT JOIN Hareketler as h WITH(NOLOCK) ON h.BaslikInd = b.Ind
WHERE b.TipInd = 105 AND b.TahsilatTutari >0
GROUP BY 
	b.Owner,
	b.HesapInd,
	b.Ind,
	b.TahsilatTutari--,
	--b.TahsilatTutari

GO
CREATE VIEW [dbo].[YeniVardiyaSayacHareketleri]
AS
SELECT     dbo.Hareketler.Ind, dbo.Hareketler.Owner, dbo.Hareketler.TipInd, dbo.Hareketler.Tutar, dbo.Hareketler.Fiyat, dbo.Hareketler.SayacInd, 
                      dbo.Hareketler.SayacAdi, dbo.Hareketler.SayacKodu, (dbo.Hareketler.YeniEndeks - dbo.Hareketler.EskiEndeks-dbo.Hareketler.Aktarma) AS Fark, dbo.Hareketler.VardiyaKartInd, 
                      b.Tarih, b.VardiyaNo, 'Vardiya kabul' as Aciklama, dbo.Hareketler.Aktarma, dbo.HesapDetaylari.DepoInd, dbo.Hesaplar.StokInd
FROM         dbo.Hareketler WITH(NOLOCK) LEFT OUTER JOIN
                      dbo.Basliklar AS b WITH(NOLOCK) ON dbo.Hareketler.VardiyaKartInd = b.Ind LEFT OUTER JOIN
                      dbo.HesapDetaylari WITH(NOLOCK) ON dbo.Hareketler.SayacInd = dbo.HesapDetaylari.Ind LEFT OUTER JOIN
                      dbo.Hesaplar WITH(NOLOCK) ON dbo.Hesaplar.Ind = dbo.HesapDetaylari.DepoInd
WHERE     (dbo.Hareketler.TipInd = 44) AND (b.TipInd = 109)

GO
CREATE VIEW [dbo].[_DepoHareket]
AS
SELECT
	g.DepoInd,
	g.Owner as HesapOwner,
	g.StokInd,
	null as StokOwner,	--Stoklar.Owner AS StokOwner,
	g.Belge AS BelgeNo,
	g.Aciklama,
	g.Tarih,
	g.Giren,
	g.Cikan,
	g.Ind AS gInd,
	ISNULL(g.Fiyat, 0) AS Fiyat,
	g.TipIndAltHareket,
	g.TipInd
FROM
	GirisCikisHareketleri as g WITH(NOLOCK)
	--LEFT JOIN Stoklar ON Stoklar.Ind = g.StokInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[SatisHareketleri]
AS
	SELECT 
		h.Ind,
		0 AS hInd,
		h.TipInd,
		h.StokInd,
		h.Fiyat,
		b.Tarih
		,0 AS KullaniciInd
	FROM Hareketler as h WITH(NOLOCK)
	LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind
	WHERE h.TipInd = 6
	AND (b.Aktif IS NULL OR b.Aktif = 1)
	UNION ALL
	SELECT 
		h.Ind,
		0 AS hInd,
		h.TipInd,
		h.StokInd,
		h.Fiyat,
		h.Tarih
		,0 AS KullaniciInd
	FROM EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
	WHERE h.TipInd = 39 AND h.Fiyat != 0
	UNION ALL
	SELECT 
		h.Ind,
		0 AS hInd,
		h.TipInd,
		h.StokInd, 
		h.Fiyat,
		b.Tarih
		,0 AS KullaniciInd
	FROM Hareketler as h WITH(NOLOCK)
	LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd AND b.TipInd = 108
	WHERE h.TipInd = 40
	UNION ALL
	SELECT
		h.Ind,
		h.Ind AS hInd,
		h.TipInd,
		h.StokInd,
		h.Fiyat,
		b.Tarih
		,sk.KullaniciInd
	FROM 
		SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0	
GO

CREATE FUNCTION [dbo].[SonAlisFiyatlar] 
(	
	@Tarih datetime,
	@Owner INT
)
RETURNS @AFTable TABLE
(
	Owner int,
	Tarih datetime,
	StokInd int,
	Position int, 
	Fiyat decimal(28, 8),
	BirimAdi nvarchar(max),
	KDVOrani decimal(28, 8),
	HesapInd int,
	Iskonto decimal(28,8),
	HareketBaslikIskonto decimal(28,8),
	Miktar decimal(28,8),
	GenePosition int
	
)
AS
BEGIN
	IF (@Owner > 0)
		INSERT INTO @AFTable
			SELECT * FROM 
				(SELECT 
					*,
					ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Owner DESC, Tarih DESC) AS GenePosition
					FROM 
					(
						SELECT
							*
						FROM
							AlisFiyatlariForGenelKural
						WHERE
							(AlisFiyatlariForGenelKural.Tarih <= @Tarih) 
							AND
							(Owner IS NULL 
							OR
							Owner = @Owner)
					) AS Fiyatlar) AS GeneFiyatlar  
			WHERE 
				GenePosition = 1
	ELSE IF (@Owner = 0)
		INSERT INTO @AFTable
			SELECT * FROM
				(SELECT 
					*,
					ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Owner DESC, Tarih DESC) AS GenePosition  
				FROM 
					(
						SELECT
							*
						FROM
							AlisFiyatlariForGenelKural WITH(NOLOCK)
						WHERE
							(AlisFiyatlariForGenelKural.Tarih <= @Tarih) 
							AND
							Owner IS NULL
							--OR
							--Owner = (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True')
					) AS Fiyatlar) AS GeneFiyatlar 
			WHERE 
				GenePosition = 1
	--DECLARE @x int
    --SELECT @x=COUNT(*) FROM @AFTable
	--IF(@x=0)
		INSERT INTO @AFTable
			SELECT * FROM
				(SELECT 
					*,
					ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Owner DESC, Tarih DESC) AS GenePosition  
				FROM 
					(
						SELECT
							*
						FROM
							AlisFiyatlariForGenelKural
						WHERE
							(AlisFiyatlariForGenelKural.Tarih <= @Tarih)
							AND StokInd NOT IN (SELECT StokInd FROM @AFTable)
					) AS Fiyatlar) AS GeneFiyatlar  
			WHERE 
				GenePosition = 1
	RETURN
END
--RETURNS TABLE 
--AS
--RETURN 
--(
--	WITH Fiyatlar(StokInd,Position,Fiyat, BirimAdi, KDVOrani)
--	AS
--	(
--		SELECT 
--			Tarih
--			StokInd, 
--			ROW_NUMBER() OVER(
--			PARTITION BY StokInd 
--			ORDER BY Owner DESC, Ind DESC, Tarih DESC) AS Position, 
--			Fiyat,
--			BirimAdi,
--			KDVOrani
--		FROM AlisHareketleri
--		WHERE 
--			(AlisHareketleri.Tarih<=@Tarih) 
--			--AND
--			--Owner IS NULL OR
--			--Owner IN (SELECT CASE WHEN @Owner > 0 THEN @Owner ELSE Ind END FROM Subeler)
--	)
--	SELECT NULL AS Owner, Fiyatlar.*
--	FROM Fiyatlar
--	WHERE Position = 1
--)



GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[SonSatisFiyatlar] 
(	
	@Tarih datetime,
	@TipInd int
	, @KullaniciInds nvarchar(max)
)
RETURNS @dokum TABLE
(
	Owner int,
	StokInd int,
	Position int,
	Fiyat decimal (28,8)
) 
AS
BEGIN
	IF(@TipInd = 504) -- Market + Vardiya
		INSERT INTO @dokum
			SELECT * FROM
			(
				SELECT null as Owner, StokInd, 
				  ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Tarih DESC) AS Position, 
					Fiyat
				FROM SatisHareketleri
				WHERE 
					(SatisHareketleri.Tarih<=@Tarih)
					AND (SatisHareketleri.TipInd = 40 OR SatisHareketleri.TipInd = @TipInd)
					AND (SatisHareketleri.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or SatisHareketleri.KullaniciInd = 0)
			)AS Result
			WHERE Position=1
	ELSE IF(@TipInd = 40) -- Vardiya
		INSERT INTO @dokum
			SELECT * FROM
			(
				SELECT null as Owner, StokInd, 
				  ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Tarih DESC) AS Position, 
					Fiyat
				FROM SatisHareketleri
				WHERE 
					(SatisHareketleri.Tarih<=@Tarih)
					AND (SatisHareketleri.TipInd = @TipInd)
			)AS Result
			WHERE Position=1
	ELSE IF(@TipInd = 5042) -- Market
		INSERT INTO @dokum
			SELECT * FROM
			(
				SELECT null as Owner, StokInd, 
				  ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Tarih DESC) AS Position, 
					Fiyat
				FROM SatisHareketleri
				WHERE 
					(SatisHareketleri.Tarih<=@Tarih)
					AND (SatisHareketleri.TipInd = 504)
					AND (SatisHareketleri.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')))
			)AS Result
			WHERE Position=1		
	ELSE IF(@TipInd = 1000) -- Akaryakıt
		INSERT INTO @dokum
			SELECT * FROM
			(
				SELECT null as Owner, StokInd, 
				  ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Tarih DESC) AS Position, 
					Fiyat
				FROM SatisHareketleri
				WHERE
					(SatisHareketleri.Tarih<=@Tarih)
					AND (SatisHareketleri.TipInd != 40 OR SatisHareketleri.TipInd != 504)
			)AS Result
			WHERE Position=1
	ELSE IF(@TipInd = 50440) -- Akaryakıt + Market
		INSERT INTO @dokum
			SELECT * FROM
			(
				SELECT null as Owner, StokInd, 
				  ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Tarih DESC) AS Position, 
					Fiyat
				FROM SatisHareketleri
				WHERE 
					(SatisHareketleri.Tarih<=@Tarih)
					AND (SatisHareketleri.TipInd != 40)
					AND (SatisHareketleri.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or SatisHareketleri.KullaniciInd = 0)
			)AS Result
			WHERE Position=1
	ELSE
		INSERT INTO @dokum
			SELECT * FROM
			(
				SELECT null as Owner, StokInd, 
				  ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Tarih DESC) AS Position, 
					Fiyat
				FROM SatisHareketleri
				WHERE 
					(SatisHareketleri.Tarih<=@Tarih)
					AND (SatisHareketleri.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or SatisHareketleri.KullaniciInd = 0)
			)AS Result
			WHERE Position=1
		RETURN
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION GecerliSatisFiyatlari
(
	@Tarih smalldatetime, 
	@Owner Int
)
RETURNS @dokum TABLE
(
	Owner int,
	StokInd int,
	Position int,
	Fiyat decimal (28,8)
) 

AS
BEGIN
		INSERT INTO @dokum
			SELECT 
				Owner, 
				Ind AS StokInd,
				0 AS Position,
				dbo.SuAnkiStokSatisFiyati(@Owner,Ind) AS Fiyat
			FROM
				stoklar

	RETURN 
END
GO

--SELECT * FROM GecerliSatisFiyatlari('2009/03/03',0) where stokInd=323






GO
CREATE FUNCTION [dbo].[StokSonAlisSatisFiyatlar] 
(	
	@Owner INT,
	@Tarih datetime,
	@KullaniciInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	WITH SonFiyatlar(StokInd,Fiyat,Tip)
	AS
	(
		SELECT
			StokInd,
			Fiyat,
			1 as Tip
		FROM
			GecerliSatisFiyatlari(@Tarih,@Owner)

		UNION ALL 

		SELECT
			StokInd,
			Fiyat,
			2 as Tip
		FROM SonAlisFiyatlar(@Tarih, @Owner)
	)
	SELECT 
		Ind as StokInd,
		s.Tip as TipInd,
		CASE WHEN (s.Fiyat>0)
			THEN s.Fiyat
			ELSE 0
		END AS SonSatisFiyati,
		0 as SonAlisFiyati
	FROM Stoklar
	LEFT JOIN SonFiyatlar as s ON s.StokInd = Ind AND s.Tip = 1
	UNION ALL
	SELECT 
		Ind as StokInd,
		2 as TipInd,
		0 AS SonSatisFiyati,
		CASE WHEN (s.Fiyat>0)
					THEN s.Fiyat
					ELSE 0
				END as SonAlisFiyati
	FROM Stoklar
	LEFT JOIN SonFiyatlar as s ON s.StokInd = Ind AND s.Tip = 2
)

GO
CREATE FUNCTION [dbo].[FifosuzEnvanterRaporu] 
(
	@Owner INT,
	@Tarih datetime,
	@KullaniciInds nvarchar(max),
	@DepoInd INT

)
RETURNS TABLE 
AS
RETURN 
(
	WITH S(Owner,Ind,DepoInd,StokKodu,StokAdi,Miktar)
	AS
	(
		--Merkez hareketleri
		SELECT
			NULL as Owner,
			s.Ind,
			d.DepoInd,
			s.StokKodu,
			s.StokAdi,
			ISNULL(d.Giren,0) - ISNULL(d.Cikan,0) as Miktar
		FROM Stoklar as s
		LEFT JOIN _DepoHareket as d ON d.StokInd = s.Ind AND d.Tarih <= @Tarih

		union all

		--Şube hareketleri
		SELECT
			Subeler.Ind as Owner,
			s.Ind,
			d.DepoInd,
			s.StokKodu,
			s.StokAdi,
			ISNULL(d.Giren,0) - ISNULL(d.Cikan,0) as Miktar
		FROM Subeler
		CROSS JOIN Stoklar as s
		LEFT JOIN _DepoHareket as d ON d.StokInd = s.Ind AND d.Tarih <= @Tarih and d.HesapOwner = Subeler.Ind
	)

	select
		S.Owner,
		S.Ind,
		S.StokKodu,
		S.StokAdi,
		sum(S.Miktar) as Miktar,
		isnull(SF.SonSatisFiyati, 0) as SatisFiyati,
		sum(S.Miktar * ISNULL(SF.SonSatisFiyati,0)) as SatisMaliyeti,
		isnull(AF.SonAlisFiyati, 0) as AlisFiyati,
		sum(S.Miktar * ISNULL(AF.SonAlisFiyati,0)) as AlisMaliyeti
	from
	S left join
	(
		select *
		from StokSonAlisSatisFiyatlar(@Owner, @Tarih, @KullaniciInds)
	) SF on S.Ind = SF.StokInd and SF.TipInd=1
	left join
	(
		select *
		from StokSonAlisSatisFiyatlar(@Owner, @Tarih, @KullaniciInds)
	) AF on S.Ind = AF.StokInd and AF.TipInd=2
	WHERE
		@DepoInd =
		CASE 
			WHEN @DepoInd>0
				THEN S.DepoInd 
			ELSE
				@DepoInd
			END
	GROUP BY
		S.Owner,
		S.Ind,
		S.StokKodu,
		S.StokAdi,
		SF.SonSatisFiyati,
		AF.SonAlisFiyati
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[StokFifoDokumu]
(
	@Tarih datetime
)

RETURNS @Dokum TABLE
(
	Ind int,
	Miktar decimal(28,8),
	FifoMaliyeti decimal(28,8)
)

AS

BEGIN
	DECLARE @ind int
	DECLARE @stokKodu nvarchar(50)
	DECLARE @stokAdi nvarchar(100)
	DECLARE @miktar decimal(28,8)

	DECLARE @fifoMaliyet decimal(28,8)

	DECLARE StokCursor CURSOR FOR 
		SELECT
			s.Ind,
			SUM(ISNULL(d.Giren,0) - ISNULL(d.Cikan,0)) as Miktar
		FROM Stoklar as s
		LEFT JOIN _DepoHareket as d ON d.StokInd = s.Ind AND d.Tarih <= @Tarih
		GROUP BY
			s.Ind

	OPEN StokCursor
	FETCH NEXT FROM StokCursor
	INTO @ind,@miktar
	WHILE @@FETCH_STATUS = 0
	BEGIN
		DECLARE @kalanMiktar decimal(28,8)
		DECLARE @hMiktar decimal(28,8)
		DECLARE @hFiyat DECIMAL(28,8) 
		DECLARE @hIskonto DECIMAL(28,8)
		
		DECLARE HareketCursor CURSOR FOR 
			SELECT h.Miktar,h.Fiyat,h.Iskonto 
			FROM Hareketler as h 
			LEFT JOIN Basliklar as b ON h.BaslikInd = b.Ind
			WHERE h.TipInd=3 
			AND h.StokInd=@ind
			ORDER BY b.Tarih DESC

			SET @kalanMiktar=@miktar
			SET @fifoMaliyet = 0

			OPEN HareketCursor
			FETCH NEXT FROM HareketCursor
			INTO @hMiktar,@hFiyat,@hIskonto
			WHILE @@FETCH_STATUS = 0
			BEGIN
				IF(@hMiktar<@kalanMiktar AND @kalanMiktar != 0) 
			BEGIN
				SET @fifoMaliyet=@fifoMaliyet +( @hMiktar*@hFiyat-@hIskonto)
				SET @kalanMiktar=@kalanMiktar-@hMiktar
			END
			ELSE IF(@hMiktar>@kalanMiktar AND @kalanMiktar != 0)
			BEGIN
				SET @fifoMaliyet=@fifoMaliyet + (((@hMiktar*@hFiyat-@hIskonto)/@hMiktar)*@kalanMiktar)
				SET @kalanMiktar=0
				BREAK
			END

			FETCH NEXT FROM HareketCursor
			INTO @hMiktar,@hFiyat,@hIskonto
		END	
		
		CLOSE HareketCursor
		DEALLOCATE HareketCursor

		INSERT INTO @Dokum 
			(Ind,Miktar,FifoMaliyeti)
			VALUES (@ind,@miktar,@fifoMaliyet)

		FETCH NEXT FROM StokCursor
		INTO @ind,@miktar
	END

	CLOSE StokCursor
	DEALLOCATE StokCursor

	RETURN 
END

GO
CREATE FUNCTION [dbo].[EnvanterRaporu] 
(
	@Owner INT ,
	@Tarih datetime,
	@KullaniciInds nvarchar(max),
	@DepoInd INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Dokum(Ind,Miktar,FifoMaliyeti)
	AS
	(
		SELECT
			sdr.Ind,
			sdr.Miktar,
			sdr.FifoMaliyeti
		FROM StokFifoDokumu(@Tarih)	as sdr
	)
	SELECT
		fer.Owner,
		fer.Ind,
		fer.StokKodu,
		fer.StokAdi,
		fer.Miktar,
		fer.SatisFiyati,
		fer.SatisMaliyeti,
		fer.AlisFiyati,
		fer.AlisMaliyeti,
		(CASE WHEN (sfd.Miktar != 0)
			THEN (sfd.FifoMaliyeti/sfd.Miktar)
			ELSE 0
		END) as FifoFiyati,
		(CASE WHEN (sfd.Miktar != 0)
			THEN fer.Miktar * (sfd.FifoMaliyeti/sfd.Miktar)
			ELSE 0
		END) as FifoMaliyeti
	FROM 
		--FifosuzEnvanterRaporu(@Tarih, @MarketTarih, @Ind) as fer
		FifosuzEnvanterRaporu(@Owner,@Tarih, @KullaniciInds,@DepoInd) as fer
		LEFT JOIN Dokum as sfd ON sfd.Ind = fer.Ind
)
GO
CREATE VIEW [dbo].[StoklarinSubelereGoreMuhteviyatDurumu]
AS

SELECT
	sube.Ind as SubeOwner,
	s.Ind,
	s.Owner as Owner,
	s.StokKodu,
	s.StokAdi,
	s.GrupInd,
	s.SatisKDVGrupInd,
	s.AlisKDVGrupInd,
	(CASE WHEN(Count(h.StokInd)>0)
		THEN CAST(1 as bit)
		ELSE CAST(0 as bit)
	END) as MuhteviyatDurumu
FROM Subeler as sube WITH(NOLOCK)
LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Aktif IN (0,1)
LEFT JOIN Hesaplar as h WITH(NOLOCK) ON h.TipInd = 205 AND h.StokInd = s.Ind
WHERE 0=0
GROUP BY
	sube.Ind,
	s.Ind,
	s.Owner,
	s.StokKodu,
	s.StokAdi,
	s.GrupInd,
	s.SatisKDVGrupInd,
	s.AlisKDVGrupInd

GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[EnvanterFiltreliStoklar]
(
	@raporTipi int,
	@grupInd int,
	@ozelKodInd int,
	@cariInd int,
	@subeInd int
)

RETURNS  @Stoklar TABLE
(
	Ind int,
	Owner int
)
AS
BEGIN

	IF(@raporTipi = 0)
		INSERT INTO @Stoklar
			SELECT Ind,Owner FROM Stoklar

	IF(@raporTipi = 1)
		INSERT INTO @Stoklar
			SELECT Ind,Owner FROM Stoklar
			WHERE Stoklar.GrupInd = @grupInd
	
	IF(@raporTipi = 2)
		INSERT INTO @Stoklar
			SELECT
				DISTINCT a.StokInd as Ind,s.Owner
			FROM AlisHareketleri as a
			LEFT JOIN Stoklar as s ON a.StokInd = s.Ind
			WHERE a.OzelKodInd = @ozelKodInd

	IF(@raporTipi = 3)
		INSERT INTO @Stoklar
			SELECT
				DISTINCT a.StokInd as Ind,s.Owner
			FROM AlisHareketleri as a
			LEFT JOIN Stoklar as s ON a.StokInd = s.Ind
			WHERE a.HesapInd = @cariInd

	IF(@raporTipi = 4)
		INSERT INTO @Stoklar
			SELECT
				DISTINCT a.Ind as Ind, @subeInd as Owner
			FROM StoklarinSubelereGoreMuhteviyatDurumu as a WITH(NOLOCK)
			WHERE a.MuhteviyatDurumu = 0
	
	IF(@raporTipi = 5)
		INSERT INTO @Stoklar
			SELECT
				DISTINCT a.Ind as Ind, @subeInd as Owner
			FROM StoklarinSubelereGoreMuhteviyatDurumu as a WITH(NOLOCK)
			WHERE a.MuhteviyatDurumu = 1


	RETURN 
END



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CariVerilenCekTutarlari]
AS
SELECT
	CariHesapInd AS HesapInd,
	NULL as Owner,
	SUM(Tutar) as Tutar
FROM Hareketler WITH(NOLOCK)
WHERE TipInd = 14 AND DurumInd = 4
GROUP BY CariHesapInd
GO

CREATE VIEW [dbo].[IrsaliyeTutar]
AS
SELECT
	 Basliklar.HesapInd AS HesapInd
	,Basliklar.AltTipInd AS AltTipInd
	,CASE WHEN (Basliklar.TipInd In (104, 111))
			THEN Hareketler.Miktar * Hareketler.Fiyat * Hareketler.Carpan
	      ELSE -Hareketler.Miktar * Hareketler.Fiyat * Hareketler.Carpan
	 END AS Tutar
	,CASE WHEN (Basliklar.TipInd In (104, 111))
	        THEN Hareketler.Miktar
	      ELSE -Hareketler.Miktar
	 END AS Miktar
FROM Hareketler WITH(NOLOCK)
	LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.BaslikInd = Basliklar.Ind
WHERE Hareketler.TipInd IN (2,5)
	AND (Basliklar.DurumInd != 11 OR Basliklar.DurumInd IS NULL)
	AND Hareketler.DurumInd IS NULL

UNION ALL

SELECT 
	 Basliklar.HesapInd AS HesapInd
	,Basliklar.AltTipInd AS AltTipInd
	,CASE WHEN (Basliklar.TipInd In (104, 111))
	        THEN Hareketler.Tutar
	      ELSE -Hareketler.Tutar
	 END AS Tutar
	,CASE WHEN (Basliklar.TipInd In (104, 111))
	        THEN Hareketler.Miktar
	      ELSE -Hareketler.Miktar
	 END AS Miktar
FROM Hareketler WITH(NOLOCK)
	LEFT JOIN Basliklar ON Hareketler.BaslikInd = Basliklar.Ind
WHERE Hareketler.TipInd = 37
	AND Hareketler.DurumInd IS NULL


GO



GO
CREATE VIEW [dbo].[CariHesaplar]
AS
SELECT     
	Ind,
	Owner,
	HesapKodu,
	HesapAdi,
	OzelKodInd,
	OzelKodu,
	Adres,
	Telefon,
	GSM,
	Faks,
	Sehir,
	Ilce,
	Eposta,
	VergiDairesi,
	VergiNo,
	TcKimlikNo,
	RiskLimiti,
	Aciklama,
	Aktif,
	FaturaVadesi,
	OdemeVadesi,
	Faiz, 
	ParaBirimi,
	FisPortfoyu,
	OtomasyonKodu,
	Iskonto,
	AkaryakitIskonto,
	IskontoX,
	AkaryakitIskontoX,
	TeminatKoduInd,
	TeminatKodu,
	FiloKodu,
	FiloGrupKodu,
	RiskLimitiLt,
	MuhasebeKodu,
	HesapBankaAdi,
	HesapIbanNo,
	IlgiliKisi,
	DekontCarisi,
	EFaturaOnayliGonder,
	EFaturaTuru,
	DBSKullan,
	DBSGonder,
	DBSTipi,
    DBSTeminatTutari,
	DBSEkTeminatTutari,
	DBSEkRiskTutari,
    FiloLimitTakibiYap,
	DBSCekliRiskOrani,
	PersonelInd
	
FROM Hesaplar WITH(NOLOCK)
WHERE TipInd = 201
	

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[IrsaliyeTutarlari]
AS
SELECT
	ch.Ind HesapInd,
	NULL AS Owner,
	ISNULL(SUM(it.Tutar),0) AS Tutar,
	ISNULL(SUM(it.Miktar),0) AS Miktar
FROM IrsaliyeTutar it WITH(NOLOCK)
RIGHT JOIN dbo.CariHesaplar ch WITH(NOLOCK) ON it.HesapInd = ch.Ind
GROUP BY ch.Ind



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create VIEW [dbo].[VardiyaPersonelSayisiTurev]
AS
	select 
		VardiyaKartInd,
		PersonelHesapInd,
		PersonelHesapKodu,
		PersonelHesapAdi,
		count(*) as Sayi
	from 
		hareketler 
	WHERE 
		(
			TipInd = 33
			OR TipInd = 35
		)
	GROUP BY 
		VardiyaKartInd
		, PersonelHesapInd
		, PersonelHesapKodu
		, PersonelHesapAdi
GO
CREATE FUNCTION [dbo].[DepoAktarimDetay]
(
	@BaslikInd int
)

RETURNS TABLE 
AS
RETURN 
(
	SELECT 
	DepoAktarimBelgesi.Ind,
	DepoGiris.StokAdi,
	DepoGiris.StokInd,
	DepoGiris.StokKodu,
	DepoAktarimBelgesi.Tarih,
	DepoGiris.DepoAdi as Hedef,
	DepoGiris.DepoInd as HedefInd,
	(SELECT TOP 1 DepoAdi FROM Hareketler AS DepoCikis WHERE TipInd = 30 AND BaslikInd = DepoAktarimBelgesi.Ind) AS Kaynak,
	(SELECT TOP 1 DepoInd FROM Hareketler AS DepoCikis WHERE TipInd = 30 AND BaslikInd = DepoAktarimBelgesi.Ind) AS KaynakInd,
	DepoAktarimBelgesi.Aciklama,
	DepoAktarimBelgesi.BelgeNo,
	DepoAktarimBelgesi.Owner,
	DepoGiris.TipInd,
	(DepoGiris.Miktar * DepoGiris.Carpan) as Miktar,
	--(SELECT TOP 1 Fiyat from SonAlisFiyatlari(DepoGiris.StokInd, DepoAktarimBelgesi.Owner)) as Fiyat
	DepoGiris.Fiyat,
	(DepoGiris.Miktar*DepoGiris.Fiyat) as Tutar,
	DepoGiris.BirimAdi
	
FROM Basliklar as DepoAktarimBelgesi WITH(NOLOCK)
INNER JOIN Hareketler as DepoGiris WITH(NOLOCK) ON (DepoGiris.BaslikInd = DepoAktarimBelgesi.Ind)
WHERE 
	DepoGiris.TipInd = 29 AND 
	DepoAktarimBelgesi.TipInd = 503 AND 
	DepoAktarimBelgesi.Ind = @BaslikInd
)

GO
CREATE VIEW [dbo].[AlisFaturasiIskontoOranlari]
AS
SELECT     
	dbo.Basliklar.Ind
	, 
	(
	CASE 
		WHEN ((SELECT SUM(ISNULL(Miktar,0)*ISNULL(fiyat,0)- dbo.Hareketler.Iskonto) FROM dbo.Hareketler WITH(NOLOCK) WHERE (BaslikInd = dbo.Basliklar.Ind) AND (TipInd IN (57,3)))<=0)
			THEN 0 
			else
				(
				(dbo.Basliklar.Iskonto * 100) 
				/ 
				CASE WHEN	
				-------------------------
				-------------------------
				(
					(
						ISNULL
						(
							SUM
							(
								ISNULL(dbo.Hareketler.NetMiktar, dbo.Hareketler.Miktar)* dbo.Hareketler.Fiyat - dbo.Hareketler.Iskonto
							)
						, 
							0
						) 
						+ 
						ISNULL
						(
							(
								SELECT
									SUM
									(
										Tutar * (100 / (100 + KDVOrani))
									) AS Expr1
								FROM         
									dbo.Hareketler AS h3 WITH(NOLOCK)
								WHERE
									(BaslikInd = dbo.Basliklar.Ind) AND (TipInd = 57)
							)
						, 
							0
						)
					)
				) = 0 THEN 1
				ELSE 
				(
					(
						ISNULL
						(
							SUM
							(
								ISNULL(dbo.Hareketler.NetMiktar, dbo.Hareketler.Miktar)* dbo.Hareketler.Fiyat - dbo.Hareketler.Iskonto
							)
						, 
							0
						) 
						+ 
						ISNULL
						(
							(
								SELECT
									SUM
									(
										Tutar * (100 / (100 + KDVOrani))
									) AS Expr1
								FROM         
									dbo.Hareketler AS h3 WITH(NOLOCK)
								WHERE
									(BaslikInd = dbo.Basliklar.Ind) AND (TipInd = 57)
							)
						, 
							0
						)
					)
				)
				END
				-------------------------
				-------------------------
				) 
			END	
			) AS IskontoOran
FROM         dbo.Basliklar WITH(NOLOCK) INNER JOIN
                      dbo.Hareketler WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
WHERE     (dbo.Basliklar.Aktif IS NULL OR
                      dbo.Basliklar.Aktif = 1) AND (dbo.Basliklar.TipInd = 101) AND (dbo.Hareketler.TipInd = 3 OR
                      dbo.Hareketler.TipInd = 57)
GROUP BY dbo.Basliklar.Ind, dbo.Basliklar.Iskonto
GO

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[SonAlisFiyatListesi]
AS
SELECT     *
FROM         (SELECT     StokInd, Owner, ROW_NUMBER() OVER (PARTITION BY StokInd, Owner
                       ORDER BY Tarih DESC) AS Position, Fiyat
FROM         GirisCikisHareketleri WITH(NOLOCK)
WHERE     (TipIndAltHareket = 3)) AS result
WHERE     position = 1
GO
CREATE FUNCTION [dbo].[SonSatisFiyatiForSayim]
(	
	@Tarih datetime,
	@StokInd int,
	@Owner int
)
RETURNS @SatisFiyati TABLE 
(
	Tarih datetime,
	StokInd int,
	Owner int,
	Fiyat decimal(28,13)
)
AS
BEGIN
DECLARE @Fiyat DECIMAL(28,13)


	SELECT TOP 1 
		@Owner = Owner,
		@StokInd = StokInd,
		@Fiyat = Fiyat,
		@Tarih = Tarih
	FROM 
		dbo.SatisHareketleriEk
	WHERE 
	TipInd IN (6,504) 
	AND owner = @Owner
	AND StokInd = @StokInd
	AND Tarih <= @Tarih
	ORDER BY Ind DESC

IF (@Fiyat IS NULL) --Baktigi subede deger bulamazsa yapilmis son hareketi getirmesi icin.
	BEGIN 
		SELECT TOP 1 
			@Fiyat = Fiyat
		FROM 
			dbo.SatisHareketleriEk WITH(NOLOCK)
		WHERE 
		TipInd IN (6,504) 
		AND StokInd = @StokInd
		AND Tarih <= @Tarih
		ORDER BY Ind DESC
IF (@Fiyat IS NULL)
	BEGIN
		SELECT TOP 1
			@Fiyat = Tutar
		FROM
			dbo.StokDetaylari
		WHERE
		StokInd = @StokInd
		AND Owner = @Owner
		ORDER BY
			Ind DESC
	END

IF (@Fiyat IS NULL)	
	BEGIN
		SELECT
			@Fiyat = Tutar
		FROM
			dbo.StokDetaylari
		WHERE
		StokInd = @StokInd
		AND IsAnaFiyat = 1
	END

	END
		INSERT INTO @SatisFiyati 
		(Tarih,StokInd,Owner,Fiyat)
		VALUES (@Tarih,@StokInd,@Owner,@Fiyat)
	RETURN
END

GO

GO
CREATE FUNCTION [dbo].[SonAlisFiyatiIskontoluForSayim]
(	
	@Tarih datetime,
	@StokInd int,
	@Owner int
)
RETURNS @AlisFiyatiIskontolu TABLE 
(
	Tarih datetime,
	StokInd int,
	Owner int,
	Fiyat decimal(28,13)
)
AS
BEGIN
DECLARE @Fiyat DECIMAL(28,13)
DECLARE @IskontoGenelSayi int
select @IskontoGenelSayi = GenelSayi from Ayarlar where TipInd = 517

	SELECT TOP 1 
		@Owner = Owner,
		@StokInd = StokInd,
		@Fiyat = CASE @IskontoGenelSayi WHEN 1 THEN (Fiyat - ISNULL(Iskonto,0) / Miktar - ISNULL (HareketBaslikIskonto, 0)) ELSE Fiyat END,
		@Tarih = Tarih
	FROM 
		dbo.AlisHareketleri WITH(NOLOCK)
	WHERE 
	TipInd IN (3) 
	AND owner = @Owner
	AND StokInd = @StokInd
	AND Tarih <= @Tarih
	ORDER BY Tarih DESC,Ind DESC

IF (@Fiyat IS NULL) --Baktigi subede deger bulamazsa yapilmis son hareketi getirmesi icin.
	BEGIN 
		SELECT TOP 1 
			@Fiyat = CASE @IskontoGenelSayi WHEN 1 THEN (Fiyat - ISNULL(Iskonto,0) / Miktar - ISNULL (HareketBaslikIskonto, 0)) ELSE Fiyat END 
		FROM 
			dbo.AlisHareketleri WITH(NOLOCK)
		WHERE 
		TipInd IN (3) 
		AND StokInd = @StokInd
		AND Tarih <= @Tarih
		ORDER BY Tarih DESC,Ind DESC

	END
		INSERT INTO @AlisFiyatiIskontolu 
		(Tarih,StokInd,Owner,Fiyat)
		VALUES (@Tarih,@StokInd,@Owner,@Fiyat)
	RETURN
END


GO
CREATE VIEW [dbo].[SatisRaporDokumu]
AS
	SELECT    
		g.Owner, 
		g.Tarih,
		--DATEADD(YEAR, -10, CAST(FLOOR(CAST(g.Tarih AS float)) AS datetime)) as PerakendeKasaIslemTarihi,
		g.DepoInd, 
		g.StokInd, 
		s.GrupInd, 
		s.StokKodu, 
		s.StokAdi, 
		g.HesapInd,
		g.BaslikInd,
		g.Fiyat,	--Ulaş
		k.KdvOrani AS KDVOrani, --(ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00)) AS KDVOrani, 
		SUM(g.Miktar * ISNULL(g.Carpan,1)) AS Miktar, 
		CASE 
			WHEN g.TipIndAltHareket=6 --OR g.TipIndAltHareket=504
				THEN SUM(g.Miktar * g.Carpan * g.Fiyat) 
			WHEN g.TipIndAltHareket=5 OR g.TipIndAltHareket=39 OR g.TipIndAltHareket=40
				THEN SUM(g.Miktar * g.Carpan * (g.Fiyat /(1+(k.KDVOrani/100)))) 
			END 		AS Tutar,
		CASE
			WHEN g.TipIndAltHareket=6 OR g.TipIndAltHareket=5
				THEN ISNULL((g.Fiyat-afl.Fiyat)*100/ (CASE afl.Fiyat WHEN 0 THEN 1  WHEN NULL THEN 1 ELSE afl.Fiyat END),100)
			WHEN g.TipIndAltHareket=39 OR g.TipIndAltHareket=40  --OR g.TipIndAltHareket=504 
				THEN ISNULL(((g.Fiyat /(1+(k.KdvOrani/100)))-afl.Fiyat)*100/ (CASE afl.Fiyat WHEN 0 THEN 1  WHEN NULL THEN 1 ELSE afl.Fiyat END),100) 
			END		as KarOrani,
		g.TipIndAltHareket,
		0 AS Ind,
		0 AS KullaniciInd,
		g.KasiyerKodu,
		g.FaturaIadeMi
	FROM
		GirisCikisHareketleri as g  WITH(NOLOCK)
		LEFT OUTER JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = g.StokInd 
		LEFT OUTER JOIN SonAlisFiyatListesi as afl WITH(NOLOCK) on afl.StokInd = g.StokInd and afl.Owner = g.Owner
		LEFT JOIN dbo.KDVGruplari AS k WITH(NOLOCK) ON  k.Ind = s.SatisKDVGrupInd
	WHERE
		(g.TipIndAltHareket = 6 OR g.TipIndAltHareket = 5 OR g.TipIndAltHareket =39 OR g.TipIndAltHareket = 40) AND g.Miktar > 0 --AND (g.FaturaIadeMi IS NULL OR g.FaturaIadeMi= 0)--IADE FATURALARI SATIŞ SAYILMAZ, GELMEMESİ GEREKİR
	GROUP BY
		g.Owner, 
		g.Tarih,
		g.DepoInd, 
		g.StokInd,
		s.GrupInd, 
		s.StokKodu, 
		s.StokAdi, 
		g.HesapInd,
		g.BaslikInd,
		g.TipIndAltHareket,
        afl.Fiyat,
		g.Fiyat,
		k.KdvOrani,
		g.KasiyerKodu,
		g.FaturaIadeMi
	UNION ALL
	SELECT
		h.Owner,
		b.Tarih,
		--CAST(FLOOR(CAST(h.PerakendeKasaIslemTarihi AS float)) AS datetime) as PerakendeKasaIslemTarihi,
		Hareketler.DepoInd,
		h.StokInd,
		s.GrupInd,
		s.StokKodu,
		s.StokAdi,
		NULL as HesapInd,
		NULL AS BaslikInd,
		h.Fiyat,
		k.KdvOrani AS KDVOrani,
		SUM(h.Miktar * ISNULL(h.Carpan, 1)) AS Miktar, 
		SUM(h.Miktar * h.Carpan * (h.Fiyat /(1+(k.KDVOrani/100)))) AS Tutar,
		ISNULL(((h.Fiyat /(1+(k.KdvOrani/100)))-afl.Fiyat)*100/ (CASE afl.Fiyat WHEN 0 THEN 1  WHEN NULL THEN 1 ELSE afl.Fiyat END),100) as KarOrani,
		h.TipInd AS TipIndAltHareket,
		h.Ind,
		sk.KullaniciInd,
		h.KasiyerKodu,
		NULL as FaturaIadeMi
	FROM 
		SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
		LEFT JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = h.StokInd
		LEFT JOIN dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.SatisKDVGrupInd
		LEFT JOIN SonAlisFiyatListesi as afl WITH(NOLOCK) on afl.StokInd = h.StokInd and afl.Owner = h.Owner
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0 AND h.Miktar > 0
		AND s.Ind NOT IN (select ParentStokInd FROM StokIcerik) AND h.Owner = b.Owner
	GROUP BY
		h.Owner,
		b.Tarih,
		Hareketler.DepoInd,
		h.StokInd,
		s.GrupInd, 
		s.StokKodu, 
		s.StokAdi, 
		h.TipInd,
		afl.Fiyat,
		h.Fiyat,
		k.KdvOrani,
		h.Ind,
		sk.KullaniciInd,
		h.KasiyerKodu,
		FaturaIadeMi

		UNION ALL


	SELECT
		h.Owner,
		b.Tarih,
		--CAST(FLOOR(CAST(h.PerakendeKasaIslemTarihi AS float)) AS datetime) as PerakendeKasaIslemTarihi,
		Hareketler.DepoInd,
		h.StokInd,
		s.GrupInd,
		s.StokKodu,
		s.StokAdi,
		NULL as HesapInd,
		NULL AS BaslikInd,
		h.Fiyat,
		k.KdvOrani AS KDVOrani,
		SUM(h.Miktar * ISNULL(h.Carpan, 1)) AS Miktar, 
		SUM(h.Miktar * h.Carpan * (h.Fiyat /(1+(k.KDVOrani/100)))) AS Tutar,
		ISNULL(((h.Fiyat /(1+(k.KdvOrani/100)))-H2.Fiyat)*100/ (CASE H2.Fiyat WHEN 0 THEN 1  WHEN NULL THEN 1 ELSE H2.Fiyat END),100) as KarOrani,
		h.TipInd AS TipIndAltHareket,
		h.Ind,
		sk.KullaniciInd,
		h.KasiyerKodu,
		NULL as FaturaIadeMi

	FROM 
		SatisKasasi as sk
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
		LEFT JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = h.StokInd
		LEFT JOIN dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.SatisKDVGrupInd
		LEFT JOIN Hareketler as H2 WITH(NOLOCK) on h.Ind = H2.PerakendeInd and H2.TipInd = 29
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0 AND h.Miktar > 0
		AND s.Ind IN (select ParentStokInd FROM StokIcerik)
	GROUP BY
		h.Owner,
		b.Tarih,
		Hareketler.DepoInd,
		h.StokInd,
		s.GrupInd, 
		s.StokKodu, 
		s.StokAdi, 
		h.TipInd,
		H2.Fiyat,
		h.Fiyat,
		k.KdvOrani,
		h.Ind,
		sk.KullaniciInd,
		h.KasiyerKodu,
		FaturaIadeMi
GO

GO
CREATE VIEW [dbo].[CariStokRiskLimitleriAyrinti]
AS
SELECT     
	dbo.CariHesaplar.HesapAdi, 
	dbo.Stoklar.StokKodu, 
	dbo.Stoklar.StokAdi, 
	dbo.CariStokRiskLimitleri.RiskLimitiLt, 
	dbo.CariStokRiskLimitleri.Ind, 
    dbo.CariStokRiskLimitleri.Owner, 
    dbo.CariStokRiskLimitleri.CariInd, 
    dbo.CariStokRiskLimitleri.StokInd,
	(
		dbo.CariStokRiskLimitleri.RiskLimitiLt -
		(SELECT ISNULL(SUM(Miktar),0) Miktar 
			FROM dbo.Hareketler WITH(NOLOCK) INNER JOIN dbo.Basliklar WITH(NOLOCK) ON dbo.Hareketler.BaslikInd=dbo.Basliklar.Ind
			WHERE Hareketler.TipInd IN (5,37) 
				AND Hareketler.DurumInd IS NULL 
				AND Hareketler.StokInd = dbo.CariStokRiskLimitleri.StokInd 
				AND dbo.Basliklar.HesapInd = dbo.CariStokRiskLimitleri.CariInd
		) 	
	) AS KalanLimit,
	0.00 AS KullanilanTL
FROM dbo.CariStokRiskLimitleri WITH(NOLOCK) INNER JOIN dbo.CariHesaplar WITH(NOLOCK)
	ON dbo.CariStokRiskLimitleri.CariInd = dbo.CariHesaplar.Ind INNER JOIN dbo.Stoklar  WITH(NOLOCK)
	ON dbo.CariStokRiskLimitleri.StokInd = dbo.Stoklar.Ind
UNION ALL
	SELECT
	Basliklar.HesapAdi,
	''         AS StokKodu,
	''         AS StokAdi,
	0.00       AS RiskLimitiLt,
	0          AS Ind,
	Basliklar.Owner,
	Basliklar.HesapInd AS CariInd,
	0          AS StokInd,
	0.00       AS KalanLimit,
	SUM(CASE 
		WHEN (Basliklar.TipInd In (104, 111) AND Hareketler.TipInd IN (2,5))
			THEN Hareketler.Miktar * Hareketler.Fiyat * Hareketler.Carpan  
		WHEN (Basliklar.TipInd In (104, 111) AND Hareketler.TipInd = 37)
			THEN Hareketler.Tutar 
		WHEN (Basliklar.TipInd NOT In (104, 111) AND Hareketler.TipInd IN (2,5))
			THEN -Hareketler.Miktar * Hareketler.Fiyat * Hareketler.Carpan  
		WHEN (Basliklar.TipInd NOT In (104, 111) AND Hareketler.TipInd = 37)
			THEN -Hareketler.Tutar 
	END) AS KullanilanTL
	FROM Hareketler WITH(NOLOCK)
	LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.BaslikInd = Basliklar.Ind
	WHERE Hareketler.TipInd IN (2,5,37)
	AND (Basliklar.DurumInd != 11 OR Basliklar.DurumInd IS NULL)
	AND Hareketler.DurumInd IS NULL
	GROUP BY Basliklar.HesapAdi, Basliklar.Owner, Basliklar.HesapInd 



GO
CREATE FUNCTION [dbo].[IrsaliyeDokumu]
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@HesapInd int
)
RETURNS TABLE 
AS
RETURN 
(
		SELECT 
			Basliklar.Owner,
			Basliklar.TipInd,
			Basliklar.AltTipInd,
			(Hareketler.Miktar * Hareketler.Fiyat * Hareketler.Carpan) AS NetTutar,
			(Hareketler.Miktar * Hareketler.Carpan) AS Miktar,
			Hareketler.Fiyat,
			Basliklar.Tarih As Tarih,
			Hareketler.DurumInd,
			Basliklar.HesapInd,
			Basliklar.PlakaNo,
			Basliklar.BelgeNo,
			(Hareketler.StokKodu + ' - ' + Hareketler.StokAdi) AS StokKodu,
			CASE WHEN (Hareketler.DurumInd In (3))
			THEN 'Eski'
			WHEN (Hareketler.DurumInd In (-1))
			THEN ''
			ELSE 'Yeni' END AS Durum,
			CASE WHEN (Hareketler.TipInd IN (37))
			THEN Basliklar.Aciklama 
			WHEN (Hareketler.TipInd IN (2))
			THEN 'Alış İrs.'
			WHEN (Hareketler.TipInd IN (-1))
			THEN 'Toplam'
			ELSE 'Satış İrs.' END AS Aciklama
			, Hareketler.YazarKasaFisNo
			, Basliklar.Ind
			, Hareketler.StokInd
			, CSRLA.RiskLimitiLt AS KalanLimit 
		FROM Hareketler
		INNER JOIN Basliklar ON Hareketler.BaslikInd=Basliklar.Ind
		LEFT JOIN CariStokRiskLimitleriAyrinti CSRLA ON CSRLA.CariInd = Basliklar.HesapInd AND CSRLA.StokInd = Hareketler.StokInd AND CSRLA.Owner = Basliklar.Owner
		WHERE Basliklar.Tarih >= @BaslangicTarihi
			  AND Basliklar.Tarih < @BitisTarihi
			  AND Basliklar.HesapInd = @HesapInd
			  AND Hareketler.TipInd IN (2,5)
			  AND (Basliklar.DurumInd != 11 OR Basliklar.DurumInd IS NULL) 
			  
			  UNION ALL


SELECT 
			Basliklar.Owner,
			Basliklar.TipInd,
			Basliklar.AltTipInd,
			Hareketler.Tutar AS NetTutar,
			(Hareketler.Miktar * Hareketler.Carpan) AS Miktar,
			Hareketler.Fiyat,
			Basliklar.Tarih As Tarih,
			Hareketler.DurumInd,
			Basliklar.HesapInd,
			Basliklar.PlakaNo,
			Basliklar.BelgeNo,
			(Hareketler.StokKodu + ' - ' + Hareketler.StokAdi) AS StokKodu,
			CASE WHEN (Hareketler.DurumInd In (3))
			THEN 'Eski'
			WHEN (Hareketler.DurumInd In (-1))
			THEN ''
			ELSE 'Yeni' END AS Durum,
			CASE WHEN (Hareketler.TipInd IN (37))
			THEN Basliklar.Aciklama 
			WHEN (Hareketler.TipInd IN (2))
			THEN 'Alış İrs.'
			WHEN (Hareketler.TipInd IN (-1))
			THEN 'Toplam'
			ELSE 'Satış İrs.' END AS Aciklama
			, Hareketler.YazarKasaFisNo
			, Basliklar.Ind
			, Hareketler.StokInd
			, CSRLA.RiskLimitiLt AS KalanLimit 
		FROM Hareketler
		INNER JOIN Basliklar ON Hareketler.BaslikInd=Basliklar.Ind
		LEFT JOIN CariStokRiskLimitleriAyrinti CSRLA ON CSRLA.CariInd = Basliklar.HesapInd AND CSRLA.StokInd = Hareketler.StokInd AND CSRLA.Owner = Basliklar.Owner
		WHERE Basliklar.Tarih >= @BaslangicTarihi
			  AND Basliklar.Tarih < @BitisTarihi
			  AND Basliklar.HesapInd = @HesapInd
			  AND Hareketler.TipInd IN (37)
			  AND (Basliklar.DurumInd != 11 OR Basliklar.DurumInd IS NULL) 
			  
			  
)










GO

CREATE FUNCTION [dbo].[IrsaliyeDokumuForCariIrsaliyeHareket]
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@HesapInd int
)
RETURNS TABLE 
AS
RETURN 
(
		SELECT 
			Basliklar.Owner,
			Basliklar.TipInd,
			(Hareketler.Miktar * Hareketler.Fiyat * Hareketler.Carpan) AS NetTutar,
			(Hareketler.Miktar * Hareketler.Carpan) AS Miktar,
			Hareketler.Fiyat,
			Basliklar.Tarih As Tarih,
			Hareketler.DurumInd,
			Basliklar.HesapInd,
			Basliklar.PlakaNo,
			Basliklar.BelgeNo,
			(Hareketler.StokKodu + ' - ' + Hareketler.StokAdi) AS StokKodu,
			CASE WHEN (Hareketler.DurumInd In (3))
			THEN 'Eski'
			WHEN (Hareketler.DurumInd In (-1))
			THEN ''
			ELSE 'Yeni' END AS Durum,
			CASE WHEN (Hareketler.TipInd IN (111))
			THEN Basliklar.Aciklama 
			WHEN (Hareketler.TipInd IN (103))
			THEN 'Alış İrs.'
			WHEN (Hareketler.TipInd IN (-1))
			THEN 'Toplam'
			ELSE 'Satış İrs.' END AS Aciklama
			, Hareketler.YazarKasaFisNo
			, Basliklar.Ind
			, Hareketler.StokInd
			,(
				(SELECT RiskLimitiLt FROM CariStokRiskLimitleriAyrinti WHERE CariInd = Basliklar.HesapInd AND StokInd = Hareketler.StokInd AND [owner] = Basliklar.Owner)
			 ) AS KalanLimit 
		FROM Hareketler
		LEFT JOIN Basliklar ON Hareketler.BaslikInd=Basliklar.Ind
		WHERE Basliklar.Tarih >= @BaslangicTarihi
			  AND Basliklar.Tarih < @BitisTarihi
			  AND Basliklar.HesapInd = @HesapInd
			  AND Hareketler.TipInd IN (2,5)
			AND (Basliklar.DurumInd != 11 OR Basliklar.DurumInd IS NULL) 
		UNION ALL

		SELECT 
			Basliklar.Owner,
			Basliklar.TipInd,
			Hareketler.Tutar AS NetTutar,
			(Hareketler.Miktar * Hareketler.Carpan) AS Miktar,
			Hareketler.Fiyat,
			Basliklar.Tarih As Tarih,
			Hareketler.DurumInd,
			Basliklar.HesapInd,
			Basliklar.PlakaNo,
			Basliklar.BelgeNo,
			(Hareketler.StokKodu + ' - ' + Hareketler.StokAdi) AS StokKodu,
			CASE WHEN (Hareketler.DurumInd In (3))
			THEN 'Eski'
			WHEN (Hareketler.DurumInd In (-1))
			THEN ''
			ELSE 'Yeni' END AS Durum,
			CASE WHEN (Hareketler.TipInd IN (37))
			THEN Basliklar.Aciklama
			WHEN (Hareketler.TipInd IN (103))
			THEN 'Alış İrs.'
			WHEN (Hareketler.TipInd IN (-1))
			THEN 'Toplam'
			ELSE 'Satış İrs.' END AS Aciklama
			, Hareketler.YazarKasaFisNo
			, Basliklar.Ind
			,Hareketler.StokInd
			,(
				(SELECT RiskLimitiLt FROM CariStokRiskLimitleriAyrinti WHERE CariInd = Basliklar.HesapInd AND StokInd = Hareketler.StokInd AND [owner] = Basliklar.Owner) 	
			 ) AS KalanLimit 
		FROM Hareketler
		LEFT JOIN Basliklar ON Hareketler.BaslikInd=Basliklar.Ind
		WHERE Basliklar.Tarih >= @BaslangicTarihi
			  AND Basliklar.Tarih < @BitisTarihi
			  AND Basliklar.HesapInd = @HesapInd
			  AND Hareketler.TipInd IN (37)
		      AND (Basliklar.DurumInd != 11 OR Basliklar.DurumInd IS NULL)
)

GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CariHareket]
AS
SELECT 
	HesapInd,
	FaturaOzet2.Ind,
	TipInd,
	FaturaOzet2.Owner,
	CASE WHEN (TipInd in (6))
		--THEN ROUND(Alacak,2) OLMASI GEREKEN
		THEN Alacak
		ELSE 0
	END as Borc,
	CASE WHEN (TipInd in(3))
		--THEN ROUND(Borc,2) OLMASI GEREKEN
		THEN Borc
		ELSE 0
	END as Alacak,
	CASE WHEN (TipInd IN (6))
		THEN ISNULL(Aciklama,'')
		ELSE Aciklama
	END AS Aciklama,
	GirisTarihi,
	OdemeTarihi,
	null as VadeTarihi,
	BelgeNo,
	Subeler.SubeAdi,
	null as CariHesapAdi,
	null as BankaHesapAdi,
	null as KKHesapInd,
	null as KKHesapAdi,
	null as GelirAdi,
	null as GiderAdi,
	null as HedefHesapAdi,
	null as KasayaIslensinMi,
	null as Senet,
	1 as Kur,
	'TL' as ParaBirimi,
	CASE WHEN (TipInd = 6)
		THEN Alacak
		WHEN (TipInd = 3)
		THEN Borc
		ELSE 0  
	END as TUTAR
FROM FaturaOzet2 WITH(NOLOCK)
LEFT JOIN Subeler WITH(NOLOCK) ON FaturaOzet2.Owner = Subeler.Owner

UNION ALL

SELECT  
	H.CariHesapInd AS HesapInd,
	H.Ind, 
	H.TipInd,
	H.Owner,
	CASE WHEN (H.TipInd IN(13,15,59,507,510))
		THEN H.Tutar * ISNULL(H.Kur,1)
		ELSE 0
		END as Borc,
	CASE WHEN (H.TipInd IN(9,10,12,58,508,509,533))
		THEN H.Tutar * ISNULL(H.Kur,1)
		ELSE 0
		END as Alacak,
	H.Aciklama,
	H.GirisTarihi,
	null as OdemeTarihi,
	CASE WHEN (H.TipInd IN(10))
	THEN VadeTarihi
	ELSE null
	END as VadeTarihi,
	CASE WHEN (H.VardiyaKartInd IS NOT NULL )
		THEN CAST(B.VardiyaNo as nvarchar)+'.Vardiya' 
		ELSE H.CekNo--Cari hareketlerine belge no girişi amacıyla çekno kullanılıyor Eskiden NULL idi : S.Z.Y. 2016.04.13
		END as BelgeNo,
	S.SubeAdi,
	H.CariHesapAdi,
    H.BankaHesapAdi,
	KKHesapInd,
	H.KKHesapAdi,
	H.GelirAdi,
	H.GiderAdi,
	H.HedefHesapAdi,
	H.KasayaIslensinMi,
	NULL AS Senet,
	ISNULL(H.Kur,1) AS Kur,
	H.ParaBirimi AS ParaBirimi,
	ISNULL(H.Tutar,0) TUTAR
FROM Hareketler AS H WITH(NOLOCK)
LEFT JOIN Subeler AS S WITH(NOLOCK) ON H.Owner = S.Owner
LEFT JOIN Basliklar AS B WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind
WHERE H.TipInd in (9,10,12,13,15,58,59,507,508,509,510,533)

UNION ALL

SELECT
	HedefHesapInd AS HesapInd,
	Hareketler.Ind, 
	TipInd,
	Hareketler.Owner,
	CASE WHEN (TipInd IN(509))
		THEN Tutar * ISNULL(Hareketler.Kur,1)
		ELSE 0
		END as Borc,
	CASE WHEN (TipInd IN(510))
		THEN Tutar * ISNULL(Hareketler.Kur,1)
		ELSE 0
		END as Alacak,
	Aciklama,
	GirisTarihi,
	null as OdemeTarihi,
	null as VadeTarihi,
	CekNo AS BelgeNo,
	Subeler.SubeAdi,
	Hareketler.CariHesapAdi,
	Hareketler.BankaHesapAdi,
	Hareketler.KKHesapInd,
	Hareketler.KKHesapAdi,
	Hareketler.GelirAdi,
	Hareketler.GiderAdi,
	Hareketler.HedefHesapAdi,
	Hareketler.KasayaIslensinMi,
	NULL AS Senet,
	ISNULL(Hareketler.Kur,1) AS Kur,
	Hareketler.ParaBirimi AS ParaBirimi,
	ISNULL(Hareketler.Tutar, 0) as Tutar
FROM Hareketler WITH(NOLOCK)
LEFT JOIN Subeler WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
WHERE TipInd IN (509, 510)
	AND Hareketler.HedefHesapInd IS NOT NULL

UNION ALL
SELECT
	CariHesapInd AS HesapInd,
	Hareketler.Ind,
	TipInd,
	Hareketler.Owner, 
	0 as Borc,
	CASE WHEN (TipInd=11 AND (Hareketler.DurumInd = 4 OR Hareketler.DurumInd = 6 OR Hareketler.DurumInd = 8 OR Hareketler.DurumInd = 7 OR Hareketler.DurumInd = 5 OR Hareketler.DurumInd = 12 ) )
		THEN Tutar * ISNULL(Hareketler.Kur,1)
		ELSE 0
		END as Alacak,			
	Aciklama,
	GirisTarihi,
	null as OdemeTarihi,
	Hareketler.VadeTarihi as VadeTarihi,
	Hareketler.CekNo  AS BelgeNo,
	Subeler.SubeAdi,
	Hareketler.CariHesapAdi,
	Hareketler.BankaHesapAdi,
	Hareketler.KKHesapInd,
	Hareketler.KKHesapAdi,
	Hareketler.GelirAdi,
	Hareketler.GiderAdi,
	Hareketler.HedefHesapAdi,
	Hareketler.KasayaIslensinMi,
	Hareketler.Senet,
	ISNULL(Hareketler.Kur,1) AS Kur,
	Hareketler.ParaBirimi AS ParaBirimi,
	ISNULL(Hareketler.Tutar, 0) as Tutar
FROM Hareketler WITH(NOLOCK)
LEFT JOIN Subeler WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
WHERE TipInd = 11 
	AND Hareketler.DurumInd!= 9

UNION ALL

SELECT
	CariHesapInd AS HesapInd,
	Hareketler.Ind,
	TipInd,
	Hareketler.Owner, 
	0 as Borc,
	CASE WHEN (TipInd = 536 AND (Hareketler.DurumInd = 4 OR Hareketler.DurumInd = 5) )
		THEN Tutar * ISNULL(Hareketler.Kur,1)
		ELSE 0
		END as Alacak,			
	Aciklama,
	GirisTarihi,
	null as OdemeTarihi,
	Hareketler.VadeTarihi as VadeTarihi,
	Hareketler.CekNo  AS BelgeNo,
	Subeler.SubeAdi,
	Hareketler.CariHesapAdi,
	Hareketler.BankaHesapAdi,
	Hareketler.KKHesapInd,
	Hareketler.KKHesapAdi,
	Hareketler.GelirAdi,
	Hareketler.GiderAdi,
	Hareketler.HedefHesapAdi,
	Hareketler.KasayaIslensinMi,
	Hareketler.Senet,
	ISNULL(Hareketler.Kur,1) AS Kur,
	Hareketler.ParaBirimi AS ParaBirimi,
	ISNULL(Hareketler.Tutar, 0) as Tutar
FROM Hareketler WITH(NOLOCK)
LEFT JOIN Subeler WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
WHERE TipInd = 536
	AND Hareketler.DurumInd!= 9

UNION ALL

SELECT
	CariHesapInd AS HesapInd,
	Hareketler.Ind,
	TipInd,
	Hareketler.Owner, 
	Tutar as Borc,
	0 as Alacak,			
	'İade edildi' as Aciklama,
	IslemTarihi as GirisTarihi,
	null as OdemeTarihi,
	Hareketler.VadeTarihi as VadeTarihi,
	Hareketler.CekNo  AS BelgeNo,
	Subeler.SubeAdi,
	Hareketler.CariHesapAdi,
	Hareketler.BankaHesapAdi,
	Hareketler.KKHesapInd,
	Hareketler.KKHesapAdi,
	Hareketler.GelirAdi,
	Hareketler.GiderAdi,
	Hareketler.HedefHesapAdi,
	Hareketler.KasayaIslensinMi,
	Hareketler.Senet,
	ISNULL(Hareketler.Kur,1) AS Kur,
	Hareketler.ParaBirimi AS ParaBirimi,
	ISNULL(Hareketler.Tutar, 0) as Tutar
FROM Hareketler WITH(NOLOCK)
LEFT JOIN Subeler WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
WHERE TipInd = 11 
	AND Hareketler.DurumInd = 12

UNION ALL

SELECT
	CariHesapInd AS HesapInd,
	Hareketler.Ind, 
	TipInd,
	Hareketler.Owner,
	Tutar * ISNULL(Hareketler.Kur,1) as Borc,
	0 as Alacak,
	Aciklama,
	GirisTarihi,
	null as OdemeTarihi,
	Hareketler.VadeTarihi as VadeTarihi,
	Hareketler.CekNo  AS BelgeNo,
	Subeler.SubeAdi,
	Hareketler.CariHesapAdi,
	Hareketler.BankaHesapAdi,
	Hareketler.KKHesapInd,
	Hareketler.KKHesapAdi,
	Hareketler.GelirAdi,
	Hareketler.GiderAdi,
	Hareketler.HedefHesapAdi,
	Hareketler.KasayaIslensinMi,
	Hareketler.Senet,
	ISNULL(Hareketler.Kur,1) AS Kur,
	Hareketler.ParaBirimi AS ParaBirimi,
	ISNULL(Hareketler.Tutar, 0) as Tutar
FROM Hareketler WITH(NOLOCK)
LEFT JOIN Subeler WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
WHERE TipInd = 14 
	AND Hareketler.DurumInd IN (4,10,12)

UNION ALL

SELECT
	CariHesapInd AS HesapInd,
	Hareketler.Ind, 
	TipInd,
	Hareketler.Owner,
	0 as Borc,
	Tutar * ISNULL(Hareketler.Kur,1) as Alacak,
	'İade edildi' as Aciklama,
	IslemTarihi as GirisTarihi,
    null as OdemeTarihi,
	Hareketler.VadeTarihi as VadeTarihi,
	Hareketler.CekNo  AS BelgeNo,
	Subeler.SubeAdi,
    Hareketler.CariHesapAdi,
	Hareketler.BankaHesapAdi,
	Hareketler.KKHesapInd,
	Hareketler.KKHesapAdi,
	Hareketler.GelirAdi,
	Hareketler.GiderAdi,
	Hareketler.HedefHesapAdi,
	Hareketler.KasayaIslensinMi,
	Hareketler.Senet,
	ISNULL(Hareketler.Kur,1) AS Kur,
	Hareketler.ParaBirimi AS ParaBirimi,
	ISNULL(Hareketler.Tutar, 0) as Tutar
FROM Hareketler WITH(NOLOCK)
LEFT JOIN Subeler WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
WHERE TipInd = 14 
	AND Hareketler.DurumInd =12

UNION ALL

SELECT
	Hareketler.CiroCariInd,
	Hareketler.Ind, 
	TipInd,
	Hareketler.Owner, 
	Tutar * ISNULL(Hareketler.Kur,1) as Borc,
	0 as Alacak,
	Aciklama,
	IslemTarihi as GirisTarihi,
	null as OdemeTarihi,
	Hareketler.VadeTarihi as VadeTarihi,
	null AS BelgeNo,
	Subeler.SubeAdi,
	Hareketler.CariHesapAdi,
    Hareketler.BankaHesapAdi,
	Hareketler.KKHesapInd,
	Hareketler.KKHesapAdi,
	Hareketler.GelirAdi,
	Hareketler.GiderAdi,
	Hareketler.HedefHesapAdi,
	Hareketler.KasayaIslensinMi,
	NULL AS Senet,
	ISNULL(Hareketler.Kur,1) AS Kur,
	Hareketler.ParaBirimi AS ParaBirimi,
	ISNULL(Hareketler.Tutar, 0) as Tutar
FROM Hareketler WITH(NOLOCK)
LEFT JOIN Subeler WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner

/*
UNION ALL

FisPortfoyu alani aktif olarak kullanilmaya baslanmistir, alttaki kisim yanlis olarak kullanildigindan kapatilmistir. -sahap
SELECT
	b.HesapInd AS HesapInd,
	h.Ind,
	h.TipInd as TipInd,
	h.Owner as Owner,
	0 as Borc,
	h.Tutar as Alacak,
	b.Aciklama as Aciklama,
	b.Tarih as GirisTarihi,
	NULL as	VadeTarihi,
	b.BelgeNo as BelgeNo,
	s.SubeAdi as SubeAdi,
	h.CariHesapAdi,
	h.BankaHesapAdi,
	h.KKHesapAdi,
	h.GelirAdi,
	h.GiderAdi,
	h.HedefHesapAdi
FROM Hareketler as h
LEFT JOIN Subeler as s ON h.Owner = s.Owner
LEFT JOIN Basliklar as b ON b.Ind = h.BaslikInd
LEFT JOIN Hesaplar as hsp ON hsp.Ind = b.HesapInd
WHERE h.TipInd = 37
AND b.FisPortfoyu = 'True'
*/
GO
CREATE VIEW CariHareketlerVadeli
AS 
		SELECT 
			  ch.Ind
			 ,ch.TipInd
			 ,ch.owner --HareketOwner			  
			 ,h.Owner CariOwner 			  
			 ,h.HesapKodu CariKodu
			 ,h.HesapAdi CariAdi
			 ,ch.HesapInd CariInd
			 ,ch.GirisTarihi Tarih
			 ,ch.GirisTarihi  GirisTarihi
			 ,ISNULL(h.FaturaVadesi,0) FaturaVadesi	
			 ,ISNULL(h.OdemeVadesi,0) OdemeVadesi
			 ,ISNULL(h.Faiz,0) Faiz
			,ISNULL(ch.Aciklama,'') Aciklama
			,ch.Borc Borc
			,ch.Alacak Alacak
			,(ch.Borc - ch.Alacak) Bakiye
			,ISNULL(BelgeNo,'') BelgeNo
			,VadeTarihi CekVadeTarihi  
		FROM 
		  carihareket ch WITH(NOLOCK) INNER JOIN hesaplar h WITH(NOLOCK) ON  ch.HesapInd = h.Ind 
GO





CREATE FUNCTION [dbo].[CariIrsaliyeHareket]
(
	@Ind int,
	@BaslangicTarihi DATETIME ,
	@BitisTarihi DATETIME 
	)
RETURNS TABLE 
AS
RETURN
(
		SELECT 
			NULL StokInd	,
			NULL StokAdi	,
			NULL Fiyat		, 
			NULL Miktar		,
			Ind				,
			TipInd			,
			Borc			,
			BelgeNo			,
			Alacak			,
			Aciklama		,
			GirisTarihi		,		
			VadeTarihi		,	
			SubeAdi			,
			CariHesapAdi	,
			BankaHesapAdi	,
			KKHesapAdi		,
			GelirAdi		,
			GiderAdi		,
			HedefHesapAdi	,											
			[Owner],
			NULL AS PlakaNo, 
			NULL AS YazarKasaFisNo,
			Senet
		FROM 
			dbo.CariHareket WITH(NOLOCK)
		WHERE 
			HesapInd = @Ind 
			--AND TipInd = 6
			AND @BaslangicTarihi <= GirisTarihi  
			AND GirisTarihi < @BitisTarihi

		UNION ALL

		SELECT 
			StokInd	,
			StokKodu,
			Fiyat	, 
			Miktar	,
			Ind		,
			TipInd	,
			CASE WHEN (TipInd IN(5, 104, 111))
				THEN NetTutar 
				ELSE 0
				END as Borc,
			BelgeNo,
			CASE WHEN (TipInd IN(2,103))
				THEN NetTutar
				ELSE 0
				END as Alacak,
			Aciklama,
			Tarih AS GirisTarihi,
			NULL AS VadeTarihi,
			NULL AS SubeAdi,
			NULL AS CariHesapAdi,
			NULL AS BankaHesapAdi,
			NULL AS KKHesapAdi,
			NULL AS GelirAdi,
			NULL AS GiderAdi,
			NULL AS HedefHesapAdi,		
			[Owner],
			PlakaNo, 
			YazarKasaFisNo,
			NULL AS Senet
		FROM 
			IrsaliyeDokumuForCariIrsaliyeHareket(@BaslangicTarihi,@BitisTarihi , @Ind)
		WHERE 
			DurumInd IS NULL AND 	 
			TipInd in (2,104, 111)--(2,5,103,104)		 
)



GO



GO
CREATE FUNCTION [dbo].[CariIrsaliyeHareketToplam] 
(	
	@Ind int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@SubeGrupInds nvarchar(max)
)

RETURNS TABLE 
AS
RETURN 
(
	
	SELECT
		NULL StokInd	,
		NULL StokAdi,
		NULL Fiyat, 
		NULL miktar,
		@Ind AS Ind,
		NULL AS Owner,	
		23 AS TipInd,
		SUM(Borc) AS Borc,
		NULL AS BelgeNo,
		SUM(Alacak) AS Alacak,
		'Devir' AS Aciklama,
		NULL AS GirisTarihi,
		NULL AS VadeTarihi,
		NULL AS SubeAdi,
		NULL AS CariHesapAdi,
		NULL AS BankaHesapAdi,
		NULL AS KKHesapAdi,
		NULL AS GelirAdi,
		NULL AS GiderAdi,
		NULL AS HedefHesapAdi,
		NULL AS Bakiye,
		NULL AS PlakaNo, 
		NULL AS YazarKasaFisNo,
		NULL AS Senet
	FROM CariIrsaliyeHareket(@Ind,'1900/01/01',@BaslangicTarihi)

	
	UNION ALL

	SELECT
		StokInd	,
		StokAdi,
		Fiyat, 
		miktar,
		Ind,
		Owner,
		TipInd,
		Borc,
		BelgeNo,
		Alacak,
		Aciklama,
		GirisTarihi,
		VadeTarihi,		
		SubeAdi,
		CariHesapAdi,
		BankaHesapAdi,
		KKHesapAdi,
		GelirAdi,
		GiderAdi,
		HedefHesapAdi,
		NULL AS Bakiye,
		PlakaNo, 
		YazarKasaFisNo,
		Senet
	FROM CariIrsaliyeHareket(@Ind,@BaslangicTarihi,DATEADD(day,1,@BitisTarihi))
)

GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AkaryakitStoklari]
AS

SELECT DISTINCT S.*
FROM Stoklar AS S WITH(NOLOCK)
LEFT JOIN Hesaplar AS H WITH(NOLOCK)
ON S.Ind = H.StokInd
WHERE H.StokInd IS NOT NULL
AND TipInd = 205
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AkaryakitDepolari]
AS

SELECT *
FROM Hesaplar WITH(NOLOCK)
WHERE StokInd IS NOT NULL
AND TipInd = 205
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AkaryakitDepoDagilimi]
AS
	SELECT
		S.Ind AS StokInd,
		S.StokKodu,
		S.StokAdi,
		H.Ind AS HesapInd,
		H.HesapKodu,
		H.HesapAdi,
		H.Owner,
		B.BirimAdi as AnaBirimAdi
	FROM AkaryakitStoklari AS S WITH(NOLOCK)
	LEFT JOIN Birimler AS B WITH(NOLOCK) ON S.AnaBirimInd = B.Ind
	LEFT JOIN AkaryakitDepolari AS H WITH(NOLOCK)
	ON S.Ind = H.StokInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[PerakendeStoklari]
AS

SELECT DISTINCT
	S.Ind,
	H.Owner,
	S.StokKodu,
	S.StokAdi,
	S.AnaBirimInd,
	S.GrupInd,
	S.AlisKDVGrupInd,
	S.SatisKDVGrupInd,
	S.Aktif
FROM Stoklar AS S WITH(NOLOCK)
CROSS JOIN Hesaplar AS H WITH(NOLOCK)
WHERE H.TipInd = 205 AND H.StokInd IS NULL --AND H.StokInd != S.Ind
AND (S.Owner = H.Owner OR S.Owner IS NULL)
--AND H.Ind NOT IN
--(
	--SELECT Ind
	--FROM Hesaplar
	--WHERE StokInd IS NOT NULL
	--AND TipInd = 205
--)
--AND S.Ind NOT IN
--(
	--SELECT AKS.Ind
	--FROM AkaryakitStoklari AS AKS
	--LEFT JOIN AkaryakitDepolari AS AKD ON AKS.Ind = AKD.StokInd
	--WHERE AKD.Owner = H.Owner
	--OR AKD.Owner IS NULL
--)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[PerakendeDepolari]
AS

SELECT *
FROM Hesaplar WITH(NOLOCK)
WHERE StokInd IS NULL
AND TipInd = 205
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[PerakendeDepoDagilimi]
AS
	SELECT
		S.Ind AS StokInd,
		S.StokKodu,
		S.StokAdi,
		H.Ind AS HesapInd,
		H.HesapKodu,
		H.HesapAdi,
		S.Owner,
		B.BirimAdi as AnaBirimAdi
	FROM PerakendeStoklari AS S WITH(NOLOCK)
	LEFT JOIN Birimler AS B WITH(NOLOCK) ON S.AnaBirimInd = B.Ind
	CROSS JOIN PerakendeDepolari AS H
	WHERE 
		S.Owner = H.Owner
		AND 
		S.Ind NOT IN
			(
				SELECT 
					DISTINCT StokInd
				FROM 
					Hesaplar WITH(NOLOCK)
				WHERE 
					StokInd IS NOT NULL
					AND TipInd = 205
			)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[DepoStokDagilim] 
(
	@Inds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
		SELECT
			*
		FROM 
			AkaryakitDepoDagilimi WITH(NOLOCK)
		WHERE StokInd IN (SELECT item as StokInd  FROM fnSplit(@Inds,','))
			--AND H.Ind NOT IN (SELECT Ind FROM PerakendeDepolari)

		UNION ALL

		SELECT 
			* 
		FROM
			PerakendeDepoDagilimi WITH(NOLOCK)
		WHERE 
			StokInd IN (SELECT item as StokInd  FROM fnSplit(@Inds,','))
			
)
GO
CREATE VIEW [dbo].[EskiSatisKasalariSatilanUrunlerListesi]
AS
		--Satis faturaları hareketleri 6
		SELECT
			Kasa.Tarih,
			H.TipInd,
			Kasa.VardiyaNo,
			S.KullaniciInd,
			S.BaslikInd,
			(H.Miktar*H.Carpan*H.Fiyat*(1+KG.KDVOrani/100)-H.Iskonto) AS Tutar, 
			S.Owner AS Owner,
			H.StokInd,
			H.StokKodu,
			H.StokAdi,
			SG.Ind as GrupInd,
			SG.GrupAdi,
			H.Miktar,
			H.Carpan,
			H.Fiyat*(1+KG.KDVOrani/100) as Fiyat,
			KG.KDVOrani 
		FROM 
		dbo.Basliklar AS Kasa WITH(NOLOCK)
		INNER JOIN SatisKasasi AS S WITH(NOLOCK) ON Kasa.Ind = S.BaslikInd
		LEFT JOIN Basliklar AS B WITH(NOLOCK) ON S.IslemInd = B.Ind
		LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
		LEFT JOIN Stoklar AS ST WITH(NOLOCK) ON  H.StokInd = ST.Ind
		LEFT JOIN StokGruplari AS SG WITH(NOLOCK) ON SG.Ind = ST.GrupInd
		LEFT JOIN KDVGruplari AS KG WITH(NOLOCK) ON ST.SatisKDVGrupInd = KG.Ind
		WHERE H.TipInd = 6 AND B.TipInd = 102
		AND S.Tablo = N'Basliklar'
		AND S.IsYeniSatis = 'false'
		
		UNION ALL
		--Satis irsaliyesi hareketleri 5
		SELECT 
			Kasa.Tarih,
			H.TipInd,
			Kasa.VardiyaNo,
			S.KullaniciInd,
			S.BaslikInd,
			(Miktar*Carpan*Fiyat) AS Tutar, 
			S.Owner AS Owner,
			H.StokInd,
			H.StokKodu,
			H.StokAdi,
			SG.Ind as GrupInd,
			SG.GrupAdi,
			H.Miktar,
			H.Carpan,
			H.Fiyat,
			KG.KDVOrani
		FROM 
		dbo.Basliklar AS Kasa WITH(NOLOCK)
		INNER JOIN SatisKasasi AS S WITH(NOLOCK) ON Kasa.Ind = S.BaslikInd		
		LEFT JOIN Basliklar AS B WITH(NOLOCK) ON S.IslemInd = B.Ind
		LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
		LEFT JOIN Stoklar AS ST WITH(NOLOCK) ON  H.StokInd = ST.Ind
		LEFT JOIN StokGruplari AS SG WITH(NOLOCK) ON SG.Ind = ST.GrupInd	
		LEFT JOIN KDVGruplari AS KG WITH(NOLOCK) ON ST.SatisKDVGrupInd = KG.Ind	
		WHERE B.TipInd = 104 AND H.TipInd = 5
		AND S.Tablo = N'Basliklar'
		AND S.IsYeniSatis = 'false'		

		
		UNION ALL
		
		--Parekende hareketleri 504
		SELECT
			Kasa.Tarih,
			p.TipInd,
			Kasa.VardiyaNo,
			S.KullaniciInd,
			S.BaslikInd,
			P.Miktar*P.Carpan*P.Fiyat AS Tutar, 
			S.Owner AS Owner,
			P.StokInd,
			P.StokKodu,
			P.StokAdi,
			SG.Ind as GrupInd,
			SG.GrupAdi,
			P.Miktar,
			P.Carpan,
			P.Fiyat,
			KG.KDVOrani
		FROM 
		dbo.Basliklar AS Kasa WITH(NOLOCK)
		INNER JOIN SatisKasasi AS S WITH(NOLOCK) ON Kasa.Ind = S.BaslikInd
		LEFT JOIN Hareketler AS P WITH(NOLOCK)
		LEFT JOIN Stoklar AS ST WITH(NOLOCK) ON  P.StokInd = ST.Ind
		LEFT JOIN StokGruplari AS SG WITH(NOLOCK) ON SG.Ind = ST.GrupInd
		LEFT JOIN KDVGruplari AS KG WITH(NOLOCK) ON ST.SatisKDVGrupInd = KG.Ind	
		ON S.IslemInd = P.Ind
		WHERE P.TipInd = 504 AND S.IsYeniSatis = 'false'
		AND S.Tablo = N'Hareketler'	

GO
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[EskiSatisKasalariKKNakitHareketleri]
AS
SELECT     h.Ind, h.BaslikInd, b.Owner, h.TipInd, b.Tarih, h.Miktar, h.Fiyat, h.Tutar, b.VardiyaNo
FROM         dbo.Basliklar AS b WITH(NOLOCK) INNER JOIN
                      dbo.Hareketler AS h ON b.Ind = h.BaslikInd
WHERE     (h.TipInd = 38 OR
                      h.TipInd = 10) AND (b.TipInd = 505)

GO
CREATE FUNCTION [dbo].[EskTBVardiyaTahsilatSatisTutarlari] 
(	
	@owner INT,
	@Tarih SMALLDATETIME
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT 
		[owner],
		3 AS TipInd,
		'Satıslar' AS TipAdi,
		VardiyaNo,
		SUM(Tutar) AS Tutar
	FROM 
		EskiSatisKasalariSatilanUrunlerListesi WITH(NOLOCK)
	WHERE 
		[owner] = @owner
		AND Tarih = @Tarih
		AND TipInd IN (5,6,504)
	GROUP BY VardiyaNo,[owner]

	UNION ALL


	SELECT 
		[owner],
		0 AS TipInd,
		'Veresiyeler' AS TipAdi,
		VardiyaNo,
		SUM(Tutar) AS Tutar
	FROM 
		EskiSatisKasalariSatilanUrunlerListesi WITH(NOLOCK)
	WHERE 
		[owner] = @owner
		AND Tarih = @Tarih
		AND TipInd = 5
	GROUP BY VardiyaNo,[owner]

	UNION ALL

	SELECT 
		[owner],
		1 AS TipInd,
		'Kredi Kartlari' AS TipAdi,
		VardiyaNo,
		SUM(Tutar) AS Tutar
	FROM 
		EskiSatisKasalariKKNakitHareketleri WITH(NOLOCK)
	WHERE 
		[owner] = @owner
		AND Tarih = @Tarih
		AND	TipInd = 10
	GROUP BY VardiyaNo,[owner]

	UNION ALL

	SELECT 
		[owner],
		2 AS TipInd,
		'Nakitler' AS TipAdi,
		VardiyaNo,
		SUM(Tutar) AS Tutar
	FROM 
		EskiSatisKasalariKKNakitHareketleri WITH(NOLOCK)
	WHERE 
		[owner] = @owner
		AND Tarih = @Tarih
		AND	TipInd = 38
	GROUP BY VardiyaNo,[owner]

)



GO
GO
CREATE FUNCTION [dbo].[EskVardiyaSatislariOzet] 
(	
	@Owner INT,
	@Tarih SMALLDATETIME
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT 
		[owner],
		VardiyaNo,
		SUM(CASE WHEN TipInd=0 THEN Tutar ELSE 0 END) AS Veresiyeler,
		SUM(CASE WHEN TipInd=1 THEN Tutar ELSE 0 END) AS KKTahsilatlar,
		SUM(CASE WHEN TipInd=2 THEN Tutar ELSE 0 END) AS NakitTahsilatlar,
		SUM(CASE WHEN TipInd=3 THEN Tutar ELSE 0 END) AS SatislarToplami,		
		(SUM(CASE WHEN (TipInd=1 OR TipInd=2) THEN Tutar ELSE 0 END)-SUM(CASE WHEN TipInd=0 THEN Tutar ELSE 0 END)) AS AcikFazla
	FROM 
		EskTBVardiyaTahsilatSatisTutarlari(@Owner,@Tarih)  
	GROUP BY VardiyaNo,[owner]
)
 

GO
CREATE FUNCTION [dbo].[AyinGunSayisiniVer] ( @Tarih DATETIME )RETURNS INT
AS
BEGIN
	DECLARE @rtTarih INT
	SET @rtTarih = 
		CASE WHEN MONTH(@Tarih) IN (1, 3, 5, 7, 8, 10, 12) THEN 31
			WHEN MONTH(@Tarih) IN (4, 6, 9, 11) THEN 30	
			ELSE CASE WHEN (YEAR(@Tarih) % 4 = 0
	AND
		YEAR(@Tarih) % 100 != 0)
	OR
		(YEAR(@Tarih) % 400 = 0)
	THEN 29
	ELSE 28 END
	END
	RETURN @rtTarih
END
GO



CREATE FUNCTION [dbo].[CariHareketGecenGunSayisi] 
(
	 @HareketTarihi dateTime
	,@SorguTarihi DATETIME
	,@CariInd DATETIME
)
RETURNS INT
AS
BEGIN
	DECLARE @_Sonuc			DECIMAL(28,8)		 
	DECLARE @_FaturaVadesi	INT
	DECLARE @_GecenGun		INT
	DECLARE @_Ags			INT  -- Ayın gün sayısı
	DECLARE @_Hty			INT  -- HareketTarihiYılı
	DECLARE @_Hta			INT  -- HareketTarihiAyi  
	DECLARE @_Htg			INT  -- HareketTarihiGunu 

	SET  @_Ags = dbo.AyinGunSayisiniVer(@HareketTarihi)
	SET  @_Hty = YEAR(@HareketTarihi)
	SET  @_Hta = MONTH(@HareketTarihi)
	SET  @_Htg = DAY(@HareketTarihi)
		

	SELECT 
		 @_FaturaVadesi	=	ISNULL(FaturaVadesi,0)	 
	FROM 
		hesaplar
	WHERE Ind = @CariInd	

	IF(@_FaturaVadesi = 0)
	BEGIN
		
		SET  @_GecenGun = DATEDIFF(DAY,@HareketTarihi,@SorguTarihi)
		 
	END
	ELSE IF(@_FaturaVadesi = 1)
	BEGIN
		SET @_Htg = DAY(@HareketTarihi)

		IF( @_Htg <= 15)
		BEGIN
			SET @HareketTarihi = CAST(@_Hty AS NVARCHAR) + '/' + CAST(@_Hta AS NVARCHAR) + '/15';
		END	
		ELSE IF (@_Htg > 15)	 
		BEGIN
			SET @HareketTarihi = CAST(@_Hty AS NVARCHAR) + '/' + CAST(@_Hta AS NVARCHAR) + '/' + CAST(@_Ags AS NVARCHAR);
		END
		
		SET  @_GecenGun = DATEDIFF(DAY,@HareketTarihi,@SorguTarihi)
		
	END
	ELSE
	BEGIN
		SET @HareketTarihi = DATEADD(month, 1, @HareketTarihi) 
		SET @HareketTarihi = CAST(YEAR(@HareketTarihi) AS NVARCHAR) + '/' + CAST(MONTH(@HareketTarihi) AS NVARCHAR) + '/1';

		SET  @_GecenGun = DATEDIFF(DAY,@HareketTarihi,@SorguTarihi)

	END

	RETURN @_GecenGun
END

GO


CREATE FUNCTION  [dbo].[CariHareketYaslandirmaListesi]
(
	 @Tarih datetime
) 
RETURNS TABLE 
AS 
RETURN 
(
	SELECT
	 Ind
	,TipInd	
	,[Owner] --HareketOwner	
	,BorcAlacak	
	,Tarih
	,CariOwner 			  
	,CariKodu
	,CariAdi
	,CariInd
	,FaturaVadesi	
	,OdemeVadesi
	,Faiz
	,GecenGunSayisi
	,VadesiGecenGunSayisi
	,Aciklama
	,Borc
	,Alacak 
	,Bakiye
	,CASE 
		--WHEN Alacak != 0  THEN -Alacak  --Eğer alacak ise GelmeyenBorcTutari olarak - değer yansıt.
		WHEN (Borc != 0) AND (VadesiGecenGunSayisi <= 0 ) THEN Borc  -- vadesi geçmemiş borçları GelmeyenBorcTutarina artı değer oalrak yansıt.
		ELSE 0 
	 END  GelmeyenBorcTutari
	,CASE 
		WHEN VadesiGecenGunSayisi > 0 AND Borc != 0  THEN Borc --Vadesi gecen borçları GecenBorcTutari olarak yansıt
		ELSE 0 
	 END  GecenBorcTutari
	,VadeFarki
	,BelgeNo
	,CekVadeTarihi			 
	FROM 
		(
			SELECT 
				  Ind
				 ,TipInd
				 ,Tarih
				 ,CariOwner 			  
				 ,CariKodu
				 ,CariAdi
				 ,[Owner]
				 ,CariInd
				 ,FaturaVadesi	
				 ,OdemeVadesi
				 ,Faiz
				,Aciklama
				,Borc
				,Alacak 
				,Bakiye  
				,[dbo].CariHareketGecenGunSayisi(GirisTarihi,@Tarih,CariInd) AS GecenGunSayisi
				,(([dbo].CariHareketGecenGunSayisi(GirisTarihi,@Tarih,CariInd))- OdemeVadesi) VadesiGecenGunSayisi
				--,dbo.CariHareketGecenGunVadeTutari(GirisTarihi,@Tarih,CariInd,Borc) VadeFarki
				,0.0 VadeFarki
				,CASE WHEN borc !=0 THEN 'B' ELSE 'A' END AS BorcAlacak
				,BelgeNo
				,CekVadeTarihi   
			FROM 
				CariHareketlerVadeli
			WHERE 
				GirisTarihi <= @Tarih
		) 
	AS Sonuc	 
)

GO

CREATE FUNCTION CariHesabiVadeFarkliListesi
(
	 @Tarih datetime
	,@hbaslangic nvarchar(100)
	,@hbitis nvarchar(100)	
)
RETURNS TABLE
AS 
RETURN 
(

SELECT 
	*
FROM 	
(
	SELECT 
		  CariOwner AS [Owner]
		 ,CariInd AS HesapInd
		 ,CariKodu AS HesapKodu
		 ,CariAdi AS HesapAdi
		 ,FaturaVadesi	
		 ,OdemeVadesi Odeme
		 ,Faiz
		 ,SUM(Borc) Borc
		 ,SUM(Alacak) Alacak
		 ,(SUM(Borc) - SUM(Alacak)) Bakiye
		 ,SUM(GelmeyenBorcTutari) Gelmeyen
		 ,(SUM(GecenBorcTutari)-SUM(Alacak)) Gecen 
		 ,SUM(GecenGunSayisi)/COUNT(*) GecenGun
		 ,0.0 VadeFarki
	FROM 
		CariHareketYaslandirmaListesi(@Tarih) 
	WHERE 
		(CariKodu BETWEEN  @hbaslangic AND @hbitis) 
	GROUP BY CariInd,CariOwner,FaturaVadesi,OdemeVadesi,Faiz,CariKodu,CariAdi			
) sonuc	
WHERE 
	Bakiye>0

)

 
GO
CREATE FUNCTION [dbo].[CariHareketGecenGunVadeTutari] 
(
	 @HareketTarihi dateTime
	,@SorguTarihi DATETIME
	,@CariInd DATETIME
	,@Borc DECIMAL(28,8)
)
RETURNS DECIMAL(28,8)
AS
BEGIN
	DECLARE @_Sonuc			DECIMAL(28,8)		 
	DECLARE @_Faiz			DECIMAL(28,8)		 
	DECLARE @_OdemeVadesi	INT
	DECLARE @_GecenGun		INT
	DECLARE @_FUGS			INT  -- faiz uygulanacak gün sayısı
		
	SET  @_FUGS = 0

	SELECT 
		@_OdemeVadesi	=	ISNULL(OdemeVadesi,0)
		,@_Faiz			=	ISNULL(Faiz,0)
	FROM 
		hesaplar
	WHERE Ind = @CariInd	


	SELECT @_GecenGun = [dbo].CariHareketGecenGunSayisi(@HareketTarihi,@SorguTarihi,@CariInd)
	SET @_FUGS = @_GecenGun - @_OdemeVadesi

	IF(@_FUGS <= 0)
	BEGIN
		SET @_Sonuc = 0
	END
	ELSE
	BEGIN
		SET @_Sonuc = (@_FUGS * @_Faiz * @Borc)/36000		
	END


	RETURN @_Sonuc
END
--select [dbo].CariHareketGecenGunVadeTutari('2010/02/05','2010/04/27',1054,328.134000)

--SELECT FaturaVadesi,* FROM hesaplar WHERE Ind=1054
--UPDATE hesaplar SET FaturaVadesi=0 WHERE Ind=1054 --2
--75.16666600
GO
CREATE VIEW [dbo].[VeresiyeHareketleri]
AS
(
	SELECT 
		Basliklar.Ind BaslikInd,
		Basliklar.Owner,
		Basliklar.TipInd,
		(Hareketler.Miktar * Hareketler.Fiyat * Hareketler.Carpan) AS NetTutar,
		(Hareketler.Miktar * Hareketler.Carpan) AS Miktar,
		Hareketler.Fiyat,
		Basliklar.Tarih As Tarih,
		Hareketler.DurumInd,
		Hareketler.Carpan,
		Basliklar.HesapInd CariInd,
		Basliklar.HesapKodu CariKodu,
		Basliklar.HesapAdi CariAdi,			
		Basliklar.PlakaNo,
		Basliklar.BelgeNo,
		Basliklar.FaturaInd,
		(Hareketler.StokKodu + ' - ' + Hareketler.StokAdi) AS StokKodu,
		CASE WHEN (Hareketler.DurumInd In (3))
		THEN 'Eski'
		WHEN (Hareketler.DurumInd In (-1))
		THEN ''
		ELSE 'Yeni' END AS Durum,
		CASE WHEN (Hareketler.TipInd IN (111))
		THEN Basliklar.Aciklama 
		WHEN (Hareketler.TipInd IN (103))
		THEN 'Alış İrs.'
		WHEN (Hareketler.TipInd IN (-1))
		THEN 'Toplam'
		ELSE 'Satış İrs.' END AS Aciklama
		, Hareketler.YazarKasaFisNo
		, Basliklar.Ind
		, Hareketler.StokInd
		,(
			(SELECT RiskLimitiLt FROM CariStokRiskLimitleriAyrinti WHERE CariInd = Basliklar.HesapInd AND StokInd = Hareketler.StokInd AND [owner] = Basliklar.Owner)
		 ) AS KalanLimit 
	FROM Hareketler WITH(NOLOCK)
		LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
	WHERE 
		Hareketler.TipInd IN (2,5)
		--AND (Basliklar.DurumInd != 11 OR Basliklar.DurumInd IS NULL)
	UNION ALL

	SELECT 
		Basliklar.Ind BaslikInd,
		Basliklar.Owner,
		Basliklar.TipInd,
		Hareketler.Tutar AS NetTutar,
		(Hareketler.Miktar * Hareketler.Carpan) AS Miktar,
		Hareketler.Fiyat,
		Basliklar.Tarih As Tarih,
		Hareketler.DurumInd,
		Hareketler.Carpan,
		Basliklar.HesapInd CariInd,
		Basliklar.HesapKodu CariKodu,
		Basliklar.HesapAdi CariAdi,		
		Basliklar.PlakaNo,
		Basliklar.BelgeNo,
		Basliklar.FaturaInd,
		(Hareketler.StokKodu + ' - ' + Hareketler.StokAdi) AS StokKodu,
		CASE WHEN (Hareketler.DurumInd In (3))
		THEN 'Eski'
		WHEN (Hareketler.DurumInd In (-1))
		THEN ''
		ELSE 'Yeni' END AS Durum,
		CASE WHEN (Hareketler.TipInd IN (37))
		THEN Basliklar.Aciklama
		WHEN (Hareketler.TipInd IN (103))
		THEN 'Alış İrs.'
		WHEN (Hareketler.TipInd IN (-1))
		THEN 'Toplam'
		ELSE 'Satış İrs.' END AS Aciklama
		, Hareketler.YazarKasaFisNo
		, Basliklar.Ind
		,Hareketler.StokInd
		,(
			(SELECT RiskLimitiLt FROM CariStokRiskLimitleriAyrinti WHERE CariInd = Basliklar.HesapInd AND StokInd = Hareketler.StokInd AND [owner] = Basliklar.Owner) 	
		 ) AS KalanLimit 
	FROM Hareketler WITH(NOLOCK)
	LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
	WHERE 
		  Hareketler.TipInd IN (37)
	      --AND (Basliklar.DurumInd != 11 OR Basliklar.DurumInd IS NULL)
)



GO
CREATE VIEW [dbo].[VeresiyelerFaturalandirilmamis]
AS
(
	SELECT 
		BaslikInd, 
		Owner, 
		TipInd, 
		CariInd, 
		CariKodu,
		CariAdi,
		Tarih, 
		BelgeNo, 		
		SUM(Miktar * Fiyat * Carpan) AS Tutar, 
		Durum,
		DurumInd
	FROM 
		VeresiyeHareketleri WITH(NOLOCK)
	WHERE 
		(DurumInd != 11 OR DurumInd IS NULL)
	GROUP BY 
		BaslikInd, 
		Owner, 
		TipInd, 
		CariInd, 
		CariKodu,
		CariAdi,
		Tarih, 
		BelgeNo, 
		DurumInd,
		Durum,
		FaturaInd
)



GO
CREATE FUNCTION [dbo].[SonAlisFiyati] 
(
	 @Owner int
	,@StokInd int
	,@Tarih SMALLDATETIME 
)
RETURNS DECIMAL(28,13)
AS
BEGIN

	DECLARE @_Sonuc	DECIMAL(28,13)		 

	SELECT TOP 1 
		@_Sonuc = Fiyat
	FROM 
		dbo.AlisHareketleri WITH(NOLOCK)
	WHERE 
	TipInd IN (2,3) 
	AND owner = @Owner
	AND StokInd = @StokInd
	AND Tarih <= @Tarih
	ORDER BY Tarih DESC,Ind DESC

IF (@_Sonuc IS NULL) --Baktigi subede deger bulamazsa yapilmis son hareketi getirmesi icin.
	BEGIN 
		SELECT TOP 1 
			@_Sonuc = Fiyat
		FROM 
			dbo.AlisHareketleri WITH(NOLOCK)
		WHERE 
		TipInd IN (2,3) 
		AND StokInd = @StokInd
		AND Tarih <= @Tarih
		ORDER BY Tarih DESC,Ind DESC

	END 
IF (@_Sonuc IS NULL) --Baktigi subede deger bulamazsa yapilmis son hareketi getirmesi icin.
	BEGIN 
		SELECT TOP 1 
			@_Sonuc = H.Fiyat
		FROM 
			dbo.Hareketler H WITH(NOLOCK)
			INNER JOIN dbo.Basliklar B WITH(NOLOCK)
			ON H.BaslikInd = B.Ind
		WHERE 
		H.TipInd IN (2,3)
		AND B.Owner = @Owner 
		AND H.StokInd = @StokInd
		AND B.Tarih <= @Tarih
		
		ORDER BY B.Tarih DESC

	END
IF (@_Sonuc IS NULL) --Baktigi subede deger bulamazsa yapilmis son hareketi getirmesi icin.
	BEGIN 
		SELECT TOP 1 
			@_Sonuc = H.Fiyat
		FROM 
			dbo.Hareketler H WITH(NOLOCK)
			INNER JOIN dbo.Basliklar B WITH(NOLOCK)
			ON H.BaslikInd = B.Ind
		WHERE 
		H.TipInd IN (2,3)
		AND H.StokInd = @StokInd
		AND B.Tarih <= @Tarih
		
		ORDER BY B.Tarih DESC
	END 
		RETURN ISNULL(@_Sonuc,0)
END


GO

CREATE FUNCTION [dbo].[SonAlisFiyatiIskontolu] 
(
	 @Owner int
	,@StokInd int
	,@Tarih SMALLDATETIME 
)
RETURNS DECIMAL(28,13)
AS
BEGIN

	DECLARE @_Sonuc	DECIMAL(28,13)		 

	SELECT TOP 1 
		@_Sonuc = Fiyat - ISNULL(Iskonto,0) / Miktar - ISNULL (HareketBaslikIskonto, 0) 
	FROM 
		dbo.AlisHareketleri WITH(NOLOCK)
	WHERE 
	TipInd IN (3) 
	AND owner = @Owner
	AND StokInd = @StokInd
	AND Tarih <= @Tarih
	AND HesapInd NOT IN(SELECT Ind FROM Hesaplar WITH(NOLOCK) WHERE HesapAdi = 'Devir Stok Carisi')
	ORDER BY Tarih DESC,Ind DESC

IF (@_Sonuc IS NULL) --Baktigi subede deger bulamazsa yapilmis son hareketi getirmesi icin.
	BEGIN 
		SELECT TOP 1 
			@_Sonuc = Fiyat - ISNULL(Iskonto,0) / Miktar - ISNULL (HareketBaslikIskonto, 0)
		FROM 
			dbo.AlisHareketleri WITH(NOLOCK)
		WHERE 
		TipInd IN (3) 
		AND StokInd = @StokInd
		AND Tarih <= @Tarih
		ORDER BY Tarih DESC,Ind DESC

	END 
		RETURN ISNULL(@_Sonuc,0)
END


GO
CREATE FUNCTION [dbo].[SuAnkiStokSatisFiyati]
(
	@Owner INT,
	@StokInd INT
)
RETURNS DECIMAL(28,13)
AS
BEGIN

	DECLARE @_Result DECIMAL(28,13)
	DECLARE @_FiyatInd INT
	DECLARE @_TipInd INT
	DECLARE @_KDVOrani DECIMAL

	if (@Owner=0) set @Owner = null

	--Şubedeki son satış fiyatı en öncelikli - Ulaş
	SELECT top 1 @_Result =  Fiyat, @_KDVOrani = KDVOrani, @_TipInd = TipInd --Burası KDV Hariç idi. Halbuki altta dönen değerler KDV Dahil !!! Semih Zafer YILMAZ
	FROM Hareketler WITH(NOLOCK)
	WHERE StokInd = @StokInd AND Owner = @Owner
		AND TipInd IN (6, 504) AND (BaslikInd is Null or BaslikInd IN(SELECT Ind FROM Basliklar WHERE BelgeNo != 'Devir'))
	order by Ind desc

	IF (@_Result IS NOT NULL)
	BEGIN
		IF @_TipInd = 6
			BEGIN
				SET @_Result =  @_Result * ( 1 + (@_KDVOrani / 100))
				RETURN @_Result
			END
		ELSE
			RETURN @_Result 
	END

	SELECT 
		TOP 1
		@_FiyatInd = FiyatInd
	FROM 
		SatisFiyatiSiralamaWithStokInd WITH(NOLOCK)
	WHERE 
		Owner = @Owner AND 
		StokInd = @StokInd 
	ORDER BY 
		SiraNo 


	IF (@_FiyatInd IS NULL)
	BEGIN	

		--Ulaş
		if (@_Result is null)
		begin
			SELECT @_Result = Tutar
			FROM StokDetaylari WITH(NOLOCK)
			WHERE StokInd = @StokInd AND Owner = @Owner
				AND TipInd = 501 and IsAnaFiyat = 1
		end

		if (@_Result is null)
		begin
			SELECT @_Result = Tutar
			FROM StokDetaylari WITH(NOLOCK)
			WHERE StokInd = @StokInd AND Owner is null
				AND TipInd = 501 and IsAnaFiyat = 1
		end
		--Ulaş


		if (@_Result is null)
		begin
			SELECT 
				@_Result = Tutar 
			FROM 
				dbo.CBSatisFiyatiListesi WITH(NOLOCK)
			WHERE 
				Owner is null AND
				(StokInd=@StokInd) AND
				TipInd=501 
		end

	END
	ELSE
	BEGIN

		SELECT 
			@_Result = Tutar 
		FROM 
			dbo.CBSatisFiyatiListesi WITH(NOLOCK)
		WHERE 
			Ind=@_FiyatInd

	END

	RETURN @_Result 

END

GO
CREATE FUNCTION [dbo].[SonAlisFiyatlari] 
(	
	@StokInd int,
	@Owner INT
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT dbo.SonAlisFiyati(@Owner, @StokInd,'2059-12-31') AS Fiyat,
		BirimAdi,
		@Owner AS Owner,
		K.KDVOrani
		FROM Stoklar S WITH(NOLOCK) INNER JOIN Birimler B WITH(NOLOCK) ON S.AnaBirimInd = B.Ind
		INNER JOIN KDVGruplari K WITH(NOLOCK) ON S.AlisKDVGrupInd = K.Ind
		WHERE S.Ind = @StokInd
)

GO
CREATE FUNCTION [dbo].[SuAnkiStokSatisFiyatiYazarkasa]
(
	@Owner INT,
	@StokInd INT
)
RETURNS DECIMAL(28,13)
AS
BEGIN

	DECLARE @_Result DECIMAL(28,13)
	DECLARE @_FiyatInd INT

	if (@Owner=0) set @Owner = null

	SELECT 
		TOP 1
		@_FiyatInd = FiyatInd
	FROM 
		SatisFiyatiSiralamaWithStokInd 
	WHERE 
		Owner = @Owner AND 
		StokInd = @StokInd 
	ORDER BY 
		SiraNo 


	IF (@_FiyatInd IS NULL)
	BEGIN	

		--Ulaş
		if (@_Result is null)
		begin
			SELECT @_Result = SD.Tutar
			FROM StokDetaylari SD WITH(NOLOCK)
			INNER JOIN SatisFiyatiSiralama SFS WITH(NOLOCK) ON SFS.FiyatInd = SD.Ind
			WHERE StokInd = @StokInd AND SD.Owner = @Owner
				AND SD.TipInd = 501
				AND SFS.SiraNo = 0
				--and IsAnaFiyat = 1
		end

		if (@_Result is null)
		begin
			SELECT @_Result = Tutar
			FROM StokDetaylari WITH(NOLOCK)
			WHERE StokInd = @StokInd AND Owner = @Owner
				AND TipInd = 501 and IsAnaFiyat = 1
		end
		
		if (@_Result is null)
		begin
			SELECT @_Result = Tutar
			FROM StokDetaylari WITH(NOLOCK)
			WHERE StokInd = @StokInd AND Owner is null
				AND TipInd = 501 and IsAnaFiyat = 1
		end

		if (@_Result is null)
		begin
			SELECT 
				@_Result = Tutar 
			FROM 
				dbo.CBSatisFiyatiListesi WITH(NOLOCK)
			WHERE 
				Owner is null AND
				(StokInd=@StokInd) AND
				TipInd=501 
		end

	END
	ELSE
	BEGIN

		SELECT 
			@_Result = Tutar 
		FROM 
			dbo.CBSatisFiyatiListesi WITH(NOLOCK)
		WHERE 
			Ind=@_FiyatInd

	END

	RETURN @_Result 

END


GO
CREATE FUNCTION [dbo].[SuAnkiStokSatisFiyatiForMizan]
(
	@Owner INT,
	@StokInd INT
)
RETURNS DECIMAL(28,13)
AS
BEGIN

	DECLARE @_Result DECIMAL(28,13)
	DECLARE @_FiyatInd INT

	if (@Owner=0) set @Owner = null

	--Şubedeki son satış fiyatı en öncelikli - Ulaş
	SELECT top 1 @_Result = Fiyat
	FROM Hareketler WITH(NOLOCK)
	WHERE StokInd = @StokInd AND Owner = @Owner
		AND TipInd IN (39, 504)
	order by Ind desc

	IF (@_Result IS NOT NULL)
		RETURN @_Result 

	SELECT 
		TOP 1
		@_FiyatInd = FiyatInd
	FROM 
		SatisFiyatiSiralamaWithStokInd WITH(NOLOCK)
	WHERE 
		Owner = @Owner AND 
		StokInd = @StokInd 
	ORDER BY 
		SiraNo 


	IF (@_FiyatInd IS NULL)
	BEGIN	

		--Ulaş
		if (@_Result is null)
		begin
			SELECT @_Result = Tutar
			FROM StokDetaylari WITH(NOLOCK)
			WHERE StokInd = @StokInd AND Owner = @Owner
				AND TipInd = 501 and IsAnaFiyat = 1
		end

		if (@_Result is null)
		begin
			SELECT @_Result = Tutar
			FROM StokDetaylari WITH(NOLOCK)
			WHERE StokInd = @StokInd AND Owner = @Owner
				AND TipInd = 501 and IsAnaFiyat = 1
		end

		if (@_Result is null)
		begin
			SELECT @_Result = Tutar
			FROM StokDetaylari WITH(NOLOCK)
			WHERE StokInd = @StokInd AND Owner is null
				AND TipInd = 501 and IsAnaFiyat = 1
		end
		--Ulaş


		if (@_Result is null)
		begin
			SELECT 
				@_Result = Tutar 
			FROM 
				dbo.CBSatisFiyatiListesi WITH(NOLOCK)
			WHERE 
				Owner is null AND
				(StokInd=@StokInd) AND
				TipInd=501 
		end

	END
	ELSE
	BEGIN

		SELECT 
			@_Result = Tutar 
		FROM 
			dbo.CBSatisFiyatiListesi WITH(NOLOCK)
		WHERE 
			Ind=@_FiyatInd

	END

	RETURN @_Result 

END


GO
CREATE VIEW [dbo].[AktifVeresiyeFisi]
AS
SELECT     dbo.Basliklar.Ind, dbo.Basliklar.BelgeNo, dbo.Basliklar.Aciklama, SUM(dbo.Hareketler.Tutar) AS Tutar, dbo.Hareketler.Owner, dbo.Basliklar.VardiyaKartInd, 
                      dbo.Basliklar.VardiyaNo, dbo.Basliklar.HesapInd, dbo.Basliklar.HesapKodu, dbo.Basliklar.HesapAdi, dbo.Basliklar.TipInd, dbo.Basliklar.PlakaNo, 
                      dbo.Hareketler.YazarKasaFisNo, dbo.Basliklar.Tarih, dbo.Hareketler.StokAdi, dbo.Hareketler.StokInd, dbo.Hareketler.Miktar
FROM         dbo.Basliklar WITH(NOLOCK) INNER JOIN
                      dbo.Hareketler WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd LEFT OUTER JOIN
                      dbo.Basliklar AS b WITH(NOLOCK) ON b.Ind = dbo.Basliklar.VardiyaKartInd
WHERE     (dbo.Basliklar.TipInd = 110) OR
                      (dbo.Basliklar.TipInd = 111)
GROUP BY dbo.Basliklar.Ind, dbo.Basliklar.BelgeNo, dbo.Basliklar.Aciklama, dbo.Hareketler.Owner, dbo.Basliklar.VardiyaKartInd, dbo.Basliklar.VardiyaNo, 
                      dbo.Basliklar.HesapInd, dbo.Basliklar.HesapKodu, dbo.Basliklar.HesapAdi, dbo.Basliklar.TipInd, dbo.Basliklar.PlakaNo, 
                      dbo.Hareketler.YazarKasaFisNo, dbo.Basliklar.Tarih, dbo.Hareketler.StokAdi, dbo.Hareketler.StokInd, dbo.Hareketler.Miktar, dbo.Hareketler.Tutar


GO



GO

CREATE VIEW [dbo].[SatisHareketleriEk]
AS
	SELECT 
		h.Ind,
		0 AS hInd,
		h.TipInd,
		h.StokInd,
		h.Fiyat,
		h.Miktar,	--///
		h.Iskonto, --///	
		h.KDVOrani, --///	
		h.Owner, --///	
		b.Tarih
		,0 AS KullaniciInd
	FROM Hareketler as h WITH(NOLOCK)
	LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind
	WHERE h.TipInd = 6
	AND (b.Aktif IS NULL OR b.Aktif = 1) and (b.FaturaIadeMi IS NULL OR b.FaturaIadeMi = 0)
	UNION ALL
	SELECT 
		h.Ind,
		0 AS hInd,
		h.TipInd,
		h.StokInd,
		h.Fiyat,
		h.Miktar,	--///
		h.Iskonto, --///
		h.KDVOrani, --///	
		h.Owner, --///				
		h.Tarih
		,0 AS KullaniciInd
	FROM EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
	WHERE h.TipInd = 39 AND h.Fiyat != 0
	UNION ALL
	SELECT 
		h.Ind,
		0 AS hInd,
		h.TipInd,
		h.StokInd, 
		h.Fiyat,
		h.Miktar,	--///
		h.Iskonto, --///	
		h.KDVOrani, --///	
		h.Owner, --///	
		b.Tarih
		,0 AS KullaniciInd
	FROM Hareketler as h WITH(NOLOCK)
	LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd AND b.TipInd = 108
	WHERE h.TipInd = 40
	UNION ALL
	SELECT
		h.Ind,
		h.Ind AS hInd,
		h.TipInd,
		h.StokInd,
		h.Fiyat,
		h.Miktar,	--///
		h.Iskonto, --///	
		h.KDVOrani, --///	
		h.Owner, --///	
		b.Tarih
		,sk.KullaniciInd
	FROM 
		SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0	

	UNION ALL

	SELECT 
		h.Ind,
		0 AS hInd,
		h.TipInd,
		h.StokInd,
		h.Fiyat,	--///
		h.Miktar,	--///
		h.Iskonto, --///	
		h.KDVOrani, --///	
		h.Owner, --///	
		b.Tarih
		,0 AS KullaniciInd
	FROM Hareketler as h WITH(NOLOCK)
	LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind
	WHERE h.TipInd = 5
	AND ((b.Aktif IS NULL OR b.Aktif = 1) AND b.DurumInd IS null)
	
	


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[DonAkUrHarVarRaporu]
(	
	 @basTar SMALLDATETIME 
	,@bitTar SMALLDATETIME
)
RETURNS TABLE 
AS
RETURN
(

	WITH Devir AS 
	(
		SELECT 
			'Devir' Aciklama
			,ISNULL(gh.Owner,'-5') [Owner]
			,gh.StokInd HesapInd
			,ISNULL((SELECT SubeKodu FROM dbo.Subeler WHERE Ind = gh.Owner),'MBYS') SubeKodu
			,akst.StokKodu HesapKodu
			,akst.StokAdi HesapAdi
			,SUM(gh.Giren-gh.Cikan) Toplam
		FROM 
			dbo.GirisCikisHareketleri gh  WITH(NOLOCK)
				INNER JOIN AkaryakitStoklari akst WITH(NOLOCK)
					ON gh.StokInd = akst.Ind 
				INNER JOIN dbo.Hareketler h WITH(NOLOCK)
					ON h.Ind = gh.Ind
		WHERE 	 
			gh.Tarih < @basTar
		GROUP BY gh.StokInd,gh.Owner,akst.StokAdi,akst.StokKodu 
	)
	SELECT *,(Toplam *(SELECT dbo.SonAlisFiyati([Owner],HesapInd,@basTar))) AS ToplamTL FROM Devir WITH(NOLOCK)

	UNION ALL 

	SELECT 
		'Alinan' Aciklama
		,ISNULL(gh.Owner,'-5') [Owner]
		,gh.StokInd HesapInd
		,ISNULL((SELECT SubeKodu FROM dbo.Subeler WHERE Ind = gh.Owner),'MBYS') SubeKodu
		,akst.StokKodu HesapKodu
		,akst.StokAdi HesapAdi
		,SUM(gh.Miktar) Toplam
		,SUM((gh.Fiyat * gh.Miktar - ISNULL(gh.Iskonto,0))* CASE WHEN (gh.TipInd IN (2)) THEN ((ISNULL(gh.KDVOrani,0)/100)+1) ELSE ((ISNULL(gh.KDVOrani,0)/100)+1) END ) ToplamTL
	FROM 
		dbo.AlisHareketleri gh  WITH(NOLOCK)
			INNER JOIN AkaryakitStoklari akst WITH(NOLOCK)
				ON gh.StokInd = akst.Ind 
	WHERE 			
		gh.Tarih BETWEEN  @basTar and  @bitTar
	GROUP BY 
		gh.StokInd,gh.Owner,akst.StokAdi,akst.StokKodu 
 
	UNION ALL 

	SELECT 
		'Satilan' Aciklama
		,ISNULL(gh.Owner,'-5') [Owner]
		,gh.StokInd HesapInd
		,ISNULL((SELECT SubeKodu FROM dbo.Subeler WHERE Ind = gh.Owner),'MBYS') SubeKodu
		,akst.StokKodu HesapKodu
		,akst.StokAdi HesapAdi
		,SUM(gh.Miktar) Toplam,SUM((gh.Fiyat*gh.Miktar - ISNULL(gh.Iskonto,0))* CASE WHEN (gh.TipInd IN (39,5)) THEN 1 ELSE ((ISNULL(gh.KDVOrani,0)/100)+1) END ) ToplamTL
	FROM 
		dbo.SatisHareketleriEk gh  WITH(NOLOCK)
			INNER JOIN AkaryakitStoklari akst WITH(NOLOCK)
				ON gh.StokInd = akst.Ind 
	WHERE 	
		gh.Tarih BETWEEN  @basTar and  @bitTar
	GROUP BY 
		gh.StokInd,gh.Owner,akst.StokAdi,akst.StokKodu

	UNION ALL 

	SELECT 
		*,(Toplam *(SELECT dbo.SonAlisFiyati([Owner],HesapInd,@bitTar))) AS ToplamTL 
	FROM (
		SELECT 
			'Kalan' Aciklama
			,ISNULL(gh.Owner,'-5') [Owner]
			,gh.StokInd HesapInd
			,ISNULL((SELECT SubeKodu FROM dbo.Subeler WITH(NOLOCK) WHERE Ind = gh.Owner),'MBYS') SubeKodu
			,akst.StokKodu HesapKodu
			,akst.StokAdi HesapAdi
			,SUM(gh.Giren-gh.Cikan) Toplam
		FROM 
			dbo.GirisCikisHareketleri gh WITH(NOLOCK) INNER JOIN AkaryakitStoklari akst WITH(NOLOCK) ON gh.StokInd = akst.Ind INNER JOIN dbo.Hareketler h WITH(NOLOCK) ON h.Ind = gh.Ind
		WHERE 	 
			gh.Tarih < @bitTar
		GROUP BY gh.StokInd,gh.Owner,akst.StokAdi,akst.StokKodu 			
	) AS kalan

	UNION ALL 

	SELECT
		'Nakit' Aciklama
		,b.[Owner]
		,NULL HesapInd
		,(SELECT SubeKodu FROM dbo.Subeler WHERE Ind = b.Owner) SubeKodu
		,NULL HesapAdi
		,NULL HesapKodu
		,NULL  Toplam
		,SUM(h.Tutar * h.Kur)  ToplamTL
	FROM 
		hareketler h WITH(NOLOCK) INNER JOIN dbo.Basliklar  b WITH(NOLOCK)
			ON h.VardiyaKartInd = b.Ind 
	WHERE 
		h.TipInd = 38
		AND b.Tarih BETWEEN  @basTar and  @bitTar	
	GROUP BY b.Owner

	UNION ALL 

	SELECT
		'Cek' Aciklama
		,b.[Owner]
		,NULL HesapInd
		,(SELECT  SubeKodu FROM dbo.Subeler WHERE Ind = b.Owner) SubeKodu
		,NULL HesapKodu 
		,NULL HesapAdi 
		,NULL Toplam
		,SUM(h.Tutar * h.Kur)  ToplamTL
	FROM 
		hareketler h WITH(NOLOCK) INNER JOIN dbo.Basliklar  b WITH(NOLOCK)
			ON h.VardiyaKartInd = b.Ind 
	WHERE 
		h.TipInd = 11
		AND b.Tarih BETWEEN  @basTar and  @bitTar	
	GROUP BY b.Owner

	UNION ALL

	SELECT 
			'Poslar' Aciklama
			,h.[Owner]
			,h.KKHesapInd HesapInd
			,(SELECT SubeKodu FROM dbo.Subeler WHERE Ind = h.Owner) SubeKodu
			,h.KKHesapKodu HesapKodu
			,h.KKHesapAdi HesapAdi
			,NULL Toplam
			,SUM(h.Tutar)  ToplamTL
	FROM 
		hareketler h WITH(NOLOCK) INNER JOIN basliklar b WITH(NOLOCK) ON h.VardiyaKartInd = b.Ind
	WHERE 
		b.TipInd = 108 AND h.TipInd = 10 AND b.Tarih BETWEEN  @basTar and  @bitTar	
	GROUP BY h.KKHesapInd,h.owner,h.KKHesapAdi ,h.KKHesapKodu

	UNION ALL

	SELECT 
			'DigerVeresiye' Aciklama
			,avf.Owner
			,NULL HesapInd
			,s.SubeKodu
			,NULL HesapKodu
			,NULL HesapAdi
			,NULL Toplam
			,SUM(avf.Tutar) ToplamTL			 
	FROM 
		AktifVeresiyeFisi avf WITH(NOLOCK) INNER JOIN dbo.Subeler s WITH(NOLOCK)
				ON avf.Owner = s.Ind
	WHERE 
		avf.TipInd=111 
		AND avf.HesapInd NOT IN (ISNULL((SELECT TOP 1  OtomasyonFirmaInd FROM dbo.Ayarlar WHERE Owner = Owner AND TipInd = 304 AND OtomasyonFirmaInd IS NOT NULL), -1), (ISNULL((SELECT TOP 1 OtomasyonKsslFirmaInd FROM dbo.Ayarlar WHERE Owner = Owner AND TipInd = 304 AND OtomasyonKsslFirmaInd IS NOT NULL),-1)))
		AND avf.Tarih BETWEEN  @basTar and  @bitTar	
	GROUP BY avf.Owner,s.SubeKodu


	UNION ALL

	SELECT 
			'TTSVeresiye' Aciklama
			,avf.Owner
			,NULL HesapInd
			,s.SubeKodu
			,NULL HesapKodu
			,NULL HesapAdi
			,NULL Toplam
			,SUM(avf.Tutar) ToplamTL			 
	FROM 
		AktifVeresiyeFisi avf WITH(NOLOCK) INNER JOIN dbo.Subeler s WITH(NOLOCK) ON avf.Owner = s.Ind
	WHERE 
		avf.TipInd=111 
		AND avf.HesapInd IN	((SELECT TOP 1 OtomasyonFirmaInd FROM dbo.Ayarlar WHERE Owner = Owner AND TipInd = 304 AND OtomasyonFirmaInd IS NOT NULL) , (SELECT	TOP 1 OtomasyonKsslFirmaInd FROM dbo.Ayarlar  WHERE 	Owner = Owner 	AND TipInd = 304 AND OtomasyonKsslFirmaInd IS NOT NULL))AND avf.Tarih BETWEEN  @basTar and  @bitTar	
	GROUP BY avf.Owner,s.SubeKodu

	UNION ALL

	SELECT 
			'Masraf' Aciklama
			,b.Owner
			,NULL HesapInd
			,s.SubeKodu
			,NULL HesapKodu
			,NULL HesapAdi
			,NULL Toplam
			,SUM(h.Tutar) ToplamTL	
	FROM 
		hareketler h WITH(NOLOCK) INNER JOIN basliklar b WITH(NOLOCK) ON h.VardiyaKartInd = b.Ind	INNER JOIN dbo.Subeler s WITH(NOLOCK) ON b.Owner = s.Ind	
	WHERE 
		h.TipInd IN (13,17,18,26) AND b.Tarih BETWEEN  @basTar and  @bitTar		
	GROUP BY b.owner,s.SubeKodu 	
)

GO
CREATE FUNCTION [dbo].[EnvanterRaporuEksiVerenUrunler] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
AS
RETURN
(
		WITH StokDurumu(StokInd, StokMiktari) AS 
		(
				SELECT StokInd, SUM(Giren) - SUM(Cikan) AS  StokMiktari
				FROM dbo.GirisCikisHareketleriEnvanter WITH(NOLOCK)
				WHERE ([Owner] = @Owner OR @Owner = 0) AND Tarih <= @Tarih 
				GROUP BY StokInd HAVING SUM(Giren) - SUM(Cikan) < 0
		),
		SatisFiyati(StokInd, Fiyat) AS
		(
    			SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
				FROM dbo.GirisCikisHareketleriEnvanter GCH WITH(NOLOCK)
				WHERE ([Owner] = @Owner  OR @Owner = 0)
					AND (Cikan > 0) 
					AND Tarih <= @Tarih
				GROUP BY StokInd
		)
		,AlisFiyati(StokInd, Fiyat) AS
		(		
				SELECT StokInd,  (SELECT TOP 1 
				CASE @IskontoEtkilesin
				WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0)
				ELSE Fiyat END 
				FROM dbo.GirisCikisHareketleriEnvanter WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
				FROM dbo.GirisCikisHareketleriEnvanter GCH WITH(NOLOCK)
				WHERE ([Owner] = @Owner  OR @Owner = 0)
					AND (Giren > 0) 
					AND Tarih <= @Tarih
				GROUP BY StokInd
		)  
		SELECT 
				DISTINCT CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner]
				, SD.StokInd as Ind
				,SD.StokMiktari as Miktar
				, S.StokKodu as StokKodu, s.StokAdi as StokAdi
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
				, ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100)) AS SatisFiyati
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
				, ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
				, (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti
		FROM StokDurumu SD WITH(NOLOCK) INNER JOIN Stoklar S WITH(NOLOCK) ON S.Ind = SD.StokInd
		LEFT JOIN SatisFiyati SF WITH(NOLOCK) ON SF.StokInd = SD.StokInd
		LEFT JOIN AlisFiyati AF WITH(NOLOCK) ON AF.StokInd = SD.StokInd
		LEFT JOIN KDVGruplari KDVS WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		LEFT JOIN KDVGruplari KDVA WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)




GO
CREATE FUNCTION [dbo].[EnvanterRaporuElimizdeOlanUrunler] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
RETURN
(
	WITH StokDurumu(StokInd, StokMiktari) AS 
		(
				SELECT StokInd, SUM(Giren) - SUM(Cikan) AS  StokMiktari
				FROM dbo.GirisCikisHareketleriEnvanter WITH(NOLOCK)
				WHERE ([Owner] = @Owner OR @Owner = 0) AND Tarih <= @Tarih 
				GROUP BY StokInd HAVING SUM(Giren) - SUM(Cikan) > 0
		),
		SatisFiyati(StokInd, Fiyat) AS
		(
    			SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
				FROM dbo.GirisCikisHareketleriEnvanter GCH WITH(NOLOCK)
				WHERE ([Owner] = @Owner  OR @Owner = 0)
					AND (Cikan > 0) 
					AND Tarih <= @Tarih					
				GROUP BY StokInd
		)
		,AlisFiyati(StokInd, Fiyat) AS
		(		
				SELECT StokInd,  (SELECT TOP 1 
				CASE @IskontoEtkilesin
				WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0)
				ELSE Fiyat END
				FROM dbo.GirisCikisHareketleriEnvanter WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
				FROM dbo.GirisCikisHareketleriEnvanter GCH WITH(NOLOCK)
				WHERE ([Owner] = @Owner  OR @Owner = 0)
					AND (Giren > 0) 
					AND Tarih <= @Tarih
				GROUP BY StokInd
		)  
		SELECT 
				CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner]
				, SD.StokInd as Ind
				, SD.StokMiktari as Miktar
				, S.StokKodu as StokKodu, s.StokAdi as StokAdi
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
				, ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
				, ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
				, (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti
		FROM StokDurumu SD WITH(NOLOCK) INNER JOIN Stoklar S WITH(NOLOCK) ON S.Ind = SD.StokInd
			LEFT JOIN SatisFiyati SF WITH(NOLOCK) ON SF.StokInd = SD.StokInd
			LEFT JOIN AlisFiyati AF WITH(NOLOCK) ON AF.StokInd = SD.StokInd
			LEFT JOIN KDVGruplari KDVS WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
			LEFT JOIN KDVGruplari KDVA WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)





GO
--CREATE FUNCTION [dbo].[KontrolluSayimDosyasiDokumu]
--(	
--	@Owner int,
--	@Tarih datetime,
--	@DepoInd int
--)
--RETURNS TABLE
--AS
--RETURN
--(
--		WITH AlisFiyatlari(StokInd, Fiyat) AS
--		(
--			select StokInd, Fiyat from AlisFiyatlariForGenelKural WITH(NOLOCK)
--			where Owner = @Owner and Position = 1
--		)
--		select @Owner as Owner, coalesce(sd.Barkod,'') as Barkod, s.StokAdi as StokAdi,
--			af.Fiyat as AlisFiyati,
--			dh.Miktar as Miktar,
--			coalesce(dbo.StokSatisFiyati(@Owner, s.Ind), 0.00) as SatisFiyati,
--			s.Aktif
--		from Stoklar s WITH(NOLOCK)
--		left outer join
--		(
--			select StokInd, Barkod from StokDetaylari WITH(NOLOCK)
--			where TipInd = 502
--		) as sd on s.Ind = sd.StokInd
--		left join
--		(
--			select StokInd,
--			sum(Giren)-sum(Cikan) as Miktar
--			from _DepoHareket WITH(NOLOCK)
--			where DepoInd = @DepoInd and Tarih <= @Tarih
--			group by StokInd
--		) as dh on s.Ind = dh.StokInd
--		LEFT OUTER JOIN dbo.Hesaplar AS h WITH(NOLOCK) ON h.StokInd = s.Ind
--		LEFT JOIN AlisFiyatlari AS af WITH(NOLOCK) ON s.Ind = af.StokInd
--		WHERE h.StokInd IS NULL

--)
CREATE FUNCTION [dbo].[KontrolluSayimDosyasiDokumu]
(	
	@Owner int,
	@Tarih datetime,
	@DepoInd int
)
RETURNS TABLE
AS
RETURN
(
		WITH AlisFiyatlari(StokInd, Fiyat) AS
		(
			select StokInd, Fiyat from AlisFiyatlariForGenelKural
			where Owner = @Owner and Position = 1
		)
		select @Owner as Owner, coalesce(sd.Barkod,'') as Barkod, s.StokAdi as StokAdi,
			af.Fiyat as AlisFiyati,
			dh.Miktar as Miktar,
			coalesce(dbo.StokSatisFiyati(@Owner, s.Ind), 0.00) as SatisFiyati,
			s.Aktif
		from Stoklar s
		left outer join
		(
			select StokInd, Barkod from StokDetaylari
			where TipInd = 502
		) as sd on s.Ind = sd.StokInd
		left join
		(

		--select StokInd,
		--	sum(Giren)-sum(Cikan) as Miktar
		--	from _DepoHareket
		--	where DepoInd = @DepoInd and Tarih <= @Tarih
		--	group by StokInd										orjinal hali depoya göre sorguladığı için düzeltmek zorunda kaldım aslında doğru yöntem stoğun hareketine 
			select StokInd,
			sum(Giren)-sum(Cikan) as Miktar
			from GirisCikisHareketleri   --_depo   mhan
			where Owner = @Owner and Tarih <= @Tarih       --stoğun hareketine depo yerine şubeye göre bakıyor 2019 versiyonlarından sonra çalışan yöntem bu olacak
			group by StokInd
		) as dh on s.Ind = dh.StokInd
		LEFT OUTER JOIN dbo.Hesaplar AS h ON h.StokInd = s.Ind
		LEFT JOIN AlisFiyatlari AS af ON s.Ind = af.StokInd
		WHERE h.StokInd IS NULL

)


GO

CREATE FUNCTION [dbo].[DonemIciAlisButunMiktarToplami]
(	
    @Baslangic datetime,
	@Bitis datetime,
	@DepoInds nvarchar(4000),
	@StokInd int,
	@SubeId int 
)

RETURNS @Dokum TABLE
(
	Miktar decimal(28,8),
	Owner int
)
AS
BEGIN
	INSERT INTO @Dokum
	SELECT ------------------------------------------Alış faturası hareketi
		SUM(g.Miktar * g.Carpan) as Miktar,
		g.Owner
	FROM
		GirisCikisHareketleri as g WITH(NOLOCK)
		LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
	WHERE
		g.TipIndAltHareket IN (3)
		AND @Baslangic <= g.Tarih
		AND g.Tarih <= @Bitis
		AND g.StokInd=@StokInd
		AND g.Owner=@SubeId
	GROUP BY g.Owner
		
	UNION ALL
	
	SELECT------------------------------------------------Depo Aktarım
		SUM(g.Miktar * g.Carpan) as Miktar,
		g.Owner
	FROM
		GirisCikisHareketleri as g WITH(NOLOCK)
		LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
		LEFT JOIN dbo.KDVGruplari AS ka WITH(NOLOCK) ON ka.Ind = s.AlisKDVGrupInd
	WHERE
		g.TipInd IN (503) AND g.TipIndAltHareket =29
		AND @Baslangic <= g.Tarih
		AND g.Tarih <= @Bitis
		AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND g.StokInd=@StokInd
		AND g.Owner=@SubeId
	GROUP BY g.Owner
	
	UNION ALL
	
	SELECT-------------------------------------------------Alış irsaliyesi
		SUM(g.Miktar * g.Carpan) as Miktar,
		g.Owner
	FROM
		GirisCikisHareketleri as g  WITH(NOLOCK) LEFT OUTER JOIN
		dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = g.StokInd LEFT OUTER JOIN
		--dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.SatisKDVGrupInd LEFT OUTER JOIN
		Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
		LEFT JOIN dbo.KDVGruplari AS k ON k.Ind = s.AlisKDVGrupInd
	WHERE g.TipIndAltHareket = 2 
		AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))	
		AND g.Tarih >= @Baslangic
		AND g.Tarih <= @Bitis
		AND g.StokInd=@StokInd
		AND g.Owner=@SubeId
		--AND (g.DurumInd != 3 OR g.DurumInd IS NULL)
	GROUP BY g.Owner
	
	--UNION ALL
	
--Sayım/ölçümlerde girilen fazlalıklar da dikkate alınmalı / Ulaş
	--SELECT--------------------------------------------------------Sayım
	--	SUM(ABS(g.Giren * g.Carpan)) as Miktar,
	--	g.Owner
	--FROM
	--	GirisCikisHareketleri as g
	--	LEFT JOIN Stoklar as s ON s.Ind = g.StokInd
	--	LEFT JOIN Birimler as brm ON s.AnaBirimInd = brm.Ind
	--	LEFT JOIN dbo.KDVGruplari AS ka ON ka.Ind = s.AlisKDVGrupInd
	--WHERE
	--	(g.TipIndBaslik = 113 AND g.TipIndAltHareket=112)
	--	AND @Baslangic <= g.Tarih AND g.Tarih <= @Bitis
	--	AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
	--	AND g.StokInd=@StokInd
	--	AND g.Owner=@SubeId
	--GROUP BY g.Owner
	
	DECLARE @x int
	SELECT @x=COUNT(*) FROM @Dokum

	IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
			0 as Miktar,
			NULL as Owner
		FROM
		Stoklar as s WITH(NOLOCK)
		LEFT JOIN Birimler as b on b.Ind =s.AnaBirimInd
RETURN
END




GO



GO


CREATE FUNCTION [dbo].[DonemIciSatisButunMiktarToplami]
(	
    @Baslangic datetime,
	@Bitis datetime,
	@DepoInds nvarchar(4000),
	@StokInd int,
	@SubeId int
	--@Ind int
	--, @KullaniciInds nvarchar(max)
)
RETURNS @Dokum TABLE
(
	Miktar decimal(28,8),
	Owner int
)
AS
BEGIN
	INSERT INTO @Dokum
	SELECT
		SUM(ABS(g.Miktar * g.Carpan)) as Miktar,
		g.Owner
	FROM
		GirisCikisHareketleri as g WITH(NOLOCK)
		LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
		LEFT JOIN dbo.KDVGruplari AS ks WITH(NOLOCK) ON ks.Ind = s.SatisKDVGrupInd
	WHERE
		(g.TipIndAltHareket = 6  OR (g.TipInd =503 AND g.TipIndAltHareket=30))
		AND @Baslangic <= g.Tarih AND g.Tarih <= @Bitis
		AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND g.StokInd=@StokInd
		AND g.Owner=@SubeId
	GROUP BY g.Owner
	
	UNION ALL
	
	SELECT
		SUM(ABS(h.Fark)) as Miktar,
		h.Owner as Owner
	FROM
		EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
	WHERE h.TipInd = 39
		AND h.Tarih <= @Bitis AND h.Tarih >= @Baslangic
		AND h.StokInd=@StokInd
		AND h.Owner=@SubeId
	GROUP BY h.Owner 
	
	UNION ALL
	
	SELECT
		SUM(ABS(g.Miktar * g.Carpan)) as Miktar,
		g.Owner
	FROM
		GirisCikisHareketleri as g  WITH(NOLOCK) LEFT OUTER JOIN
		dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = g.StokInd LEFT OUTER JOIN
		--dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.SatisKDVGrupInd LEFT OUTER JOIN
		Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
	WHERE 
		g.TipIndAltHareket = 5 
		AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))	
		AND g.Tarih >= @Baslangic
		AND g.Tarih <= @Bitis
		AND g.StokInd=@StokInd
		AND g.Owner=@SubeId
	GROUP BY g.Owner
		
	UNION ALL
	
	SELECT
		SUM(ABS(g.Miktar * g.Carpan)) as Miktar,
		g.Owner as Owner
	FROM
		GirisCikisHareketleri as g  WITH(NOLOCK) LEFT OUTER JOIN
		dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = g.StokInd --LEFT OUTER JOIN
		--dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.SatisKDVGrupInd
	WHERE
		g.TipIndAltHareket = 40
		AND g.Tarih <= @Bitis AND g.Tarih >= @Baslangic
		AND g.StokInd=@StokInd
		AND g.Owner=@SubeId
	GROUP BY g.Owner
	
	UNION ALL
	
	SELECT
		SUM(ABS(h.Miktar * h.Carpan)) as Miktar,
		h.Owner
	FROM
		SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504
		AND (b.Tarih >= @Baslangic
		AND b.Tarih <= @Bitis) --AND
		AND h.StokInd=@StokInd
		AND h.Owner=@SubeId
		--(h.Ind < @Ind)
		--AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0
		--AND (sk.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')))
	GROUP BY h.Owner
	
	--UNION ALL
	
--Sayım/ölçümlerde girilen fazlalıklar da dikkate alınmalı / Ulaş
	--SELECT
	--	SUM(ABS(g.Cikan * g.Carpan)) as Miktar,
	--	g.Owner
	--FROM
	--	GirisCikisHareketleri as g
	--	LEFT JOIN Stoklar as s ON s.Ind = g.StokInd
	--	LEFT JOIN Birimler as brm ON s.AnaBirimInd = brm.Ind
	--	LEFT JOIN dbo.KDVGruplari AS ks ON ks.Ind = s.SatisKDVGrupInd
	--WHERE
	--	(g.TipIndBaslik = 113 AND g.TipIndAltHareket=112)
	--	AND @Baslangic <= g.Tarih AND g.Tarih <= @Bitis
	--	AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
	--	AND g.StokInd=@StokInd
	--	AND g.Owner=@SubeId
	--GROUP BY g.Owner

	DECLARE @x int
	SELECT @x=COUNT(*) FROM @Dokum
	IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
			NULL as Owner,
			0 as Miktar
		FROM
		Stoklar as s
		LEFT JOIN Birimler as b WITH(NOLOCK) on b.Ind =s.AnaBirimInd
RETURN
END





GO



GO
CREATE FUNCTION [dbo].[GelirHareketleriToplamMuhteviyatDurumu] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@MuhteviyatDurumu int
)
RETURNS @liste table(Owner int, TipInd int, GirisTarihi DateTime, Yer nvarchar(100), Aciklama nvarchar(500)
					 ,GelirInd int, GelirKodu nvarchar(50), GelirAdi nvarchar(50), Tutar decimal(38,6)) 
AS
begin
	if(@MuhteviyatDurumu=2)
		begin
			insert into @liste
				SELECT GelirHareketleri.* 
				FROM GelirHareketleri WITH(NOLOCK)
				LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = GelirHareketleri.GelirInd
				LEFT JOIN GelirGruplari WITH(NOLOCK) ON GelirGruplari.Ind = Hesaplar.GrupInd
				WHERE 
					GelirHareketleri.GirisTarihi >= @BaslangicTarihi
					AND GelirHareketleri.GirisTarihi <= @BitisTarihi
					AND (Hesaplar.OzelKodInd=0 OR Hesaplar.OzelKodInd IS NULL)
		end
	else
		begin
			insert into @liste
				SELECT GelirHareketleri.* 
				FROM GelirHareketleri WITH(NOLOCK)
				LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = GelirHareketleri.GelirInd
				LEFT JOIN GelirGruplari WITH(NOLOCK) ON GelirGruplari.Ind = Hesaplar.GrupInd
				WHERE 
					GelirHareketleri.GirisTarihi >= @BaslangicTarihi
					AND GelirHareketleri.GirisTarihi <= @BitisTarihi
					AND (Hesaplar.OzelKodInd=0 OR Hesaplar.OzelKodInd IS NULL)
					AND Hesaplar.MuhteviyatDurumu=@MuhteviyatDurumu
		end
	return
end




GO
CREATE FUNCTION [dbo].[GiderHareketleriToplamMuhteviyatDurumu] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@MuhteviyatDurumu int
)
RETURNS @liste TABLE(Owner int, TipInd int, GirisTarihi DateTime, Yer nvarchar(100), Aciklama nvarchar(500)
					,GiderInd int, GiderKodu nvarchar(50), GiderAdi nvarchar(50), Maas numeric(38,12), Matrah numeric(38,12), KDV numeric(38,9), Tutar decimal(38,6)
					,CariHesapAdi nvarchar(100), BaslikInd int, PersonelHesapInd int,VardiyaKartInd int) 
AS
begin
	if(@MuhteviyatDurumu=2)/*0:muhteviyatli,1:muhteviyatsız,2:hepsi*/
		begin
			insert into @liste
			SELECT GiderHareketleri.* 
			FROM GiderHareketleri WITH(NOLOCK)
			LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = GiderHareketleri.GiderInd
			LEFT JOIN GiderGruplari WITH(NOLOCK) ON GiderGruplari.Ind = Hesaplar.GrupInd
			WHERE 
				GiderHareketleri.GirisTarihi >= @BaslangicTarihi
				AND GiderHareketleri.GirisTarihi <= @BitisTarihi
				AND (Hesaplar.OzelKodInd=0 OR Hesaplar.OzelKodInd IS NULL)
		end
	else
		begin
			insert into @liste
			SELECT GiderHareketleri.* 
			FROM GiderHareketleri WITH(NOLOCK)
			LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = GiderHareketleri.GiderInd
			LEFT JOIN GiderGruplari WITH(NOLOCK) ON GiderGruplari.Ind = Hesaplar.GrupInd
			WHERE 
				GiderHareketleri.GirisTarihi >= @BaslangicTarihi
				AND GiderHareketleri.GirisTarihi <= @BitisTarihi
				AND (Hesaplar.OzelKodInd=0 OR Hesaplar.OzelKodInd IS NULL)
				AND Hesaplar.MuhteviyatDurumu=@MuhteviyatDurumu
		end
	return
end

GO
CREATE FUNCTION [dbo].[SayimaEsasDepoMiktarlariGuncelleme]
(	
	-- Add the parameters for the function here
	@tarih DateTime, 
	@owner int
)
RETURNS @dokum TABLE
(
	Miktar decimal,
	StokInd int,
	Owner int
) 
AS
BEGIN 
	
		INSERT INTO @dokum
		select SUM(Giren - Cikan) as Miktar, StokInd ,Owner
		from GirisCikisHareketleri WITH(NOLOCK)
		where Tarih<=@tarih and Owner=@owner and StokInd in (select StokInd from Hareketler where TipInd=112 and BaslikInd IS NULL and Owner=@owner )
		group by StokInd, Owner
	
	
return
end



GO
--Sena Öztürk
--KarZarar raporu performans için oluşturuldu

CREATE VIEW [dbo].[KarZararGirisCikisToplamTutarHareketIskonto]
AS
SELECT     BaslikInd, h.StokInd, ISNULL(SUM(h.Iskonto), 0.00) as HareketIskonto
			, ISNULL(SUM((CASE WHEN h.NetMiktar = 0 THEN h.Miktar ELSE ISNULL(h.NetMiktar, h.Miktar) END) 
                      * Carpan * Fiyat - Iskonto), 0.00) AS ToplamTutar
					  , ISNULL(SUM((CASE WHEN h.NetMiktar = 0 THEN h.Miktar ELSE ISNULL(h.NetMiktar, h.Miktar) END) 
                      * Carpan * GercekFiyat - Iskonto), 0.00) AS ToplamGercekTutar
FROM         dbo.Hareketler AS h WITH(NOLOCK)
WHERE     (Miktar IS NOT NULL) AND (Miktar > 0)
GROUP BY BaslikInd, h.StokInd


GO
--Sena Öztürk
--KarZarar raporu performans için oluşturuldu

CREATE  VIEW [dbo].[KarZararGirisCikis]
AS
	SELECT 
		 b.Ind as BaslikInd
		,h.StokInd as StokInd
		,b.Tarih as Tarih
		,b.DurumInd
		,b.BelgeNo as Belge
		,b.Aciklama as Aciklama
		,b.FaturaInd
		,b.HesapInd
		,b.TipInd as TipIndBaslik
		,case when (h.TipInd = 30 AND b.TipInd = 102) then h.Owner
			  else Hesaplar.Owner end as Owner
		,Hesaplar.Kapasite
		,case when (h.TipInd = 29 AND b.TipInd = 503) then 29 
		      when (h.TipInd = 29 AND b.TipInd = 103) then 2 
		      when (h.TipInd = 30 AND b.TipInd = 102) then 6 
		      when (h.TipInd = 30 AND b.TipInd = 104) then 5
		      when (h.TipInd = 30 AND b.TipInd = 503) then 30
		      when (h.TipInd = 29 AND b.TipInd = 101) then 3 
		      end AS TipIndAltHareket
		,case when (b.TipInd = 503 AND h.TipInd in (29, 30)) then b.TipInd
		      else h.TipInd end as TipInd
		,h.Miktar
		,h.Carpan
		,case when (h.TipInd = 30 AND b.TipInd in (102,104,503)) then 0.00
		      else (h.Miktar * h.Carpan) end as Giren
		,case when (h.TipInd = 30 AND b.TipInd in (102,104,503)) then (h.Miktar * h.Carpan)
		      else 0.00 end as Cikan
		,case when (b.TipInd = 503 AND h.TipInd in (29, 30)) then ISNULL(h.Fiyat, 0) 
		      when (h.TipInd = 29 AND b.TipInd = 103) then (SELECT SUM(Fiyat*Miktar)/SUM(Miktar) 
															FROM Hareketler WITH(NOLOCK)
															WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=2) 
              when (h.TipInd = 30 AND b.TipInd = 102) then (SELECT SUM(Fiyat*Miktar)/SUM(Miktar) 
															FROM Hareketler WITH(NOLOCK)
															WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=6) 
              when (h.TipInd = 30 AND b.TipInd = 104) then (SELECT SUM(Fiyat*Miktar)/SUM(Miktar) 
															FROM Hareketler WITH(NOLOCK)
															WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=5)
              when (h.TipInd=29 AND b.TipInd=101) then (SELECT SUM(Case WHEN(Fiyat=0 or Miktar = 0) THEN 0
						                                                ELSE Fiyat*(CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END)END)
				                                               /
				                                               SUM(Case WHEN (Fiyat=0 or Miktar = 0) Then 1
						                                                else (CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END) End) 
			                                            FROM Hareketler WITH(NOLOCK)
			                                            WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=3)  
			    
	          end as Fiyat
			    ,
 
CASE WHEN b.DurumInd = 3 AND b.TipInd = 103 AND b.FaturaInd IS NOT NULL THEN 
				--
				
				case when (b.TipInd = 503 AND h.TipInd in (29, 30)) then ISNULL(h.Fiyat, 0) 
		      when (h.TipInd = 29 AND b.TipInd = 103) then (SELECT SUM(Fiyat*Miktar)/SUM(Miktar) 
															FROM Hareketler WITH(NOLOCK)
															WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=2) 
              when (h.TipInd = 30 AND b.TipInd = 102) then (SELECT SUM(Fiyat*Miktar)/SUM(Miktar) 
															FROM Hareketler WITH(NOLOCK)
															WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=6) 
              when (h.TipInd = 30 AND b.TipInd = 104) then (SELECT SUM(Fiyat*Miktar)/SUM(Miktar) 
															FROM Hareketler WITH(NOLOCK)
															WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=5)
              when (h.TipInd=29 AND b.TipInd=101) then (SELECT SUM(Case WHEN(Fiyat=0 or Miktar = 0) THEN 0
						                                                ELSE Fiyat*(CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END)END)
				                                               /
				                                               SUM(Case WHEN (Fiyat=0 or Miktar = 0) Then 1
						                                                else (CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END) End) 
			                                            FROM Hareketler WITH(NOLOCK)
			                                            WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=3)  
			    
	          end

				--
			ELSE	 (case when (b.TipInd = 503 AND h.TipInd in (29, 30)) then ISNULL(h.GercekFiyat, h.Fiyat) 
		      when (h.TipInd = 29 AND b.TipInd = 103) then (SELECT SUM(GercekFiyat*Miktar)/SUM(Miktar) 
															FROM Hareketler WITH(NOLOCK)
															WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=2) 
              when (h.TipInd = 30 AND b.TipInd = 102) then (SELECT SUM(GercekFiyat*Miktar)/SUM(Miktar) 
															FROM Hareketler WITH(NOLOCK)
															WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=6) 
              when (h.TipInd = 30 AND b.TipInd = 104) then (SELECT SUM(GercekFiyat*Miktar)/SUM(Miktar) 
															FROM Hareketler WITH(NOLOCK)
															WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=5)
              when (h.TipInd=29 AND b.TipInd=101) then (SELECT SUM(Case WHEN(GercekFiyat=0 or Miktar = 0) THEN 0
						                                                ELSE GercekFiyat*(CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END)END)
				                                               /
				                                               SUM(Case WHEN (GercekFiyat=0 or Miktar = 0) Then 1
						                                                else (CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END) End) 
			                                            FROM Hareketler WITH(NOLOCK)
			                                            WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=3)  
			    
	          end) END as GercekFiyat

		,h.DepoInd
		,0.00 Kalan
		,ISNULL((h.Iskonto), 0.00) as HareketlerIskonto
		,ISNULL((b.Iskonto), 0.00) as BaslikIskonto
		,h.Ind
		,0 AS KullaniciInd
		,h.NetMiktar AS NetMiktar
		,b.HesapAdi AS HesapAdi
		,NULL as KasiyerKodu
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind 
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd
	WHERE
		(h.TipInd in (29,30) AND b.TipInd = 503) -- Depo giriş & depo aktarım belgesi /Depo çıkış & depo aktarım belgesi
		 or
		 -- Depo giriş & Alış irsaliyesi          Depo çıkış & Satış irsaliyesi
		(((h.TipInd = 29 AND b.TipInd = 103) or (h.TipInd = 30 AND b.TipInd = 104)) AND (b.DurumInd != 11 or b.DurumInd is null)) 
		 or
		 -- Depo giriş & Alış faturası           Depo çıkış & Satış faturası
		(((h.TipInd = 29 AND b.TipInd = 101) or (h.TipInd = 30 AND b.TipInd = 102)) AND ((b.DurumInd != 11 or b.DurumInd IS NULL) AND b.Aktif != 0)) 

	UNION ALL
	
	SELECT 
		 b.Ind as BaslikInd
		,h.StokInd as StokInd
		,b.Tarih as Tarih
		,b.DurumInd
		,b.BelgeNo as Belge
		,b.Aciklama as Aciklama
		,b.FaturaInd
		,b.HesapInd
		,b.TipInd as TipIndBaslik
		,h.Owner as Owner
		,0.00 as Kapasite
		,case when (h.TipInd = 29 AND b.TipInd = 503) then 16
		      when (h.TipInd = 112 AND b.TipInd = 113) then 112 end AS TipIndAltHareket
		,h.TipInd as TipInd
		,h.Miktar
		,1 as Carpan
		,ISNULL((SELECT TOP 1 ABS(h.SayimMiktari-h.Miktar) FROM Hareketler WHERE BaslikInd=h.BaslikInd AND TipInd=29 AND StokInd=h.StokInd),0) AS Giren
		,ISNULL((SELECT TOP 1  ABS(h.Miktar-h.SayimMiktari) FROM Hareketler WHERE BaslikInd=h.BaslikInd AND TipInd=30 AND StokInd=h.StokInd),0) AS Cikan
		,CASE WHEN h.AlisFiyati IS NULL THEN h.SatisFiyati ELSE h.AlisFiyati  END AS Fiyat
		,CASE WHEN h.GercekFiyat IS NULL THEN h.Fiyat ELSE h.GercekFiyat  END AS GercekFiyat
		,h.DepoInd 
		,0.00 Kalan
		,ISNULL((h.Iskonto), 0.00) as HareketlerIskonto
		,ISNULL((b.Iskonto), 0.00) as BaslikIskonto
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		,NULL as KasiyerKodu
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind 
	WHERE
		(h.TipInd = 112 AND b.TipInd = 113) --Sayım ölçüm hareketi & sayım ölçüm onaylama
		 or
		(h.TipInd = 29 AND b.TipInd = 503) -- Depo giriş & depo aktarım belgesi

    UNION ALL
  
-- Eski vardiya sayaç hareket satırı   
	SELECT 
		 h.VardiyaNo as BaslikInd
		,h.StokInd as StokInd
		,h.Tarih as Tarih
		,NULL as DurumInd
		,CAST(VardiyaNo AS  NVARCHAR)+'.Vardiya' as Belge
		,'Vardiya hesap kabul' as Aciklama
		,0 as FaturaInd
		,NULL as HesapInd
		,39 as TipIndBaslik
		,h.Owner as Owner
		,0.00 as Kapasite
		,39 AS TipIndAltHareket
		,h.TipInd as TipInd
		,(h.Fark) as Miktar
		,1 as Carpan
		,0.00 as Giren
		,(h.Fark) as Cikan
		,h.Fiyat as Fiyat
		,h.GercekFiyat as GercekFiyat
		,h.DepoInd
		,0.00 Kalan
		,0.00 as HareketlerIskonto
		,0.00 as BaslikIskonto
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		,NULL AS KasiyerKodu
	FROM
		EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
	WHERE
		h.TipInd = 39
		
	UNION ALL

-- Eski vardiya perakende satış	
	SELECT
		 b.Ind as BaslikInd
		,h.StokInd as StokInd
		,b.Tarih as Tarih
		,b.DurumInd
		,b.BelgeNo as Belge
		,h.Aciklama as Aciklama
		,b.FaturaInd
		,b.HesapInd
		,b.TipInd as TipIndBaslik
		,h.Owner as Owner
		,0.00 as Kapasite
		,40 AS TipIndAltHareket
		,h.TipInd as TipInd	
		,h.Miktar
		,h.Carpan
		,0.00 as Giren
		,(h.Miktar * h.Carpan) as Cikan
		,h.Fiyat as Fiyat
		,h.GercekFiyat as GercekFiyat
		,Hareketler.DepoInd
		,0.00 Kalan
		,ISNULL((h.Iskonto), 0.00) as HareketlerIskonto
		,0.00 as BaslikIskonto
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		,NULL AS KasiyerKodu
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd AND b.TipInd = 108
	WHERE h.TipInd = 40
	
	UNION ALL

-- Perakende satış	
	SELECT
		 NULL as BaslikInd
		,h.StokInd as StokInd
		,b.Tarih as Tarih
		,NULL as DurumInd
		,NULL as Belge
		,h.Aciklama as Aciklama
		,0 as FaturaInd
		,NULL as HesapInd
		,504 as TipIndBaslik
		,h.Owner as Owner
		,0.00 as Kapasite
		,504 AS TipIndAltHareket
		,h.TipInd as TipInd
		,h.Miktar
		,h.Carpan
		,0.00 as Giren
		,(h.Miktar * h.Carpan) as Cikan
		,h.Fiyat as Fiyat	
		,h.GercekFiyat as GercekFiyat
		,Hareketler.DepoInd
		,0.00 Kalan
		,0.00 as HareketlerIskonto
		,0.00 as BaslikIskonto
		,h.Ind
		,sk.KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		,h.KasiyerKodu AS KasiyerKodu		
	FROM 
		SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0 AND b.TipInd = 505


GO
GO
--Sena Öztürk
--KarZarar raporu performans için oluşturuldu

CREATE VIEW [dbo].[KarZararGirisCikisIskontolu]
AS
WITH HareketIskontoToplamTutar (BaslikInd, ToplamTutar, ToplamGercekTutar)
AS
(
	SELECT  BaslikInd
	        ,SUM(ISNULL(ToplamTutar, 0.00)) AS ToplamTutar
			,SUM(ISNULL(ToplamGercekTutar, 0.00)) AS ToplamGercekTutar
	FROM dbo.KarZararGirisCikisToplamTutarHareketIskonto WITH(NOLOCK)
	GROUP BY BaslikInd
)
	SELECT  GC.*, ISNULL(HareketIskonto,0.00) AS HareketIskonto
	        ,(SELECT ToplamTutar FROM HareketIskontoToplamTutar WHERE BaslikInd = KarZararGirisCikisToplamTutarHareketIskonto.BaslikInd) AS ToplamTutar
		 ,(SELECT ToplamGercekTutar FROM HareketIskontoToplamTutar WHERE BaslikInd = KarZararGirisCikisToplamTutarHareketIskonto.BaslikInd) AS ToplamGercekTutar
	FROM dbo.KarZararGirisCikisToplamTutarHareketIskonto WITH(NOLOCK)
	RIGHT JOIN KarZararGirisCikis GC WITH(NOLOCK) ON GC.BaslikInd = KarZararGirisCikisToplamTutarHareketIskonto.BaslikInd
	AND GC.StokInd = KarZararGirisCikisToplamTutarHareketIskonto.StokInd

GO



GO
--Sena Öztürk
--KarZarar raporu performans için oluşturuldu

CREATE VIEW [dbo].[KarZararStokGruplariWithLevel]
AS
WITH Gruplar([Level], Ind, GrupAdi, ParentInd, Owner) 
AS 
(
		SELECT 0 AS [Level], Ind, GrupAdi, ParentInd, Owner
		FROM dbo.StokGruplari WITH(NOLOCK)
		WHERE (ParentInd IS NULL)
		
		UNION ALL
		
		SELECT g.[Level] + 1 AS [Level], sg.Ind, sg.GrupAdi, sg.ParentInd, sg.Owner
		FROM dbo.StokGruplari AS sg WITH(NOLOCK) INNER JOIN Gruplar AS g ON g.Ind = sg.ParentInd
)
SELECT * FROM Gruplar 


GO


GO

--Sena Öztürk
--KarZarar raporu performans için oluşturuldu

CREATE VIEW [dbo].[KarZararEnvanterStokMiktarlariButunKdvsiz]
AS
    SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.GercekFiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		gi.ToplamGercekTutar,
		0.00 AS KDVOrani
	FROM
		KarZararGirisCikisIskontolu as gi WITH(NOLOCK)
	WHERE 
		(gi.TipInd = 29 AND gi.TipIndAltHareket = 3)
		or
		(gi.TipInd=30 AND gi.TipIndAltHareket=6)
		or
		(gi.TipInd=30 AND gi.TipIndAltHareket=5)
		or
		(gi.TipInd in (39,40))
		
	UNION ALL
	
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		NULL AS GercekFiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		gi.ToplamGercekTutar,
		0.00 AS KDVOrani
	FROM
		KarZararGirisCikisIskontolu as gi WITH(NOLOCK)
		LEFT JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = gi.StokInd
		LEFT JOIN dbo.KDVGruplari AS ks WITH(NOLOCK) ON ks.Ind = s.SatisKDVGrupInd
		LEFT JOIN dbo.KDVGruplari AS ka WITH(NOLOCK) ON ka.Ind = s.AlisKDVGrupInd
	WHERE 
		(gi.TipInd=503 AND (gi.TipIndAltHareket=29 OR gi.TipIndAltHareket=30))
		or
		(gi.TipInd=112)
			
	UNION ALL
	
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		(gi.Fiyat / (1 + (k.KdvOrani / 100))) AS Fiyat,
		(gi.GercekFiyat / (1 + (k.KdvOrani / 100))) AS GercekFiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		gi.ToplamGercekTutar,
		0.00 AS KDVOrani
	FROM
		KarZararGirisCikisIskontolu as gi WITH(NOLOCK)
		LEFT OUTER JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = gi.StokInd
		LEFT JOIN dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.AlisKDVGrupInd
	WHERE 
		gi.TipInd = 29 AND gi.TipIndAltHareket = 2
		
	UNION ALL
	
	SELECT
		h.Owner,
		h.Ind,
		h.StokInd,
		0.00 AS Giren,
		(h.Miktar * ISNULL(h.Carpan, 1)) AS Cikan,
		b.Tarih,
		h.Fiyat,
		h.GercekFiyat,
		504 AS TipIndAltHareket,
		0.00 AS IlkIskonto,
		0.00 as SonIskonto,
		ISNULL
		(
			( 
				SELECT  
					SUM
					(
						SubH.Miktar
						*
						SubH.Carpan
						*
						SubH.Fiyat
						-
						SubH.Iskonto
					) 
				FROM 
					Hareketler SubH WITH(NOLOCK)
				WHERE  
					SubH.BaslikInd = h.BaslikInd
			)
			, 0.00
		) as ToplamTutar,
		ISNULL
		(
			( 
				SELECT  
					SUM
					(
						SubH.Miktar
						*
						SubH.Carpan
						*
						SubH.GercekFiyat
						-
						SubH.Iskonto
					) 
				FROM 
					Hareketler SubH WITH(NOLOCK)
				WHERE  
					SubH.BaslikInd = h.BaslikInd
			)
			, 0.00
		) as ToplamGercekTutar,
		
		
		0.00 as KDVOrani
	FROM 
		SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd = h.StokInd
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0

GO



GO

--Sena Öztürk
--KarZarar raporu performans için oluşturuldu
CREATE VIEW [dbo].[KarZararEnvanterStokMiktarlariButunKdvli]
AS
  
    SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.GercekFiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		gi.ToplamGercekTutar,
		case when gi.TipInd=39 then 18.00
		     when gi.TipInd=40 then 
								 (
									SELECT
										TOP 1
										h.KDVOrani
									FROM
										Hareketler AS h WITH(NOLOCK)
									WHERE
										gi.Ind = h.Ind
								  )
		     else
			 (
				SELECT
					TOP 1
					h.KDVOrani
				FROM
					Hareketler AS h WITH(NOLOCK)
				WHERE
					gi.BaslikInd = h.BaslikInd
					AND
					gi.StokInd = h.StokInd
					AND
					h.TipInd = (case when (gi.TipInd = 29 AND gi.TipIndAltHareket = 3) then 3
									 when (gi.TipInd=30 AND gi.TipIndAltHareket=6) then 6
									 when (gi.TipInd=30 AND gi.TipIndAltHareket=5) then 5 end)
			 ) end 
		AS KDVOrani
	FROM
		KarZararGirisCikisIskontolu as gi WITH(NOLOCK)
	WHERE 
		(gi.TipInd = 29 AND gi.TipIndAltHareket = 3)
		or
		(gi.TipInd=30 AND gi.TipIndAltHareket=6)
		or
		(gi.TipInd=30 AND gi.TipIndAltHareket=5)
		or
		(gi.TipInd in (39,40))
		
	UNION ALL
	
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
	 NULL AS GercekFiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		gi.ToplamGercekTutar,
		CASE WHEN gi.TipIndAltHareket=30 THEN
			ISNULL(ks.KdvOrani, 18.00)
		ELSE
			ISNULL(ka.KdvOrani, 18.00)
		END AS KDVOrani
	FROM
		KarZararGirisCikisIskontolu as gi WITH(NOLOCK)
		LEFT JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = gi.StokInd
		LEFT JOIN dbo.KDVGruplari AS ks WITH(NOLOCK) ON ks.Ind = s.SatisKDVGrupInd
		LEFT JOIN dbo.KDVGruplari AS ka WITH(NOLOCK) ON ka.Ind = s.AlisKDVGrupInd
	WHERE 
		(gi.TipInd=503 AND (gi.TipIndAltHareket=29 OR gi.TipIndAltHareket=30))
		or
		(gi.TipInd=112)
			
	UNION ALL
	
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		(gi.Fiyat / (1 + (k.KdvOrani / 100))) AS Fiyat,
		(gi.GercekFiyat / (1 + (k.KdvOrani / 100))) AS GercekFiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		gi.ToplamGercekTutar,
		k.KdvOrani AS KDVOrani
	FROM
		KarZararGirisCikisIskontolu as gi WITH(NOLOCK)
		LEFT OUTER JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = gi.StokInd
		LEFT JOIN dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.AlisKDVGrupInd
	WHERE 
		gi.TipInd = 29 AND gi.TipIndAltHareket = 2
		
	UNION ALL
	
	SELECT
		h.Owner,
		h.Ind,
		h.StokInd,
		0.00 AS Giren,
		(h.Miktar * ISNULL(h.Carpan, 1)) AS Cikan,
		b.Tarih,
		h.Fiyat,
		h.GercekFiyat,
		504 AS TipIndAltHareket,
		0.00 AS IlkIskonto,
		0.00 as SonIskonto,
		ISNULL
		(
			( 
				SELECT  
					SUM
					(
						SubH.Miktar
						*
						SubH.Carpan
						*
						SubH.Fiyat
						-
						SubH.Iskonto
					) 
				FROM 
					Hareketler SubH WITH(NOLOCK)
				WHERE  
					SubH.BaslikInd = h.BaslikInd
			)
			, 0.00
		) as ToplamTutar,
		
			ISNULL
		(
			( 
				SELECT  
					SUM
					(
						SubH.Miktar
						*
						SubH.Carpan
						*
						SubH.GercekFiyat
						-
						SubH.Iskonto
					) 
				FROM 
					Hareketler SubH WITH(NOLOCK)
				WHERE  
					SubH.BaslikInd = h.BaslikInd
			)
			, 0.00
		) as ToplamGercekTutar,
		
		 h.KDVOrani
	FROM 
		SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd = h.StokInd
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0

GO



GO
CREATE FUNCTION [dbo].[KarZararDonemIciAlisButun]
(	
    @Baslangic datetime,
	@Bitis datetime
)
RETURNS @Dokum TABLE
(
	Tutar decimal(28,8),
	GercekTutar decimal(28,8),
	BirimAdi nvarchar(15),
	Owner int,
	Miktar decimal(28,8),
	Tarih datetime,
	StokInd INT,
	TipInd INT,
	KDVOrani decimal(28,8)
)
AS
BEGIN
	INSERT INTO @Dokum
	SELECT
		(
		(CASE WHEN g.NetMiktar=0 THEN g.Miktar ELSE ISNULL(g.NetMiktar,g.Miktar) END) 
			* g.Carpan * g.Fiyat) as Tutar,
				(
		(CASE WHEN g.NetMiktar=0 THEN g.Miktar ELSE ISNULL(g.NetMiktar,g.Miktar) END) 
			* g.Carpan * g.GercekFiyat) as GercekTutar,
		brm.BirimAdi,
		g.Owner,
		(g.Miktar * g.Carpan) as Miktar,
		g.Tarih,
		g.StokInd,
		g.TipIndAltHareket	 as TipInd,
		(
			SELECT
				TOP 1
				h.KDVOrani
			FROM
				Hareketler AS h WITH(NOLOCK)
			WHERE
				g.BaslikInd = h.BaslikInd
				AND
				g.StokInd = h.StokInd
				AND
				h.TipInd = 3
		) AS KDVOrani 
	FROM
		KarZararGirisCikis as g WITH(NOLOCK)
		LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
	WHERE
		g.TipIndAltHareket IN (3)
		AND (g.Tarih between @Baslangic AND @Bitis)
		
	UNION ALL
	
	SELECT
		case when g.TipIndAltHareket=2 then
				 (g.Miktar * g.Carpan * (g.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00)) / 100)))) 
             when (g.TipInd =503 AND g.TipIndAltHareket =29) then (g.Miktar*g.Carpan*g.Fiyat) end
             as Tutar			       
		,
			case when g.TipIndAltHareket=2 then
				 (g.Miktar * g.Carpan * (g.GercekFiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00)) / 100)))) 
             when (g.TipInd =503 AND g.TipIndAltHareket =29) then (g.Miktar*g.Carpan*g.GercekFiyat) end
             as GercekTutar,
		
		brm.BirimAdi
		,g.Owner
		,case when g.TipIndAltHareket=2 OR (g.TipInd=503 AND g.TipIndAltHareket =29) then (g.Miktar * g.Carpan) 
		      when (g.TipInd IN (503) AND g.TipIndAltHareket =29) then ISNULL(k.KDVOrani,18.00) end  
		      as Miktar
		,g.Tarih
		,g.StokInd
		,g.TipIndAltHareket as TipInd
		,k.KDVOrani
	FROM
		KarZararGirisCikis as g  WITH(NOLOCK)
		LEFT OUTER JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = g.StokInd 
		LEFT OUTER JOIN Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
		LEFT JOIN dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.AlisKDVGrupInd
	WHERE 
		(                            
		   (g.TipIndAltHareket=2  or (g.TipInd=503 AND g.TipIndAltHareket =29)) 
		    and 
		   ( g.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar WITH(NOLOCK) LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205)) AND (g.Tarih between @Baslangic AND @Bitis))
		)
		
	DECLARE @x int
	SELECT @x=COUNT(*) FROM @Dokum

	IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
			0 as Tutar,
			0 as GercekTutar,
			b.BirimAdi as BirimAdi,
			NULL as Owner,
			0 as Miktar,
			NULL as Tarih,	
			0 as StokInd,
			0,
			0
		FROM
		Stoklar as s WITH(NOLOCK)
		LEFT JOIN Birimler as b on b.Ind =s.AnaBirimInd
RETURN
END





GO

--Sena Öztürk
--KarZarar raporu performans için oluşturuldu

CREATE FUNCTION [dbo].[KarZararDonemIciSatisButun]
(	
    @Baslangic datetime,
	@Bitis datetime
)
RETURNS @Dokum TABLE
(
	Tutar decimal(28,8),
	BirimAdi nvarchar(15),
	Owner int,
	Miktar decimal(28,8),
	StokInd int,
	TipInd int,
	KDVOrani decimal(28,8)
)
AS
BEGIN
	INSERT INTO @Dokum
	SELECT
	    ISNULL((g.Miktar * g.Carpan * g.Fiyat),0) as Tutar,
		brm.BirimAdi,
		g.Owner,
		ISNULL((ABS(g.Miktar * g.Carpan)),0) as Miktar,
		g.StokInd
		, g.TipIndAltHareket as TipInd,
		
		CASE WHEN g.TipIndAltHareket=30 THEN ISNULL(ks.KdvOrani, 18)
		     ELSE
				(
					SELECT
						TOP 1
						h.KDVOrani
					FROM
						Hareketler AS h WITH(NOLOCK)
					WHERE
						g.BaslikInd = h.BaslikInd
						AND
						g.StokInd = h.StokInd
						AND
						h.TipInd = 6
				)
			END AS KDVOrani
	FROM
		KarZararGirisCikis as g WITH(NOLOCK)
		LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
		LEFT JOIN dbo.KDVGruplari AS ks WITH(NOLOCK) ON ks.Ind = s.SatisKDVGrupInd
	WHERE
		( g.TipIndAltHareket = 6  OR (g.TipInd =503 AND g.TipIndAltHareket=30))
		AND (g.Tarih between @Baslangic AND @Bitis)
		AND g.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar WITH(NOLOCK) LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
		
	UNION ALL
	
	SELECT
		ABS((h.Fiyat /(1+(h.KdvOrani/100))) * (h.Fark)) as Tutar,
		NULL as BirimAdi,
		h.Owner as Owner,
		ABS(h.Fark) as Miktar,
		h.StokInd
		,h.TipInd,
		18.00 AS KDVOrani
	FROM
		EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
	WHERE h.TipInd = 39
		AND (h.Tarih between @Baslangic AND @Bitis)
		
	UNION ALL
	
	SELECT
		(g.Miktar * g.Carpan * ABS(g.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WITH(NOLOCK) WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00)) / 100)))) as Tutar,
		brm.BirimAdi,
		g.Owner,
		ABS(g.Miktar * g.Carpan) as Miktar,
		g.StokInd 
		,g.TipIndAltHareket,
		(
			SELECT
				TOP 1
				h.KDVOrani
			FROM
				Hareketler AS h WITH(NOLOCK)
			WHERE
				g.BaslikInd = h.BaslikInd
				AND
				g.StokInd = h.StokInd
				AND
				h.TipInd = 5
		) AS KDVOrani
	FROM
		KarZararGirisCikis as g  WITH(NOLOCK) LEFT OUTER JOIN
		dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = g.StokInd LEFT OUTER JOIN
		Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
	WHERE 
		g.TipIndAltHareket = 5 
		AND g.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar WITH(NOLOCK) LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
		AND (g.Tarih between @Baslangic AND @Bitis)
		
	UNION ALL
	
	SELECT
		((g.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.Ind=g.Ind), 0.00)) / 100))) * g.Miktar * g.Carpan) as Tutar,
		NULL as BirimAdi,
		g.Owner as Owner,
		ABS(g.Miktar * g.Carpan) as Miktar,
		g.StokInd
		,g.TipIndAltHareket as TipInd,
		ks.KDVOrani
	FROM
		KarZararGirisCikis as g WITH(NOLOCK) LEFT OUTER JOIN
		dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN dbo.KDVGruplari AS ks WITH(NOLOCK) ON ks.Ind = s.SatisKDVGrupInd
	WHERE
		g.TipIndAltHareket = 40
		AND (g.Tarih between @Baslangic AND @Bitis)
		
	UNION ALL
	
	SELECT
		(h.Miktar * h.Carpan * (h.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h2 WITH(NOLOCK) WHERE h2.Ind = h.Ind), 0.00)) / 100)))) as Tutar,
		NULL as BirimAdi,
		h.Owner,
		ABS(h.Miktar * h.Carpan) as Miktar,
		h.StokInd
		,h.TipInd,
		 h.KDVOrani
	FROM
		SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504
		AND (b.Tarih between @Baslangic AND @Bitis)

	DECLARE @x int
	SELECT @x=COUNT(*) FROM @Dokum
	IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
			0 as Tutar,
			b.BirimAdi as BirimAdi,
			NULL as Owner,
			0 as Miktar,
			0 as StokInd
			,0 TipInd
			,0 KDVOrani
		FROM
		Stoklar as s WITH(NOLOCK)
		LEFT JOIN Birimler as b WITH(NOLOCK) on b.Ind =s.AnaBirimInd
RETURN
END






GO
--Sena Öztürk
--Performans çalışması nedeniyle GelirHareketleriMuhteviyatDurumu ve GiderHareketleriMuhteviyatDurumu function'ları birleştirildi.
--Kar zarar raporu için sadece toplamları verecek şekilde değiştirildi
--Sinan Güç
--Tutarın KDV hariç olarak gelmesi sağlandı. Müşteri Kobi Filo'dan gelen istek(Semih Süllü bildirdi)
CREATE FUNCTION [dbo].[KarZararGelirGiderHareketleriToplamMuhteviyatDurumu] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@MuhteviyatDurumu int,
	@Owner int
)
RETURNS @liste table( GelirTutarToplam decimal(38,6), GiderTutarToplam decimal(38,6), Owner int) 
AS
begin

	if(@Owner=0)  --merkez
		begin
		
			if(@MuhteviyatDurumu=2)--hepsi
				begin
				with
			   Gelir(GelirTutar) as
				(
					SELECT SUM(Tutar) as GelirTutar
						FROM GelirHareketleriKDVHaric  Gelir WITH(NOLOCK) --GelirHareketleri Gelir
						LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Gelir.GelirInd
						LEFT JOIN GelirGruplari WITH(NOLOCK) ON GelirGruplari.Ind = Hesaplar.GrupInd
						WHERE 
							(Gelir.GirisTarihi between @BaslangicTarihi and @BitisTarihi)
							AND (Hesaplar.OzelKodInd=0 OR Hesaplar.OzelKodInd IS NULL)
				),
			   Gider(GiderTutar) as
				(
					SELECT SUM(Matrah) as GiderTutar --SUM(Tutar) as GiderTutar
						FROM GiderHareketleri WITH(NOLOCK)
						LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = GiderHareketleri.GiderInd
						LEFT JOIN GiderGruplari WITH(NOLOCK) ON GiderGruplari.Ind = Hesaplar.GrupInd
						WHERE 
							(GiderHareketleri.GirisTarihi between @BaslangicTarihi and @BitisTarihi)
							AND (Hesaplar.OzelKodInd=0 OR Hesaplar.OzelKodInd IS NULL)
				)
				
				 insert into @liste
				 
					select GelirTutar, GiderTutar, 0 as Owner
					from Gelir, Gider
				 
				 
				end
			else -- muhteviyatlı ya da muhteviyatsız
				begin
						with
			   Gelir(GelirTutar) as
				(
					SELECT SUM(Tutar) as GelirTutar
						FROM GelirHareketleriKDVHaric Gelir WITH(NOLOCK) --GelirHareketleri Gelir
						LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Gelir.GelirInd
						LEFT JOIN GelirGruplari WITH(NOLOCK) ON GelirGruplari.Ind = Hesaplar.GrupInd
						WHERE 
							(Gelir.GirisTarihi between @BaslangicTarihi and @BitisTarihi)
							AND (Hesaplar.OzelKodInd=0 OR Hesaplar.OzelKodInd IS NULL)
							AND Hesaplar.MuhteviyatDurumu=@MuhteviyatDurumu
				),
			   Gider(GiderTutar) as
				(
					SELECT SUM(Matrah) as GiderTutar --SUM(Tutar) as GiderTutar
						FROM GiderHareketleri WITH(NOLOCK)
						LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = GiderHareketleri.GiderInd
						LEFT JOIN GiderGruplari WITH(NOLOCK) ON GiderGruplari.Ind = Hesaplar.GrupInd
						WHERE 
							(GiderHareketleri.GirisTarihi between @BaslangicTarihi and @BitisTarihi)
							AND (Hesaplar.OzelKodInd=0 OR Hesaplar.OzelKodInd IS NULL)
							AND Hesaplar.MuhteviyatDurumu=@MuhteviyatDurumu
				)
				
				 insert into @liste
				 
					select GelirTutar, GiderTutar, 0 as Owner
					from Gelir, Gider

				end			
		end
	else 
	-- şubeler
		begin
			if(@MuhteviyatDurumu=2)--hepsi
				begin
				with
			   Gelir(GelirTutar) as
				(
					SELECT SUM(Tutar) as GelirTutar
						FROM GelirHareketleriKDVHaric Gelir WITH(NOLOCK) --GelirHareketleri Gelir
						LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Gelir.GelirInd
						LEFT JOIN GelirGruplari WITH(NOLOCK) ON GelirGruplari.Ind = Hesaplar.GrupInd
						WHERE 
							(Gelir.GirisTarihi between @BaslangicTarihi and @BitisTarihi)
							AND (Hesaplar.OzelKodInd=0 OR Hesaplar.OzelKodInd IS NULL)
							And (Gelir.Owner=@Owner or Gelir.Owner is null)
				),
			   Gider(GiderTutar) as
				(
					SELECT SUM(Matrah) as GiderTutar --SUM(Tutar) as GiderTutar
						FROM GiderHareketleri WITH(NOLOCK)
						LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = GiderHareketleri.GiderInd
						LEFT JOIN GiderGruplari WITH(NOLOCK) ON GiderGruplari.Ind = Hesaplar.GrupInd
						WHERE 
							(GiderHareketleri.GirisTarihi between @BaslangicTarihi and @BitisTarihi)
							AND (Hesaplar.OzelKodInd=0 OR Hesaplar.OzelKodInd IS NULL)
							And (GiderHareketleri.Owner=@Owner or GiderHareketleri.Owner is null)
				)
				
				 insert into @liste
				 
					select GelirTutar, GiderTutar, 0 as Owner
					from Gelir, Gider
				 
				 
				end
			else -- muhteviyatlı ya da muhteviyatsız
				begin
						with
			   Gelir(GelirTutar) as
				(
					SELECT SUM(Tutar) as GelirTutar
						FROM GelirHareketleriKDVHaric Gelir WITH(NOLOCK) --GelirHareketleri Gelir
						LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Gelir.GelirInd
						LEFT JOIN GelirGruplari WITH(NOLOCK) ON GelirGruplari.Ind = Hesaplar.GrupInd
						WHERE 
							(Gelir.GirisTarihi between @BaslangicTarihi and @BitisTarihi)
							AND (Hesaplar.OzelKodInd=0 OR Hesaplar.OzelKodInd IS NULL)
							AND Hesaplar.MuhteviyatDurumu=@MuhteviyatDurumu
							And (Gelir.Owner=@Owner or Gelir.Owner is null)
				),
			   Gider(GiderTutar) as
				(
					SELECT SUM(Matrah) as GiderTutar --SUM(Tutar) as GiderTutar
						FROM GiderHareketleri WITH(NOLOCK)
						LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = GiderHareketleri.GiderInd
						LEFT JOIN GiderGruplari WITH(NOLOCK) ON GiderGruplari.Ind = Hesaplar.GrupInd
						WHERE 
							(GiderHareketleri.GirisTarihi between @BaslangicTarihi and @BitisTarihi)
							AND (Hesaplar.OzelKodInd=0 OR Hesaplar.OzelKodInd IS NULL)
							AND Hesaplar.MuhteviyatDurumu=@MuhteviyatDurumu
							And (GiderHareketleri.Owner=@Owner or GiderHareketleri.Owner is null)
				)
				
				 insert into @liste
				 
					select GelirTutar, GiderTutar, 0 as Owner
					from Gelir, Gider

				end			
		end

	return 
end
GO
--Sena Öztürk
--KarZarar raporu performans için oluşturuldu

CREATE FUNCTION [dbo].[KarZararIskontoAlisHesapButun] 
(	
    @Baslangic datetime,
	@Bitis datetime
)
RETURNS @Dokum TABLE
(
	Tutar decimal(28,8),
	Owner int,
	Miktar decimal(28,8),
	ToplamTutar decimal(28,8),
	IlkIskonto decimal(28,8),
	SonIskonto decimal(28,8),
	StokInd int,
	HesapInd int,
	BaslikInd int
)
AS
BEGIN
	INSERT INTO @Dokum
	SELECT
		--
		(gi.Miktar * gi.Carpan * gi.Fiyat -gi.HareketIskonto) as Tutar,
		gi.Owner,		
		(gi.Miktar * gi.Carpan) as Miktar,
	    h2.Matrah as ToplamTutar,
		gi.HareketIskonto as IlkIskonto,
		gi.BaslikIskonto as SonIskonto,
		gi.StokInd
		,gi.HesapInd,
		gi.BaslikInd
	FROM
		KarZararGirisCikisIskontolu as gi WITH(NOLOCK) LEFT OUTER JOIN
		Stoklar as s WITH(NOLOCK) ON gi.StokInd = s.Ind LEFT OUTER JOIN
		BaslikMatrahForIskontoAlisHesapButun as h2 WITH(NOLOCK) on h2.BaslikInd = gi.BaslikInd
	WHERE
		gi.TipIndAltHareket = 3
		AND (gi.Tarih between @Baslangic AND @Bitis)
		AND gi.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar LEFT JOIN Stoklar as s ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
		
	UNION ALL
	
	SELECT
		distinct
		(h3.Miktar * h.Fiyat) as Tutar,
		h3.Owner,
		(h3.Miktar * ISNULL(h3.Carpan,1)) AS Miktar,
		(SELECT TOP 1 Matrah FROM BaslikMatrahForIskontoAlisHesapButun WHERE BaslikInd = h.BaslikInd) as ToplamTutar,
		0.00 as IlkIskonto,
		(b.Iskonto) as SonIskonto,
		h.StokInd,
		b1.HesapInd,
		b1.Ind AS BaslikInd
	FROM 
		Hareketler as h
		LEFT JOIN Basliklar as b WITH(NOLOCK) on h.BaslikInd = b.Ind 
		LEFT JOIN Basliklar as b1 WITH(NOLOCK) on b1.FaturaInd = h.BaslikInd
		LEFT JOIN KarZararGirisCikis as h3 WITH(NOLOCK) ON h.StokInd = h3.StokInd
	WHERE
		h3.BaslikInd IN (b1.Ind) AND 
		h.TipInd = 3 AND
		h3.TipIndAltHareket = 2
		AND (b1.DurumInd = 3 and b1.TipInd = 103) AND
		h3.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar LEFT JOIN Stoklar as s ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
		AND (b1.Tarih between @Baslangic AND @Bitis)
		
	RETURN
END



GO



GO
--Sena Öztürk
--KarZarar raporu performans için oluşturuldu

CREATE FUNCTION [dbo].[KarZararIskontoSatisHesapButun] 
(	
    @Baslangic datetime,
	@Bitis datetime
)
RETURNS @Dokum TABLE
(
	Owner int,
	Tutar decimal(28,8),
	Miktar decimal(28,8),
	ToplamTutar decimal(28,8),
	IlkIskonto decimal(28,8),
	SonIskonto decimal(28,8),
	StokInd int,
	StokAdi nvarchar(100),
    StokKodu nvarchar(50),
	KdvOrani decimal(28,8),
	Satis int,  -- .cs kodun içinde kullanılacak, ıskontolu stklarn satıs raporunda olup olmadıgını test etmk için
	HesapInd int,
	BaslikInd int,
	Fiyat decimal(28,8)	--Ulaş
)
AS
BEGIN
	WITH BaslikMatrah(BaslikInd, Matrah)
	AS
	(
		SELECT 
			b.Ind as BaslikInd, 
			SUM(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto)
			+
			ISNULL((SELECT SUM(Tutar / (1 + KDVOrani / 100)) FROM Hareketler WHERE BaslikInd = b.Ind AND TipInd = 511), 0)
			as Matrah
		FROM Hareketler AS h WITH(NOLOCK)
		LEFT JOIN Basliklar AS b WITH(NOLOCK) ON h.BaslikInd = b.Ind 
		WHERE h.TipInd = 6
		GROUP BY
			b.Ind
	)
	INSERT INTO @Dokum
	SELECT
		gi.Owner,
        (gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) as Tutar,		
		(gi.Miktar * gi.Carpan) as Miktar,
	    h2.Matrah as ToplamTutar,
		gi.HareketIskonto as IlkIskonto,
		gi.BaslikIskonto as SonIskonto,
		gi.StokInd,
		s.StokAdi,
		s.StokKodu,
		(ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.BaslikInd=gi.BaslikInd AND h.TipInd=gi.TipIndAltHareket AND h.StokInd=gi.StokInd), 0.00)) as KdvOrani,
		0 as Satis,
		gi.HesapInd,
		gi.BaslikInd,
		gi.Fiyat
	FROM
		KarZararGirisCikisIskontolu as gi WITH(NOLOCK) LEFT OUTER JOIN
		Stoklar as s WITH(NOLOCK)  ON gi.StokInd = s.Ind LEFT OUTER JOIN
		BaslikMatrah as h2 WITH(NOLOCK) on h2.BaslikInd = gi.BaslikInd
	WHERE
		gi.TipIndAltHareket = 6
		AND (gi.Tarih between @Baslangic AND @Bitis)
	    AND gi.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar LEFT JOIN Stoklar as s ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
		
	UNION ALL
	
	SELECT
		h.Owner,
		(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto) as Tutar,		
		(h.Miktar * h.Carpan) as Miktar,
	    Matrah as ToplamTutar,
		h.Iskonto as IlkIskonto,
		b.Iskonto as SonIskonto,
		h.StokInd,
        h.StokAdi,
		h.StokKodu,
		h.KdvOrani,
		0 as Satis,
		b.HesapInd,
		b.Ind AS BaslikInd,
		h.Fiyat
	FROM Hareketler as h
		LEFT JOIN BaslikMatrah as h2 WITH(NOLOCK) on h2.BaslikInd = h.BaslikInd
		LEFT JOIN Basliklar as b WITH(NOLOCK) on h.BaslikInd = b.Ind 
	WHERE h.TipInd=6 AND (b.Tarih between @Baslangic AND @Bitis)
	AND b.DurumInd=12 and (select count(Ind) from Basliklar as b1 WITH(NOLOCK) where b1.FaturaInd = h.BaslikInd) = 0
	
	UNION ALL
	
	SELECT
		distinct
		h3.Owner,
		(h3.Miktar * h.Fiyat) as Tutar,
		(h3.Miktar * ISNULL(h3.Carpan,1)) AS Miktar,
	    (SELECT TOP 1 Matrah FROM BaslikMatrah WITH(NOLOCK) WHERE BaslikInd = h.BaslikInd) as ToplamTutar,
		0.00 as IlkIskonto,
		b.Iskonto as SonIskonto,
		h.StokInd,
        h.StokAdi,
		h.StokKodu,
		h.KdvOrani,
		0 as Satis,
		b1.HesapInd,
		b1.Ind AS BaslikInd,
		h3.Fiyat
	FROM 
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) on h.BaslikInd = b.Ind 
		LEFT JOIN Basliklar as b1 WITH(NOLOCK) on b1.FaturaInd = h.BaslikInd
		LEFT JOIN KarZararGirisCikis as h3 WITH(NOLOCK) ON h.StokInd = h3.StokInd
	WHERE
		h3.BaslikInd IN (b1.Ind) AND 
		h.TipInd = 6 AND
		h3.TipIndAltHareket = 5 
		AND (b1.DurumInd = 3 and b1.TipInd = 104) AND
		h3.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar WITH(NOLOCK) LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
		AND (b1.Tarih between @Baslangic AND @Bitis)
		
	UNION ALL
	
	SELECT
		h.Owner,
		(h.Miktar * h.Carpan *  (h.Fiyat /(1+(k.KdvOrani/100)))) as Tutar,		        
		(h.Miktar * h.Carpan) as Miktar,
		bm.Matrah as ToplamTutar,
		h.Miktar * h.Carpan *  (h.Fiyat /(1+(k.KdvOrani/100)))*(b.Iskonto/bm.Matrah) as IlkIskonto,
		0.00 as SonIskonto,
		h.StokInd,
		h.StokAdi,
		h.StokKodu,
		k.KdvOrani,
		0 as Satis,
		b.HesapInd,
		b.Ind AS BaslikInd,
		h.Fiyat
	FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b1 WITH(NOLOCK) on  b1.Ind = h.BaslikInd and b1.TipInd = 111
		LEFT JOIN Basliklar as b WITH(NOLOCK) on b.Ind = b1.FaturaInd AND (b.Tarih between @Baslangic AND @Bitis)
		LEFT JOIN BaslikMatrah as bm WITH(NOLOCK) on bm.BaslikInd = b.Ind 
		LEFT JOIN Stoklar as s WITH(NOLOCK) on s.Ind = h.StokInd
		LEFT JOIN KDVGruplari as k WITH(NOLOCK) on k.Ind = s.SatisKDVGrupInd
    WHERE 
    h.TipInd=37 AND  b.DurumInd=12

	RETURN
END




GO



GO

CREATE FUNCTION AlisSatis_Gruplar
(	
	@GrupInd int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Gruplar( Ind, GrupAdi, ParentInd, Owner)
	AS 
	(
		SELECT  Ind, GrupAdi, ParentInd, Owner
		FROM dbo.StokGruplari WITH(NOLOCK) where Ind=@GrupInd
		
		UNION ALL
		
		SELECT  sg.Ind, sg.GrupAdi, sg.ParentInd, sg.Owner
		FROM dbo.StokGruplari AS sg  INNER JOIN Gruplar AS g  ON g.Ind = sg.ParentInd
	)
	
	select * from Gruplar WITH(NOLOCK)
)
GO

GO
CREATE function [dbo].[AlisSatis_StokGruplarininStoklari]	
(
    @GrupInd int, 
	@SubeOwner int,
	@StokInd int,
	@CariInd int,
	@StokTipi int,
	@SatisKdvGrupInd int
	
	
)
returns @StokIndTable table (Ind int)
as
begin

	if((@StokTipi = -1 or @StokTipi = 0) and @CariInd = 0 and @StokInd = 0 and @GrupInd = 0 and @SatisKdvGrupInd = 0)
		begin
			insert into @StokIndTable
			select Ind 
			from StoklarinSubelereGoreMuhteviyatDurumu WITH(NOLOCK)
			where SubeOwner=@SubeOwner and GrupInd!=0
		end
	else
		begin
			if(@SatisKdvGrupInd!=0)
				insert into @StokIndTable
				select Ind 
				from StoklarinSubelereGoreMuhteviyatDurumu WITH(NOLOCK)
				where SubeOwner=@SubeOwner and SatisKDVGrupInd=@SatisKdvGrupInd
				
			else if(@GrupInd!=0)
				insert into @StokIndTable
				select Ind
				from StoklarinSubelereGoreMuhteviyatDurumu WITH(NOLOCK)
				where SubeOwner=@SubeOwner and GrupInd in (select Ind from AlisSatis_Gruplar(@GrupInd))
			else if(@StokInd!=0)
			    insert into @StokIndTable
				select Ind 
				from StoklarinSubelereGoreMuhteviyatDurumu WITH(NOLOCK)
				where SubeOwner=@SubeOwner and Ind=@StokInd
		    else if(@StokTipi!=-1)
				begin
					if(@StokTipi=0)
						insert into @StokIndTable
						select Ind 
						from StoklarinSubelereGoreMuhteviyatDurumu WITH(NOLOCK)
						where SubeOwner=@SubeOwner
					else if(@StokTipi=1)
						insert into @StokIndTable
						select Ind 
						from StoklarinSubelereGoreMuhteviyatDurumu WITH(NOLOCK)
						where SubeOwner=@SubeOwner and MuhteviyatDurumu=1
						
					else
						insert into @StokIndTable
						select Ind 
						from StoklarinSubelereGoreMuhteviyatDurumu WITH(NOLOCK)
						where SubeOwner=@SubeOwner and MuhteviyatDurumu=0
				end
		end

return

end

GO


CREATE VIEW [dbo].[AlisSatis_SonAlisFiyatListesi]
AS
SELECT     *
FROM         (SELECT     StokInd, Owner, ROW_NUMBER() OVER (PARTITION BY StokInd, Owner
                       ORDER BY Tarih DESC) AS Position, Fiyat
FROM         KarZararGirisCikis WITH(NOLOCK)
WHERE     (TipIndAltHareket = 3)) AS result
WHERE     position = 1


GO



GO
CREATE VIEW [dbo].[AlisSatis_SatisRaporDokumuView]
AS
	SELECT    
		g.Owner, 
		g.Tarih,
		--DATEADD(YEAR, -10, CAST(FLOOR(CAST(g.Tarih AS float)) AS datetime)) as PerakendeKasaIslemTarihi,
		g.DepoInd, 
		g.StokInd, 
		s.GrupInd, 
		s.StokKodu, 
		s.StokAdi, 
		g.HesapInd,
		g.BaslikInd,
		g.Fiyat,	--Ulaş
		k.KdvOrani AS KDVOrani, --(ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00)) AS KDVOrani, 
		SUM(g.Miktar * ISNULL(g.Carpan,1)) AS Miktar, 
		CASE 
			WHEN g.TipIndAltHareket=6 --OR g.TipIndAltHareket=504
				THEN SUM(g.Miktar * g.Carpan * g.Fiyat) 
			WHEN g.TipIndAltHareket=5 OR g.TipIndAltHareket=39 OR g.TipIndAltHareket=40
				THEN SUM(g.Miktar * g.Carpan * (g.Fiyat /(1+(k.KDVOrani/100)))) 
			END 		AS Tutar,
		CASE
			WHEN g.TipIndAltHareket=6 OR g.TipIndAltHareket=5
				THEN ISNULL((g.Fiyat-afl.Fiyat)*100/ (CASE afl.Fiyat WHEN 0 THEN 1  WHEN NULL THEN 1 ELSE afl.Fiyat END),100)
			WHEN g.TipIndAltHareket=39 OR g.TipIndAltHareket=40  --OR g.TipIndAltHareket=504 
				THEN ISNULL(((g.Fiyat /(1+(k.KdvOrani/100)))-afl.Fiyat)*100/ (CASE afl.Fiyat WHEN 0 THEN 1  WHEN NULL THEN 1 ELSE afl.Fiyat END),100) 
			END		as KarOrani,
		SUM(g.HareketIskonto) AS HareketlerIskonto,
		SUM(g.BaslikIskonto) AS BaslikIskonto,
		g.TipIndAltHareket,
		0 AS Ind,
		0 AS KullaniciInd,
		g.KasiyerKodu
	FROM
		KarZararGirisCikisIskontolu as g  WITH(NOLOCK)
		LEFT OUTER JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = g.StokInd 
		LEFT OUTER JOIN AlisSatis_SonAlisFiyatListesi as afl WITH(NOLOCK) on afl.StokInd = g.StokInd and afl.Owner = g.Owner
		LEFT JOIN dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.SatisKDVGrupInd
	WHERE
		(g.TipIndAltHareket = 6 OR g.TipIndAltHareket = 5 OR g.TipIndAltHareket =39 OR g.TipIndAltHareket = 40) AND g.Miktar > 0
	GROUP BY
		g.Owner, 
		g.Tarih,
		g.DepoInd, 
		g.StokInd,
		s.GrupInd, 
		s.StokKodu, 
		s.StokAdi, 
		g.HesapInd,
		g.BaslikInd,
		g.TipIndAltHareket,
        afl.Fiyat,
		g.Fiyat,
		k.KdvOrani,
		g.KasiyerKodu
	UNION ALL
	SELECT
		h.Owner,
		b.Tarih,
		--CAST(FLOOR(CAST(h.PerakendeKasaIslemTarihi AS float)) AS datetime) as PerakendeKasaIslemTarihi,
		Hareketler.DepoInd,
		h.StokInd,
		s.GrupInd,
		s.StokKodu,
		s.StokAdi,
		NULL as HesapInd,
		NULL AS BaslikInd,
		h.Fiyat,
		k.KdvOrani AS KDVOrani,
		SUM(h.Miktar * ISNULL(h.Carpan, 1)) AS Miktar, 
		SUM(h.Miktar * h.Carpan * (h.Fiyat /(1+(k.KDVOrani/100)))) AS Tutar,
		ISNULL(((h.Fiyat /(1+(k.KdvOrani/100)))-afl.Fiyat)*100/ (CASE afl.Fiyat WHEN 0 THEN 1  WHEN NULL THEN 1 ELSE afl.Fiyat END),100) as KarOrani,
		0.00 AS HareketlerIskonto,
		0.00 AS BaslikIskonto,
		h.TipInd AS TipIndAltHareket,
		h.Ind,
		sk.KullaniciInd,
		h.KasiyerKodu
	FROM 
		SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
		LEFT JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = h.StokInd
		LEFT JOIN dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.SatisKDVGrupInd
		LEFT JOIN AlisSatis_SonAlisFiyatListesi as afl WITH(NOLOCK) on afl.StokInd = h.StokInd and afl.Owner = h.Owner
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0 AND h.Miktar > 0
	GROUP BY
		h.Owner,
		b.Tarih,
		Hareketler.DepoInd,
		h.StokInd,
		s.GrupInd, 
		s.StokKodu, 
		s.StokAdi, 
		h.TipInd,
		afl.Fiyat,
		h.Fiyat,
		k.KdvOrani,
		h.Ind,
		sk.KullaniciInd,
		h.KasiyerKodu


GO

GO
CREATE FUNCTION [dbo].[AlisSatis_SatisRaporDokumu]
(
    @BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@cariInd int,
	@TipInd int,
	@kasiyerKodu nvarchar(50),
	@GrupInd int, 
	@SubeOwner int,
	@StokInd int,
	@StokTipi int,
	@SatisKdvGrupInd int
)
returns @dokum table
(
	Owner int,
	StokInd int,
	GrupInd int,
	GrupAdi nvarchar(50),
	StokKodu nvarchar(50),
	StokAdi nvarchar(100),
	KDVOrani decimal(28,8),
	Miktar decimal(38,6),
	Tutar decimal(38,6),
	KdvTutar decimal(38,6),
	GenelToplam decimal(38,6),
	OrtalamaFiyat decimal(38,6),
	SonFiyat decimal (28,13),
	Iskonto decimal(28,13),
	KarOrani decimal(38,6)
)
as
begin
			if(@TipInd=504)
			begin
				insert into @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					sg.GrupAdi,
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar
					,0.00 AS KdvTutar
					,0.00 AS GenelToplam
					,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat
					,
					0.00 as SonFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM 
					AlisSatis_SatisRaporDokumuView as h1 WITH(NOLOCK)
					inner join StokGruplari sg WITH(NOLOCK) on h1.GrupInd=sg.Ind
					
				WHERE  
					h1.Tarih between @BaslangicTarihi AND @BitisTarihi
					AND h1.TipIndAltHareket in (504, 40)
					and (h1.DepoInd is null or h1.DepoInd in (SELECT Hesaplar.Ind FROM Hesaplar WHERE (TipInd = 205)))
					AND (@cariInd = 0 OR h1.HesapInd = @cariInd)
					AND h1.StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd))							
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd,sg.GrupAdi, h1.StokKodu, h1.StokAdi, h1.KDVOrani
			end
		else if(@TipInd=40)
			begin
				insert into @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					sg.GrupAdi,
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani,
					SUM(h1.Miktar) as Miktar, 
					SUM(h1.Tutar) / (1 + (h1.KDVOrani/100)) as Tutar
					,0.00 AS KdvTutar
					,0.00 AS GenelToplam
					,
					CASE WHEN ( SUM(h1.Miktar)> 0) 
						THEN (SUM(h1.Tutar)/SUM(h1.Miktar)) 
						ELSE 0 END as OrtalamaFiyat
					,
					0.00 as SonFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(h1.Miktar)> 0)
					THEN SUM(h1.KarOrani *h1.Miktar)/SUM(h1.Miktar)
					ELSE SUM(h1.KarOrani *h1.Miktar) END AS KarOrani
				FROM 
					AlisSatis_SatisRaporDokumuView as h1 WITH(NOLOCK)
					inner join StokGruplari sg WITH(NOLOCK) on h1.GrupInd=sg.Ind
					--inner join Hareketler stoklar on stoklar.StokInd=h1.StokInd
				WHERE  
					h1.Tarih between @BaslangicTarihi AND @BitisTarihi
					AND h1.TipIndAltHareket= 40	
					and h1.DepoInd in (SELECT Hesaplar.Ind FROM Hesaplar WHERE TipInd = 205 AND Owner = @SubeOwner)
					AND (@cariInd = 0 OR h1.HesapInd = @cariInd)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd,sg.GrupAdi, h1.StokKodu, h1.StokAdi, h1.KDVOrani
			end
		else if(@TipInd=5042)
			begin
				insert into @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					sg.GrupAdi,
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar
					,0.00 AS KdvTutar
					,0.00 AS GenelToplam
					,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat
					,0.00 as SonFiyat
					,0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM 
					AlisSatis_SatisRaporDokumuView as h1 WITH(NOLOCK)
					inner join StokGruplari sg WITH(NOLOCK) on h1.GrupInd=sg.Ind
					
				WHERE  
					h1.Tarih between @BaslangicTarihi AND @BitisTarihi
					AND h1.TipIndAltHareket=504
					and (h1.DepoInd is null or h1.DepoInd in (SELECT Hesaplar.Ind FROM Hesaplar WHERE (TipInd = 205)))
					AND (@cariInd = 0 OR h1.HesapInd = @cariInd)
					AND h1.StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd))							
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd,sg.GrupAdi, h1.StokKodu, h1.StokAdi, h1.KDVOrani
			end
		else if(@TipInd=1000)
			begin
				insert into @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					sg.GrupAdi,
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar
					,0.00 KdvTutar
					,0.00 AS GenelToplam
					,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat
					,0.00 as SonFiyat
					,0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM 
					AlisSatis_SatisRaporDokumuView as h1 WITH(NOLOCK)
					inner join StokGruplari sg WITH(NOLOCK) on h1.GrupInd=sg.Ind
					
				WHERE  
					h1.Tarih between @BaslangicTarihi AND @BitisTarihi
					AND (h1.TipIndAltHareket!=40 or h1.TipIndAltHareket!=504)
					and (h1.DepoInd is null or h1.DepoInd in (SELECT Hesaplar.Ind FROM Hesaplar WHERE (TipInd = 205)))
					AND (@cariInd = 0 OR h1.HesapInd = @cariInd)
					AND h1.StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd))							
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd,sg.GrupAdi, h1.StokKodu, h1.StokAdi, h1.KDVOrani
			end
		else if(@TipInd=50440)
			begin
				insert into @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					sg.GrupAdi,
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar
					,0.00 AS KdvTutar
					,0.00 AS GenelToplam
					,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat
					,0.00 as SonFiyat
					,0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM 
					AlisSatis_SatisRaporDokumuView as h1 WITH(NOLOCK)
					inner join StokGruplari sg WITH(NOLOCK) on h1.GrupInd=sg.Ind
					
				WHERE  
					h1.Tarih between @BaslangicTarihi AND @BitisTarihi
					AND h1.TipIndAltHareket!=40
					and (h1.DepoInd is null or h1.DepoInd in (SELECT Hesaplar.Ind FROM Hesaplar WHERE (TipInd = 205)))
					AND (@cariInd = 0 OR h1.HesapInd = @cariInd)
					AND h1.StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd))							
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd,sg.GrupAdi, h1.StokKodu, h1.StokAdi, h1.KDVOrani
			end
		else
			begin
				insert into @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					sg.GrupAdi,
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(h1.Miktar) as Miktar, 
					SUM(h1.Tutar) as Tutar
					,
					0.00 AS KdvTutar,
					0.00 AS GenelToplam,
					CASE WHEN ( SUM(h1.Miktar)> 0) 
						THEN (SUM(h1.Tutar)/SUM(h1.Miktar)) 
						ELSE 0 END as OrtalamaFiyat
					,
					SSF.SonFiyat AS SonFiyat,
					0.00 Iskonto
					,
					CASE WHEN ( SUM(h1.Miktar)> 0)
					THEN SUM(h1.KarOrani * h1.Miktar)/SUM(h1.Miktar)
					ELSE SUM(h1.KarOrani * h1.Miktar) END AS KarOrani
				FROM 
					AlisSatis_SatisRaporDokumuView as h1 WITH(NOLOCK)
					inner join StokGruplari sg WITH(NOLOCK) on h1.GrupInd=sg.Ind
					--CROSS APPLY dbo.KarZararIskontoSatisHesapButun_SatisRaporu(h1.Owner, h1.StokInd, @BaslangicTarihi, @BitisTarihi) AS ISK
					CROSS APPLY dbo.SuAnkiStokSatisFiyati_SatisRaporu(h1.Owner, h1.StokInd) AS SSF
					
				WHERE  
					h1.Tarih between @BaslangicTarihi AND @BitisTarihi
					and (h1.DepoInd is null or h1.DepoInd in (SELECT Hesaplar.Ind FROM Hesaplar WHERE (TipInd = 205)))
					AND (@cariInd = 0 OR h1.HesapInd = @cariInd)
					AND h1.StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd))							
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd,sg.GrupAdi, h1.StokKodu, h1.StokAdi, SSF.SonFiyat, h1.KDVOrani
			end 

return 
end


GO


CREATE Function [dbo].[AlisSatis_SonSatisFiyatlar] 
(	
	@Tarih datetime,
	@TipInd int,
	
	@GrupInd int, 
	@SubeOwner int,
	@StokInd int,
	@cariInd int,
	@StokTipi int,
	@SatisKdvGrupInd int
)
returns @dokum table
(
	Owner int,
	Ind int,
	Tarih datetime,
	StokInd int,
	Position int,
	Fiyat decimal(28,13)
)
AS
BEGIN
	
	IF(@TipInd = 504) -- Market + Vardiya
		BEGIN
			insert into @dokum
			SELECT 
				null as Owner, * 
			FROM
			(
				SELECT
					Ind,
					Tarih,
					StokInd,
					ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Tarih DESC, Ind DESC) AS Position, 
					Fiyat
				FROM SatisHareketleri WITH(NOLOCK)
				WHERE 
					Tarih <= @Tarih
					AND (TipInd = 40 OR TipInd =@TipInd)
			) AS Result
			WHERE Position=1 and (StokInd=0 or StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd)))
			ORDER BY StokInd
		END
	ELSE IF(@TipInd = 40) -- Vardiya
		BEGIN
			insert into @dokum
			SELECT 
				null as Owner, * 
			FROM
			(
				SELECT
					Ind,
					Tarih,
					StokInd,
					ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Tarih DESC, Ind DESC) AS Position, 
					Fiyat
				FROM SatisHareketleri WITH(NOLOCK)
				WHERE 
					Tarih <= @Tarih
					AND TipInd =@TipInd
			) AS Result
			WHERE Position=1 and (StokInd=0 or StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd)))
			ORDER BY StokInd
		END
	ELSE IF(@TipInd = 5042) -- Market
		BEGIN
			insert into @dokum
			SELECT 
				null as Owner, * 
			FROM
			(
				SELECT
					Ind,
					Tarih,
					StokInd,
					ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Tarih DESC, Ind DESC) AS Position, 
					Fiyat
				FROM SatisHareketleri WITH(NOLOCK)
				WHERE 
					Tarih <= @Tarih
					AND TipInd = 504
			) AS Result
			WHERE Position=1 and (StokInd=0 or StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd)))
			ORDER BY StokInd
		END
	ELSE IF(@TipInd = 1000) -- Akaryakıt
		BEGIN
			insert into @dokum
			SELECT 
				null as Owner, * 
			FROM
			(
				SELECT
					Ind,
					Tarih,
					StokInd,
					ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Tarih DESC, Ind DESC) AS Position, 
					Fiyat
				FROM SatisHareketleri WITH(NOLOCK)
				WHERE 
					Tarih <= @Tarih
					AND (TipInd != 40 OR TipInd != 504)
			) AS Result
			WHERE Position=1 and (StokInd=0 or StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd)))
			ORDER BY StokInd
		END
	ELSE IF(@TipInd = 50440) -- Akaryakıt + Market
		BEGIN
			insert into @dokum
			SELECT 
				null as Owner, * 
			FROM
			(
				SELECT
					Ind,
					Tarih,
					StokInd,
					ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Tarih DESC, Ind DESC) AS Position, 
					Fiyat
				FROM SatisHareketleri WITH(NOLOCK)
				WHERE 
					Tarih <= @Tarih
					AND TipInd != 40
			) AS Result
			WHERE Position=1 and (StokInd=0 or StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd)))
			ORDER BY StokInd
		END
	ELSE
			insert into @dokum
			SELECT 
				null as Owner, * 
			FROM
			(
				SELECT
					Ind,
					Tarih,
					StokInd,
					ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Tarih DESC, Ind DESC) AS Position, 
					Fiyat
				FROM SatisHareketleri WITH(NOLOCK)
				WHERE 
					Tarih <= @Tarih
			) AS Result
			WHERE Position=1 and (StokInd=0 or StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd)))
			ORDER BY StokInd

return 
END
GO



GO


CREATE Function [dbo].[AlisSatis_SonSatisFiyatlariCariTurev]
(
	@Tarih datetime,
	
	@GrupInd int, 
	@SubeOwner int,
	@StokInd int,
	@cariInd int,
	@StokTipi int,
	@SatisKdvGrupInd int
)
returns table
AS
return
(
	SELECT
		g.Owner,
		brm.BirimAdi,
		g.Fiyat,
		g.StokInd,
		g.DepoInd,
		g.Tarih,
		g.HesapInd
	FROM
		KarZararGirisCikis as g WITH(NOLOCK)
		LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
	WHERE
		(g.TipIndAltHareket = 5 OR g.TipIndAltHareket = 6)
		and Tarih <= @Tarih 
		AND HesapInd = @cariInd
		AND g.DepoInd IN (select Ind from Hesaplar where TipInd=205)
		and (g.StokInd=0 or g.StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd)))
)

GO



GO


CREATE FUNCTION [dbo].[AlisSatis_SonAlisFiyatlar] 
(	
	@Tarih datetime,
	@Owner INT,
	
	@cariInd int,
	@GrupInd int, 
	@SubeOwner int,
	@StokInd int,
	@StokTipi int,
	@SatisKdvGrupInd int
)
RETURNS @AFTable TABLE
(
	Owner int,
	Tarih datetime,
	StokInd int,
	Position int, 
	Fiyat decimal(28, 8),
	BirimAdi nvarchar(max),
	KDVOrani decimal(28, 8),
	HesapInd int,
	Iskonto decimal(28,8),
	HareketBaslikIskonto decimal(28,8),
	Miktar decimal(28,8),
	GenePosition int
	
)
AS
BEGIN
	IF (@Owner > 0)
		INSERT INTO @AFTable
			SELECT * FROM
				(SELECT 
					*,
					ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Owner DESC, Tarih DESC) AS GenePosition
					FROM 
					(
						SELECT
							*
						FROM
							AlisFiyatlariForGenelKural
						WHERE
							(AlisFiyatlariForGenelKural.Tarih <= @Tarih) 
							AND
							(Owner IS NULL 
							OR
							Owner = @Owner)
					) AS Fiyatlar  ) AS GeneFiyatlar  
			WHERE 
				GenePosition = 1
				and StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd))							
	ELSE IF (@Owner = 0)
		INSERT INTO @AFTable
			SELECT * FROM
				(SELECT 
					*,
					ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Owner DESC, Tarih DESC) AS GenePosition
				FROM 
					(
						SELECT
							*
						FROM
							AlisFiyatlariForGenelKural WITH(NOLOCK)
						WHERE
							(AlisFiyatlariForGenelKural.Tarih <= @Tarih) 
							AND
							Owner IS NULL
					) AS Fiyatlar  ) AS GeneFiyatlar  
			WHERE 
				GenePosition = 1
				and StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd))
		INSERT INTO @AFTable
			SELECT * FROM
				(SELECT 
					*,
					ROW_NUMBER() OVER(
					PARTITION BY StokInd 
					ORDER BY Owner DESC, Tarih DESC) AS GenePosition  
				FROM 
					(
						SELECT
							*
						FROM
							AlisFiyatlariForGenelKural  
						WHERE
							(AlisFiyatlariForGenelKural.Tarih <= @Tarih)
							AND StokInd NOT IN (SELECT StokInd FROM @AFTable)
					) AS Fiyatlar  ) AS GeneFiyatlar  
			WHERE 
				GenePosition = 1
				and StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd))
	RETURN
END




GO



GO


CREATE FUNCTION [dbo].[AlisSatis_SonAlisFiyatlariCari] 
(	
	@Tarih datetime,
	
	@cariInd int,
	@GrupInd int, 
	@SubeOwner int,
	@StokInd int,
	@StokTipi int,
	@SatisKdvGrupInd int
)
RETURNS @Dokum TABLE
(
	Owner int,
	BirimAdi nvarchar(15),
	Fiyat decimal(28,8),
	StokInd int
)

AS
BEGIN
	INSERT INTO @Dokum
	SELECT
		g.Owner,
		brm.BirimAdi,
		g.Fiyat,
		g.StokInd
	FROM
		KarZararGirisCikis as g WITH(NOLOCK)
		LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
	WHERE
		g.TipIndAltHareket IN (2, 3)
		AND g.DepoInd IN (SELECT Ind from Hesaplar where TipInd=205)
		AND g.Tarih <= @Tarih
		AND g.HesapInd = @cariInd
		and g.StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd))
		
	DECLARE @x int
		SELECT @x=COUNT(*) FROM @Dokum		
		IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
		null as Owner,
		'' as BirimAdi,
		0 as Fiyat,
		-1 as StokInd
		
RETURN
END


GO



GO


CREATE function[dbo].[AlisSatis_AlisRaporuDokumu] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	
	@owner int,
	
	@cariInd int,
	@GrupInd int, 
	@SubeOwner int,
	@StokInd int,
	@StokTipi int,
	@SatisKdvGrupInd int
)
RETURNS @dokum TABLE
(
	Owner int,
	StokInd int,
	GrupInd int,
	StokKodu nvarchar(50),
	StokAdi nvarchar(100),
	KDVOrani decimal(28,8),
	Miktar decimal(38,6),
	Tutar decimal(38,6),
	OrtalamaFiyat decimal(38,6),
	Iskonto decimal(28,13),
	Fiyat decimal(38,6)
) 
AS
begin

	if(@cariInd!=0)
		begin 
			insert into @dokum
			SELECT 
				h1.Owner, 
				h1.StokInd, 
				h1.GrupInd, 
				h1.StokKodu, 
				h1.StokAdi, 
				h1.KDVOrani, 
				SUM(h1.Miktar) as Miktar, 
				SUM(h1.Tutar) as Tutar
				,
				CASE WHEN ( SUM(h1.Miktar)> 0) 
					THEN (SUM(h1.Tutar)/SUM(h1.Miktar)) 
					ELSE 0 END as OrtalamaFiyat,
				
				0.00 as Iskonto	,
				MAX (fiyat1.Fiyat) as Fiyat				
			FROM AlisRaporDokumu as h1 WITH(NOLOCK)
			--inner join AlisSatis_SonAlisFiyatlariCari(@BitisTarihi, @cariInd, @GrupInd, @SubeOwner, @StokInd, @StokTipi, @SatisKdvGrupInd) as fiyat1 on fiyat1.StokInd=h1.StokInd
			inner join AlisSatis_SonAlisFiyatlar(@BitisTarihi, @owner, @cariInd, @GrupInd, @SubeOwner, @StokInd, @StokTipi, @SatisKdvGrupInd) as fiyat1  on fiyat1.StokInd=h1.StokInd
			WHERE  
				(h1.Tarih between @BaslangicTarihi and @BitisTarihi )
				and (h1.DepoInd is null or h1.DepoInd in (SELECT Hesaplar.Ind FROM Hesaplar WHERE (TipInd = 205)))
				AND (@cariInd = 0 OR h1.HesapInd = @cariInd)
				and h1.StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd))
				
			GROUP BY
				h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
		end
	else
		begin
			insert into @dokum
			SELECT 
				h1.Owner, 
				h1.StokInd, 
				h1.GrupInd, 
				h1.StokKodu, 
				h1.StokAdi, 
				h1.KDVOrani, 
				SUM(h1.Miktar) as Miktar, 
				SUM(h1.Tutar) as Tutar
				,
				CASE WHEN ( SUM(h1.Miktar)> 0) 
					THEN (SUM(h1.Tutar)/SUM(h1.Miktar)) 
					ELSE 0 END as OrtalamaFiyat
				,
				0.00 as Iskonto,
				max (fiyat2.Fiyat) as Fiyat
			FROM AlisRaporDokumu as h1 WITH(NOLOCK)
			inner join AlisSatis_SonAlisFiyatlar(@BitisTarihi, @owner, @cariInd, @GrupInd, @SubeOwner, @StokInd, @StokTipi, @SatisKdvGrupInd) as fiyat2   on fiyat2.StokInd=h1.StokInd
			
			WHERE  
				(h1.Tarih between @BaslangicTarihi and @BitisTarihi )
				and (h1.DepoInd is null or h1.DepoInd in (SELECT Hesaplar.Ind FROM Hesaplar WHERE (TipInd = 205)))
				AND (@cariInd = 0 OR h1.HesapInd = @cariInd)
				and h1.StokInd in (select Ind from AlisSatis_StokGruplarininStoklari(@GrupInd, @SubeOwner, @StokInd, @cariInd, @StokTipi, @SatisKdvGrupInd))
			GROUP BY
				h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
	
		end
	
 
return 
end 

GO



GO

CREATE VIEW [dbo].[IrsaliyeTutarlariManuel]
AS

SELECT
	ch.Ind HesapInd,
	NULL AS Owner,
	ISNULL(SUM(it.Tutar),0) AS Tutar,
	ISNULL(SUM(it.Miktar),0) AS Miktar
FROM IrsaliyeTutar it WITH(NOLOCK)
	RIGHT JOIN dbo.CariHesaplar ch WITH(NOLOCK) ON it.HesapInd = ch.Ind
WHERE it.AltTipInd=522 -- manuel irsaliye toplamı
GROUP BY ch.Ind






GO



GO

CREATE VIEW [dbo].[IrsaliyeTutarlariTasitTanima]
AS

SELECT
	ch.Ind HesapInd,
	NULL AS Owner,
	ISNULL(SUM(it.Tutar),0) AS Tutar,
	ISNULL(SUM(it.Miktar),0) AS Miktar
FROM IrsaliyeTutar it WITH(NOLOCK)
	RIGHT JOIN dbo.CariHesaplar ch WITH(NOLOCK) ON it.HesapInd = ch.Ind
WHERE it.AltTipInd=521 -- taşıt tanıma irsaliye toplamı
GROUP BY ch.Ind






GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CariAlinanCekTutarlari]
AS
SELECT 
	CariHesapInd AS HesapInd,
	NULL as Owner,
	SUM(Tutar) as Tutar
FROM Hareketler WITH(NOLOCK)
WHERE TipInd = 11 AND DurumInd IN (4,7)
GROUP BY CariHesapInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CariAlinanCekTutarlari2]
AS
SELECT 
	CariHesapInd AS HesapInd,
	NULL as Owner,
	SUM(Tutar) as Tutar
FROM Hareketler WITH(NOLOCK)
WHERE TipInd = 11 AND DurumInd IN (4,7,9)
GROUP BY CariHesapInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CariBorcAlacak]
AS

SELECT
	HesapInd,
	CASE WHEN (TipInd in (6))
		THEN Alacak 
		ELSE 0
	END as Borc,
	CASE WHEN (TipInd in(3))
		THEN Borc 
		ELSE 0
	END as Alacak
FROM FaturaOzet2 WITH(NOLOCK)
LEFT JOIN Subeler WITH(NOLOCK) ON FaturaOzet2.Owner = Subeler.Owner

UNION ALL

SELECT
	CariHesapInd as HesapInd,
	CASE WHEN (TipInd IN(13,15,507,510))
		THEN Tutar * ISNULL(Kur, 1)
		ELSE 0
		END as Borc,
	CASE WHEN (TipInd IN(9,10,12,508,509,533))
		THEN Tutar * ISNULL(Kur, 1)
		ELSE 0
		END as Alacak
FROM Hareketler WITH(NOLOCK)
LEFT JOIN Subeler WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
WHERE TipInd in (9,10,12,13,15,507,508,509,510,533)

UNION ALL

SELECT
	HedefHesapInd as HesapInd,
	CASE WHEN (TipInd IN(509))
		THEN Tutar * ISNULL(Kur, 1)
		ELSE 0
		END as Borc,
	CASE WHEN (TipInd IN(510))
		THEN Tutar * ISNULL(Kur, 1)
		ELSE 0
		END as Alacak
FROM Hareketler WITH(NOLOCK)
LEFT JOIN Subeler WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
WHERE TipInd IN (509, 510)
	AND Hareketler.HedefHesapInd IS NOT NULL 

UNION ALL

SELECT
	CariHesapInd AS HesapInd,
	0 as Borc,
	CASE WHEN (TipInd=11 AND (Hareketler.DurumInd = 4 OR Hareketler.DurumInd = 6 OR Hareketler.DurumInd = 8 OR Hareketler.DurumInd = 7 OR Hareketler.DurumInd = 5 ) )
		THEN Tutar * ISNULL(Kur, 1)
		ELSE 0
		END as Alacak
FROM Hareketler WITH(NOLOCK)
LEFT JOIN Subeler WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
WHERE TipInd = 11 
	AND Hareketler.DurumInd!= 9

UNION ALL

SELECT
	CariHesapInd AS HesapInd,
	Tutar * ISNULL(Kur, 1) as Borc,
	0 as Alacak
FROM Hareketler WITH(NOLOCK)
LEFT JOIN Subeler WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
WHERE TipInd = 14 
	AND Hareketler.DurumInd IN (4,10) 

UNION ALL

SELECT
	Hareketler.CiroCariInd AS HesapInd,
	Tutar * ISNULL(Kur, 1) as Borc,
	0 as Alacak
FROM Hareketler WITH(NOLOCK)
LEFT JOIN Subeler WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner

/*FisPortfoyu alani aktif olarak kullanilmaya baslanmistir, alttaki kisim yanlis olarak kullanildigindan kapatilmistir. -sahap
UNION ALL

SELECT
	b.HesapInd AS HesapInd,
	h.Tutar as Borc,
	0 as Alacak
FROM Hareketler as h
LEFT JOIN Subeler as s ON h.Owner = s.Owner
LEFT JOIN Basliklar as b ON b.Ind = h.BaslikInd
WHERE h.TipInd = 37
AND b.FisPortfoyu = 'True' */
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CariHesapTutarlari]
AS
SELECT
	HesapInd,
	NULL as Owner,
	(SUM(Borc) - SUM(Alacak)) as Tutar
FROM CariBorcAlacak WITH(NOLOCK)
GROUP BY HesapInd
GO
CREATE VIEW [dbo].[CariKartlar]
AS

SELECT CariHesaplar.*
	 , CariHesapTutarlari.Tutar AS HesapTutari
	 , CariVerilenCekTutarlari.Tutar AS VerilenCekTutari
	 , CariAlinanCekTutarlari.Tutar AS AlinanCekTutari
	 , CariAlinanCekTutarlari2.Tutar AS AlinanCekTutari2
	 , IrsaliyeTutarlari.Tutar AS IrsaliyeTutari
	 , ISNULL(IrsaliyeTutarlariTasitTanima.Tutar,0) AS IrsaliyeTutariTasitTanimaTL
	 , ISNULL(IrsaliyeTutarlariManuel.Tutar,0) AS IrsaliyeTutariManuelTL
	 , ISNULL(IrsaliyeTutarlari.Miktar,0) AS IrsaliyeTutariLt
	 , ISNULL(IrsaliyeTutarlariTasitTanima.Miktar,0) AS IrsaliyeTutariTasitTanimaLT
	 , ISNULL(IrsaliyeTutarlariManuel.Miktar,0) AS IrsaliyeTutariManuelLT
	 , ISNULL(CariHesapTutarlari.Tutar, 0) + ISNULL(IrsaliyeTutarlari.Tutar, 0) AS GenelToplam
	 
FROM CariHesaplar WITH(NOLOCK)
	LEFT JOIN CariHesapTutarlari WITH(NOLOCK) ON CariHesaplar.Ind = CariHesapTutarlari.HesapInd
	LEFT JOIN CariVerilenCekTutarlari WITH(NOLOCK) ON CariHesaplar.Ind = CariVerilenCekTutarlari.HesapInd
	LEFT JOIN CariAlinanCekTutarlari WITH(NOLOCK) ON CariHesaplar.Ind = CariAlinanCekTutarlari.HesapInd
    LEFT JOIN CariAlinanCekTutarlari2 WITH(NOLOCK) ON CariHesaplar.Ind = CariAlinanCekTutarlari2.HesapInd
	LEFT JOIN IrsaliyeTutarlari WITH(NOLOCK) ON CariHesaplar.Ind = IrsaliyeTutarlari.HesapInd
	LEFT JOIN IrsaliyeTutarlariTasitTanima WITH(NOLOCK) On CariHesaplar.Ind=IrsaliyeTutarlariTasitTanima.HesapInd
	LEFT JOIN IrsaliyeTutarlariManuel WITH(NOLOCK) On CariHesaplar.Ind=IrsaliyeTutarlariManuel.HesapInd

	


GO



GO
CREATE FUNCTION [dbo].[StokMiktarlariForSayimSub] 
(	
	@StokInds VARCHAR(MAX), @Tarih DATETIME, @DepoInds VARCHAR(MAX)
)

RETURNS TABLE 
AS
RETURN
(
    SELECT 
		hr.StokInd,
		hr.DepoInd,
		hs.Owner,
		(hr.Miktar * hr.Carpan) as Giren,
		0.00 as Cikan
	FROM
		Hareketler as hr WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind  = hr.BaslikInd
		LEFT JOIN Hesaplar hs WITH(NOLOCK) ON hs.Ind = hr.DepoInd 
	WHERE
		b.Aktif != 0	
		AND hr.TipInd = 29 
		AND (b.DurumInd != 11 or b.DurumInd IS NULL)	
		AND b.TipInd = 101
		AND hr.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
		AND hr.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.Tarih <= @Tarih
	UNION ALL
	SELECT 
		hr.StokInd,
		hr.DepoInd,
		hs.Owner,
		(hr.Miktar * hr.Carpan) as Giren,
		0.00 as Cikan
	FROM 
		Hareketler as hr WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON hr.BaslikInd = b.Ind
		LEFT JOIN Hesaplar as hs WITH(NOLOCK) ON hs.Ind = hr.DepoInd 
	WHERE 
		hr.TipInd = 29 AND (b.DurumInd != 11 or b.DurumInd IS NULL)
		AND b.TipInd = 103
		AND hr.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
		AND hr.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.Tarih <= @Tarih
	UNION ALL
	SELECT 
		h.StokInd,
		h.DepoInd,
		Hesaplar.Owner,
		(h.Miktar * h.Carpan) as Giren,
		0.00 as Cikan
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b ON h.BaslikInd = b.Ind
		LEFT JOIN Hesaplar ON Hesaplar.Ind = h.DepoInd
	WHERE
		h.TipInd = 29 
		AND b.TipInd = 503
		AND h.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
		AND h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.Tarih <= @Tarih
	UNION ALL
	SELECT
		h.StokInd,
		h.DepoInd,
		h.Owner,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.BaslikInd 
		LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd 
	WHERE 
		b.TipInd = 102
		AND b.Aktif != 0
		AND h.TipInd = 30
		AND (b.DurumInd IS NULL OR b.DurumInd != 11)
		AND h.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
		AND h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.Tarih <= @Tarih
	UNION ALL 
	SELECT
		h.StokInd,
		h.DepoInd,
		Hesaplar.Owner,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan
	FROM
		Hareketler as h
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind	
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd 
	WHERE 
		h.TipInd = 30 
		AND (b.DurumInd != 11 or b.DurumInd IS NULL)
		AND b.TipInd = 104
		AND (b.DurumInd IS NULL OR b.DurumInd != 11)
		AND h.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
		AND h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.Tarih <= @Tarih
	UNION ALL
	SELECT 
		h.StokInd,
		h.DepoInd,
		Hesaplar.Owner,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan
	FROM 
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind --AND b.TipInd = 503
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd
	WHERE
		h.TipInd = 30 
		AND b.TipInd = 503
		AND h.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
		AND h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.Tarih <= @Tarih
	UNION ALL
	SELECT 
		h.StokInd,
		h.DepoInd,
		h.Owner,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan
	FROM 
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.Ind = h.PerakendeInd
		LEFT JOIN SatisKasasi as sk WITH(NOLOCK) ON sk.IslemInd = h.PerakendeInd
	WHERE
		h.TipInd = 30 
		AND h.BaslikInd = 0 
		AND sk.IsYeniSatis = 0 
		AND h.Aciklama IS NOT NULL 
		AND h.Aciklama = 'Pos Satış Bundle İçerik Ürün'
		AND h.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
		AND h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND Hareketler.GirisTarihi <= @Tarih
	UNION ALL

	SELECT 
		h.StokInd,
		h.DepoInd,
		h.Owner,
		(h.Miktar * h.Carpan) as Giren,
		0.00 as Cikan
	FROM  
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.Ind = h.PerakendeInd
		LEFT JOIN SatisKasasi as sk WITH(NOLOCK) ON sk.IslemInd = h.PerakendeInd
	WHERE
		h.TipInd = 29 
		AND h.BaslikInd = 0 
		AND sk.IsYeniSatis = 0 
		AND h.Aciklama IS NOT NULL 
		AND h.Aciklama = 'Pos Satış Bundle Ana Ürün Giriş'
		AND h.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
		AND h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND h.GirisTarihi <= @Tarih
	UNION ALL
	SELECT 
		h.StokInd,
		h.DepoInd,
		h.Owner,
		ISNULL((SELECT TOP 1 ABS(h.SayimMiktari-h.Miktar) FROM Hareketler WHERE BaslikInd=h.BaslikInd AND TipInd=29 AND StokInd=h.StokInd),0) AS Giren,
		ISNULL((SELECT TOP 1  ABS(h.Miktar-h.SayimMiktari) FROM Hareketler WHERE BaslikInd=h.BaslikInd AND TipInd=30 AND StokInd=h.StokInd),0) AS Cikan
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind 
		AND b.TipInd = 113
	WHERE
		h.TipInd = 112 
		AND b.TipInd = 113
		AND h.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
		AND h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.Tarih <= @Tarih
	UNION ALL
	SELECT 
		h.StokInd,
		h.DepoInd,
		h.Owner,
		0.00 as Giren,
		(h.Fark) as Cikan
	FROM
		EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
	WHERE
		h.TipInd = 39 AND h.Miktar != 0
		AND h.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
		AND h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND h.Tarih <= @Tarih
	UNION ALL
	SELECT
		h.StokInd,
		h.DepoInd,
		h.Owner,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd AND b.TipInd = 108
	WHERE h.TipInd = 40
	AND h.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
	AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
	AND b.Tarih <= @Tarih
	UNION ALL
	SELECT
		h.StokInd,
		h.DepoInd,
		h.Owner,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan
	FROM 
		SatisKasasi as sk
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504 
		AND sk.Tablo = 'Hareketler' 
		AND sk.IsYeniSatis = 0 
		AND b.TipInd = 505
		AND h.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.Tarih <= @Tarih
)
GO
CREATE FUNCTION [dbo].[FIFOAlisFiyati] (@Owner int, @Tarih datetime)
RETURNS @SonAlisFiyati TABLE (
  StokInd int,
  Fiyat decimal(28, 13)
)
BEGIN

  DECLARE @StokInd int
  DECLARE @ToplamBaslikIskonto decimal(28, 8)
  DECLARE @NetGiren decimal(28, 8)
  DECLARE @NetProcessGiren decimal(28, 8)
  DECLARE @ToplamNetTutar decimal(28, 8)
  DECLARE @HareketBaslikIskonto decimal(28, 8)
  DECLARE @ToplamGirenTutar decimal(28, 8)
  DECLARE @Giren decimal(28, 8)
  DECLARE @Fiyat decimal(28, 8)
  DECLARE @HareketIskonto decimal(28, 8)
  DECLARE @BaslikIskonto decimal(28, 8)
  DECLARE @OrtFifoFiyat decimal(28, 8)
  DECLARE @SonFiyat decimal(28, 8)


DECLARE @KarZararEnvanterStokMiktarlari table (Ind int,StokInd int, Tarih datetime, Giren decimal(28,8), Fiyat decimal(28,8),HareketIskonto decimal(28,8),BaslikIskonto decimal(28,8),ToplamTutar decimal(28,8))
INSERT INTO @KarZararEnvanterStokMiktarlari
SELECT
     Ind, StokInd, Tarih,  Giren,
        (CASE TipIndAltHareket
          WHEN 3 THEN GercekFiyat
          ELSE Fiyat
        END) AS Fiyat,
        HareketIskonto,
        BaslikIskonto,
        (CASE TipIndAltHareket
          WHEN 3 THEN ToplamGercekTutar
          ELSE ToplamTutar
        END) as ToplamTutar
      FROM KarZararEnvanterStokMiktarlariButunKdvsiz WITH(NOLOCK)
      WHERE
      Tarih <= @Tarih
      AND Giren > 0
      AND (Owner = @Owner
      OR @Owner = 0)
      --ORDER BY Tarih DESC, Ind DESC

	  DECLARE @StokNetMiktarlar table(StokInd int, NetMiktar decimal(18,8))
	  INSERT INTO @StokNetMiktarlar
	   SELECT
      StokInd, SUM(Giren - Cikan) as NetMiktar
    FROM KarZararEnvanterStokMiktarlariButunKdvsiz WITH(NOLOCK)
    WHERE --StokInd = @StokInd
    Tarih <= @Tarih
    AND (Owner = @Owner OR @Owner = 0)
	group by StokInd



  DECLARE StokCursor CURSOR FOR
  SELECT
    Ind
  FROM Stoklar WITH(NOLOCK)
  OPEN StokCursor
  FETCH NEXT FROM StokCursor
  INTO @StokInd
  WHILE @@FETCH_STATUS = 0
  BEGIN

    SET @ToplamGirenTutar = 0

    --SELECT
    --  @NetProcessGiren = SUM(Giren - Cikan)
    --FROM KarZararEnvanterStokMiktarlariButunKdvsiz
    --WHERE StokInd = @StokInd
    --AND Tarih <= @Tarih
    --AND (Owner = @Owner
    --OR @Owner = 0)
	select @NetProcessGiren = NetMiktar from @StokNetMiktarlar where StokInd = @StokInd
    SET @NetGiren = @NetProcessGiren

    IF (@NetProcessGiren > 0)
    BEGIN
      DECLARE KarZararEnvanterCursor CURSOR FOR
    SELECT Giren, Fiyat, HareketIskonto, BaslikIskonto, ToplamTutar FROM  @KarZararEnvanterStokMiktarlari WHERE StokInd = @StokInd order by Tarih DESC, Ind DESC
      OPEN KarZararEnvanterCursor
      WHILE @@FETCH_STATUS = 0
      BEGIN
        FETCH NEXT FROM KarZararEnvanterCursor
        INTO @Giren, @Fiyat, @HareketIskonto, @BaslikIskonto, @ToplamNetTutar

        IF (@Fiyat IS NULL)
          CONTINUE

        IF (@ToplamNetTutar > 0)
        BEGIN
          SET @HareketBaslikIskonto = (((@Giren * @Fiyat - @HareketIskonto) * @BaslikIskonto) / @ToplamNetTutar)
        END
        ELSE
        BEGIN
          SET @HareketBaslikIskonto = 0
        END

        IF (@NetProcessGiren > 0)
        BEGIN
          IF (@NetProcessGiren > @Giren)
          BEGIN
            SET @NetProcessGiren = @NetProcessGiren - @Giren
            SET @ToplamGirenTutar = @ToplamGirenTutar + @Giren * ((@Fiyat * @Giren - @HareketIskonto - @HareketBaslikIskonto) / @Giren)
          END
          ELSE
          BEGIN
            SET @ToplamGirenTutar = @ToplamGirenTutar + @NetProcessGiren * ((@Fiyat * @Giren - @HareketIskonto - @HareketBaslikIskonto) / @Giren)
            SET @NetProcessGiren = 0
          END
        END
        ELSE
          BREAK

      END -- WHILE @@FETCH_STATUS <KarZararEnvanterCursor> CLOSE

      CLOSE KarZararEnvanterCursor
      DEALLOCATE KarZararEnvanterCursor

      IF (@NetGiren <> 0)
        SET @OrtFifoFiyat = @ToplamGirenTutar / @NetGiren
      ELSE
        SET @OrtFifoFiyat = NULL

    END -- IF(@NetProcessGiren > 0) CLOSE

    INSERT INTO @SonAlisFiyati VALUES (@StokInd, @OrtFifoFiyat)

    FETCH NEXT FROM StokCursor
    INTO @StokInd

  END -- WHILE @@FETCH_STATUS = 0 <StokCursor> CLOSE

  CLOSE StokCursor
  DEALLOCATE StokCursor

  RETURN
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AkaryakitDepolariMuhteviyatListesi]

AS

	SELECT DISTINCT StokInd ,Owner
		FROM Hesaplar WITH(NOLOCK)
		WHERE   Hesaplar.tipInd=205 AND StokIND IS NOT NULL
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[AkaryakitStokToplamMiktar]
AS
	SELECT
		s.Ind,
		s.StokAdi,
		SUM(Giren) - SUM(Cikan) AS Miktar
	FROM
		GirisCikisHareketleri as g WITH(NOLOCK)
		LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = g.StokInd
	WHERE
		Kapasite IS NOT NULL
    GROUP BY
		s.StokAdi,
		s.Ind

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AkaryakitToplamStokDurumu]
AS
SELECT
	astm.Ind,
	astm.StokAdi,
	astm.Miktar,
	SUM(dbo.Hesaplar.Kapasite) AS Kapasite, 100 * astm.Miktar / SUM(dbo.Hesaplar.Kapasite) AS Dolu, 
    100 - 100 * astm.Miktar / SUM(dbo.Hesaplar.Kapasite) AS Bos,
	NULL AS Owner
FROM
	dbo.AkaryakitStokToplamMiktar AS astm WITH(NOLOCK) LEFT OUTER JOIN
    dbo.Hesaplar WITH(NOLOCK) ON astm.Ind = dbo.Hesaplar.StokInd
GROUP BY
	astm.Ind, astm.StokAdi, astm.Miktar


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AktifAlinanSiparisler]
AS
	SELECT
		Basliklar.Ind, 
		Basliklar.BelgeNo, 
		Basliklar.Tarih,
		Basliklar.Aciklama, 
		Basliklar.HesapInd, 
		Basliklar.HesapKodu, 
		Basliklar.HesapAdi,
		Basliklar.DurumInd,
		ISNULL
		(
			SUM
			(
				(
					Hareketler.Miktar
					* 
					Hareketler.Fiyat 
				) 
			)
			,0
		) AS Tutar, 
		Basliklar.Owner,
		GetDate() AS TeslimTarihi,
		GetDate() AS GirisTarihi,
		'' AS TeslimTarihiS,
		'' AS GirisTarihiS,
		ISNULL(Hesaplar.HesapAdi, '') AS PersonelAdi
	FROM 
		Basliklar WITH(NOLOCK)
		INNER JOIN Hareketler WITH(NOLOCK) ON Basliklar.Ind = Hareketler.BaslikInd
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Basliklar.GelirInd = Hesaplar.Ind AND Hesaplar.TipInd = 204
	WHERE 
		(Basliklar.Aktif IS NULL OR Basliklar.Aktif = 1) AND 
		(Basliklar.TipInd = 120)
	GROUP BY 
		Basliklar.Ind, 
		Basliklar.BelgeNo, 
		Basliklar.Tarih,
		Basliklar.Aciklama, 
		Basliklar.HesapInd, 
		Basliklar.HesapKodu, 
		Basliklar.HesapAdi,
		Basliklar.DurumInd,
		Basliklar.GelirInd,
		Basliklar.Owner,
		Hesaplar.HesapAdi
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AktifAlinanSiparislerPre]
AS
	SELECT 
		aas.Ind,
		aas.HesapInd,
		h.CariHesapInd,
		h.GirisTarihi,
		h.TeslimTarihi,
		h.Owner
	FROM 
		Basliklar AS aas WITH(NOLOCK)
		LEFT JOIN Hareketler AS h WITH(NOLOCK) ON aas.Ind =  h.BaslikInd
	WHERE 
		(aas.Aktif IS NULL OR aas.Aktif = 1) AND 
		(aas.TipInd = 120)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AktifAlisFaturalari]
AS
SELECT
	dbo.Basliklar.Ind, 
	dbo.Basliklar.BelgeNo, 
	dbo.Basliklar.Tarih,
	dbo.Basliklar.OdemeTarihi,
	dbo.Basliklar.Aciklama, 
	dbo.Basliklar.HesapInd, 
	dbo.Basliklar.HesapKodu, 
	dbo.Basliklar.HesapAdi,
	dbo.Basliklar.Yuvarlama,
	dbo.Basliklar.Iskonto,
        dbo.Basliklar.FFarkiFaturaInd, 

	ISNULL
	(
		SUM
		(
			(
				ISNULL
				(
					dbo.Hareketler.NetMiktar
					, dbo.Hareketler.Miktar
				) 
				* 
				dbo.Hareketler.Fiyat 
				- 
				dbo.Hareketler.Iskonto
			) 
			* 
			(
				1 
				+ 
				dbo.Hareketler.KDVOrani 
				/ 
				100
			) 
			* 
			(
				1
				-
				A.IskontoOran
				/
				100
			)
		)
		,0
	)
	+ 
	dbo.Basliklar.Yuvarlama  
	+
	ISNULL
	(
		(
			SELECT SUM
				   (
					h3.Tutar
					*
					--KAPATILMALI
					(
						100
						/
						(
							100
							+
							h3.KDVOrani
						)
					)
					*
					(
						1
						+
						h3.KDVOrani
						/
						100
					)
					*
					--KAPATILMALI
					(
						1
						-
						A.IskontoOran
						/
						100
					)
				   ) 
			FROM 
				Hareketler AS h3 WITH(NOLOCK)
				left join AlisFaturasiIskontoOranlari as A WITH(NOLOCK) on A.Ind = h3.BaslikInd 
			WHERE 
				h3.BaslikInd = Basliklar.Ind 
				AND h3.TipInd = 57
		)
		, 0
	) AS Tutar, 
	ISNULL
	(
		ISNULL
		(
			SUM
			(
				dbo.Hareketler.Iskonto
			)
			, 0
		)
		+
		(dbo.Basliklar.Iskonto)
		, 0
	) ToplamIskonto,
	dbo.Basliklar.Owner,
	dbo.Basliklar.FaturaIadeMi,
	dbo.Basliklar.TesisatKodu,
	dbo.Basliklar.Aktarildi,
	dbo.Basliklar.PlakaNo
	FROM 
		dbo.Basliklar WITH(NOLOCK)
		INNER JOIN dbo.Hareketler WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
		LEFT JOIN AlisFaturasiIskontoOranlari as A  WITH(NOLOCK) on A.Ind = Basliklar.Ind
	WHERE 
		(dbo.Basliklar.Aktif IS NULL OR dbo.Basliklar.Aktif = 1) AND 
		(dbo.Basliklar.TipInd = 101) AND 
		(dbo.Hareketler.TipInd = 3 or dbo.Hareketler.TipInd = 57)
	GROUP BY 
		dbo.Basliklar.Ind, 
		dbo.Basliklar.BelgeNo, 
		dbo.Basliklar.Tarih,
		dbo.Basliklar.OdemeTarihi,
		dbo.Basliklar.Aciklama, 
		dbo.Basliklar.HesapInd, 
		dbo.Basliklar.HesapKodu, 
		dbo.Basliklar.HesapAdi, 
		dbo.Basliklar.Iskonto, 
		dbo.Basliklar.Owner, 
		dbo.Basliklar.Yuvarlama,
		dbo.Basliklar.FaturaIadeMi,
		dbo.Basliklar.TesisatKodu,
		dbo.Basliklar.Aktarildi,
		dbo.Basliklar.PlakaNo,
                dbo.Basliklar.FFarkiFaturaInd

GO
CREATE VIEW [dbo].[AktifMsatisKontrol]
AS
SELECT     S.Owner, P.Ind, P.TipInd, S.KullaniciInd, P.StokKodu, P.Fiyat
FROM         dbo.SatisKasasi AS S WITH(NOLOCK) LEFT OUTER JOIN
                      dbo.Hareketler AS P WITH(NOLOCK) ON S.IslemInd = P.Ind
WHERE     (S.IsYeniSatis = 'true') AND (S.Tablo = N'Hareketler') AND (P.Ind IS NOT NULL)

GO
CREATE VIEW [dbo].[AktifSatisFaturalari]
AS
SELECT     
	VeresiyedenGelenFaturaBasliklar.Ind,
	1 FaturaTipi,
	VeresiyedenGelenFaturaBasliklar.BelgeNo, 
	VeresiyedenGelenFaturaBasliklar.Tarih, 
	VeresiyedenGelenFaturaBasliklar.OdemeTarihi, 
	VeresiyedenGelenFaturaBasliklar.Aciklama, 
	VeresiyedenGelenFaturaBasliklar.HesapInd, 
	VeresiyedenGelenFaturaBasliklar.HesapKodu, 
	VeresiyedenGelenFaturaBasliklar.HesapAdi,
	VeresiyedenGelenFaturaBasliklar.NetToplam
	+
	CASE WHEN ((SELECT COUNT(*) FROM Hareketler as h3 WITH(NOLOCK) WHERE h3.BaslikInd =VeresiyedenGelenFaturaBasliklar.Ind And h3.TipInd = 511) > 0 )
	THEN 
	(SELECT SUM(Tutar) FROM Hareketler as h3 WITH(NOLOCK) WHERE h3.BaslikInd =VeresiyedenGelenFaturaBasliklar.Ind And h3.TipInd = 511)   
	ELSE 0 END as Tutar,
	NULL AS IskontoOrani,
	VeresiyedenGelenFaturaBasliklar.ToplamIskonto ToplamIskonto,
	dbo.Basliklar.Yuvarlama,
	dbo.Hareketler.Owner,
	dbo.Basliklar.FaturaIadeMi,
	dbo.Basliklar.TesisatKodu,
	dbo.Basliklar.Aktarildi,
	dbo.Basliklar.FFarkiFaturaInd
FROM    
	VeresiyedenGelenFaturaBasliklar WITH(NOLOCK)
LEFT JOIN 
	dbo.Hareketler WITH(NOLOCK) ON VeresiyedenGelenFaturaBasliklar.Ind = dbo.Hareketler.BaslikInd
LEFT JOIN 
	dbo.Basliklar WITH(NOLOCK) ON VeresiyedenGelenFaturaBasliklar.Ind = dbo.Basliklar.Ind

GROUP BY 
	VeresiyedenGelenFaturaBasliklar.Ind,
	VeresiyedenGelenFaturaBasliklar.TipInd,
	VeresiyedenGelenFaturaBasliklar.BelgeNo, 
	VeresiyedenGelenFaturaBasliklar.Tarih, 
	VeresiyedenGelenFaturaBasliklar.OdemeTarihi, 
	VeresiyedenGelenFaturaBasliklar.Aciklama, 
	VeresiyedenGelenFaturaBasliklar.HesapInd, 
	VeresiyedenGelenFaturaBasliklar.HesapKodu, 
	VeresiyedenGelenFaturaBasliklar.HesapAdi,
	VeresiyedenGelenFaturaBasliklar.Iskonto,
	dbo.Basliklar.Yuvarlama,
	Hareketler.Owner,
	VeresiyedenGelenFaturaBasliklar.NetToplam,
	VeresiyedenGelenFaturaBasliklar.ToplamIskonto,
	Basliklar.FaturaIadeMi,
	Basliklar.TesisatKodu,
	dbo.Basliklar.Aktarildi,
	dbo.Basliklar.FFarkiFaturaInd

UNION ALL

SELECT     
		Basliklar.Ind,
		2 FaturaTipi,
		Basliklar.BelgeNo, 
		Basliklar.Tarih, 
		Basliklar.OdemeTarihi, 
		Basliklar.Aciklama, 
		Basliklar.HesapInd, 
		Basliklar.HesapKodu, 
        Basliklar.HesapAdi,
        
		ISNULL
		(
			SUM((CASE WHEN Hareketler.OTVTutar IS NULL THEN Hareketler.Miktar*Hareketler.Fiyat ELSE Hareketler.Miktar*(Hareketler.Fiyat +Hareketler.OTVTutar) END -Hareketler.Iskonto) * CASE WHEN KDVOrani > 0 THEN (1+KDVOrani/100) ELSE 1 END) 
			* 
			(CASE WHEN basliklar.Iskonto > 0 THEN (
				1-basliklar.Iskonto/(
										SUM(
												CASE Hareketler.TipInd
													WHEN 511 THEN CASE WHEN Hareketler.Tutar >0 THEN((Hareketler.Tutar) / (1+KDVOrani/100)) ELSE 0 END
													WHEN 6 THEN CASE WHEN Hareketler.OTVTutar IS NULL AND (Hareketler.Miktar * Hareketler.Fiyat - Hareketler.Iskonto)>0 THEN (Hareketler.Miktar * Hareketler.Fiyat - Hareketler.Iskonto) 
																	 WHEN Hareketler.OTVTutar IS NOT NULL AND(Hareketler.Miktar * (Hareketler.Fiyat + Hareketler.OTVTutar) - Hareketler.Iskonto)>0 THEN (Hareketler.Miktar * (Hareketler.Fiyat + Hareketler.OTVTutar) - Hareketler.Iskonto) 
																ELSE 0 END
													ELSE 0
												END
										   )
			)
			)ELSE 1 END) 
			,
			0
		)
		+
		ISNULL
		(
			(
				SUM(CASE Hareketler.TipInd WHEN 511 THEN Hareketler.Tutar ELSE 0 END) 
				*	CASE WHEN basliklar.Iskonto > 0 THEN	
				(1 - (basliklar.Iskonto/(
											SUM(
													CASE Hareketler.TipInd
														WHEN 511 THEN CASE WHEN Hareketler.Tutar >0 THEN((Hareketler.Tutar) / (1+KDVOrani/100)) ELSE 0 END
														WHEN 6 THEN CASE WHEN Hareketler.OTVTutar IS NULL AND (Hareketler.Miktar * Hareketler.Fiyat - Hareketler.Iskonto)>0 THEN (Hareketler.Miktar * Hareketler.Fiyat - Hareketler.Iskonto) 
																		 WHEN Hareketler.OTVTutar IS NOT NULL AND (Hareketler.Miktar * (Hareketler.Fiyat + Hareketler.OTVTutar) - Hareketler.Iskonto)>0 THEN (Hareketler.Miktar * (Hareketler.Fiyat +Hareketler.OTVTutar)- Hareketler.Iskonto) 
																	ELSE 0 END
														ELSE 0
													END
												)
										
										))) ELSE 1 END
			) 
			+
			Basliklar.Yuvarlama
		,
			0
		)
		as Tutar,
		NULL AS IskontoOrani,
		SUM(ISNULL(dbo.Hareketler.Iskonto,0))+(Basliklar.Iskonto) ToplamIskonto,
		dbo.Basliklar.Yuvarlama,
		dbo.Hareketler.Owner,
		dbo.Basliklar.FaturaIadeMi,
		dbo.Basliklar.TesisatKodu,
		dbo.Basliklar.Aktarildi,
		dbo.Basliklar.FFarkiFaturaInd
FROM    Basliklar WITH(NOLOCK) INNER JOIN dbo.Hareketler WITH(NOLOCK)
		ON Basliklar.Ind = dbo.Hareketler.BaslikInd
WHERE	(Basliklar.Aktif IS NULL OR Basliklar.Aktif = 1)
		AND Basliklar.TipInd=102 AND (Hareketler.TipInd=6 OR Hareketler.TipInd= 511) AND (Basliklar.DurumInd <>12 or Basliklar.DurumInd IS NULL)
GROUP BY 
		Basliklar.Ind,
		Basliklar.TipInd,
		Basliklar.BelgeNo, 
		Basliklar.Tarih, 
		Basliklar.OdemeTarihi, 
		Basliklar.Aciklama, 
		Basliklar.HesapInd, 
		Basliklar.HesapKodu, 
        Basliklar.HesapAdi,
		Basliklar.Iskonto,
		dbo.Basliklar.Yuvarlama,
		dbo.Hareketler.Owner,
		Basliklar.Yuvarlama,
		Basliklar.FaturaIadeMi,
		Basliklar.TesisatKodu,
		dbo.Basliklar.Aktarildi,
		dbo.Basliklar.FFarkiFaturaInd

GO



GO
CREATE VIEW [dbo].[AktifSatisFaturalariVardiyaIrsaliyelerindenGelen]
AS
SELECT     
		VeresiyedenGelenFaturaBasliklar.Ind,
		1 FaturaTipi,
		VeresiyedenGelenFaturaBasliklar.BelgeNo, 
		VeresiyedenGelenFaturaBasliklar.Tarih, 
		VeresiyedenGelenFaturaBasliklar.OdemeTarihi, 
		VeresiyedenGelenFaturaBasliklar.Aciklama, 
		VeresiyedenGelenFaturaBasliklar.HesapInd, 
		VeresiyedenGelenFaturaBasliklar.HesapKodu, 
        VeresiyedenGelenFaturaBasliklar.HesapAdi,
		VeresiyedenGelenFaturaBasliklar.NetToplam
		+
		CASE WHEN ((SELECT COUNT(*) FROM Hareketler as h3 WITH(NOLOCK) WHERE h3.BaslikInd =VeresiyedenGelenFaturaBasliklar.Ind And h3.TipInd = 511) > 0 )
		THEN 
		(SELECT SUM(Tutar) FROM Hareketler as h3 WITH(NOLOCK) WHERE h3.BaslikInd =VeresiyedenGelenFaturaBasliklar.Ind And h3.TipInd = 511)   
		ELSE 0 END as Tutar,
		NULL AS IskontoOrani,
		VeresiyedenGelenFaturaBasliklar.ToplamIskonto ToplamIskonto,
		dbo.Basliklar.Yuvarlama,
		dbo.Hareketler.Owner,
		dbo.Basliklar.FaturaIadeMi,
		dbo.Basliklar.TesisatKodu,
		dbo.Basliklar.Aktarildi,
		dbo.Basliklar.FFarkiFaturaInd
		
FROM    
VeresiyedenGelenFaturaBasliklar WITH(NOLOCK)
LEFT JOIN dbo.Hareketler WITH(NOLOCK) ON VeresiyedenGelenFaturaBasliklar.Ind = dbo.Hareketler.BaslikInd
LEFT JOIN dbo.Basliklar WITH(NOLOCK) ON VeresiyedenGelenFaturaBasliklar.Ind = dbo.Basliklar.Ind
WHERE dbo.Basliklar.Ind IN (SELECT FaturaInd FROM Basliklar WITH(NOLOCK) WHERE TipInd=111)

GROUP BY 
		VeresiyedenGelenFaturaBasliklar.Ind,
		VeresiyedenGelenFaturaBasliklar.TipInd,
		VeresiyedenGelenFaturaBasliklar.BelgeNo, 
		VeresiyedenGelenFaturaBasliklar.Tarih, 
		VeresiyedenGelenFaturaBasliklar.OdemeTarihi, 
		VeresiyedenGelenFaturaBasliklar.Aciklama, 
		VeresiyedenGelenFaturaBasliklar.HesapInd, 
		VeresiyedenGelenFaturaBasliklar.HesapKodu, 
        VeresiyedenGelenFaturaBasliklar.HesapAdi,
		VeresiyedenGelenFaturaBasliklar.Iskonto,
		dbo.Basliklar.Yuvarlama,
		Hareketler.Owner,
		VeresiyedenGelenFaturaBasliklar.NetToplam,
		VeresiyedenGelenFaturaBasliklar.ToplamIskonto,
		Basliklar.FaturaIadeMi,
		Basliklar.TesisatKodu,
		dbo.Basliklar.Aktarildi,
		dbo.Basliklar.FFarkiFaturaInd

UNION ALL

SELECT     
		Basliklar.Ind,
		2 FaturaTipi,
		Basliklar.BelgeNo, 
		Basliklar.Tarih, 
		Basliklar.OdemeTarihi, 
		Basliklar.Aciklama, 
		Basliklar.HesapInd, 
		Basliklar.HesapKodu, 
        Basliklar.HesapAdi,
        
		ISNULL
		(
			SUM((Hareketler.Miktar*Hareketler.Fiyat-Hareketler.Iskonto) * CASE WHEN KDVOrani > 0 THEN (1+KDVOrani/100) ELSE 1 END) 
			* 
			(CASE WHEN basliklar.Iskonto > 0 THEN (
				1-basliklar.Iskonto/(
										SUM(
												CASE Hareketler.TipInd
													WHEN 511 THEN CASE WHEN Hareketler.Tutar >0 THEN((Hareketler.Tutar) / (1+KDVOrani/100)) ELSE 0 END
													WHEN 6 THEN CASE WHEN(Hareketler.Miktar * Hareketler.Fiyat - Hareketler.Iskonto)>0 THEN (Hareketler.Miktar * Hareketler.Fiyat - Hareketler.Iskonto) ELSE 0 END
													ELSE 0
												END
										   )
			)
			)ELSE 1 END) 
			,
			0
		)
		+
		ISNULL
		(
			(
				SUM(CASE Hareketler.TipInd WHEN 511 THEN Hareketler.Tutar ELSE 0 END) 
				*	CASE WHEN basliklar.Iskonto > 0 THEN	
				(1 - (basliklar.Iskonto/(
											SUM(
													CASE Hareketler.TipInd
														WHEN 511 THEN CASE WHEN Hareketler.Tutar >0 THEN((Hareketler.Tutar) / (1+KDVOrani/100)) ELSE 0 END
														WHEN 6 THEN CASE WHEN(Hareketler.Miktar * Hareketler.Fiyat - Hareketler.Iskonto)>0 THEN (Hareketler.Miktar * Hareketler.Fiyat - Hareketler.Iskonto) ELSE 0 END
														ELSE 0
													END
												)
										
										))) ELSE 1 END
			) 
			+
			Basliklar.Yuvarlama
		,
			0
		)
		as Tutar,
		NULL AS IskontoOrani,
		SUM(ISNULL(dbo.Hareketler.Iskonto,0))+(Basliklar.Iskonto) ToplamIskonto,
		dbo.Basliklar.Yuvarlama,
		dbo.Hareketler.Owner,
		dbo.Basliklar.FaturaIadeMi,
		dbo.Basliklar.TesisatKodu,
		dbo.Basliklar.Aktarildi,
		dbo.Basliklar.FFarkiFaturaInd
FROM    Basliklar WITH(NOLOCK) INNER JOIN dbo.Hareketler WITH(NOLOCK)
		ON Basliklar.Ind = dbo.Hareketler.BaslikInd
WHERE	(Basliklar.Aktif IS NULL OR Basliklar.Aktif = 1)
		AND Basliklar.TipInd=102 AND (Hareketler.TipInd=6 OR Hareketler.TipInd= 511) AND (Basliklar.DurumInd <>12 or Basliklar.DurumInd IS NULL)
		AND dbo.Basliklar.Ind IN (SELECT FaturaInd FROM Basliklar WITH(NOLOCK) WHERE TipInd=111)
GROUP BY 
		Basliklar.Ind,
		Basliklar.TipInd,
		Basliklar.BelgeNo, 
		Basliklar.Tarih, 
		Basliklar.OdemeTarihi, 
		Basliklar.Aciklama, 
		Basliklar.HesapInd, 
		Basliklar.HesapKodu, 
        Basliklar.HesapAdi,
		Basliklar.Iskonto,
		dbo.Basliklar.Yuvarlama,
		dbo.Hareketler.Owner,
		Basliklar.Yuvarlama,
		Basliklar.FaturaIadeMi,
		Basliklar.TesisatKodu,
		dbo.Basliklar.Aktarildi,
		dbo.Basliklar.FFarkiFaturaInd

GO


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AktifVeresiyeFisiToplamlari]
AS
	SELECT
		NULL AS Owner,
		VardiyaKartInd,
		SUM
		(
			AktifVeresiyeFisi.Tutar
		) as Tutar
	FROM 
		AktifVeresiyeFisi WITH(NOLOCK)
	WHERE
		TipInd = 111
	GROUP BY
		VardiyaKartInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[AktifVeresiyeFisLitreDahil]
AS
SELECT     
	NULL AS Owner
	, dbo.Basliklar.TipInd, 
	dbo.Basliklar.VardiyaKartInd, 
	SUM(dbo.Hareketler.Miktar) AS Miktar
FROM
    dbo.Basliklar WITH(NOLOCK)
	INNER JOIN dbo.Hareketler WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
	LEFT JOIN dbo.Basliklar as b WITH(NOLOCK) ON b.Ind = dbo.Basliklar.VardiyaKartInd
	LEFT JOIN AkaryakitDepolariMuhteviyatListesi ADML WITH(NOLOCK) ON ADML.StokInd=dbo.Hareketler.StokInd AND ADML.Owner=Hareketler.Owner
WHERE     
		dbo.Basliklar.TipInd = 110 
		OR dbo.Basliklar.TipInd = 111
GROUP BY 
		dbo.Basliklar.TipInd, 
		dbo.Basliklar.VardiyaKartInd
GO

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AktifVeresiyeFisLitreDahilToplamlari]
AS
	SELECT
		NULL AS Owner,
		VardiyaKartInd,
		SUM
		(
			AktifVeresiyeFisLitreDahil.miktar
		) as Miktar
	FROM 
		AktifVeresiyeFisLitreDahil WITH(NOLOCK)
	WHERE
		TipInd = 111
	GROUP BY
		VardiyaKartInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[AlisFiyatlari]
AS

SELECT * FROM 
(
SELECT StokInd, 
  ROW_NUMBER() OVER(
    PARTITION BY StokInd 
    ORDER BY Ind DESC) AS Position, 
  Fiyat
FROM Hareketler WITH(NOLOCK)
WHERE (TipInd = 3) 
) AS Result
WHERE Position=1

GO
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [dbo].[AlisFiyatlariForDesktopSatis]
AS

SELECT * FROM 
(
SELECT Owner, StokInd, 
  ROW_NUMBER() OVER(
    PARTITION BY StokInd 
    ORDER BY Ind DESC) AS Position, 
  Fiyat
FROM Hareketler WITH(NOLOCK)
WHERE (TipInd = 3) 
) AS Result
WHERE Position=1







GO
CREATE VIEW [dbo].[AlisIrsaliyeFaturaOzet]
AS
SELECT     
	dbo.Basliklar.Ind,  
	dbo.Basliklar.TipInd, 
	dbo.Basliklar.Owner, 
	dbo.Basliklar.HesapInd, 
	dbo.Basliklar.BelgeNo, 
	dbo.Basliklar.Tarih,
	dbo.Basliklar.Aciklama,
	dbo.Basliklar.PlakaNo,
    dbo.Hareketler.StokInd,
	SUM(dbo.Hareketler.Miktar) AS Miktar,
	SUM(dbo.Hareketler.Miktar * dbo.Hareketler.Fiyat) AS Tutar
FROM	dbo.Basliklar WITH(NOLOCK) INNER JOIN dbo.Hareketler WITH(NOLOCK)
	ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
WHERE     
	dbo.Basliklar.Owner IS NOT NULL AND (dbo.Basliklar.TipInd IN(101,103) AND (dbo.Hareketler.TipInd IN(2,3))) 

GROUP BY 
	dbo.Basliklar.Ind, 
	dbo.Basliklar.Owner,
    dbo.Basliklar.HesapInd, 
	dbo.Basliklar.BelgeNo, 
	dbo.Basliklar.Tarih,
	dbo.Basliklar.TipInd,
	dbo.Basliklar.Aciklama,
	dbo.Basliklar.PlakaNo,
	dbo.Hareketler.StokInd	

GO

GO
CREATE VIEW [dbo].[AlisIrsaliyesiOzet]
AS
SELECT     
	dbo.Basliklar.Ind,  
	dbo.Basliklar.TipInd, 
	dbo.Basliklar.Owner, 
	dbo.Basliklar.HesapInd, 
	dbo.Basliklar.BelgeNo, 
	dbo.Basliklar.Tarih, 
	SUM(dbo.Hareketler.Miktar * dbo.Hareketler.Fiyat) AS Tutar
FROM	dbo.Basliklar WITH(NOLOCK) INNER JOIN dbo.Hareketler WITH(NOLOCK)
	ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
WHERE     
	(dbo.Basliklar.TipInd = 103) AND (dbo.Hareketler.TipInd = 2) 
	AND (dbo.Basliklar.DurumInd IS NULL) AND (dbo.Hareketler.DurumInd IS NULL)
GROUP BY 
	dbo.Basliklar.Ind, 
	dbo.Basliklar.Owner,
    dbo.Basliklar.HesapInd, 
	dbo.Basliklar.BelgeNo, 
	dbo.Basliklar.Tarih,
	dbo.Basliklar.TipInd	
GO
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[BankaBakiyeListesi]
AS
SELECT
	Hesaplar.Ind,
	Hesaplar.Owner,
	Hesaplar.HesapKodu,
	Hesaplar.HesapAdi,
	SUM(h.Yatirilan-h.Cekilen) as Bakiye
FROM Hesaplar WITH(NOLOCK)
LEFT JOIN BankaHesapHareketleri as h WITH(NOLOCK) ON h.BankaHesapInd = Hesaplar.Ind
WHERE Hesaplar.TipInd = 202
GROUP BY
	Hesaplar.Ind,
	Hesaplar.Owner,
	Hesaplar.HesapKodu,
	Hesaplar.HesapAdi
	
GO
CREATE VIEW [dbo].[BankaHareketleri]
AS
		SELECT      H.Ind,
				H.Owner,
				H.TipInd As TipInd,
				H.BankaHesapInd As BankaHesapInd,
				H.BankaHesapKodu As BankaHesapKodu,      
				H.BankaHesapAdi As BankaHesapAdi,
				H.CariHesapKodu As KarsiHesapKodu,
				H.CariHesapAdi As KarsiHesapAdi,
				'' AS KarsiHesapMuhasebeKodu,
				H.GirisTarihi As Tarih,
				H.Tutar As Tutar,
				H.Aciklama As Aciklama,
				Hs.BankaAdi As BankaAdi,
				'' As HedefBankaAdi,
				Hs.ParaBirimi As BankaParaBirimi,
				Hs2.ParaBirimi As KarsiHesapParaBirimi,
				ISNULL(Hs.MuhasebeKodu, '') As MuhasebeKodu,
				ISNULL(Hs2.MuhasebeKodu, '') As MuhasebeKodu2,
				 H.GelirInd,
				 H.GiderInd,
				H.Aktarildi 
		  FROM Hareketler As H WITH(NOLOCK)
				LEFT JOIN Hesaplar Hs WITH(NOLOCK) On Hs.Ind = H.BankaHesapInd
				LEFT JOIN Hesaplar Hs2 WITH(NOLOCK) On Hs2.Ind = H.CariHesapInd
		  WHERE H.TipInd = 12

		  UNION ALL

	SELECT      H.Ind,
				H.Owner,
				H.TipInd As TipInd,
				H.BankaHesapInd As BankaHesapInd,
				H.BankaHesapKodu As BankaHesapKodu,      
				H.BankaHesapAdi As BankaHesapAdi,
				H.CariHesapKodu As KarsiHesapKodu,
				H.CariHesapAdi As KarsiHesapAdi,
				'' AS KarsiHesapMuhasebeKodu,
				H.GirisTarihi As Tarih,
				H.Tutar As Tutar,
				H.Aciklama As Aciklama,
				Hs.BankaAdi As BankaAdi,
				'' As HedefBankaAdi,
				Hs.ParaBirimi As BankaParaBirimi,
				Hs2.ParaBirimi As KarsiHesapParaBirimi,
				ISNULL(Hs.MuhasebeKodu, '') As MuhasebeKodu,
				ISNULL(Hs2.MuhasebeKodu, '') As MuhasebeKodu2,
				 H.GelirInd,
				  H.GiderInd,
				H.Aktarildi 
		  FROM Hareketler As H WITH(NOLOCK)
				LEFT JOIN Hesaplar Hs WITH(NOLOCK) On Hs.Ind = H.BankaHesapInd
				LEFT JOIN Hesaplar Hs2 WITH(NOLOCK) On Hs2.Ind = H.CariHesapInd
		  WHERE H.TipInd = 15

		  UNION ALL

	SELECT      H.Ind,
				H.Owner,
				H.TipInd As TipInd,
				H.BankaHesapInd As BankaHesapInd,
				H.BankaHesapKodu As BankaHesapKodu,      
				H.BankaHesapAdi As BankaHesapAdi,
				'' As KarsiHesapKodu,
				'' As KarsiHesapAdi,
				'' AS KarsiHesapMuhasebeKodu,
				H.GirisTarihi As Tarih,
				H.Tutar As Tutar,
				H.Aciklama As Aciklama,
				Hs.BankaAdi As BankaAdi,
				'' As HedefBankaAdi,
				Hs.ParaBirimi As BankaParaBirimi,
				H.ParaBirimi As KarsiHesapParaBirimi,
				ISNULL(Hs.MuhasebeKodu, '') As MuhasebeKodu,
				'' As MuhasebeKodu2,
				 H.GelirInd,
				  H.GiderInd,
				H.Aktarildi 
		  FROM Hareketler As H WITH(NOLOCK)
				LEFT JOIN Hesaplar Hs WITH(NOLOCK) On Hs.Ind = H.BankaHesapInd
		  WHERE H.TipInd = 17

		  UNION ALL

	SELECT      H.Ind,
				H.Owner,
				H.TipInd As TipInd,
				H.BankaHesapInd As BankaHesapInd,
				H.BankaHesapKodu As BankaHesapKodu,      
				H.BankaHesapAdi As BankaHesapAdi,
				'' As KarsiHesapKodu,
				'' As KarsiHesapAdi,
				'' AS KarsiHesapMuhasebeKodu,
				H.GirisTarihi As Tarih,
				H.Tutar As Tutar,
				H.Aciklama As Aciklama,
				Hs.BankaAdi As BankaAdi,
				'' As HedefBankaAdi,
				Hs.ParaBirimi As BankaParaBirimi,
				H.ParaBirimi As KarsiHesapParaBirimi,
				ISNULL(Hs.MuhasebeKodu, '') As MuhasebeKodu,
				'' As MuhasebeKodu2,
				 H.GelirInd,
				  H.GiderInd,
				H.Aktarildi 
		  FROM Hareketler As H WITH(NOLOCK)
				LEFT JOIN Hesaplar Hs WITH(NOLOCK) On Hs.Ind = H.BankaHesapInd
		  WHERE H.TipInd = 19
	      
		  UNION ALL
	      
	SELECT      H.Ind,
				H.Owner,
				H.TipInd As TipInd,
				H.BankaHesapInd As BankaHesapInd,
				H.BankaHesapKodu As BankaHesapKodu,      
				H.BankaHesapAdi As BankaHesapAdi,
				H.HedefBankaHesapKodu As KarsiHesapKodu,
				H.HedefBankaHesapAdi As KarsiHesapAdi,
				Hs2.MuhasebeKodu AS KarsiHesapMuhasebeKodu,
				H.GirisTarihi As Tarih,
				H.Tutar As Tutar,
				H.Aciklama As Aciklama,
				Hs.BankaAdi As BankaAdi,
				Hs2.BankaAdi As HedefBankaAdi,
				Hs.ParaBirimi As BankaParaBirimi,
				Hs2.ParaBirimi As KarsiHesapParaBirimi,
				ISNULL(Hs.MuhasebeKodu, '') As MuhasebeKodu,
				ISNULL(Hs2.MuhasebeKodu, '') As MuhasebeKodu2,
				 H.GelirInd,
				  H.GiderInd,
				H.Aktarildi 
		  FROM Hareketler As H WITH(NOLOCK)
				LEFT JOIN Hesaplar Hs WITH(NOLOCK) On Hs.Ind = H.BankaHesapInd
				LEFT JOIN Hesaplar Hs2 WITH(NOLOCK) On Hs2.Ind = H.HedefBankaInd
		  WHERE H.TipInd = 21

		  UNION ALL

	SELECT    H.Ind,
			  H.Owner,
			  H.TipInd As TipInd,
			  H.BankaHesapInd As BankaHesapInd,
			  H.BankaHesapKodu As BankaHesapKodu,      
			  H.BankaHesapAdi As BankaHesapAdi,
			  Hs2.HesapKodu As KarsiHesapKodu,
			  Hs2.HesapAdi As KarsiHesapAdi,
			  Hs2.MuhasebeKodu AS KarsiHesapMuhasebeKodu,
			  H.GirisTarihi As Tarih,
			  H.Tutar As Tutar,
			  H.Aciklama As Aciklama,
			  Hs.BankaAdi As BankaAdi,
			  '' As HedefBankaAdi,
			  Hs.ParaBirimi As BankaParaBirimi,
			  'TL' As KarsiHesapParaBirimi,
			  ISNULL(Hs.MuhasebeKodu, '') As MuhasebeKodu,
			  '' As MuhasebeKodu2,
			   H.GelirInd,
			    H.GiderInd,
			  H.Aktarildi 
		FROM Hareketler As H WITH(NOLOCK)
			  LEFT JOIN Hesaplar Hs WITH(NOLOCK) On Hs.Ind = H.BankaHesapInd
			  LEFT JOIN Hesaplar Hs2 WITH(NOLOCK) On Hs2.Ind = H.GelirInd
		WHERE H.TipInd = 27

		UNION ALL

	SELECT    H.Ind,
			  H.Owner,
			  H.TipInd As TipInd,
			  H.BankaHesapInd As BankaHesapInd,
			  H.BankaHesapKodu As BankaHesapKodu,      
			  H.BankaHesapAdi As BankaHesapAdi,
			  Hs2.HesapKodu As KarsiHesapKodu,
			  Hs2.HesapAdi As KarsiHesapAdi,
			  Hs2.MuhasebeKodu AS KarsiHesapMuhasebeKodu,
			  H.GirisTarihi As Tarih,
			  H.Tutar As Tutar,
			  H.Aciklama As Aciklama,
			  Hs.BankaAdi As BankaAdi,
			  '' As HedefBankaAdi,
			  Hs.ParaBirimi As BankaParaBirimi,
			  'TL' As KarsiHesapParaBirimi,
			  ISNULL(Hs.MuhasebeKodu, '') As MuhasebeKodu,
			  '' As MuhasebeKodu2,
			   H.GelirInd,
			    H.GiderInd,
			  H.Aktarildi 
		FROM Hareketler As H WITH(NOLOCK)
			  LEFT JOIN Hesaplar Hs WITH(NOLOCK) On Hs.Ind = H.BankaHesapInd
			  LEFT JOIN Hesaplar Hs2 WITH(NOLOCK) On Hs2.Ind = H.GiderInd
		WHERE H.TipInd = 28

GO
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[BaslikMatrahForIskontoAlisHesapButun]
AS
	SELECT 
		b.Ind as BaslikInd, 
		SUM(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto)
		+
		ISNULL((SELECT SUM(Tutar / (1 + KDVOrani / 100)) FROM Hareketler WHERE BaslikInd = b.Ind AND TipInd = 57), 0)
		as Matrah
	FROM 
		Hareketler AS h WITH(NOLOCK)
		LEFT JOIN Basliklar AS b ON h.BaslikInd = b.Ind 
	WHERE 
		h.TipInd = 3
	GROUP BY
		b.Ind
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[BaslikMatrahForIskontoSatisHesapButun]
AS
	SELECT 
		Basliklar.Ind as BaslikInd, 
		SUM(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto) as Matrah
	FROM 
		Hareketler WITH(NOLOCK)
		LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind 
	WHERE 
		Hareketler.TipInd = 6
	GROUP BY
		Basliklar.Ind
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[BaslikMatrahTutari]
AS
		SELECT 
			Basliklar.Ind as BaslikInd, 
			SUM(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto) as Matrah
		FROM Hareketler
		LEFT JOIN Basliklar ON Hareketler.BaslikInd=Basliklar.Ind 
		LEFT JOIN Tipler ON Basliklar.TipInd=Tipler.Ind
		WHERE Hareketler.TipInd IN (3,6,74)
		GROUP BY
			Basliklar.Ind
GO
CREATE VIEW [dbo].[BelgeDetaylari]
AS
SELECT     
	Hareketler.Owner, 
	Hareketler.Ind, 
	Hareketler.TipInd, 
	Hareketler.BaslikInd, 
	Basliklar.Tarih, 
	Basliklar.BelgeNo, 
	Basliklar.PlakaNo, 
	Hareketler.StokInd, 
	Hareketler.StokKodu, 
	Hareketler.StokAdi, 
	Hareketler.Aciklama, 
	Hareketler.Miktar, 
	Hareketler.Carpan, 
	Hareketler.Fiyat, 
	Hareketler.YazarKasaFisNo, 
	CASE WHEN ISNULL(Hareketler.Tutar,0) = 0
	THEN Hareketler.Miktar * Hareketler.Carpan * Hareketler.Fiyat
	ELSE Hareketler.Tutar END AS Tutar,
	Hareketler.Iskonto, 
	Hareketler.KDVOrani, 
	Hareketler.AnaBirimAdi, 
	Hareketler.BirimAdi, 
	Hareketler.NetMiktar 
FROM Hareketler WITH(NOLOCK)
LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.BaslikInd = Basliklar.Ind
WHERE Hareketler.TipInd IN (2,5,3,6,37)


GO


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[BorcluCarilerinSatisFaturalari]
AS
SELECT 
	c.Ind as HesapInd,
	c.Owner,
	c.HesapKodu,
	c.HesapAdi,
	c.Bakiye,
	f.Alacak as FaturaTutar,
	(CASE WHEN(f.OdemeTarihi IS NOT NULL)
	THEN f.OdemeTarihi
	ELSE f.GirisTarihi
	END) as OdemeTarihi,
	h.OdemeVadesi
FROM CariBakiyeListesi as c WITH(NOLOCK)
LEFT JOIN FaturaOzet2 as f WITH(NOLOCK) ON f.HesapInd = c.Ind AND f.TipInd = 6
LEFT JOIN Hesaplar as h WITH(NOLOCK) ON h.Ind = c.Ind
WHERE c.Bakiye>0


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[BosVardiyalar] (StokInd, Owner,   TipInd, SayacKodu ,SayacAdi, SayacEndeksi, Fiyat)
 AS SELECT h.StokInd, hd.Owner, hd.TipInd, hd.SayacKodu, hd.SayacAdi, hd.SayacEndeksi, sd.Tutar from Hesaplar h WITH(NOLOCK)
 inner join HesapDetaylari hd WITH(NOLOCK) on hd.DepoInd=h.Ind
 inner join StokDetaylari sd WITH(NOLOCK) on sd.StokInd=h.StokInd and hd.Owner=sd.Owner
 WHERE sd.IsAnaFiyat = 1
GO


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CariGenelCekliRiskLimitListesi]
AS

SELECT     
		h.Owner, 
		h.Ind, 
		h.RiskLimiti, 
		h.HesapKodu, 
		SUBSTRING(h.HesapAdi,1,25) as HesapAdi, 
		SUM(c.Borc) AS Borc, 
		SUM(c.Alacak) AS Alacak, 
		SUM(c.Borc - c.Alacak) AS Bakiye,
		SUM(CASE WHEN (c.TipInd IN (11) AND c.DurumInd IN (4,7)) THEN (c.Alacak) ELSE 0 END) AS AlinanCek, 
		SUM(CASE WHEN (c.TipInd IN (14) AND c.DurumInd = 4 ) THEN (c.Borc) ELSE 0 END)   AS VerilenCek, 
		ISNULL(irs.Tutar, 0) AS IrsaliyeToplam, 
		SUM(c.Borc - c.Alacak) + ISNULL(irs.Tutar, 0) + SUM(CASE WHEN (c.TipInd IN (11) AND c.DurumInd IN (4,7)) THEN (c.Alacak) ELSE 0 END)  AS GenelToplam,
		(CASE WHEN(h.RiskLimiti>0)
			THEN ((SUM(c.Borc - c.Alacak) + ISNULL(irs.Tutar, 0) + SUM(CASE WHEN (c.TipInd IN (11) AND c.DurumInd IN (4,7)) THEN (c.Alacak) ELSE 0 END)) / h.RiskLimiti) * 100 
			ELSE 0.00
			END)as RiskOrani
FROM         dbo.Hesaplar AS h WITH(NOLOCK) LEFT OUTER JOIN
                      dbo.CariHesapHareketleri AS c WITH(NOLOCK) ON c.CariHesapInd = h.Ind LEFT OUTER JOIN
                      dbo.CariIrsaliyeTutarListesi AS irs WITH(NOLOCK) ON irs.Ind = h.Ind
WHERE     (h.TipInd = 201)
GROUP BY h.Ind, h.HesapKodu, h.HesapAdi, h.RiskLimiti, irs.Tutar, h.Owner


GO
CREATE VIEW CariHesaplarPlaka
AS
SELECT H.*,HD.Plaka FROM Hesaplar H WITH(NOLOCK),HesapDetaylari HD WITH(NOLOCK)
WHERE
H.Ind=HD.CariHesapInd AND HD.Plaka is Not Null
 


GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CariKartTutarBilgileri]
AS
SELECT     h.Owner, h.Ind, h.RiskLimiti, h.HesapKodu, h.HesapAdi, 
		SUM(c.Borc) AS Borc, 
		SUM(c.Alacak) AS Alacak, 
		SUM(c.Borc - c.Alacak) AS Bakiye,
		SUM(CASE WHEN (c.TipInd IN (11)) THEN (c.Alacak) ELSE 0 END) AS VerilenCek, 
		SUM(CASE WHEN (c.TipInd IN (14)) THEN (c.Borc) ELSE 0 END)   AS AlinanCek, 
		ISNULL(irs.Tutar, 0) AS IrsaliyeToplam, SUM(c.Borc - c.Alacak) + ISNULL(irs.Tutar, 0) AS GenelToplam

FROM         dbo.Hesaplar AS h WITH(NOLOCK) LEFT OUTER JOIN
                      dbo.CariHesapHareketleri AS c WITH(NOLOCK) ON c.CariHesapInd = h.Ind LEFT OUTER JOIN
                      dbo.CariIrsaliyeTutarListesi AS irs WITH(NOLOCK) ON irs.Ind = h.Ind
WHERE     (h.TipInd = 201)
GROUP BY h.Ind, h.HesapKodu, h.HesapAdi, h.RiskLimiti, irs.Tutar, h.Owner
GO
CREATE VIEW [dbo].[CariKKTahsilatListesi]
AS
SELECT 
	H.Ind,
	H.TipInd,
	H.Owner,
	B.Tarih AS Tarih,
	ISNULL(B.Ind,-1) AS BaslikInd,
	H.GirisTarihi,
	H.VadeTarihi,
	H.CariHesapInd, 
	H.CariHesapKodu, 
	H.CariHesapAdi,
	H.Aciklama,
	H.KKHesapInd,
	H.KKHesapKodu,
	H.KKHesapAdi,
	HS2.MuhasebeKodu AS KKMuhHesapKodu,
	HS3.Ind AS BankaHesapInd,
	HS3.HesapKodu AS BankaHesapKodu,
	HS3.HesapAdi AS BankaHesapAdi,
	HS3.BankaAdi,
	H.Tutar,
	H.Aktarildi
FROM Hareketler H WITH(NOLOCK)
LEFT JOIN Hesaplar HS2 WITH(NOLOCK) ON H.KKHesapInd = HS2.Ind
LEFT JOIN Hesaplar HS3 WITH(NOLOCK) ON HS2.BankaInd = HS3.Ind
LEFT JOIN Basliklar B WITH(NOLOCK) ON H.BaslikInd = B.Ind
WHERE 
	H.TipInd IN (10,533) AND 
	H.CariHesapInd > 0


GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CarilerinSatisFaturalari]
AS
SELECT 
	c.Ind as HesapInd,
	c.Owner,
	c.HesapKodu,
	c.HesapAdi,
	f.BelgeNo,
    f.Alacak as FaturaTutar,
	f.GirisTarihi,
	f.OdemeTarihi,
	h.OdemeVadesi
FROM CariHesaplar as c WITH(NOLOCK)
INNER JOIN FaturaOzet2 as f WITH(NOLOCK) ON f.HesapInd = c.Ind AND f.TipInd = 6
LEFT JOIN Hesaplar as h WITH(NOLOCK) ON h.Ind = c.Ind
WHERE c.HesapKodu != 'DevCar' AND c.HesapAdi NOT LIKE('%Devir%') AND h.OdemeVadesi IS NOT NULL


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[vCarilerKullanicilar]
AS
SELECT     CariHesaplar.Ind AS CariInd, CariHesaplar.Owner, CariHesaplar.HesapKodu AS CariKodu, CariHesaplar.HesapAdi AS CariAdi, CariHesaplar.Eposta, 
                      Kullanicilar.KullaniciAdi, Kullanicilar.Sifre, Kullanicilar.Ind AS KullaniciInd
FROM         CariHesaplar WITH(NOLOCK) LEFT OUTER JOIN
                      Kullanicilar WITH(NOLOCK) ON CariHesaplar.Ind = Kullanicilar.CariInd

GO
CREATE VIEW [dbo].[CariOdemeVadeleriAyrinti]
AS
select SI.SubeInd AS SubeInd, S.SubeAdi AS SubeAdi, SI.Ay, SI.Gun, SI.Ind, SI.CariInd, SI.Aktif, SI.Owner FROM Subeler AS S WITH(NOLOCK)
INNER JOIN CariOdemeVadeleri AS SI WITH(NOLOCK)
ON S.Ind = SI.SubeInd
GO
CREATE VIEW [dbo].[CariStokIskontoOranlariAyrinti]
AS
select S.StokAdi, SI.IskontoOrani AS IskontoOrani, SI.Ind, SI.CariInd, SI.StokInd, SI.Aktif, SI.Owner FROM AkaryakitStoklari AS S WITH(NOLOCK)
INNER JOIN CariStokIskontoOranlari AS SI WITH(NOLOCK)
ON S.Ind = SI.StokInd
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CariTahsilatListesi]
AS

SELECT 
		TOP 100 PERCENT HSP.OzelKodu,
		HSP.OzelKodInd,
		CHH.* ,
		HSP.HesapKodu,
		HSP.HesapAdi,
		0.0 Bakiye,
		'' TipAdi
	FROM CariHesapHareketleri CHH WITH(NOLOCK)
	INNER JOIN Hesaplar HSP WITH(NOLOCK) ON HSP.Ind=CHH.CariHesapInd
	WHERE 0=0
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CBBankaHesabiListesi]
AS
SELECT     
	Hesaplar.HesapKodu + ' - ' + Hesaplar.HesapAdi AS ViewContent, 
	Hesaplar.Ind, 
	Hesaplar.Owner, 
	Hesaplar.TipInd, 
	Hesaplar.HesapKodu, 
	Hesaplar.HesapAdi, 
	Hesaplar.StokInd, 
	Hesaplar.Kapasite, 
	Hesaplar.MinimumSeviye, 
	Hesaplar.OzelKodInd, 
	Hesaplar.OzelKodu, 
    Hesaplar.Adres, 
	Hesaplar.Telefon, 
	Hesaplar.Gsm, 
	Hesaplar.Faks,	
	Hesaplar.Sehir, 
	Hesaplar.EPosta, 
	Hesaplar.VergiDairesi, 
	Hesaplar.VergiNo, 
	Hesaplar.TcKimlikNo, 
	Hesaplar.RiskLimiti, 
	Hesaplar.Aciklama, 
	Hesaplar.NetMaas, 
	Hesaplar.GirisTarihi, 
	Hesaplar.CikisTarihi, 
	Hesaplar.AyrilmaSebebi, 
    Hesaplar.BankaInd, 
	Hesaplar.BankaKomisyon, 
	Hesaplar.MusteriKomisyon, 
	Hesaplar.Vade, 
	Hesaplar.BankaAdi, 
	Hesaplar.SubeAdi, 
	Hesaplar.Aktif, 
	Hesaplar.FaturaVadesi, 
	Hesaplar.OdemeVadesi, 
	Hesaplar.ParaBirimi, 
	Hesaplar.Raf, 
	Hesaplar.GrupInd, 
	Hesaplar.Prim, 
    Hesaplar.FisPortfoyu,
	b.Bakiye
FROM dbo.Hesaplar WITH(NOLOCK)
LEFT JOIN BankaBakiyeListesi as b WITH(NOLOCK) ON b.Ind = Hesaplar.Ind
WHERE     (Hesaplar.TipInd = 202)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CBCariListesi]
AS
SELECT     
	h.HesapKodu + ' - ' + h.HesapAdi AS ViewContent, 
	h.Ind, 
	h.Owner, 
	h.TipInd, 
	h.HesapKodu, 
	h.HesapAdi, 
	h.StokInd, 
	h.Kapasite, 
	h.MinimumSeviye, 
	h.OzelKodInd, 
	h.OzelKodu, 
	h.Adres, 
	h.Telefon, 
	h.Gsm, 
	h.Faks, 
	h.Sehir, 
	h.EPosta, 
	h.VergiDairesi, 
	h.VergiNo, 
	h.TcKimlikNo, 
	h.RiskLimiti, 
	h.Aciklama, 
	h.NetMaas, 
	h.GirisTarihi, 
	h.CikisTarihi, 
	h.AyrilmaSebebi, 
	h.BankaInd, 
	h.BankaKomisyon, 
	h.MusteriKomisyon, 
	h.Vade, 
	h.BankaAdi, 
	h.SubeAdi, 
	h.Aktif, 
	h.FaturaVadesi, 
	h.OdemeVadesi, 
	h.ParaBirimi, 
	h.Raf, 
	h.GrupInd, 
	h.Prim, 
	h.FisPortfoyu,
	c.Bakiye
FROM dbo.Hesaplar as h WITH(NOLOCK)
LEFT JOIN CariBakiyeListesi as c WITH(NOLOCK) ON c.Ind = h.Ind
WHERE     (h.TipInd = 201)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CBDepoListesi]
AS
SELECT     HesapKodu + ' - ' + HesapAdi AS ViewContent, Hesaplar.Ind, Hesaplar.Owner, TipInd, HesapKodu, HesapAdi, StokInd, Kapasite, MinimumSeviye, OzelKodInd, OzelKodu, 
                      Adres, Telefon, Gsm, Faks, Sehir, EPosta, VergiDairesi, VergiNo, TcKimlikNo, RiskLimiti, Aciklama, NetMaas, GirisTarihi, CikisTarihi, AyrilmaSebebi, 
                      BankaInd, BankaKomisyon, MusteriKomisyon, Vade, BankaAdi, SubeAdi, Hesaplar.Aktif, FaturaVadesi, OdemeVadesi, ParaBirimi, Raf, Hesaplar.GrupInd, Prim, 
                      FisPortfoyu,s.StokKodu as StokKodu,s.StokAdi as StokAdi , s.StokKodu + ' - ' + s.StokAdi as Muhteviyat, Hesaplar.Owner AS SubeInd
FROM         Hesaplar WITH(NOLOCK)
LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = Hesaplar.StokInd
WHERE     (TipInd = 205)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CBGelirKartiListesi]
AS
SELECT     HesapKodu + ' - ' + HesapAdi AS ViewContent, Ind, Owner, TipInd, HesapKodu, HesapAdi, StokInd, Kapasite, MinimumSeviye, OzelKodInd, OzelKodu, 
                      Adres, Telefon, Gsm, Faks, Sehir, EPosta, VergiDairesi, VergiNo, TcKimlikNo, RiskLimiti, Aciklama, NetMaas, GirisTarihi, CikisTarihi, AyrilmaSebebi, 
                      BankaInd, BankaKomisyon, MusteriKomisyon, Vade, BankaAdi, SubeAdi, Aktif, FaturaVadesi, OdemeVadesi, ParaBirimi, Raf, GrupInd, Prim, 
                      FisPortfoyu
FROM         dbo.Hesaplar WITH(NOLOCK)
WHERE     (TipInd = 206)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CBGiderKartiListesi]
AS
SELECT     
	HesapKodu + ' - ' + HesapAdi AS ViewContent, 
	Ind, 
	Owner, 
	TipInd, 
	HesapKodu, 
	HesapAdi, 
	StokInd, 
	Kapasite, 
	MinimumSeviye, 
	OzelKodInd, 
	OzelKodu, 
	Adres, 
	Telefon, 
	Gsm, 
	Faks, 
	Sehir, 
	EPosta, 
	VergiDairesi, 
	VergiNo, 
	TcKimlikNo, 
	RiskLimiti, 
	Aciklama, 
	NetMaas, 
	GirisTarihi, 
	CikisTarihi, 
	AyrilmaSebebi, 
	BankaInd, 
	BankaKomisyon, 
	MusteriKomisyon, 
	Vade, 
	BankaAdi, 
	SubeAdi, 
	Aktif, 
	FaturaVadesi, 
	OdemeVadesi, 
	ParaBirimi, 
	Raf, 
	GrupInd, 
	Prim, 
    FisPortfoyu,
	MuhasebeKodu
FROM 
	dbo.Hesaplar WITH(NOLOCK)
WHERE     
	(TipInd = 207)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CBPersonelListesi]
AS
SELECT     HesapKodu + ' - ' + HesapAdi AS ViewContent, Ind, Owner, TipInd, HesapKodu, HesapAdi, StokInd, Kapasite, MinimumSeviye, OzelKodInd, OzelKodu, 
                      Adres, Telefon, Gsm, Faks, Sehir, EPosta, VergiDairesi, VergiNo, TcKimlikNo, RiskLimiti, Aciklama, NetMaas, GirisTarihi, CikisTarihi, AyrilmaSebebi, 
                      BankaInd, BankaKomisyon, MusteriKomisyon, Vade, BankaAdi, SubeAdi, Aktif, FaturaVadesi, OdemeVadesi, ParaBirimi, Raf, GrupInd, Prim, 
                      FisPortfoyu
FROM         dbo.Hesaplar WITH(NOLOCK)
WHERE     (TipInd = 204)
GO
CREATE VIEW [dbo].[CBSatisFiyatiListesi]
AS
SELECT dbo.StokDetaylari.Ind, dbo.StokDetaylari.TipInd, dbo.StokDetaylari.Owner, dbo.StokDetaylari.StokInd, dbo.StokDetaylari.FiyatAdi, 
		dbo.StokDetaylari.ParaBirimi, dbo.StokDetaylari.Tutar, b1.BirimAdi, b1.Carpan, b2.BirimAdi AS AnaBirimAdi, dbo.KurBilgileri.Kur,
		dbo.SatisFiyatiSiralama.SiraNo	--Ulaş
FROM dbo.StokDetaylari WITH(NOLOCK) LEFT OUTER JOIN
	dbo.Birimler AS b1 WITH(NOLOCK) ON dbo.StokDetaylari.BirimInd = b1.Ind LEFT OUTER JOIN
	dbo.Birimler AS b2 WITH(NOLOCK) ON b1.ParentInd = b2.Ind LEFT OUTER JOIN
	dbo.KurBilgileri WITH(NOLOCK) ON dbo.StokDetaylari.ParaBirimi = dbo.KurBilgileri.ParaBirimi inner join
	dbo.SatisFiyatiSiralama WITH(NOLOCK) ON SatisFiyatiSiralama.FiyatInd = StokDetaylari.Ind	--Ulaş


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CBStokListesi]
AS
SELECT     dbo.Stoklar.StokKodu + ' - ' + dbo.Stoklar.StokAdi AS ViewContent, dbo.Stoklar.Ind, dbo.Stoklar.Owner, dbo.Stoklar.StokKodu, dbo.Stoklar.MuhasebeKodu,dbo.Stoklar.GTIPKodu,dbo.Stoklar.StokAdi, 
                      dbo.Stoklar.AnaBirimInd,dbo.Birimler.BirimAdi, dbo.Stoklar.GrupInd, dbo.Stoklar.AlisKDVGrupInd, dbo.Stoklar.SatisKDVGrupInd, dbo.Stoklar.Aktif, dbo.StokDetaylari.Barkod, 
                      dbo.KDVGruplari.KDVOrani, dbo.Stoklar.OtvTutar
FROM         dbo.Stoklar WITH(NOLOCK) LEFT OUTER JOIN
                      dbo.StokDetaylari WITH(NOLOCK) ON dbo.Stoklar.Ind = dbo.StokDetaylari.StokInd AND dbo.StokDetaylari.TipInd = 502 LEFT OUTER JOIN
                      dbo.KDVGruplari WITH(NOLOCK) ON dbo.Stoklar.SatisKDVGrupInd = dbo.KDVGruplari.Ind inner join 
					  dbo.Birimler    WITH(NOLOCK) ON  dbo.Birimler.Ind  =dbo.Stoklar.AnaBirimInd 
GO
CREATE VIEW [dbo].[CBStokListesiForSayim]
AS

SELECT NULL AS DepoInd, NULL AS DepoKodu, NULL AS DepoAdi, *FROM CBStokListesi 
where Ind not in (select StokInd from Hesaplar WITH(NOLOCK) where TipInd = 205 AND StokInd IS NOT NULL group by StokInd)

UNION ALL

SELECT 
h.Ind AS DepoInd, h.HesapKodu AS DepoKodu, h.HesapAdi AS DepoAdi, cb.ViewContent, cb.Ind, h.Owner, cb.StokKodu, cb.MuhasebeKodu, 
cb.GTIPKodu, cb.StokAdi, cb.AnaBirimInd, cb.BirimAdi, cb.GrupInd, AlisKDVGrupInd, 
SatisKDVGrupInd, cb.Aktif, cb.Barkod, cb.KDVOrani, cb.OtvTutar
FROM CBStokListesi cb WITH(NOLOCK)
LEFT JOIN Hesaplar h WITH(NOLOCK) on cb.Ind = h.StokInd 
WHERE h.TipInd = 205
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[CBSubeListesi]
AS
SELECT     SubeKodu + ' - ' + SubeAdi AS ViewContent, Ind, Owner, SubeKodu, SubeAdi, Adres, Telefon, Faks, IsMerkez
FROM         dbo.Subeler WITH(NOLOCK)
GO
CREATE VIEW [dbo].[DBSBankalariCariAyrinti]
AS
SELECT S.HesapAdi AS BankaAdi, S.HesapKodu AS BankaKodu, SI.Ind, SI.CariInd, SI.BankaInd, SI.Aktif, SI.KullanilabilirKredi, SI.Owner FROM Hesaplar AS S WITH(NOLOCK)
INNER JOIN DBSBankaCariHesap AS SI WITH(NOLOCK)
ON S.Ind = SI.BankaInd


GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[DepoAktarimForGroup]
AS
	SELECT
		NULL AS Owner,
		TipInd,
		BaslikInd,
		DepoInd,
		DepoAdi,
		DepoKodu,
		StokInd,
		StokAdi,
		StokKodu,
		SUM(Miktar) AS Miktar,
		1.00 AS Carpan,
		AnaBirimAdi,
		KDVOrani,
		BirimAdi,
		0.00 AS Fiyat
    FROM
		Hareketler WITH(NOLOCK)
	GROUP BY
		TipInd,
		BaslikInd,
		DepoInd,
		DepoAdi,
		DepoKodu,
		StokInd,
		StokAdi,
		StokKodu,
		AnaBirimAdi,
		KDVOrani,
		BirimAdi
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[DepoBazliGunlukVardiyaSayacHareketToplam]
AS
SELECT     VardiyaKarti.Owner, Depo.Ind AS DepoInd, OtoKalan.Ind, dbo.Stoklar.Ind AS StokInd, dbo.Stoklar.StokKodu, dbo.Stoklar.StokAdi, 
                      SUM(VardiyaSayacHareket.YeniEndeks - VardiyaSayacHareket.EskiEndeks - VardiyaSayacHareket.Aktarma) AS Cikan, 
                      SUM(VardiyaSayacHareket.Tutar) AS Tutar, OtoKalan.Miktar AS OtomasyonKalan,OtoKalan.BaslikInd as VardiyaNo,OtoKalan.IslemTarihi as Tarih
FROM         dbo.Basliklar AS VardiyaKarti WITH(NOLOCK) LEFT OUTER JOIN
                      dbo.Hareketler AS VardiyaSayacHareket WITH(NOLOCK) ON VardiyaKarti.Ind = VardiyaSayacHareket.VardiyaKartInd INNER JOIN
                      dbo.HesapDetaylari AS Sayac WITH(NOLOCK) ON VardiyaSayacHareket.SayacInd = Sayac.Ind INNER JOIN
                      dbo.Hesaplar AS Depo WITH(NOLOCK) ON Sayac.DepoInd = Depo.Ind INNER JOIN
                      dbo.Stoklar WITH(NOLOCK) ON Depo.StokInd = dbo.Stoklar.Ind INNER JOIN
                      dbo.Hareketler AS OtoKalan WITH(NOLOCK) ON dbo.Stoklar.Ind = OtoKalan.StokInd AND VardiyaKarti.Owner = OtoKalan.Owner
WHERE     (VardiyaKarti.TipInd = 109) AND (VardiyaSayacHareket.TipInd = 44) AND (Depo.TipInd = 205) AND (Sayac.TipInd = 402) AND 
                      (OtoKalan.VardiyaKartInd = - 1) AND (VardiyaSayacHareket.YeniEndeks - VardiyaSayacHareket.EskiEndeks - VardiyaSayacHareket.Aktarma > 0)
GROUP BY VardiyaKarti.Owner, Depo.Ind, OtoKalan.Ind, dbo.Stoklar.Ind, dbo.Stoklar.StokKodu, dbo.Stoklar.StokAdi, OtoKalan.Miktar,OtoKalan.BaslikInd ,OtoKalan.IslemTarihi

GO
CREATE VIEW Depolar
As
SELECT     Ind, Owner, HesapKodu, HesapAdi, StokInd, Kapasite, MinimumSeviye, OzelKodInd, MuhasebeKodu, TipInd
FROM         Hesaplar WITH(NOLOCK)
WHERE     (TipInd = 205)


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[DepolaraGoreAkaryakitMiktarlari]
AS
	SELECT
		dbo.Hesaplar.Owner,
		dbo.Hesaplar.HesapAdi,
		dbo.Hesaplar.Kapasite,
		SUM(g.Giren) - SUM(g.Cikan) AS Miktar, 
        (SUM(g.Giren) - SUM(g.Cikan)) / dbo.Hesaplar.Kapasite * 100 AS DoluAlan, 100 - (SUM(g.Giren) - SUM(g.Cikan)) / dbo.Hesaplar.Kapasite * 100 AS BosAlan
    FROM
		dbo.Hesaplar WITH(NOLOCK)
		LEFT OUTER JOIN GirisCikisHareketleri AS g WITH(NOLOCK) ON dbo.Hesaplar.Ind = g.DepoInd AND dbo.Hesaplar.TipInd = 205 AND dbo.Hesaplar.Kapasite IS NOT NULL
     GROUP BY
		dbo.Hesaplar.Owner,
		dbo.Hesaplar.Kapasite,
		dbo.Hesaplar.HesapAdi	


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[DepoMuhteviyatListesi]
AS
SELECT     StokDetaylari.StokInd as Ind,Stoklar.StokAdi,Stoklar.StokKodu,Barkod,AnaBirimInd,Stoklar.GrupInd,AlisKDVGrupInd,SatisKDVGrupInd,Stoklar.Aktif,Stoklar.Owner,dbo.KDVGruplari.KDVOrani
FROM        CBDepoListesi as d WITH(NOLOCK) Inner Join 
StokDetaylari WITH(NOLOCK) on d.StokInd = StokDetaylari.StokInd
inner join Stoklar  WITH(NOLOCK) on Stoklar.Ind = StokDetaylari.StokInd
inner join dbo.KDVGruplari WITH(NOLOCK) ON SatisKDVGrupInd = dbo.KDVGruplari.Ind
where d.StokInd IS not NULL
group by  StokDetaylari.StokInd,Stoklar.StokAdi,Stoklar.StokKodu,Barkod,AnaBirimInd,Stoklar.GrupInd,AlisKDVGrupInd,SatisKDVGrupInd,Stoklar.Aktif,Stoklar.Owner,dbo.KDVGruplari.KDVOrani

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[DirektSatisKullanicilari]
AS
SELECT DISTINCT
	S.Owner,S.KullaniciInd,K.KullaniciAdi
FROM SatisKasasi AS S WITH(NOLOCK)
LEFT JOIN Kullanicilar AS K WITH(NOLOCK) ON S.KullaniciInd = K.Ind
LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = s.IslemInd
LEFT JOIN Hareketler as h WITH(NOLOCK) ON h.Ind = s.IslemInd
WHERE S.IsYeniSatis = 'true'
AND (b.TipInd IN (102,104) OR h.TipInd = 504)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[DokumForVardiyaPersonelAcikFazla]
AS
	SELECT 
		Hareketler.Owner,
		Hareketler.VardiyaKartInd,	
		SUM
		(
			CASE
				WHEN (Hareketler.TipInd in (25,45,9,46,533,19,48))
				THEN Hareketler.Tutar*Hareketler.Kur 
				WHEN (Hareketler.TipInd in (20,47))
				THEN Hareketler.Tutar
				WHEN Hareketler.TipInd IN (39,44) AND (Basliklar.OtomasyonVardiyaInd IS NULL OR Basliklar.OtomasyonVardiyaInd <1)
				THEN
				(
					ABS
					(
						YeniEndeks-EskiEndeks
					)
					-
					Aktarma
				)
				*
				Fiyat
				WHEN Hareketler.TipInd IN (39,44) AND (Basliklar.OtomasyonVardiyaInd >0)
				THEN Hareketler.Tutar
				WHEN Hareketler.TipInd IN (43,40)
				THEN Miktar*Carpan*Fiyat
				ELSE 0
				END
		) as GirisTutar,
		SUM
		(
			CASE
				WHEN (Hareketler.TipInd in (26,42,49,13,50,17,52,11,53))
				THEN Hareketler.Tutar * Hareketler.Kur 
				WHEN (Hareketler.TipInd in (18,51))
				THEN Hareketler.Tutar
				WHEN (Hareketler.TipInd in (54,10))
				THEN Hareketler.Tutar
				WHEN (Hareketler.TipInd in (41,37) AND (Basliklar.OtomasyonVardiyaInd IS NULL OR Basliklar.OtomasyonVardiyaInd <1))
				THEN Miktar * Carpan*Fiyat
				WHEN (Hareketler.TipInd in (41,37) AND (Basliklar.OtomasyonVardiyaInd >0))
				THEN Hareketler.Tutar
				WHEN (Hareketler.TipInd in (38))
				THEN Tutar*Kur
				ELSE 0
			END
		) as CikisTutar
	FROM 
		Hareketler WITH(NOLOCK)
		LEFT JOIN Basliklar WITH(NOLOCK) ON Basliklar.Ind = Hareketler.VardiyaKartInd
	GROUP BY
		Hareketler.Owner,
		Hareketler.VardiyaKartInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[EnvStokMiktarlariButunView] 
AS
SELECT 
		gi.Owner,
		gi.Ind,
		gi.StokInd,
		(gi.Giren) as GirilenMiktar,
		(gi.Cikan) as CikilanMiktar,
		gi.Tarih,
		--DATEADD(YEAR, -10, CAST(FLOOR(CAST(gi.Tarih AS float)) AS datetime)) as PerakendeKasaIslemTarihi,
		gi.Fiyat,
		gi.TipIndAltHareket as TipInd,
		(gi.HareketIskonto) IlkIskonto,
		(gi.BaslikIskonto) SonIskonto,
		ISNULL(( SELECT  
		SUM(
			--SubH.Miktar
			(CASE WHEN SubH.NetMiktar=0 THEN SubH.Miktar ELSE ISNULL(SubH.NetMiktar,SubH.Miktar) END)
*SubH.Carpan*SubH.Fiyat-SubH.Iskonto) 
		FROM Hareketler SubH WITH(NOLOCK) WHERE  SubH.BaslikInd=gi.BaslikInd
		), 0.00) as ToplamTutar,
		0 AS hInd,
		0 AS KullaniciInd
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE TipInd=29 AND gi.TipIndAltHareket=3
	UNION ALL
	SELECT 
		gi.Owner,
		gi.Ind,
		gi.StokInd,
		(gi.Giren) as GirilenMiktar,
		(gi.Cikan) as CikilanMiktar,
		gi.Tarih,
		--DATEADD(YEAR, -10, CAST(FLOOR(CAST(gi.Tarih AS float)) AS datetime)) as PerakendeKasaIslemTarihi,
		gi.Fiyat,
		gi.TipIndAltHareket as TipInd,
		(gi.HareketIskonto) IlkIskonto,
		(gi.BaslikIskonto) SonIskonto,
		ISNULL(( SELECT  
		SUM(SubH.Miktar*SubH.Carpan*SubH.Fiyat-SubH.Iskonto) 
		FROM Hareketler SubH WHERE  SubH.BaslikInd=gi.BaslikInd
		), 0.00) as ToplamTutar,
		0 AS hInd
		,0 AS KullaniciInd
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE TipInd=503 AND (gi.TipIndAltHareket=29 OR gi.TipIndAltHareket=30)
	UNION ALL
	SELECT 
		gi.Owner,
		gi.Ind,
		gi.StokInd,
		(gi.Giren) as GirilenMiktar,
		(gi.Cikan) as CikilanMiktar,
		gi.Tarih,
		--DATEADD(YEAR, -10, CAST(FLOOR(CAST(gi.Tarih AS float)) AS datetime)) as PerakendeKasaIslemTarihi,
		gi.Fiyat,
		gi.TipIndAltHareket as TipInd,
		(gi.HareketIskonto) IlkIskonto,
		(gi.BaslikIskonto) SonIskonto,
		ISNULL(( SELECT  
		SUM(SubH.Miktar*SubH.Carpan*SubH.Fiyat-SubH.Iskonto) 
		FROM Hareketler SubH WHERE  SubH.BaslikInd=gi.BaslikInd
		), 0.00) as ToplamTutar,
		0 AS hInd
		,0 AS KullaniciInd
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE TipInd=30 AND gi.TipIndAltHareket=6
	UNION ALL
	SELECT 
		gi.Owner,
		gi.Ind,
		gi.StokInd,
		(gi.Giren) as GirilenMiktar,
		(gi.Cikan) as CikilanMiktar,
		gi.Tarih,
		--DATEADD(YEAR, -10, CAST(FLOOR(CAST(gi.Tarih AS float)) AS datetime)) as PerakendeKasaIslemTarihi,
		gi.Fiyat,
		gi.TipIndAltHareket as TipInd,
		(gi.HareketIskonto) IlkIskonto,
		(gi.BaslikIskonto) SonIskonto,
		ISNULL(( SELECT  
		SUM(SubH.Miktar*SubH.Carpan*SubH.Fiyat-SubH.Iskonto) 
		FROM Hareketler SubH WHERE  SubH.BaslikInd=gi.BaslikInd
		), 0.00) as ToplamTutar ,
		0 AS hInd
		,0 AS KullaniciInd
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE TipInd=29 AND gi.TipIndAltHareket=2
	UNION ALL
	SELECT 
		gi.Owner,
		gi.Ind,
		gi.StokInd,
		(gi.Giren) as GirilenMiktar,
		(gi.Cikan) as CikilanMiktar,
		gi.Tarih,
		--DATEADD(YEAR, -10, CAST(FLOOR(CAST(gi.Tarih AS float)) AS datetime)) as PerakendeKasaIslemTarihi,
		gi.Fiyat,
		gi.TipIndAltHareket as TipInd,
		(gi.HareketIskonto) IlkIskonto,
		(gi.BaslikIskonto) SonIskonto,
		ISNULL(( SELECT  
		SUM(SubH.Miktar*SubH.Carpan*SubH.Fiyat-SubH.Iskonto) 
		FROM Hareketler SubH WHERE  SubH.BaslikInd=gi.BaslikInd
		), 0.00) as ToplamTutar,
		0 AS hInd
		,0 AS KullaniciInd
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE TipInd=30 AND gi.TipIndAltHareket=5
	UNION ALL
	SELECT 
		gi.Owner,
		gi.Ind,
		gi.StokInd,
		(gi.Giren) as GirilenMiktar,
		(gi.Cikan) as CikilanMiktar,
		gi.Tarih,
		--DATEADD(YEAR, -10, CAST(FLOOR(CAST(gi.Tarih AS float)) AS datetime)) as PerakendeKasaIslemTarihi,
		gi.Fiyat,
		gi.TipIndAltHareket as TipInd,
		(gi.HareketIskonto) IlkIskonto,
		(gi.BaslikIskonto) SonIskonto,
		ISNULL(( SELECT  
		SUM(SubH.Miktar*SubH.Carpan*SubH.Fiyat-SubH.Iskonto) 
		FROM Hareketler SubH WHERE  SubH.BaslikInd=gi.BaslikInd
		), 0.00) as ToplamTutar ,
		0 AS hInd
		,0 AS KullaniciInd
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE TipInd=112
	UNION ALL
	SELECT 
		gi.Owner,
		gi.Ind,
		gi.StokInd,
		(gi.Giren) as GirilenMiktar,
		(gi.Cikan) as CikilanMiktar,
		gi.Tarih,
		--DATEADD(YEAR, -10, CAST(FLOOR(CAST(gi.Tarih AS float)) AS datetime)) as PerakendeKasaIslemTarihi,
		gi.Fiyat,
		gi.TipIndAltHareket as TipInd,
		(gi.HareketIskonto) IlkIskonto,
		(gi.BaslikIskonto) SonIskonto,
		ISNULL(( SELECT  
		SUM(SubH.Miktar*SubH.Carpan*SubH.Fiyat-SubH.Iskonto) 
		FROM Hareketler SubH WHERE  SubH.BaslikInd=gi.BaslikInd
		), 0.00) as ToplamTutar,
		0 AS hInd
		,0 AS KullaniciInd
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE TipInd=39
	UNION ALL
	SELECT 
		gi.Owner,
		gi.Ind,
		gi.StokInd,
		(gi.Giren) as GirilenMiktar,
		(gi.Cikan) as CikilanMiktar,
		gi.Tarih,
		--DATEADD(YEAR, -10, CAST(FLOOR(CAST(gi.Tarih AS float)) AS datetime)) as PerakendeKasaIslemTarihi,
		gi.Fiyat,
		gi.TipIndAltHareket as TipInd,
		(gi.HareketIskonto) IlkIskonto,
		(gi.BaslikIskonto) SonIskonto,
		ISNULL(( SELECT  
		SUM(SubH.Miktar*SubH.Carpan*SubH.Fiyat-SubH.Iskonto) 
		FROM Hareketler SubH WHERE  SubH.BaslikInd=gi.BaslikInd
		), 0.00) as ToplamTutar,
		0 AS hInd
		,0 AS KullaniciInd
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE TipInd = 40
	UNION ALL
	SELECT
		h.Owner,
		h.Ind,
		h.StokInd,
		0.00 AS GirilenMiktar,
		(h.Miktar * ISNULL(h.Carpan, 1)) AS CikilanMiktar,
		--DATEADD(YEAR, -10, CAST(FLOOR(CAST(h.GirisTarihi AS float)) AS datetime)) as Tarih,
		b.Tarih,
		--CAST(FLOOR(CAST(h.PerakendeKasaIslemTarihi AS float)) AS datetime) as PerakendeKasaIslemTarihi,
		h.Fiyat,
		504 AS TipInd,
		ISNULL((SELECT
			(((h.Miktar * ISNULL(h.Carpan, 1)) * 100 / SUM(Hareketler.Miktar * Hareketler.Carpan))/100) * SUM(Hareketler.Iskonto)
		FROM
			Hareketler
		WHERE
			Hareketler.BaslikInd = h.BaslikInd AND Hareketler.TipInd = 504 AND Hareketler.StokInd = h.StokInd)
		, 0.00)  AS IlkIskonto,
		0.00 as SonIskonto,
		ISNULL(( SELECT  
		SUM(SubH.Miktar*SubH.Carpan*SubH.Fiyat-SubH.Iskonto) 
		FROM Hareketler SubH WHERE  SubH.BaslikInd = h.BaslikInd
		), 0.00) as ToplamTutar,
		h.Ind AS hInd
		,sk.KullaniciInd
	FROM 
		SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd = h.StokInd
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504
		AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[EnvStokMiktarlariButunViewTurev] 
AS
SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		0.00 AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE 
		gi.TipInd = 29 
		AND gi.TipIndAltHareket = 3
	UNION ALL
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		0.00 AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE 
		gi.TipInd=503 
		AND (
				gi.TipIndAltHareket=29 
				OR gi.TipIndAltHareket=30
			)
	UNION ALL
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		0.00 AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE 
		gi.TipInd=30 
		AND gi.TipIndAltHareket=6
	UNION ALL
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		(gi.Fiyat / (1 + (k.KdvOrani / 100))) AS Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		0.00 AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
		LEFT OUTER JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = gi.StokInd
		LEFT JOIN dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.AlisKDVGrupInd
	WHERE 
		gi.TipInd = 29 
		AND gi.TipIndAltHareket = 2
	UNION ALL
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		0.00 AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE 
		gi.TipInd=30 
		AND gi.TipIndAltHareket=5
	UNION ALL
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		0.00 AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE 
		gi.TipInd=112
	UNION ALL
	SELECT 
		gi.Owner,
		gi.Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		0.00 AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE 
		gi.TipInd=39
	UNION ALL
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		0.00 AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE 
		gi.TipInd = 40
	UNION ALL
	SELECT
		h.Owner,
		h.Ind,
		h.StokInd,
		0.00 AS Giren,
		(h.Miktar * ISNULL(h.Carpan, 1)) AS Cikan,
		b.Tarih,
		h.Fiyat,
		504 AS TipIndAltHareket,
		0.00 AS IlkIskonto,
		0.00 as SonIskonto,
		ISNULL
		(
			( 
				SELECT  
					SUM
					(
						SubH.Miktar
						*
						SubH.Carpan
						*
						SubH.Fiyat
						-
						SubH.Iskonto
					) 
				FROM 
					Hareketler SubH 
				WHERE  
					SubH.BaslikInd = h.BaslikInd
			)
			, 0.00
		) as ToplamTutar,
		0.00 AS KDVOrani
	FROM 
		SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd = h.StokInd
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504
		AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[EnvStokMiktarlariButunViewTurevKdv] 
AS
SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		(
			SELECT
				TOP 1
				h.KDVOrani
			FROM
				Hareketler AS h WITH(NOLOCK)
			WHERE
				gi.BaslikInd = h.BaslikInd
				AND
				gi.StokInd = h.StokInd
				AND
				h.TipInd = 3
		) AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE 
		gi.TipInd = 29 
		AND gi.TipIndAltHareket = 3
	UNION ALL
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		CASE WHEN gi.TipIndAltHareket=30 THEN
			ISNULL(ks.KdvOrani, 18.00)
		ELSE
			ISNULL(ka.KdvOrani, 18.00)
		END AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
		LEFT JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = gi.StokInd
		LEFT JOIN dbo.KDVGruplari AS ks WITH(NOLOCK) ON ks.Ind = s.SatisKDVGrupInd
		LEFT JOIN dbo.KDVGruplari AS ka WITH(NOLOCK) ON ka.Ind = s.AlisKDVGrupInd
	WHERE 
		gi.TipInd=503 
		AND (
				gi.TipIndAltHareket=29 
				OR gi.TipIndAltHareket=30
			)
	UNION ALL
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		(
			SELECT
				TOP 1
				h.KDVOrani
			FROM
				Hareketler AS h
			WHERE
				gi.BaslikInd = h.BaslikInd
				AND
				gi.StokInd = h.StokInd
				AND
				h.TipInd = 6
		) AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE 
		gi.TipInd=30 
		AND gi.TipIndAltHareket=6
	UNION ALL
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		(gi.Fiyat / (1 + (k.KdvOrani / 100))) AS Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		k.KdvOrani AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
		LEFT OUTER JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = gi.StokInd
		LEFT JOIN dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.AlisKDVGrupInd
	WHERE 
		gi.TipInd = 29 
		AND gi.TipIndAltHareket = 2
	UNION ALL
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		(
			SELECT
				TOP 1
				h.KDVOrani
			FROM
				Hareketler AS h WITH(NOLOCK)
			WHERE
				gi.BaslikInd = h.BaslikInd
				AND
				gi.StokInd = h.StokInd
				AND
				h.TipInd = 5
		) AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE 
		gi.TipInd=30 
		AND gi.TipIndAltHareket=5
	UNION ALL
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		CASE WHEN gi.TipIndAltHareket=30 THEN
			ISNULL(ks.KdvOrani, 18.00)
		ELSE
			ISNULL(ka.KdvOrani, 18.00)
		END AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
		LEFT JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = gi.StokInd
		LEFT JOIN dbo.KDVGruplari AS ks WITH(NOLOCK) ON ks.Ind = s.SatisKDVGrupInd
		LEFT JOIN dbo.KDVGruplari AS ka WITH(NOLOCK) ON ka.Ind = s.AlisKDVGrupInd
	WHERE 
		gi.TipInd=112
	UNION ALL
	SELECT 
		gi.Owner,
		gi.Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		18.00 AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE 
		gi.TipInd=39
	UNION ALL
	SELECT 
		gi.Owner,
		gi.BaslikInd AS Ind,
		gi.StokInd,
		gi.Giren,
		gi.Cikan,
		gi.Tarih,
		gi.Fiyat,
		gi.TipIndAltHareket,
		gi.HareketIskonto,
		gi.BaslikIskonto,
		gi.ToplamTutar,
		(
			SELECT
				TOP 1
				h.KDVOrani
			FROM
				Hareketler AS h
			WHERE
				gi.Ind = h.Ind
		) AS KDVOrani
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
	WHERE 
		gi.TipInd = 40
	UNION ALL
	SELECT
		h.Owner,
		h.Ind,
		h.StokInd,
		0.00 AS Giren,
		(h.Miktar * ISNULL(h.Carpan, 1)) AS Cikan,
		b.Tarih,
		h.Fiyat,
		504 AS TipIndAltHareket,
		0.00 AS IlkIskonto,
		0.00 as SonIskonto,
		ISNULL
		(
			( 
				SELECT  
					SUM
					(
						SubH.Miktar
						*
						SubH.Carpan
						*
						SubH.Fiyat
						-
						SubH.Iskonto
					) 
				FROM 
					Hareketler SubH WITH(NOLOCK)
				WHERE  
					SubH.BaslikInd = h.BaslikInd
			)
			, 0.00
		) as ToplamTutar,
		 h.KDVOrani
	FROM 
		SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd = h.StokInd
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504
		AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0

GO
CREATE VIEW [dbo].[EskiSatisKasalariIadeEdilenSatislar]
AS
SELECT     
	dbo.SatisKasasi.KullaniciInd, 
	dbo.SatisKasasi.BaslikInd,
	dbo.Hareketler.Owner, 
	dbo.Hareketler.StokInd,
	dbo.Hareketler.StokKodu,
	dbo.Hareketler.StokAdi,
	dbo.Hareketler.Miktar,
	dbo.Hareketler.Fiyat,
	(dbo.Hareketler.Miktar*dbo.Hareketler.Fiyat) as Tutar
FROM dbo.SatisKasasi WITH(NOLOCK)
LEFT JOIN dbo.Hareketler WITH(NOLOCK) ON dbo.SatisKasasi.IslemInd = dbo.Hareketler.BaslikInd
WHERE (dbo.Hareketler.TipInd = 513) 
AND (dbo.SatisKasasi.IsYeniSatis = 0)
AND (dbo.SatisKasasi.Tablo = 'Hareketler')

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[EskiSatisKasalariIptalEdilenSatislar]
AS
SELECT     
	dbo.SatisKasasi.KullaniciInd, 
	dbo.SatisKasasi.BaslikInd,
	dbo.Hareketler.Owner, 
	dbo.Hareketler.StokInd,
	dbo.Hareketler.StokKodu,
	dbo.Hareketler.StokAdi,
	dbo.Hareketler.Miktar,
	dbo.Hareketler.Fiyat,
	(dbo.Hareketler.Miktar*dbo.Hareketler.Fiyat) as Tutar
FROM dbo.SatisKasasi WITH(NOLOCK)
LEFT JOIN dbo.Hareketler WITH(NOLOCK) ON dbo.SatisKasasi.IslemInd = dbo.Hareketler.Ind
WHERE (dbo.Hareketler.TipInd = 81) 
AND (dbo.SatisKasasi.IsYeniSatis = 0)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[EskiSatisKasalariKKHareketleri]
AS
SELECT     h.Ind, h.BaslikInd, b.Owner, h.TipInd, b.Tarih, h.Miktar, h.Fiyat, h.Tutar, b.VardiyaNo, h.KKHesapInd,h.KKHesapKodu
FROM         dbo.Basliklar AS b WITH(NOLOCK) INNER JOIN
                      dbo.Hareketler AS h WITH(NOLOCK) ON b.Ind = h.BaslikInd
WHERE     (h.TipInd = 10) AND (b.TipInd = 505)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[EskiVardiyaTarihleriForDevir]
AS

SELECT 
	DISTINCT Basliklar.Tarih,
	Basliklar.Owner,
	Basliklar.VardiyaNo,
	h.ParaBirimi,
	--h.Kur,
	h.AktarimTarihi
FROM Basliklar WITH(NOLOCK)
LEFT JOIN Hareketler as h WITH(NOLOCK) ON h.VardiyaKartInd = Basliklar.Ind AND h.TipInd = 38 
WHERE Basliklar.TipInd = 108 AND h.ParaBirimi IS NOT NULL

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[EVardiyaPersonelList]
AS
SELECT     
	B.Ind AS VardiyaKartInd, 
	B.Owner, 
	B.Baslangic, 
	B.Bitis, 
	H.PersonelHesapInd, 
	H.PersonelHesapKodu, 
	H.PersonelHesapAdi
FROM  Basliklar AS B WITH(NOLOCK)
LEFT OUTER JOIN dbo.Hareketler AS H WITH(NOLOCK) ON B.Ind = H.VardiyaKartInd
WHERE     (B.TipInd = 108) AND (H.TipInd = 35)
GO
CREATE VIEW [dbo].[FifoyaEsasHareketler] 
AS

SELECT 
	h.Ind,	b.Owner,	h.StokInd AS ArticleID,	h.BaslikInd AS StockID,	
	b.Tarih AS TranDate,	b.TipInd AS TipIndBaslik,	h.TipInd,
	CASE 
		WHEN h.TipInd IN (2, 3 ,29) THEN 'IN'
		WHEN h.TipInd IN (5, 6 ,30) THEN 'OUT' 
	ELSE 'RET' END AS TranCode,
	h.Miktar AS  Items,
	CASE WHEN h.KDVOrani <> 0 AND h.KDVOrani IS NOT NULL
	THEN h.Fiyat - ((h.Fiyat * h.KDVOrani) / 100) - (ISNULL(h.Iskonto, 0) / ISNULL(h.Miktar, 1))
	ELSE h.Fiyat - (ISNULL(h.Iskonto, 0) / ISNULL(h.Miktar, 1)) END AS Price
	
FROM dbo.Hareketler as h WITH(NOLOCK)
		LEFT JOIN dbo.Basliklar as b WITH(NOLOCK) ON b.Ind  = h.BaslikInd
WHERE 
		ISNULL(b.Aktif, 1) = 1	
		AND 
		(
			(h.TipInd IN (2,5) AND b.TipInd IN (103, 104))
				OR 
			(h.TipInd IN (3,6) AND b.TipInd IN (101, 102))
				OR 
			(h.TipInd IN (29,30) AND b.TipInd = 503)
		)
		AND (b.DurumInd != 11 or b.DurumInd IS NULL)

UNION ALL
SELECT 
	h.Ind,	b.Owner,	h.StokInd AS ArticleID,	sk.BaslikInd AS StockID,	
	b.Tarih AS TranDate,	b.TipInd AS TipIndBaslik,	h.TipInd,
	 'OUT' TranCode,
	h.Miktar AS  Items,
	CASE WHEN h.KDVOrani <> 0 AND h.KDVOrani IS NOT NULL
	THEN h.Fiyat - ((h.Fiyat * h.KDVOrani) / 100) - (ISNULL(h.Iskonto, 0) / ISNULL(h.Miktar, 1))
	ELSE h.Fiyat - (ISNULL(h.Iskonto, 0) / ISNULL(h.Miktar, 1)) END AS Price
	FROM 
		dbo.SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN dbo.Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
		LEFT JOIN dbo.Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0 AND b.TipInd = 505 AND h.Miktar > 0

GO

CREATE VIEW [dbo].[GelirHareketleri]
AS
SELECT        f.Owner, f.TipInd, f.GirisTarihi, t .TipAdi AS Yer, f.Aciklama, f.GelirInd, h.HesapKodu AS GelirKodu, f.GelirAdi, f.Alacak AS Tutar
FROM            dbo.FaturaOzet2 AS f LEFT OUTER JOIN
                         dbo.Tipler AS t ON t .Ind = 102 LEFT OUTER JOIN
                         dbo.Hesaplar AS h ON h.Ind = f.GelirInd
WHERE        (f.TipInd = 6) AND (f.GelirInd IS NOT NULL) AND (f.GelirInd > 0)
UNION ALL
SELECT        h.Owner, h.TipInd, h.GirisTarihi, t .TipAdi AS Yer, h.Aciklama, h.GelirInd, hes.HesapKodu AS GelirKodu, h.GelirAdi, h.Tutar
FROM            dbo.Hareketler AS h LEFT OUTER JOIN
                         dbo.Tipler AS t ON t .Ind = h.TipInd LEFT OUTER JOIN
                         dbo.Hesaplar AS hes ON hes.Ind = h.GelirInd
WHERE        (h.TipInd = 9 OR
                         h.TipInd = 11 /* HIT-3084 Ã‡ek-Senet GiriÅŸ Sorunu*/ OR
						 h.TipInd = 12 OR
                         h.TipInd = 10 OR
                         h.TipInd = 12 OR
                         h.TipInd = 20 OR
                         h.TipInd = 25 OR
                         h.TipInd = 27 OR
                         h.TipInd = 45 OR
                         h.TipInd = 47 OR
                         h.TipInd = 46 OR
                         h.TipInd = 532 OR
                         h.TipInd = 507) AND (h.GelirInd IS NOT NULL) AND (h.GelirInd > 0)
UNION ALL
SELECT        h.Owner, h.TipInd, b.Tarih, t .TipAdi AS Yer, h.Aciklama, h.GelirInd, h.GelirKodu, h.GelirAdi, CASE WHEN (b.Iskonto IN (0, NULL)) THEN h.Tutar ELSE (h.Tutar / ((h.KDVOrani + 100) / 100) - ((h.Tutar / ((h.KDVOrani + 100) / 100)) 
                         / (f.Matrah / f.FaturaIskonto))) * ((h.KDVOrani + 100) / 100) /* HIT-3056 Gelir-Gider Ä°cmal Raporu Sorunu*/ END
FROM            Hareketler AS h LEFT JOIN
                         Tipler AS t ON t .Ind = h.TipInd LEFT JOIN
                         Basliklar AS b ON b.Ind = h.BaslikInd LEFT JOIN
                         FaturaOzet2 AS f ON f.Ind = h.BaslikInd
WHERE        (h.TipInd = 511) AND (b.GelirInd IS NULL)
GO
CREATE VIEW [dbo].[GelirHareketleriKDVHaric]
AS
	SELECT     
		f.Owner
		, f.TipInd
		, f.GirisTarihi
		, t.TipAdi AS Yer
		, f.Aciklama
		, f.GelirInd
		, h.HesapKodu AS GelirKodu
		, f.GelirAdi
		, f.Matrah AS Tutar
	FROM         
		dbo.FaturaOzet2 AS f WITH(NOLOCK)
		LEFT OUTER JOIN dbo.Tipler AS t WITH(NOLOCK) ON t.Ind = 102 
		LEFT OUTER JOIN dbo.Hesaplar AS h WITH(NOLOCK) ON h.Ind = f.GelirInd
	WHERE     
		(f.TipInd = 6) 
		AND (f.GelirInd IS NOT NULL) 
		AND (f.GelirInd > 0)
	UNION ALL
	SELECT     
		h.Owner
		, h.TipInd
		, h.GirisTarihi
		, t.TipAdi AS Yer
		, h.Aciklama
		, h.GelirInd
		, hes.HesapKodu AS GelirKodu
		, h.GelirAdi
		, CASE WHEN h.KDVOrani IS NULL THEN
			h.Tutar
		ELSE
			h.Tutar / (1+h.KDVOrani/100)
		END AS Tutar
	FROM         
		dbo.Hareketler AS h WITH(NOLOCK)
		LEFT OUTER JOIN dbo.Tipler AS t WITH(NOLOCK) ON t.Ind = h.TipInd 
		LEFT OUTER JOIN dbo.Hesaplar AS hes WITH(NOLOCK) ON hes.Ind = h.GelirInd
	WHERE     
		(
			h.TipInd = 9 OR
            h.TipInd = 10 
			OR h.TipInd = 11 -- HIT-3084 Ã‡ek-Senet GiriÅŸ Sorunu
			OR h.TipInd = 12
			OR h.TipInd = 20
			OR h.TipInd = 25
			OR h.TipInd = 27
			OR h.TipInd = 45
			OR h.TipInd = 47
			OR h.TipInd = 46
			OR h.TipInd = 532
			OR h.TipInd = 507
		) 
		AND (h.GelirInd IS NOT NULL) AND (h.GelirInd > 0)
	UNION ALL
	SELECT
		h.Owner,
		h.TipInd,
		b.Tarih, 
		t.TipAdi AS Yer,
		h.Aciklama,
		h.GelirInd,
		h. GelirKodu,
		h.GelirAdi,
		CASE 
		WHEN (b.Iskonto in (0, NULL)) AND h.KDVOrani IS NULL THEN 
		h.Tutar
		WHEN (b.Iskonto in (0, NULL)) AND h.KDVOrani IS NOT NULL AND h.KDVOrani = 0 THEN
		h.Tutar
		WHEN (b.Iskonto in (0, NULL)) AND h.KDVOrani IS NOT NULL AND h.KDVOrani > 0 THEN
		h.Tutar / (1+h.KDVOrani/100)
		ELSE			
		(h.Tutar/((h.KDVOrani+100)/100) - ((h.Tutar/((h.KDVOrani+100)/100))/(f.Matrah/f.FaturaIskonto)))
		END As Tutar
	FROM Hareketler as h WITH(NOLOCK)
	LEFT JOIN Tipler as t WITH(NOLOCK) ON t.Ind = h.TipInd
	LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.BaslikInd
	LEFT JOIN FaturaOzet2 as f WITH(NOLOCK) ON f.Ind = h.BaslikInd
	WHERE 
		(h.TipInd = 511)
		AND (b.GelirInd IS NULL)
GO
CREATE VIEW [dbo].[GiderHareketleriForGiderIcmal]
AS
	SELECT 
		f.Owner,
		f.TipInd,
		f.GirisTarihi,
		t.TipAdi AS Yer,
		f.Aciklama,
		f.GiderInd,
		h.HesapKodu as GiderKodu,
		f.GiderAdi,
		f.Matrah AS Matrah,
		f.Borc-f.Matrah AS KDV,
		f.Borc as Tutar,
		--0.00 AS TahsilatTutari,
		null as CariHesapAdi,
		NULL AS BaslikInd,
		NULL AS PersonelHesapInd,
		NULL AS VardiyaKartInd
	FROM 
		FaturaOzet2 as f WITH(NOLOCK)
		LEFT JOIN Tipler as t WITH(NOLOCK) ON t.Ind = 101
		LEFT JOIN Hesaplar as h WITH(NOLOCK) ON h.Ind = f.GiderInd
	WHERE 
		(f.TipInd = 3)
		AND(f.GiderInd IS NOT NULL) 
		AND (f.GiderInd > 0)  
	UNION ALL
	SELECT	
		b.Owner AS Owner,
		b.TipInd,	
		b.Tarih AS GirisTarihi, 
		t.TipAdi AS Yer,			
		'Komisyon' AS Aciklama,
		b.GiderInd,
		hes.HesapKodu as GiderKodu,
		b.GiderAdi,
		CASE WHEN b.Iskonto IS NOT NULL --önceki tahsilatların banka komisyon oranlarını kaybetmemek üzere tahsil esnasındaki komisyon oranı başlığa eklendi
		THEN b.TahsilatTutari * b.Iskonto / 100
		ELSE b.TahsilatTutari * h.BankaKomisyon / 100
		END AS Matrah,
		0.00 AS KDV,
	    CASE WHEN b.Iskonto IS NOT NULL --önceki tahsilatların banka komisyon oranlarını kaybetmemek üzere tahsil esnasındaki komisyon oranı başlığa eklendi
		THEN b.TahsilatTutari * b.Iskonto / 100
		ELSE b.TahsilatTutari * h.BankaKomisyon / 100
		END AS Tutar,
		--b.TahsilatTutari AS TahsilatTutari,
		null as CariHesapAdi,
		NULL AS BaslikInd,
		NULL AS PersonelHesapInd,
		NULL AS VardiyaKartInd
	FROM 
		Basliklar as b  WITH(NOLOCK)
		LEFT JOIN dbo.Hesaplar as h WITH(NOLOCK) ON b.HesapInd = h.Ind
		LEFT JOIN dbo.Hesaplar as hes WITH(NOLOCK) ON b.GiderInd = hes.Ind
		LEFT JOIN Tipler as t WITH(NOLOCK) ON t.Ind = b.TipInd
	WHERE     
		b.TipInd = 105 
		AND b.TahsilatTutari > 0
		AND b.GiderInd IS NOT NULL 
		AND b.GiderInd > 0 
	UNION ALL
	SELECT
		m.Owner,
		m.TipInd,
		m.GirisTarihi, 
		t.TipAdi AS Yer,
		m.Aciklama,
		m.GiderInd,
		h.HesapKodu as GiderKodu,
		m.GiderAdi,
CASE m.MaasIslenmeDurumu
			WHEN 0 THEN m.Hakedilen
			WHEN 1 THEN m.Odenen 
			WHEN 2 THEN m.Hakedilen
			END 
		as Matrah,
		0.00 AS KDV,
		CASE m.MaasIslenmeDurumu
			WHEN 0 THEN m.Hakedilen
			WHEN 1 THEN m.Odenen 
			WHEN 2 THEN m.Hakedilen
			END 
		as Tutar,
		--0.00 AS TahsilatTutari,
		null as CariHesapAdi,
		NULL AS BaslikInd,
		NULL AS PersonelHesapInd,
		NULL AS VardiyaKartInd
	FROM 
		MaasDagitimListesi as m WITH(NOLOCK)
		LEFT JOIN Tipler as t WITH(NOLOCK) ON t.Ind = m.TipInd
		LEFT JOIN Hesaplar as h WITH(NOLOCK) ON h.Ind = m.GiderInd
	WHERE 
		m.GiderInd IS NOT NULL 
		AND m.GiderInd > 0
	UNION ALL
	SELECT
		h.Owner,
		h.TipInd,
		h.GirisTarihi, 
		t.TipAdi AS Yer,
		h.Aciklama,
		h.GiderInd,
		hes.HesapKodu as GiderKodu,
		h.GiderAdi,
		CASE WHEN h.KDVOrani IS NULL THEN
			h.Tutar
		ELSE
			h.Tutar / (1+h.KDVOrani/100)
		END AS Matrah,
		((h.Tutar / (1+h.KDVOrani/100)) * KDVOrani) / 100 AS KDV,
		h.Tutar,
		--0.00 AS TahsilatTutari,
		h.CariHesapAdi,
		CASE WHEN h.TipInd = 508 THEN
			ISNULL(h.BaslikInd, 0)
		ELSE
			NULL
		END AS BaslikInd,
		CASE WHEN h.TipInd = 508 THEN
			ISNULL(h.PersonelHesapInd, 0)
		ELSE
			NULL
		END AS PersonelHesapInd,
		CASE WHEN h.TipInd = 508 THEN
			ISNULL(h.VardiyaKartInd, 0)
		ELSE
			NULL
		END AS VardiyaKartInd
	FROM 
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Tipler as t WITH(NOLOCK) ON t.Ind = h.TipInd
		LEFT JOIN Hesaplar as hes WITH(NOLOCK) ON hes.Ind = h.GiderInd
	WHERE 
		(
			h.TipInd = 13
			OR h.TipInd = 14
			OR h.TipInd = 15
			OR h.TipInd = 18
			OR h.TipInd = 22
			OR h.TipInd = 26
			OR h.TipInd = 28
			OR h.TipInd = 508
		)
		AND h.GiderInd IS NOT NULL
		AND h.GiderInd > 0
	UNION ALL
	SELECT
		h.Owner,
		h.TipInd,
		b.Tarih, 
		t.TipAdi AS Yer,
		h.Aciklama,
		h.GiderInd,
		h.GiderKodu,
		h.GiderAdi,
		h.Fiyat as Matrah,--h.Tutar as Matrah,
		((h.Tutar / (1+h.KDVOrani/100)) * KDVOrani) / 100 AS KDV,
		h.Tutar,
		h.CariHesapAdi,
		NULL AS BaslikInd,
		NULL AS PersonelHesapInd,
		NULL AS VardiyaKartInd
	FROM 
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Tipler as t WITH(NOLOCK) ON t.Ind = h.TipInd
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.BaslikInd
		LEFT JOIN FaturaOzet2 as f WITH(NOLOCK) ON f.Ind = h.BaslikInd
	WHERE 
		h.TipInd = 57
		AND b.GiderInd IS NULL









GO
GO
CREATE VIEW [dbo].[GirisCikisHareketleri_MIGRATION]
AS
 --ALIMLAR
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Kapasite,
		3 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		(h.Miktar * h.Carpan) as Giren,
		0.00 as Cikan
		,h.DepoInd 
		,0.00 Kalan
		,h.Ind
		,0 AS KullaniciInd 
		,h.NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind  = h.BaslikInd
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd 
	WHERE 
		b.Aktif != 0	
		AND h.TipInd = 29 AND (b.DurumInd != 11 or b.DurumInd IS NULL)	
		AND b.TipInd = 101
	UNION ALL
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Kapasite,
		2 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		(h.Miktar * h.Carpan) as Giren,
		0.00 as Cikan
		,h.DepoInd 
		,0.00 Kalan
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
	FROM 
		Hareketler as h
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind --AND b.TipInd = 103
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd 
	WHERE 
		h.TipInd = 29 AND (b.DurumInd != 11 or b.DurumInd IS NULL)
		AND b.TipInd = 103
	UNION ALL
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Kapasite,
		29 AS TipIndAltHareket,
		b.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		(h.Miktar * h.Carpan) as Giren,
		0.00 as Cikan,
		h.DepoInd,
		0.00 Kalan
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
	FROM
		Hareketler as h
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind --AND b.TipInd = 503
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd
	WHERE
		h.TipInd = 29 
		AND b.TipInd = 503
	-- SATISLAR
	UNION ALL
	SELECT
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		h.Owner as Owner,--11112011 den once OWNER "Hesaplar"dan aliniyordu... Devirde, bir subede kayitli olan stok hareketini butun subeler icin giriyordu... 
		Hesaplar.Kapasite,
		6 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		h.DepoInd,
		0.00 Kalan,
		h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.BaslikInd 
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd 
	WHERE 
		b.TipInd = 102
		AND b.Aktif != 0
		AND h.TipInd = 30
		AND (b.DurumInd IS NULL OR b.DurumInd != 11)
	UNION ALL 
	SELECT
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Kapasite,
		5 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		h.DepoInd 
		,0.00 Kalan,
		h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind --AND b.TipInd = 104		
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd 
	WHERE 
		h.TipInd = 30 AND (b.DurumInd != 11 or b.DurumInd IS NULL)
		AND b.TipInd = 104
		AND (b.DurumInd IS NULL OR b.DurumInd != 11)
	UNION ALL
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Kapasite,
		30 AS TipIndAltHareket,
		b.TipInd as TipInd,
		
		h.Miktar,
		
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		h.DepoInd 
		,0.00 Kalan
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		, NULL as KasiyerKodu
	FROM 
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind --AND b.TipInd = 503
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd
	WHERE
		h.TipInd = 30 
		AND b.TipInd = 503
	-- DIGERLERI
	UNION ALL
	
    
	SELECT 
		0 as BaslikInd,
		h.StokInd as StokInd,
		Hareketler.GirisTarihi as Tarih,
		NULL as DurumInd,
		NULL as Belge,
		h.Aciklama as Aciklama,
		NULL as FaturaInd,
		NULL as HesapInd,
		30 as TipIndBaslik,
		h.Owner as Owner,
		0 as Kapasite,
		30 AS TipIndAltHareket,
		30 as TipInd,
		
		h.Miktar,
		
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		h.DepoInd 
		,0.00 Kalan
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		, NULL as KasiyerKodu
	FROM 
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.Ind = h.PerakendeInd
		LEFT JOIN SatisKasasi as sk WITH(NOLOCK) ON sk.IslemInd = h.PerakendeInd
	WHERE
		h.TipInd = 30 AND h.BaslikInd = 0 AND sk.IsYeniSatis = 0 AND h.Aciklama IS NOT NULL AND h.Aciklama = 'Pos Satış Bundle İçerik Ürün'
	-- DIGERLERI
	UNION ALL

	SELECT 
		0 as BaslikInd,
		h.StokInd as StokInd,
		Hareketler.GirisTarihi as Tarih,
		NULL as DurumInd,
		NULL as Belge,
		h.Aciklama as Aciklama,
		NULL as FaturaInd,
		NULL as HesapInd,
		29 as TipIndBaslik,
		h.Owner as Owner,
		0 as Kapasite,
		29 AS TipIndAltHareket,
		29 as TipInd,
		
		h.Miktar,
		
		h.Carpan,
		(h.Miktar * h.Carpan) as Giren,
		0.00 as Cikan,
		h.DepoInd 
		,0.00 Kalan
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		, NULL as KasiyerKodu
	FROM  
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.Ind = h.PerakendeInd
		LEFT JOIN SatisKasasi as sk WITH(NOLOCK) ON sk.IslemInd = h.PerakendeInd
	WHERE
		h.TipInd = 29 AND h.BaslikInd = 0 AND sk.IsYeniSatis = 0 AND h.Aciklama IS NOT NULL AND h.Aciklama = 'Pos Satış Bundle Ana Ürün Giriş'
	-- DIGERLERI
	UNION ALL
	
	
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		h.Owner as Owner,
		0.00 as Kapasite,
		112 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		1 as Carpan,
		ISNULL((SELECT TOP 1 ABS(h.SayimMiktari-h.Miktar) FROM Hareketler WITH(NOLOCK) WHERE BaslikInd=h.BaslikInd AND TipInd=29 AND StokInd=h.StokInd),0) AS Giren,
		ISNULL((SELECT TOP 1  ABS(h.Miktar-h.SayimMiktari) FROM Hareketler WITH(NOLOCK) WHERE BaslikInd=h.BaslikInd AND TipInd=30 AND StokInd=h.StokInd),0) AS Cikan,
		h.DepoInd 
		,0.00 Kalan
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		, NULL as KasiyerKodu
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 113
	WHERE
		h.TipInd = 112 
		AND b.TipInd = 113
	UNION ALL
	SELECT 
		h.VardiyaNo as BaslikInd,
		h.StokInd as StokInd,
		h.Tarih as Tarih,
		NULL as DurumInd,
		CAST(VardiyaNo AS  NVARCHAR)+'.Vardiya' as Belge,
		'Vardiya hesap kabul' as Aciklama,
		0 as FaturaInd,
		NULL as HesapInd,
		39 as TipIndBaslik,
		h.Owner as Owner,
		0.00 as Kapasite,
		39 AS TipIndAltHareket,
		h.TipInd as TipInd,
		(h.Fark) as Miktar,
		1 as Carpan,
		0.00 as Giren,
		(h.Fark) as Cikan,
		h.DepoInd
		,0.00 Kalan
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		,NULL AS KasiyerKodu
	FROM
		EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
	WHERE
		h.TipInd = 39 AND h.Miktar != 0 --Miktarın 0 olmaması şartı olmazsa stok hareket dökümünde 0.00 lı kayıt geliyor
	UNION ALL
	SELECT
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		h.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		h.Owner as Owner,
		0.00 as Kapasite,
		40 AS TipIndAltHareket,
		h.TipInd as TipInd,		
		h.Miktar,
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		Hareketler.DepoInd
		,0.00 Kalan
		,h.Ind
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		, NULL AS KasiyerKodu
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd AND b.TipInd = 108
	WHERE h.TipInd = 40
	UNION ALL
	SELECT
		NULL as BaslikInd,
		h.StokInd as StokInd,
		--sk.Tarih as Tarih,
		b.Tarih as Tarih,
		NULL as DurumInd,
		NULL as Belge,
		h.Aciklama as Aciklama,
		0 as FaturaInd,
		NULL as HesapInd,
		504 as TipIndBaslik,
		h.Owner as Owner,
		0.00 as Kapasite,
		504 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,		
		Hareketler.DepoInd
		,0.00 Kalan
		,h.Ind
		,sk.KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi,
		h.KasiyerKodu AS KasiyerKodu
	FROM 
		SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0 AND b.TipInd = 505

GO



GO
CREATE VIEW [dbo].[GirisCikisHareketleriSonFiyat]
AS
 --ALIMLAR
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Kapasite,
		3 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		(h.Miktar * h.Carpan) as Giren,
		0.00 as Cikan
		,
		(
			SELECT 								
				SUM
				(
					Case
						WHEN(Fiyat=0 or Miktar = 0) 
							THEN 
								0
						ELSE 
							Fiyat*(CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END)
					END					
				)
				/
				SUM
				(
					Case
						WHEN(Fiyat=0 or Miktar = 0) 
							Then 
								1
						else 
							(CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END)
					End
				) 
			FROM Hareketler WITH(NOLOCK) WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=3
		) AS Fiyat
		,h.DepoInd 
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL(
		(
			SELECT 
				TOP 1 Iskonto
			FROM
				Hareketler WITH(NOLOCK) WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd = 3
		),0) AS HareketlerIskonto
		,h.Ind as HareketInd
		,0 AS KullaniciInd 
		,h.NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind  = h.BaslikInd
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd 
	WHERE 
		b.Aktif != 0	
		AND h.TipInd = 29 AND (b.DurumInd != 11 or b.DurumInd IS NULL)	
		AND b.TipInd = 101
	UNION ALL
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Kapasite,
		2 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		(h.Miktar * h.Carpan) as Giren,
		0.00 as Cikan,
		(
			SELECT SUM(Fiyat*Miktar)/SUM(Miktar) FROM Hareketler WITH(NOLOCK) WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=2
		) AS Fiyat
		,h.DepoInd 
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL((h.Iskonto), 0.00) as HareketIskonto
		,h.Ind as HareketInd
		,0 AS KullaniciInd
		,NULL NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
	FROM 
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind --AND b.TipInd = 103
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd 
	WHERE 
		h.TipInd = 29 AND (b.DurumInd != 11 or b.DurumInd IS NULL)
		AND b.TipInd = 103
	UNION ALL
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Kapasite,
		29 AS TipIndAltHareket,
		b.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		(h.Miktar * h.Carpan) as Giren,
		0.00 as Cikan,
		ISNULL(h.Fiyat, 0) as Fiyat,--0.00 AS Fiyat,
		h.DepoInd
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL((h.Iskonto), 0.00) as HareketIskonto
		,h.Ind as HareketInd
		,0 AS KullaniciInd
		,NULL NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind --AND b.TipInd = 503
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd
	WHERE
		h.TipInd = 29 
		AND b.TipInd = 503
	-- SATISLAR
	UNION ALL
	SELECT
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		h.Owner as Owner,--11112011 den once OWNER "Hesaplar"dan aliniyordu... Devirde, bir subede kayitli olan stok hareketini butun subeler icin giriyordu... 
		Hesaplar.Kapasite,
		6 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		(
			SELECT SUM(Fiyat*Miktar)/SUM(Miktar) FROM Hareketler WITH(NOLOCK) WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=6
		) AS Fiyat
		,h.DepoInd 
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL((h.Iskonto), 0.00) as HareketIskonto
		,h.Ind as HareketInd
		,0 AS KullaniciInd
		,NULL NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.BaslikInd 
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd 
	WHERE 
		b.TipInd = 102
		AND b.Aktif != 0
		AND h.TipInd = 30
		AND (b.DurumInd IS NULL OR b.DurumInd != 11)
	UNION ALL 
	SELECT
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Kapasite,
		5 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		(
			SELECT SUM(Fiyat*Miktar)/SUM(Miktar) FROM Hareketler WITH(NOLOCK) WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=5
		) AS Fiyat
		,h.DepoInd 
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL((h.Iskonto), 0.00) as HareketIskonto
		,h.Ind as HareketInd
		,0 AS KullaniciInd
		,NULL NetMiktar
		,b.HesapAdi AS HesapAdi
		, NULL as KasiyerKodu
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind --AND b.TipInd = 104		
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd 
	WHERE 
		h.TipInd = 30 AND (b.DurumInd != 11 or b.DurumInd IS NULL)
		AND b.TipInd = 104
		AND (b.DurumInd IS NULL OR b.DurumInd != 11)
	UNION ALL
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		Hesaplar.Owner as Owner,
		Hesaplar.Kapasite,
		30 AS TipIndAltHareket,
		b.TipInd as TipInd,
		
		h.Miktar,
		
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		ISNULL(h.Fiyat, 0) as Fiyat,
		h.DepoInd 
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL((h.Iskonto), 0.00) as HareketIskonto
		,h.Ind as HareketInd
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		, NULL as KasiyerKodu
	FROM 
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind --AND b.TipInd = 503
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd
	WHERE
		h.TipInd = 30 
		AND b.TipInd = 503
	-- DIGERLERI
	UNION ALL
	SELECT 
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		b.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		h.Owner as Owner,
		0.00 as Kapasite,
		112 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		1 as Carpan,
		--(SELECT TOP 1 ABS(h.SayimMiktari-h.Miktar) FROM Hareketler WHERE BaslikInd=h.BaslikInd AND TipInd=29 AND StokInd=h.StokInd) AS Giren,
		--(SELECT TOP 1  ABS(h.Miktar-h.SayimMiktari) FROM Hareketler WHERE BaslikInd=h.BaslikInd AND TipInd=30 AND StokInd=h.StokInd) AS Cikan,
		ISNULL((SELECT TOP 1 ABS(h.SayimMiktari-h.Miktar) FROM Hareketler WITH(NOLOCK) WHERE BaslikInd=h.BaslikInd AND TipInd=29 AND StokInd=h.StokInd),0) AS Giren,
		ISNULL((SELECT TOP 1  ABS(h.Miktar-h.SayimMiktari) FROM Hareketler WITH(NOLOCK)  WHERE BaslikInd=h.BaslikInd AND TipInd=30 AND StokInd=h.StokInd),0) AS Cikan,
		CASE WHEN h.AlisFiyati IS NULL THEN h.SatisFiyati ELSE h.AlisFiyati  END AS Fiyat,
--		CASE WHEN(h.SayimMiktari > h.Miktar)
--			THEN (h.SayimMiktari - h.Miktar) 
--			ELSE 0.00
--			END as Giren,
--		CASE WHEN(h.SayimMiktari < h.Miktar)
--			THEN (h.Miktar - h.SayimMiktari) 
--			ELSE 0.00
--			END as Cikan,
--		CASE WHEN(h.SayimMiktari > h.Miktar)
--			THEN h.SatisFiyati 
--			ELSE h.AlisFiyati
--			END as Fiyat,
		h.DepoInd 
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL((h.Iskonto), 0.00) as HareketIskonto
		,h.Ind as HareketInd
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		, NULL as KasiyerKodu
	FROM
		Hareketler as h
		LEFT JOIN Basliklar as b ON h.BaslikInd = b.Ind AND b.TipInd = 113
	WHERE
		h.TipInd = 112 
		AND b.TipInd = 113

-- Depo Aktarım Can

	--UNION ALL
	--SELECT 
	--	b.Ind as BaslikInd,
	--	h.StokInd as StokInd,
	--	b.Tarih as Tarih,
	--	b.DurumInd,
	--	b.BelgeNo as Belge,
	--	b.Aciklama as Aciklama,
	--	b.FaturaInd,
	--	b.HesapInd,
	--	b.TipInd as TipIndBaslik,
	--	h.Owner as Owner,
	--	0.00 as Kapasite,
	--	16 AS TipIndAltHareket,
	--	h.TipInd as TipInd,
	--	h.Miktar,
	--	1 as Carpan,
	--	ISNULL((SELECT TOP 1 ABS(h.SayimMiktari-h.Miktar) FROM Hareketler WHERE BaslikInd=h.BaslikInd AND TipInd=29 AND StokInd=h.StokInd),0) AS Giren,
	--	ISNULL((SELECT TOP 1  ABS(h.Miktar-h.SayimMiktari) FROM Hareketler WHERE BaslikInd=h.BaslikInd AND TipInd=30 AND StokInd=h.StokInd),0) AS Cikan,
	--	CASE WHEN h.AlisFiyati IS NULL THEN h.SatisFiyati ELSE h.AlisFiyati  END AS Fiyat,
	--	h.DepoInd 
	--	,0.00 Kalan,
	--	ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
	--	ISNULL((h.Iskonto), 0.00) as HareketIskonto
	--	,h.Ind
	--	,0 AS KullaniciInd
	--	,NULL NetMiktar
	--	,NULL AS HesapAdi
	--	, NULL AS KasiyerKodu
	--FROM
	--	Hareketler as h
	--	LEFT JOIN Basliklar as b ON h.BaslikInd = b.Ind 
	--WHERE
	--	b.TipInd = 503 AND h.TipInd = 29


	UNION ALL
	SELECT 
		h.VardiyaNo as BaslikInd,
		h.StokInd as StokInd,
		h.Tarih as Tarih,
		NULL as DurumInd,
		CAST(VardiyaNo AS  NVARCHAR)+'.Vardiya' as Belge,
		'Vardiya hesap kabul' as Aciklama,
		0 as FaturaInd,
		NULL as HesapInd,
		39 as TipIndBaslik,
		h.Owner as Owner,
		0.00 as Kapasite,
		39 AS TipIndAltHareket,
		h.TipInd as TipInd,
		(h.Fark) as Miktar,
		1 as Carpan,
		0.00 as Giren,
		(h.Fark) as Cikan,
		h.Fiyat as Fiyat,
		h.DepoInd
		,0.00 Kalan,
		0.00 as BaslikIskonto,
		0.00 as HareketIskonto
		,h.Ind as HareketInd
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		, NULL AS KasiyerKodu
	FROM
		EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
	WHERE
		h.TipInd = 39
	UNION ALL
	SELECT
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.DurumInd,
		b.BelgeNo as Belge,
		h.Aciklama as Aciklama,
		b.FaturaInd,
		b.HesapInd,
		b.TipInd as TipIndBaslik,
		h.Owner as Owner,
		0.00 as Kapasite,
		40 AS TipIndAltHareket,
		h.TipInd as TipInd,		
		h.Miktar,
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		h.Fiyat as Fiyat,
		Hareketler.DepoInd
		,0.00 Kalan,
		ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
		ISNULL((h.Iskonto), 0.00) as HareketIskonto
		,h.Ind as HareketInd
		,0 AS KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi
		, NULL AS KasiyerKodu
	FROM
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd AND b.TipInd = 108
	WHERE h.TipInd = 40
	UNION ALL
	SELECT
		NULL as BaslikInd,
		h.StokInd as StokInd,
		--sk.Tarih as Tarih,
		b.Tarih as Tarih,
		NULL as DurumInd,
		NULL as Belge,
		h.Aciklama as Aciklama,
		0 as FaturaInd,
		NULL as HesapInd,
		504 as TipIndBaslik,
		h.Owner as Owner,
		0.00 as Kapasite,
		504 AS TipIndAltHareket,
		h.TipInd as TipInd,
		h.Miktar,
		h.Carpan,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan,
		h.Fiyat as Fiyat,		
		Hareketler.DepoInd
		,0.00 Kalan,
		0.00 as BaslikIskonto,
		0.00 as HareketIskonto
		,h.Ind as HareketInd
		,sk.KullaniciInd
		,NULL NetMiktar
		,NULL AS HesapAdi,
		h.KasiyerKodu AS KasiyerKodu
	FROM 
		SatisKasasi as sk WITH(NOLOCK)
		LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
		LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0 AND b.TipInd = 505










GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[GrupAdiForYeniRolTab]
AS
SELECT DISTINCT TOP (100) PERCENT GrupAdi, Owner
FROM         dbo.Yetkiler WITH(NOLOCK)
GO
--N.E.E.9.4.9.16.13
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[GrupIliskiliSubeler]
AS
	SELECT
		HD.Ind,
		(CASE WHEN (S.IsMerkez = 'True')
		 THEN 0
		 ELSE S.Ind
		 END) AS SubeInd,
		S.SubeKodu,
		S.SubeAdi,
		HD.Owner,
		HD.DepoInd AS SubeGrupInd,
		SG.SubeGrupAdi
	FROM
		HesapDetaylari HD WITH(NOLOCK)
		INNER JOIN Subeler S WITH(NOLOCK) ON HD.CariHesapInd = S.Ind
		INNER JOIN SubeGruplari SG WITH(NOLOCK) ON HD.DepoInd = SG.Ind
	WHERE
		HD.TipInd = 404
GO
CREATE VIEW [dbo].[IptalEdilenSatislar]
AS
SELECT     
	dbo.SatisKasasi.KullaniciInd, 
	dbo.Hareketler.Owner, 
	dbo.Hareketler.StokInd,
	dbo.Hareketler.StokKodu,
	dbo.Hareketler.StokAdi,
	dbo.Hareketler.Miktar,
	dbo.Hareketler.Fiyat,
	(dbo.Hareketler.Miktar*dbo.Hareketler.Fiyat) as Tutar,
	dbo.SatisKasasi.PerakendeKasaIslemTarihi 
FROM dbo.SatisKasasi WITH(NOLOCK)
LEFT JOIN dbo.Hareketler WITH(NOLOCK) ON dbo.SatisKasasi.IslemInd = dbo.Hareketler.Ind
WHERE (dbo.Hareketler.TipInd = 81) 
AND (dbo.SatisKasasi.IsYeniSatis = 1)


GO



GO
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE VIEW [dbo].[IrsaliyelerVeVeresiyeler]
AS
	SELECT     
		b.Ind, 
		b.Owner, 
		b.TipInd, 
		b.HesapInd, 
		b.HesapKodu, 
		b.HesapAdi, 
		b.Tarih AS IslemTarihi, 
		b.BelgeNo, 
		t.TipAdi AS IslemTipi, 
        SUM(h.Miktar * h.Fiyat * h.Carpan) AS Tutar, 
		(
			CASE WHEN (b.FaturaInd IS NULL OR b.FaturaInd < 1) THEN 
				CASE WHEN (b.DurumInd = 11) THEN
					'İptal Edilmiş'
				ELSE
					'Faturalandırılmamış'
				END
			ELSE 
				'Faturalandırılmış' END
		) AS Durum, 
		h.YazarKasaFisNo,
		b.PlakaNo
	FROM         
		dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN
        dbo.Basliklar AS b WITH(NOLOCK) ON b.Ind = h.BaslikInd LEFT OUTER JOIN
        dbo.Tipler AS t WITH(NOLOCK) ON t.Ind = b.TipInd
	WHERE     
		(b.TipInd IN (103, 104)) AND (h.TipInd IN (2, 5))
	GROUP BY 
		b.Ind, 
		b.Owner, 
		b.TipInd, 
		b.HesapInd, 
		b.HesapKodu, 
		b.HesapAdi, 
		b.Tarih, 
		b.BelgeNo, 
		t.TipAdi, 
		b.FaturaInd,
		b.DurumInd,
		h.YazarKasaFisNo,
		b.PlakaNo
UNION ALL
	SELECT     
		b.Ind, 
		b.Owner, 
		b.TipInd, 
		b.HesapInd, 
		b.HesapKodu, 
		b.HesapAdi, 
		b.Tarih AS İslemTarihi, 
		b.BelgeNo, 
		t.TipAdi AS IslemTipi, 
        SUM(h.Miktar * h.Fiyat * h.Carpan) AS Tutar, 
		(
			CASE WHEN (b.FaturaInd IS NULL OR b.FaturaInd < 1) THEN 
				CASE WHEN (b.DurumInd = 11) THEN
					'İptal Edilmiş'
				ELSE
					'Faturalandırılmamış'
				END
			ELSE 
				'Faturalandırılmış' 
			END
		) AS Durum,
		h.YazarKasaFisNo,
		b.PlakaNo
	FROM         
		dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN
        dbo.Basliklar AS b WITH(NOLOCK) ON b.Ind = h.BaslikInd LEFT OUTER JOIN
        dbo.Tipler AS t WITH(NOLOCK) ON t.Ind = b.TipInd
	WHERE     
		(h.TipInd IN (37)) AND (b.TipInd = 111)
	GROUP BY 
		b.Ind, 
		b.Owner, 
		b.TipInd, 
		b.HesapInd, 
		b.HesapKodu, 
		b.HesapAdi, 
		b.Tarih, 
		b.BelgeNo, 
		t.TipAdi, 
		b.FaturaInd,
		b.DurumInd,
		h.YazarKasaFisNo,
		b.PlakaNo


GO



GO
CREATE VIEW [dbo].[IrsaliyeRaporuDetay]
AS
SELECT
s.SubeAdi as IstasyonAdi,     
b.Owner, 
b.PlakaNo, 
b.HesapKodu, 
b.HesapAdi, 
b.Tarih AS IslemTarihi,
'' AS IslemTarihi_text, 
b.BelgeNo, 
t.TipAdi AS IslemTipi,
h.StokInd, 
h.StokAdi, 
h.Miktar, 
h.Fiyat,
h.Miktar * h.Fiyat * h.Carpan AS Tutar, 
(CASE WHEN (h.YazarKasaFisNo IS NULL) THEN ' ' ELSE h.YazarKasaFisNo END) AS YazarKasaFisNo,
(CASE WHEN (b.FaturaInd IS NULL OR b.FaturaInd < 1) THEN CASE WHEN (b.DurumInd = 11) THEN 'Ä°ptal EdilmiÅŸ' ELSE 'FaturalandÄ±rÄ±lmamÄ±ÅŸ' END ELSE 'FaturalandÄ±rÄ±lmÄ±ÅŸ' END) AS Durum
FROM      
dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN dbo.Basliklar AS b WITH(NOLOCK) ON b.Ind = h.BaslikInd 
LEFT OUTER JOIN dbo.Tipler AS t WITH(NOLOCK) ON t .Ind = b.TipInd
INNER JOIN dbo.Subeler AS s WITH(NOLOCK) ON s.Ind = b.Owner
WHERE     (b.TipInd IN (103, 104)) AND (h.TipInd IN (2, 5))
AND (b.Ind NOT IN (SELECT Ind FROM Basliklar WHERE TipInd IN(103,104) AND DurumInd = 11 AND FaturaInd IS NULL))
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[IskontoAlisHesapButunTurevi]
AS
	SELECT
		--
		(gi.Miktar * gi.Carpan * gi.Fiyat - ((gi.Miktar * gi.Carpan * gi.HareketIskonto) / (gi.Miktar * gi.Carpan))) as Tutar,
		gi.Owner,		
		(gi.Miktar * gi.Carpan) as Miktar,
	    h2.Matrah as ToplamTutar,
		((gi.Miktar * gi.Carpan * gi.HareketIskonto) / (gi.Miktar * gi.Carpan)) as IlkIskonto,
		(gi.BaslikIskonto) as SonIskonto,
		gi.StokInd,
		gi.Tarih,
		gi.DepoInd
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK) LEFT OUTER JOIN
		Stoklar as s WITH(NOLOCK) ON gi.StokInd = s.Ind LEFT OUTER JOIN
		BaslikMatrahForIskontoAlisHesapButun as h2 WITH(NOLOCK) on h2.BaslikInd = gi.BaslikInd
	WHERE
		gi.TipIndAltHareket = 3
		--AND @Baslangic <= gi.Tarih
		--AND gi.Tarih <= @Bitis AND
		--gi.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[IskontoAlisHesapButunTureviForCariDagilim]
AS
	SELECT
		--
		(gi.Miktar * gi.Fiyat - ((gi.Miktar * gi.HareketIskonto) / gi.Miktar)) as Tutar,
		gi.Owner,		
		gi.Miktar,
	    h2.Matrah as ToplamTutar,
		((gi.Miktar * gi.HareketIskonto) / gi.Miktar) as IlkIskonto,
		gi.BaslikIskonto as SonIskonto,
		gi.StokInd,
		gi.Tarih,
		gi.CariHesapInd AS HesapInd,
		gi.BaslikInd
	FROM
		(
			SELECT
				g.*,
				ISNULL
				(
					(
						SELECT
							(
								(
									(
										(
											CASE WHEN g.NetMiktar=0 
											THEN g.Miktar 
											ELSE ISNULL(g.NetMiktar,g.Miktar) 
											END
										) 
									) 
									* 
									100 
									/ 
									SUM
									(
										(
											CASE WHEN h.NetMiktar=0 
											THEN h.Miktar 
											ELSE ISNULL(h.NetMiktar,h.Miktar) 
											END
										) 
									)
								)
								/
								100
							)
							*
							SUM(h.Iskonto)
						FROM
							Hareketler as h
						WHERE
							h.BaslikInd=g.BaslikInd 
							AND h.TipInd=g.TipIndAltHareket 
							AND h.StokInd=g.StokInd
					)
					, 0.00
				)  AS HareketIskonto,
				ISNULL
				(
					( 
						SELECT  
							SUM
							(
								(
									CASE WHEN SubH.NetMiktar=0 
									THEN SubH.Miktar 
									ELSE ISNULL(SubH.NetMiktar,SubH.Miktar) 
									END
								) 
								*
								SubH.Fiyat
								-
								SubH.Iskonto
							) 
						FROM 
							Hareketler SubH WITH(NOLOCK)
						WHERE  
							SubH.BaslikInd=g.BaslikInd
					), 0.00
				) as ToplamTutar 
			FROM
			(
				SELECT 
					b.Ind as BaslikInd,
					h.StokInd as StokInd,
					b.Tarih as Tarih,
					b.DurumInd,
					b.BelgeNo as Belge,
					b.Aciklama as Aciklama,
					b.FaturaInd,
					b.HesapInd,
					b.TipInd as TipIndBaslik,
					Hesaplar.Owner as Owner,
					Hesaplar.Kapasite,
					3 AS TipIndAltHareket,
					h.TipInd as TipInd,
					h.Miktar,
					(h.Miktar) as Giren,
					0.00 as Cikan
					,
					(
						SELECT 
							SUM
							(
								Fiyat
								*
								(
									CASE WHEN NetMiktar=0 
									THEN Miktar 
									ELSE ISNULL(NetMiktar,Miktar) END
								)
							)
							/
							SUM
							(
								(
									CASE WHEN NetMiktar=0 
									THEN Miktar 
									ELSE ISNULL(NetMiktar,Miktar) END
								)
							) 
							FROM 
								Hareketler WITH(NOLOCK)
							WHERE 
								BaslikInd = h.BaslikInd 
								AND StokInd = h.StokInd 
								AND TipInd=3
					) AS Fiyat,
					h.CariHesapInd, 
					0.00 Kalan,
					ISNULL((b.Iskonto), 0.00) as BaslikIskonto,
					h.Ind,
					0 AS KullaniciInd,
					h.NetMiktar
				FROM
					Hareketler as h WITH(NOLOCK)
					LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind  = h.BaslikInd
					LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.CariHesapInd 
				WHERE 
					b.Aktif != 0	
					AND h.TipInd = 87 
					AND (b.DurumInd != 11 or b.DurumInd IS NULL)	
					AND b.TipInd = 101
			) AS g  
		) as gi  LEFT OUTER JOIN
		Stoklar as s WITH(NOLOCK) ON gi.StokInd = s.Ind LEFT OUTER JOIN
		BaslikMatrahForIskontoAlisHesapButun as h2 WITH(NOLOCK) on h2.BaslikInd = gi.BaslikInd
	UNION ALL
	SELECT
		distinct
		(h3.Miktar * h.Fiyat) as Tutar,
		h3.Owner,
		(h3.Miktar * ISNULL(h3.Carpan,1)) AS Miktar,
		(SELECT TOP 1 Matrah FROM BaslikMatrahForIskontoAlisHesapButun WITH(NOLOCK) WHERE BaslikInd = h.BaslikInd) as ToplamTutar,
		0.00 as IlkIskonto,
		(b.Iskonto) as SonIskonto,
		h.StokInd,
        b1.Tarih,
		--b1
		h3.CariHesapInd AS HesapInd,
		b1.Ind AS BaslikInd
	FROM 
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) on h.BaslikInd = b.Ind 
		LEFT JOIN Basliklar as b1 WITH(NOLOCK) on b1.FaturaInd = h.BaslikInd
		LEFT JOIN (
					SELECT 
						b.Ind as BaslikInd,
						h.StokInd as StokInd,
						b.Tarih as Tarih,
						b.DurumInd,
						b.BelgeNo as Belge,
						b.Aciklama as Aciklama,
						b.FaturaInd,
						b.HesapInd,
						b.TipInd as TipIndBaslik,
						Hesaplar.Owner as Owner,
						Hesaplar.Kapasite,
						h.TipInd as TipInd,
						h.Miktar,
						h.Carpan,
						(h.Miktar * h.Carpan) as Giren,
						0.00 as Cikan,
						(
							SELECT SUM(Fiyat*Miktar)/SUM(Miktar) FROM Hareketler WITH(NOLOCK) WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=2
						) AS Fiyat
						,h.CariHesapInd 
						,0.00 Kalan,
						ISNULL((b.Iskonto), 0.00) as BaslikIskonto
						,h.Ind
						,0 AS KullaniciInd
						,NULL NetMiktar
					FROM 
						Hareketler as h WITH(NOLOCK)
						LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind --AND b.TipInd = 103
						--LEFT JOIN Hesaplar ON Hesaplar.Ind = h.DepoInd
						LEFT JOIN Hesaplar ON Hesaplar.Ind = h.CariHesapInd 
					WHERE 
						h.TipInd = 87 AND (b.DurumInd != 11 or b.DurumInd IS NULL)
						AND b.TipInd = 103
				) as h3 ON h.StokInd = h3.StokInd
	WHERE
		h3.BaslikInd IN (b1.Ind) AND 
		h.TipInd = 3 AND
		(b1.DurumInd = 3 and b1.TipInd = 103)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[IskontoSatisHesapButunTurevi]
AS
SELECT
		gi.Owner,
        (gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) as Tutar,		
		(gi.Miktar * gi.Carpan) as Miktar,
	    h2.Matrah as ToplamTutar,
		gi.HareketIskonto as IlkIskonto,
		(gi.BaslikIskonto) as SonIskonto,
		gi.StokInd,
		s.StokAdi,
		s.StokKodu,
		(ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WITH(NOLOCK) WHERE h.BaslikInd=gi.BaslikInd AND h.TipInd=gi.TipIndAltHareket AND h.StokInd=gi.StokInd), 0.00)) as KdvOrani,
		0 as Satis,
		gi.Tarih,
		gi.DepoInd
		,gi.HesapInd HesapInd
	FROM
		GirisCikisHareketleriIskontolu as gi WITH(NOLOCK) LEFT OUTER JOIN
		Stoklar as s WITH(NOLOCK) ON gi.StokInd = s.Ind  LEFT OUTER JOIN
		BaslikMatrahForIskontoSatisHesapButun as h2 WITH(NOLOCK) on h2.BaslikInd = gi.BaslikInd
	WHERE
		gi.TipIndAltHareket = 6
		--AND @Baslangic <= gi.Tarih
		--AND gi.Tarih <= @Bitis AND
		--gi.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
	UNION ALL
	SELECT
		h.Owner,
		(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto) as Tutar,		
		(h.Miktar * h.Carpan) as Miktar,
	    Matrah as ToplamTutar,
		((h.Miktar * h.Carpan * h.Iskonto) / (h.Miktar * h.Carpan)) as IlkIskonto,
		(b.Iskonto) as SonIskonto,
		h.StokInd,
        h.StokAdi,
		h.StokKodu,
		h.KdvOrani,
		0 as Satis,
		b.Tarih,
		NULL AS DepoInd
		,h.CariHesapInd HesapInd
	FROM 
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN BaslikMatrahForIskontoSatisHesapButun as h2 WITH(NOLOCK) on h2.BaslikInd = h.BaslikInd
		LEFT JOIN Basliklar as b WITH(NOLOCK) on h.BaslikInd = b.Ind 
	WHERE 
		h.TipInd=6 
		--AND @Baslangic <= b.Tarih AND b.Tarih <= @Bitis 
		AND b.DurumInd=12 
		and (select count(Ind) from Basliklar as b1 WITH(NOLOCK) where b1.FaturaInd = h.BaslikInd) = 0
	UNION ALL
	SELECT
		distinct
		h.Owner,
		(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto) as Tutar,		
		(h.Miktar * h.Carpan) as Miktar,
	    Matrah as ToplamTutar,
		((h.Miktar * h.Carpan * h.Iskonto) / (h.Miktar * h.Carpan)) as IlkIskonto,
		(b.Iskonto) as SonIskonto,
		h.StokInd,
        h.StokAdi,
		h.StokKodu,
		h.KdvOrani,
		0 as Satis,
		b.Tarih,
		NULL AS DepoInd
		,h.CariHesapInd HesapInd
	FROM 
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN BaslikMatrahForIskontoSatisHesapButun as h2 WITH(NOLOCK) on h2.BaslikInd = h.BaslikInd
		LEFT JOIN Basliklar as b WITH(NOLOCK) on h.BaslikInd = b.Ind 
		LEFT JOIN Basliklar as b1 WITH(NOLOCK) on b1.FaturaInd = h.BaslikInd
	WHERE 
		h.TipInd=6 
		--AND @Baslangic <= b.Tarih AND b.Tarih <= @Bitis 
		AND (b.DurumInd=12 and b1.TipInd = 104)
	UNION ALL
	SELECT
        h.Owner,
        (h.Miktar * h.Carpan *  (h.Fiyat /(1+(k.KdvOrani/100)))) as Tutar,		        
		(h.Miktar * h.Carpan) as Miktar,
	    bm.Matrah as ToplamTutar,
	    h.Miktar * h.Carpan *  (h.Fiyat /(1+(k.KdvOrani/100)))*(b.Iskonto/bm.Matrah) as IlkIskonto,
		0.00 as SonIskonto,
		h.StokInd,
        h.StokAdi,
		h.StokKodu,
		k.KdvOrani,
		0 as Satis,
		b.Tarih,
		NULL AS DepoInd
		,h.CariHesapInd HesapInd
	FROM 
		Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b1 WITH(NOLOCK) on  b1.Ind = h.BaslikInd and b1.TipInd = 111
		LEFT JOIN Basliklar as b WITH(NOLOCK) on b.Ind = b1.FaturaInd --AND @Baslangic<= b.Tarih AND b.Tarih <=@Bitis
		LEFT JOIN BaslikMatrahForIskontoSatisHesapButun as bm WITH(NOLOCK) on bm.BaslikInd = b.Ind 
		LEFT JOIN Stoklar as s WITH(NOLOCK) on s.Ind = h.StokInd
		LEFT JOIN KDVGruplari as k WITH(NOLOCK) on k.Ind = s.SatisKDVGrupInd
    WHERE 
		h.TipInd=37 
		AND b.DurumInd=12


GO

CREATE VIEW [dbo].[KapatilmisSatisKasalariListesi]
AS
SELECT     dbo.SatisKasasi.Ind,dbo.SatisKasasi.Owner, dbo.SatisKasasi.KullaniciInd, dbo.SatisKasasi.Tarih,dbo.SatisKasasi.PerakendeKasaIslemTarihi
FROM         dbo.SatisKasasi WITH(NOLOCK) INNER JOIN
                      dbo.Basliklar WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.SatisKasasi.IslemInd
WHERE     (dbo.Basliklar.TipInd = 117) AND (dbo.SatisKasasi.IsYeniSatis = 1)

GO

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[Karlilik]
AS
	SELECT
		'Alis' AS Tip,
		g.BaslikInd,
		g.Owner,
		g.Tarih,
		g.HesapInd,
		g.CariHesapInd,
		g.StokInd,
		s.StokKodu,
		s.StokAdi,
		k.KDVOrani, 
		SUM(g.Miktar) AS AlisMiktar,
		CASE WHEN g.TipIndAltHareket = 2 THEN
			SUM
			(
				(
					CASE WHEN g.NetMiktar=0 
					THEN g.Miktar 
					ELSE ISNULL(g.NetMiktar, g.Miktar) 
					END
				) 
				* (g.Fiyat / (1 + (k.KdvOrani / 100)))
			)
		ELSE
			SUM
			(
				(
					CASE WHEN g.NetMiktar=0 
					THEN g.Miktar 
					ELSE ISNULL(g.NetMiktar, g.Miktar) 
					END
				) 
				* g.Fiyat
			)
		END AS AlisTutar,
		0.00 AS SatisMiktar,
		0.00 AS SatisTutar,
		'' AS HesapKodu,
		0.00 AS Sonuc,
		0.00 AS FisSayisi
	FROM
		(
			SELECT 
				b.Ind as BaslikInd,
				h.StokInd as StokInd,
				b.Tarih as Tarih,
				b.DurumInd,
				b.BelgeNo as Belge,
				b.Aciklama as Aciklama,
				b.FaturaInd,
				b.HesapInd,
				b.TipInd as TipIndBaslik,
				Hesaplar.Owner as Owner,
				Hesaplar.Kapasite,
				3 AS TipIndAltHareket,
				h.TipInd as TipInd,
				h.Miktar,
				(h.Miktar) as Giren,
				0.00 as Cikan
				,
				(
					SELECT SUM(Fiyat*
					(CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END)
					)/SUM(
					(CASE WHEN NetMiktar=0 THEN Miktar ELSE ISNULL(NetMiktar,Miktar) END)
					) FROM Hareketler WITH(NOLOCK)   WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=3
				) AS Fiyat
				,h.CariHesapInd 
				,0.00 Kalan,
				ISNULL((b.Iskonto), 0.00) as BaslikIskonto
				,h.Ind
				,0 AS KullaniciInd 
				,h.NetMiktar
			FROM
				Hareketler as h WITH(NOLOCK)
				LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind  = h.BaslikInd
				LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.CariHesapInd 
			WHERE 
				b.Aktif != 0	
				AND h.TipInd = 87 AND (b.DurumInd != 11 or b.DurumInd IS NULL)	
				AND b.TipInd = 101
			UNION ALL
			SELECT 
				b.Ind as BaslikInd,
				h.StokInd as StokInd,
				b.Tarih as Tarih,
				b.DurumInd,
				b.BelgeNo as Belge,
				b.Aciklama as Aciklama,
				b.FaturaInd,
				b.HesapInd,
				b.TipInd as TipIndBaslik,
				Hesaplar.Owner as Owner,
				Hesaplar.Kapasite,
				2 AS TipIndAltHareket,
				h.TipInd as TipInd,
				h.Miktar,
				(h.Miktar) as Giren,
				0.00 as Cikan,
				(
					SELECT (SUM(Fiyat*Miktar)/SUM(Miktar)) FROM Hareketler WITH(NOLOCK) WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=2
				) AS Fiyat
				,h.CariHesapInd 
				,0.00 Kalan,
				ISNULL((b.Iskonto), 0.00) as BaslikIskonto
				,h.Ind
				,0 AS KullaniciInd
				,NULL NetMiktar
			FROM 
				Hareketler as h WITH(NOLOCK)
				LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind --AND b.TipInd = 103
				LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.CariHesapInd
			WHERE 
				h.TipInd = 87 AND (b.DurumInd != 11 or b.DurumInd IS NULL)
				AND b.TipInd = 103
		) AS g
		LEFT OUTER JOIN Stoklar AS s WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.AlisKDVGrupInd
	GROUP BY
		g.Owner, 
		g.Tarih,
		g.CariHesapInd, 
		g.StokInd,
		s.StokKodu, 
		s.StokAdi, 
		g.HesapInd,
		g.BaslikInd,
		g.TipIndAltHareket,
		k.KdvOrani
	UNION ALL
	SELECT    
		'Satis' AS Tip,
		g.BaslikInd,
		g.Owner, 
		g.Tarih,
		g.HesapInd,
		0 AS CariHesapInd,
		g.StokInd,
		g.StokKodu,
		g.StokAdi,
		g.KDVOrani, 
		0.00 AS AlisMiktar,
		0.00 AS AlisTutar,
		g.Miktar
		AS SatisMiktar,
		g.Tutar AS SatisTutar,
		'' AS HesapKodu,
		0.00 AS Sonuc,
		0.00 AS FisSayisi
	FROM
		SatisRaporDokumu AS g WITH(NOLOCK)
	UNION ALL
--	SELECT
--		'Siparis' AS Tip,
--		Basliklar.Ind AS BaslikInd,
--		Hareketler.Owner, 
--		Basliklar.Tarih,
--		Basliklar.HesapInd,
--		0 AS CariHesapInd,
--		Hareketler.StokInd,
--		Hareketler.StokKodu,
--		Hareketler.StokAdi,
--		k.KDVOrani, 
--		ISNULL
--		(
--			SUM
--			(
--				Hareketler.Miktar
--			)
--			, 0
--		) AS AlisMiktar,
--		ISNULL
--		(
--			SUM
--			(
--				(
--					Hareketler.Miktar
--					* 
--					Hareketler.Fiyat 
--				) 
--			)
--			,0
--		) AS AlisTutar,
--		0.00 AS SatisMiktar,
--		0.00 AS SatisTutar,
--		'' AS HesapKodu,
--		0.00 AS Sonuc
--	FROM 
--		Basliklar 
--		INNER JOIN Hareketler ON Basliklar.Ind = Hareketler.BaslikInd
--		LEFT OUTER JOIN Stoklar AS s ON s.Ind = Hareketler.StokInd
--		LEFT JOIN KDVGruplari AS k ON k.Ind = s.AlisKDVGrupInd
--	WHERE 
--		(Basliklar.Aktif IS NULL OR Basliklar.Aktif = 1) AND 
--		(Basliklar.TipInd = 120 AND Basliklar.DurumInd = 14)
--		AND 
--		(
--			SELECT
--				COUNT(hh.Ind)
--			FROM
--				Hareketler AS hh
--			WHERE
--				hh.DurumInd = 15
--				AND
--				hh.BaslikInd = Basliklar.Ind
--		)
--		=
--		(
--			SELECT
--				COUNT(hh.Ind)
--			FROM
--				Hareketler AS hh
--			WHERE
--				hh.BaslikInd = Basliklar.Ind
--		)
--	GROUP BY
--		Hareketler.Owner, 
--		Basliklar.Tarih,
--		Hareketler.StokInd,
--		Hareketler.StokKodu, 
--		Hareketler.StokAdi, 
--		Basliklar.HesapInd,
--		Basliklar.Ind,
--		k.KdvOrani
--	UNION ALL
	SELECT
		'Gider' AS Tip,
		0 AS BaslikInd,
		Owner, 
		GirisTarihi AS Tarih,
		GiderInd AS HesapInd,
		0 AS CariHesapInd,
		ISNULL(PersonelHesapInd, 0) AS StokInd,
		ISNULL(PersonelHesapKodu, '') AS StokKodu,
		ISNULL(PersonelHesapAdi, '') AS StokAdi,
		0.00 AS KDVOrani, 
		0.00 AS AlisMiktar,
		0.00 AS AlisTutar,
		0.00 AS SatisMiktar,
		Tutar AS SatisTutar,
		'' AS HesapKodu,
		0.00 AS Sonuc,
		0.00 AS FisSayisi
	FROM
		Hareketler WITH(NOLOCK)
	WHERE
		(
			TipInd = 13
			OR TipInd = 14
			OR TipInd = 18
			OR TipInd = 22
			OR TipInd = 26
			OR TipInd = 28
			OR TipInd = 508
		)
		AND GiderInd IS NOT NULL
		AND GiderInd > 0
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KartHareketDokumuForVadeTarihiForFunction]
AS
	SELECT 
		--H.Ind, 
		--H.TipInd,
		H.Owner,
		--CASE WHEN H.VardiyaKartInd IS NOT NULL
		--THEN CAST(B.VardiyaNo as nvarchar)+'.Vardiya' 
		--ELSE '' END as BelgeNo ,
		CASE WHEN H.TipInd =10
		THEN H.Tutar 
		ELSE 0 END as Yatirilan,
		0 AS Tahsilat,
		--H.Aciklama,
		--H.GirisTarihi,
		--S.SubeAdi,
		--H.DurumInd,
		--SUM(
		--	CASE WHEN H.Tutar IS NULL
		--	THEN 0
		--	ELSE
		--		H.Tutar
		--END)
		0.00 as Bakiye,
		--0 as Vade,
		--'Kredi Kartı' as IslemTipi,
		--H.CariHesapAdi
		H.KKHesapInd
		, Hesaplar.HesapKodu AS KKHesapKodu
		, Hesaplar.HesapAdi AS KKHesapAdi
		, H.VadeTarihi
	FROM 
		Hareketler AS H WITH(NOLOCK)
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = H.KKHesapInd
		LEFT JOIN Basliklar AS B WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind
		LEFT JOIN Subeler AS S WITH(NOLOCK) ON H.Owner=S.Ind
	WHERE 
		--H.KKHesapInd = @Ind 
		H.Tutar > 0 AND 
		--H.GirisTarihi >= @BaslangicTarihi 
		H.KKHesapInd IS NOT NULL --AND 
		--H.VadeTarihi <= @BitisTarihi
		AND H.TipInd =10
	--ORDER BY 
		--GirisTarihi
	UNION ALL
	--INSERT INTO @Dokum
	SELECT
		DISTINCT TOP 100 PERCENT		
		--KrediKartiTahsil.BaslikInd,
		--10,
		KrediKartiTahsil.Owner,
		--BelgeNo,
		0 as Yatirilan,
		CASE WHEN (KrediKartiTahsil.Aciklama != 'Komisyon')
		THEN 
			CASE WHEN KrediKartiTahsil.Iskonto IS NOT NULL THEN --önceki tahsilatların banka komisyon oranlarını kaybetmemek üzere tahsil esnasındaki komisyon oranı başlığa eklendi
			(Tahsilat-Tahsilat*(KrediKartiTahsil.Iskonto/100)) ELSE
			(Tahsilat-Tahsilat*(Hesaplar.BankaKomisyon/100)) END
		ELSE Tahsilat
		END as Tahsilat,
		--KrediKartiTahsil.Aciklama,
		--Tarih,
		--Subeler.SubeAdi,
		--NULL ,
		--SUM(
		--	CASE WHEN Hareketler.Tutar IS NULL
		--	THEN 0
		--	ELSE
		--		Hareketler.Tutar
		--END)
		0.00 as Bakiye,
		
		--'Kredi Kartı' as IslemTipi,
		--null as CariHesapAdi
		KrediKartiTahsil.KKHesapInd
		, Hesaplar.HesapKodu AS KKHesapKodu
		, Hesaplar.HesapAdi AS KKHesapAdi
		, H.VadeTarihi
	FROM
		KrediKartiTahsil
		LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = KrediKartiTahsil.BaslikInd
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = KrediKartiTahsil.KKHesapInd
		--LEFT JOIN Basliklar AS B ON H.BaslikInd = B.Ind
		LEFT JOIN Subeler WITH(NOLOCK) ON KrediKartiTahsil.Owner=Subeler.Ind
	--WHERE
		--Tarih >= @BaslangicTarihi 
		--H.Tutar > 0 
		--AND 
		--H.VadeTarihi <= @BitisTarihi 
		--AND KrediKartiTahsil.KKHesapInd=@Ind 
	--ORDER BY Tarih
GO

GO
CREATE VIEW [dbo].[KasaHareketleriDetayli]
AS
SELECT
	h.Ind,
	h.Owner,
	h.TipInd,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	(
		CASE WHEN (h.TipInd In (7))
		THEN h.Tutar
		ELSE 0.00
		END
	) as Giren,
	(
		CASE WHEN (h.TipInd In (8))
		THEN h.Tutar
		ELSE 0.00
		END
	) as Cikan,
	null as HesapAdi, 
	null as HesapKodu, 
	h.Aciklama,
	h.GirisTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Ind as MaxInd
FROM Hareketler as h WITH(NOLOCK)
WHERE (h.TipInd in (7,8))

UNION ALL 

SELECT
	h.Ind,
	h.Owner,
	h.TipInd,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	h.Tutar  as Giren,
	0.00 as Cikan,
	h.CariHesapAdi as HesapAdi, 
	h.CariHesapKodu as HesapKodu, 
	isnull(h.GelirAdi ,'') + ' ' + isnull(h.Aciklama,'') as Aciklama,
	h.GirisTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Ind as MaxInd	
FROM Hareketler as h WITH(NOLOCK)
WHERE (h.TipInd = 9 
	AND h.VardiyaKartInd IS NULL 
	AND h.Tutar>0 )
	AND h.KasayaIslensinMi IS NULL 

UNION ALL 

SELECT
	h.Ind,
	h.Owner,
	h.TipInd,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	0.00  as Giren,
	h.Tutar as Cikan,
	h.CariHesapAdi as HesapAdi, 
	h.CariHesapKodu as HesapKodu, 
	isnull(h.GiderAdi ,'') + ' ' + isnull(h.Aciklama,'') as Aciklama,
	h.GirisTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Ind as MaxInd	
FROM Hareketler as h WITH(NOLOCK)
WHERE (h.TipInd = 13 
	AND h.VardiyaKartInd IS NULL 
	AND h.Tutar>0 )
	AND h.KasayaIslensinMi IS NULL 

UNION ALL

SELECT
	k.Ind,
	k.Owner,
	k.TipInd,	
	k.ParaBirimi,
	CASE WHEN k.Kur > 0 THEN k.Kur ELSE Case k.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	k.GirenTutar as Giren,
	0.00 as Cikan,
	null as HesapAdi, 
	null as HesapKodu, 
	k.Aciklama,
	k.GirisTarihi,
	null as VadeTarihi,
	null as VardiyaKartInd	
	, 0.00 AS Bakiye
	,k.Ind as MaxInd
FROM KasaVirmanHareketleri as k WITH(NOLOCK)
WHERE k.GirenTutar > 0

UNION ALL

SELECT
	k.Ind,
	k.Owner,
	k.TipInd,
	k.ParaBirimi,
	CASE WHEN k.Kur > 0 THEN k.Kur ELSE Case k.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	0.00 as Giren,
	k.CikanTutar as Cikan,
	null as HesapAdi, 
	null as HesapKodu, 
	k.Aciklama,
	k.GirisTarihi,
	null as VadeTarihi,
	null as VardiyaKartInd
	, 0.00 AS Bakiye
	,k.Ind as MaxInd
FROM KasaVirmanHareketleri as k WITH(NOLOCK)
WHERE k.CikanTutar > 0

UNION ALL

SELECT
	h.Ind,
	h.Owner,
	h.TipInd,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	h.Tutar as Giren,
	0.00 as Cikan,
	h.CariHesapAdi as HesapAdi, 
	h.CariHesapKodu as HesapKodu, 
	h.Aciklama,
	h.IslemTarihi as GirisTarihi,
	h.VadeTarihi as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye
	,h.Ind as MaxInd
FROM Hareketler as h WITH(NOLOCK)
WHERE h.TipInd = 11 
	AND h.DurumInd=5 
	AND h.VardiyaKartInd IS NULL

UNION ALL

SELECT
	h.Ind,
	h.Owner,
	h.TipInd,
	Hesaplar.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	(
		CASE WHEN (h.TipInd In (19))
		THEN h.Tutar
		ELSE 0.00
		END
	) as Giren,
	(
		CASE WHEN (h.TipInd In (17))
		THEN Tutar
		ELSE 0.00
		END
	) as Cikan,
	h.BankaHesapAdi as HesapAdi, 
	h.BankaHesapKodu as HesapKodu, 
	h.Aciklama,
	h.GirisTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd	
	, 0.00 AS Bakiye
	,h.Ind as MaxInd
FROM Hareketler as h WITH(NOLOCK)
LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.BankaHesapInd
WHERE h.TipInd in (17,19) 
	AND h.VardiyaKartInd IS NULL

UNION ALL

SELECT 
	h.Ind,
	h.Owner,
	h.TipInd,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	h.Tutar AS Giren,
	0 AS Cikan,
	h.GelirAdi AS HesapAdi,
	h.GelirKodu AS HesapKodu,
	h.Aciklama,
	h.GirisTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye
	,h.Ind as MaxInd
FROM Hareketler as h WITH(NOLOCK)
WHERE h.TipInd = 25
	AND h.VardiyaKartInd IS NULL 

UNION ALL

SELECT 
	h.Ind,
	h.Owner,
	h.TipInd,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	0 AS Giren,
	h.Tutar AS Cikan,
	h.GiderAdi AS HesapAdi,
	h.GiderKodu AS HesapKodu,
	h.Aciklama,
	h.GirisTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye
	,h.Ind as MaxInd
FROM Hareketler as h WITH(NOLOCK)
WHERE h.TipInd = 26 
	AND h.VardiyaKartInd IS NULL

UNION ALL

SELECT
	h.Ind,
	h.Owner,
	h.TipInd,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	(
		CASE WHEN (h.TipInd In (20))
		THEN h.Tutar
		ELSE 0.00
		END
	) as Giren,
	(
		CASE WHEN (h.TipInd In (18))
		THEN h.Tutar
		ELSE 0.00
		END
	) as Cikan,
	h.PersonelHesapAdi as HesapAdi, 
	h.PersonelHesapKodu as HesapKodu, 
	h.Aciklama,
	h.GirisTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye
	,h.Ind as MaxInd
FROM Hareketler as h WITH(NOLOCK)
WHERE h.TipInd IN (18,20) 
	AND h.VardiyaKartInd IS NULL
	AND h.KasayaIslensinMi IS NULL 

UNION ALL

SELECT -- Maaş Dağıtım
	h.Ind,
	h.Owner,
	h.TipInd AS TipInd,
	h.ParaBirimi,
	CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	0.00 AS Giren,
	h.Tutar AS Cikan,
	h.PersonelHesapAdi AS HesapAdi,
	h.PersonelHesapKodu AS HesapKodu,
	Basliklar.Aciklama AS Aciklama,
	h.GirisTarihi AS GirisTarihi,
	null AS VadeTarihi, 
	null as VardiyaKartInd
	, 0.00 AS Bakiye
	,h.Ind as MaxInd
FROM Hareketler as h WITH(NOLOCK)
LEFT JOIN  Basliklar WITH(NOLOCK) ON h.BaslikInd = Basliklar.Ind
WHERE  h.TipInd = 31
	AND Basliklar.TipInd = 107
	AND Basliklar.HesapInd IS NULL 
	AND h.Tutar >0

UNION ALL

SELECT --Pompa Vardiya Gelir
	B.VardiyaNo AS Ind,
	B.Owner,
	39 as TipInd,		
	'TL' AS ParaBirimi,
	1.00 As Kur,
	SUM(CASE WHEN(h.TipInd = 39)
		THEN h.Tutar
		ELSE 0.00
		END) as Giren,
	0.00 as Cikan,
	CAST(B.VardiyaNo AS varchar(50)) + '. Vardiya' as HesapAdi,
	NULL AS HesapKodu,
	'Vardiya kabul' AS Aciklama,
	B.Tarih AS GirisTarihi,
	NULL AS VadeTarihi,
	NULL as VardiyaKartInd
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Basliklar as B WITH(NOLOCK)
LEFT JOIN Hareketler as h WITH(NOLOCK) ON h.VardiyaKartInd = B.Ind AND h.TipInd = 39
WHERE B.TipInd = 108 
	AND B.Tarih = B.Tarih
	AND B.Owner = B.Owner
	AND B.VardiyaNo = B.VardiyaNo
GROUP BY 
	B.VardiyaNo,
	B.Owner,
	B.Tarih,	
	h.TipInd
	
UNION ALL

SELECT --Pompa Vardiya Personel Fazla
	b.VardiyaNo AS Ind,
	h.Owner,
	56 AS TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	SUM(h.Tutar) AS Giren,
	0.00 AS Cikan,
	h.PersonelHesapAdi as HesapAdi, 
	h.PersonelHesapKodu as HesapKodu, 
	CAST(b.VardiyaNo AS varchar(50)) + '. Vardiya Personel Hesap Fazla' AS Aciklama,
	b.Tarih,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Hareketler as h WITH(NOLOCK)
INNER JOIN Basliklar b WITH(NOLOCK) ON h.VardiyaKartInd = b.Ind
WHERE b.TipInd = 108 AND h.TipInd = 56
	GROUP BY 
	b.VardiyaNo,
	h.Owner,
	b.Tarih,
	h.TipInd,
	h.PersonelHesapAdi,
	h.PersonelHesapKodu,
	h.VardiyaKartInd

UNION ALL

SELECT --Pompa Vardiya Personel Açık
	b.VardiyaNo AS Ind,
	h.Owner,
	55 AS TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	0.00 AS Giren,
	SUM(h.Tutar) AS Cikan,
	h.PersonelHesapAdi as HesapAdi, 
	h.PersonelHesapKodu as HesapKodu, 
	CAST(b.VardiyaNo AS varchar(50)) + '. Vardiya Personel Hesap Açık' AS Aciklama,
	b.Tarih,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Hareketler as h WITH(NOLOCK)
INNER JOIN Basliklar b WITH(NOLOCK) ON h.VardiyaKartInd = b.Ind
WHERE b.TipInd = 108 AND h.TipInd = 55 
	GROUP BY 
	b.VardiyaNo,
	h.Owner,
	b.Tarih,
	h.TipInd,
	h.PersonelHesapAdi,
	h.PersonelHesapKodu,
	h.VardiyaKartInd

UNION ALL

SELECT --Pompa Vardiya POS
	b.VardiyaNo AS Ind,
	h.Owner,
	10 AS TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	0.00 AS Giren,
	SUM(h.Tutar) AS Cikan,
	h.KKHesapAdi as HesapAdi, 
	h.KKHesapKodu as HesapKodu, 
	CAST(b.VardiyaNo AS varchar(50)) + '. Vardiya Kredi Kartlı Satış' AS Aciklama,
	b.Tarih,
	null as VadeTarihi,
	NULL AS VardiyaKartInd
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Hareketler as h WITH(NOLOCK)
INNER JOIN Basliklar b WITH(NOLOCK) ON h.VardiyaKartInd = b.Ind
WHERE b.TipInd = 108 AND h.TipInd = 10 
	GROUP BY 
	b.VardiyaNo,
	h.Owner,
	b.Tarih,
	h.KKHesapAdi,
	h.KKHesapKodu

UNION ALL

SELECT --Pompa Vardiya Veresiye
	b2.VardiyaNo AS Ind,
	b.Owner,
	37 AS TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	0.00 AS Giren,
	SUM(h.Tutar) AS Cikan,
	b.HesapAdi as HesapAdi, 
	b.HesapKodu as HesapKodu, 
	CAST(b2.VardiyaNo AS varchar(50)) + '. Vardiya Veresiye Fişi' AS Aciklama,
	b2.Tarih,
	null as VadeTarihi,
	NULL AS VardiyaKartInd
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Hareketler as h WITH(NOLOCK)
INNER JOIN Basliklar b WITH(NOLOCK) ON h.BaslikInd = b.Ind
LEFT JOIN Basliklar b2 WITH(NOLOCK) ON b.VardiyaKartInd = b2.Ind
WHERE b.TipInd = 111 AND h.TipInd = 37 AND b2.TipInd = 108
	GROUP BY 
	b.Owner,
	b2.VardiyaNo,
	b2.Tarih,
	b.HesapAdi,
	b.HesapKodu

UNION ALL

SELECT --Vardiya Smart Card Gider
	b.VardiyaNo AS Ind,
	h.Owner,
	2600 AS TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	0.00 AS Giren,
	SUM(ISNULL(h.Tutar,0)) AS Cikan,
	h.GiderAdi as HesapAdi, 
	h.GiderKodu as HesapKodu, 
	CAST(b.VardiyaNo AS varchar(50)) + '. Vardiya Smart Card Gideri' AS Aciklama,
	b.Tarih,
	NULL as VadeTarihi,
	NULL AS VardiyaKartInd
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Hareketler as h WITH(NOLOCK)
INNER JOIN Basliklar b WITH(NOLOCK) ON h.VardiyaKartInd = b.Ind
WHERE b.TipInd = 108 AND h.TipInd = 26 AND h.GiderInd = (SELECT DISTINCT S.GiderInd FROM StokDetaylari S WITH(NOLOCK) WHERE S.TipInd = 514 AND GiderMiCariMi=526)
	GROUP BY 
	b.VardiyaNo,
	h.Owner,
	b.Tarih,
	h.TipInd,
	h.GiderAdi,
	h.GiderKodu

UNION ALL

SELECT --Vardiya Extra Card Gider
	b.VardiyaNo AS Ind,
	h.Owner,
	2600 AS TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	0.00 AS Giren,
	SUM(ISNULL(h.Tutar,0)) AS Cikan,
	h.GiderAdi as HesapAdi, 
	h.GiderKodu as HesapKodu, 
	CAST(b.VardiyaNo AS varchar(50)) + '. Vardiya Extra Card Gideri' AS Aciklama,
	b.Tarih,
	NULL as VadeTarihi,
	NULL AS VardiyaKartInd
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Hareketler as h WITH(NOLOCK)
INNER JOIN Basliklar b WITH(NOLOCK) ON h.VardiyaKartInd = b.Ind
WHERE b.TipInd = 108 AND h.TipInd = 26 AND h.GiderInd = (SELECT DISTINCT S.GiderInd FROM StokDetaylari S WITH(NOLOCK) WHERE S.TipInd = 515 AND GiderMiCariMi=526)
	GROUP BY 
	b.VardiyaNo,
	h.Owner,
	b.Tarih,
	h.TipInd,
	h.GiderAdi,
	h.GiderKodu

UNION ALL

SELECT --Vardiya Smart Card Cari
	b.VardiyaNo AS Ind,
	h.Owner,
	2600 AS TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	0.00 AS Giren,
	SUM(ISNULL(h.Tutar,0)) AS Cikan,
	h.GiderAdi as HesapAdi, 
	h.GiderKodu as HesapKodu, 
	CAST(b.VardiyaNo AS varchar(50)) + '. Vardiya Smart Card Gideri' AS Aciklama,
	b.Tarih,
	NULL as VadeTarihi,
	NULL AS VardiyaKartInd
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Hareketler as h WITH(NOLOCK)
INNER JOIN Basliklar b WITH(NOLOCK) ON h.VardiyaKartInd = b.Ind
WHERE b.TipInd = 108 AND h.TipInd = 26 AND h.GiderInd = (SELECT DISTINCT S.GiderInd FROM StokDetaylari S WITH(NOLOCK) WHERE S.TipInd = 514 AND GiderMiCariMi=527)
	GROUP BY 
	b.VardiyaNo,
	h.Owner,
	b.Tarih,
	h.TipInd,
	h.GiderAdi,
	h.GiderKodu

UNION ALL

SELECT --Vardiya Extra Card Cari
	b.VardiyaNo AS Ind,
	h.Owner,
	2600 AS TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	0.00 AS Giren,
	SUM(ISNULL(h.Tutar,0)) AS Cikan,
	h.GiderAdi as HesapAdi, 
	h.GiderKodu as HesapKodu, 
	CAST(b.VardiyaNo AS varchar(50)) + '. Vardiya Extra Card Gideri' AS Aciklama,
	b.Tarih,
	NULL as VadeTarihi,
	NULL AS VardiyaKartInd
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Hareketler as h WITH(NOLOCK)
INNER JOIN Basliklar b WITH(NOLOCK) ON h.VardiyaKartInd = b.Ind
WHERE b.TipInd = 108 AND h.TipInd = 26 AND h.GiderInd = (SELECT DISTINCT S.GiderInd FROM StokDetaylari S WITH(NOLOCK) WHERE S.TipInd = 515 AND GiderMiCariMi=527)
	GROUP BY 
	b.VardiyaNo,
	h.Owner,
	b.Tarih,
	h.TipInd,
	h.GiderAdi,
	h.GiderKodu
	
UNION ALL

SELECT -- Market Gelir
	b.VardiyaNo AS Ind,	
	h.Owner,
	38 as TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	SUM(ISNULL(h.Miktar,0)*ISNULL(h.Fiyat,0)) AS Giren,
	0.00 as Cikan,
	CAST(b.VardiyaNo AS varchar(50)) + '. Market Vardiya' as HesapAdi, 
	B.HesapKodu as HesapKodu,  
	'Vardiya kabul' as Aciklama,
	B.Tarih as GirisTarihi,
	null as VadeTarihi,
	null as VardiyaKartInd	
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Hareketler as h WITH(NOLOCK)
INNER JOIN SatisKasasi AS SK WITH(NOLOCK) ON h.Ind = SK.IslemInd
INNER JOIN Basliklar AS B WITH(NOLOCK) ON SK.BaslikInd = b.Ind
WHERE
	b.TipInd = 505
	AND h.TipInd = 504
	AND SK.IsYeniSatis = 0
	AND SK.Tablo = 'Hareketler'
GROUP BY
	b.VardiyaNo,
	h.Owner,
	B.HesapKodu,
	h.TipInd,
	B.Tarih

UNION ALL

SELECT -- Market İrsaliyeli Satış Giriş
	Kasa.VardiyaNo AS Ind,
	Kasa.Owner,
	38 AS TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	(H.Miktar*H.Carpan*H.Fiyat) AS Giren,
	0.00 as Cikan,
	CAST(Kasa.VardiyaNo AS varchar(50)) + '. Market Vardiya' as HesapAdi,
	B.HesapKodu as HesapKodu,  
	'İrsaliyeli Satış' as Aciklama,
	Kasa.Tarih as GirisTarihi,
	null as VadeTarihi,
	null as VardiyaKartInd	
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM dbo.Basliklar AS Kasa WITH(NOLOCK)
	INNER JOIN SatisKasasi AS S WITH(NOLOCK) ON Kasa.Ind = S.BaslikInd		
	INNER JOIN Basliklar AS B WITH(NOLOCK) ON S.IslemInd = B.Ind
	INNER JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
	INNER JOIN Stoklar WITH(NOLOCK) ON  H.StokInd = Stoklar.Ind
	INNER JOIN StokGruplari AS SG WITH(NOLOCK) ON SG.Ind = Stoklar.GrupInd		
WHERE 
	B.TipInd = 104
	AND Kasa.TipInd = 505
	AND H.TipInd = 5
	AND S.Tablo = 'Basliklar'
	AND S.IsYeniSatis = 0
	AND Kasa.Owner = 7
GROUP BY
	Kasa.VardiyaNo,
	Kasa.Owner,
	B.HesapKodu,
	Kasa.Tarih,
	h.Miktar,
	h.Carpan,
	h.Fiyat

UNION ALL

SELECT -- Market İrsaliyeli Satış Çıkış
	Kasa.VardiyaNo AS Ind,
	Kasa.Owner,
	38 AS TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	0.00 AS Giren,
	(H.Miktar*H.Carpan*H.Fiyat) AS Cikan,
	CAST(Kasa.VardiyaNo AS varchar(50)) + '. Market Vardiya' as HesapAdi,
	B.HesapKodu as HesapKodu,  
	'İrsaliyeli Satış' as Aciklama,
	Kasa.Tarih as GirisTarihi,
	null as VadeTarihi,
	null as VardiyaKartInd	
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM dbo.Basliklar AS Kasa WITH(NOLOCK)
	INNER JOIN SatisKasasi AS S WITH(NOLOCK) ON Kasa.Ind = S.BaslikInd		
	INNER JOIN Basliklar AS B WITH(NOLOCK) ON S.IslemInd = B.Ind
	INNER JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
	INNER JOIN Stoklar WITH(NOLOCK) ON  H.StokInd = Stoklar.Ind
	INNER JOIN StokGruplari AS SG WITH(NOLOCK) ON SG.Ind = Stoklar.GrupInd		
WHERE 
	B.TipInd = 104
	AND Kasa.TipInd = 505
	AND H.TipInd = 5
	AND S.Tablo = 'Basliklar'
	AND S.IsYeniSatis = 0
	AND Kasa.Owner = 7
GROUP BY
	Kasa.VardiyaNo,
	Kasa.Owner,
	B.HesapKodu,
	Kasa.Tarih,
	h.Miktar,
	h.Carpan,
	h.Fiyat

UNION ALL

SELECT -- Market Gelir Satış İade
	b.VardiyaNo AS Ind,	
	h.Owner,
	38 as TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	SUM(ISNULL(H2.Miktar,0)*ISNULL(H2.Fiyat,0)) AS Giren,
	0.00 as Cikan,
	CAST(b.VardiyaNo AS varchar(50)) + '. Market Vardiya' as HesapAdi, 
	B.HesapKodu as HesapKodu,  
	'Pos Satış İade' as Aciklama,
	B.Tarih as GirisTarihi,
	null as VadeTarihi,
	null as VardiyaKartInd	
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Hareketler as h WITH(NOLOCK)
INNER JOIN Hareketler H2 WITH(NOLOCK) ON h.Ind = H2.BaslikInd
INNER JOIN SatisKasasi AS SK WITH(NOLOCK) ON h.Ind = SK.IslemInd
INNER JOIN Basliklar AS B WITH(NOLOCK) ON SK.BaslikInd = b.Ind
WHERE
	b.TipInd = 505
	AND h.TipInd = 504
	AND H2.TipInd = 513
	AND SK.IsYeniSatis = 0
	AND SK.Tablo = 'Hareketler'
GROUP BY
	b.VardiyaNo,
	h.Owner,
	B.HesapKodu,
	h.TipInd,
	B.Tarih

UNION ALL

SELECT --Market Vardiya Personel Fazla
	b.VardiyaNo AS Ind,
	h.Owner,
	56 AS TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	SUM(h.Tutar) AS Giren,
	0.00 AS Cikan,
	h.PersonelHesapAdi as HesapAdi, 
	h.PersonelHesapKodu as HesapKodu, 
	CAST(b.VardiyaNo AS varchar(50)) + '. Market Vardiya Personel Hesap Fazla' AS Aciklama,
	b.Tarih,
	null as VadeTarihi,
	NULL AS VardiyaKartInd
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Hareketler as h WITH(NOLOCK)
INNER JOIN Basliklar b WITH(NOLOCK) ON h.BaslikInd = b.Ind
WHERE b.TipInd = 505 AND h.TipInd = 56 AND h.Tutar > 0
	GROUP BY 
	b.VardiyaNo,
	h.Owner,
	b.Tarih,
	h.PersonelHesapAdi,
	h.PersonelHesapKodu

UNION ALL

SELECT --Market Vardiya Personel Açık
	b.VardiyaNo AS Ind,
	h.Owner,
	55 AS TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	0.00 AS Giren,
	SUM(h.Tutar) AS Cikan,
	h.PersonelHesapAdi as HesapAdi, 
	h.PersonelHesapKodu as HesapKodu, 
	CAST(b.VardiyaNo AS varchar(50)) + '. Market Vardiya Personel Hesap Açık' AS Aciklama,
	b.Tarih,
	null as VadeTarihi,
	NULL AS VardiyaKartInd
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Hareketler as h WITH(NOLOCK)
INNER JOIN Basliklar b WITH(NOLOCK) ON h.BaslikInd = b.Ind
WHERE b.TipInd = 505 AND h.TipInd = 55 AND h.Tutar > 0
	GROUP BY 
	b.VardiyaNo,
	h.Owner,
	b.Tarih,
	h.PersonelHesapAdi,
	h.PersonelHesapKodu

UNION ALL

SELECT --Market Vardiya POS
	b.VardiyaNo AS Ind,
	h.Owner,
	10 AS TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	0.00 AS Giren,
	SUM(h.Tutar) AS Cikan,
	h.KKHesapAdi as HesapAdi, 
	h.KKHesapKodu as HesapKodu, 
	CAST(b.VardiyaNo AS varchar(50)) + '. Market Vardiya Kredi Kartı' AS Aciklama,
	b.Tarih,
	NULL as VadeTarihi,
	NULL AS VardiyaKartInd
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Hareketler as h WITH(NOLOCK)
INNER JOIN Basliklar b WITH(NOLOCK) ON h.BaslikInd = b.Ind
WHERE b.TipInd = 505 AND h.TipInd = 10 
	GROUP BY 
	b.VardiyaNo,
	h.Owner,
	b.Tarih,
	h.KKHesapAdi,
	h.KKHesapKodu

UNION ALL

SELECT -- Market Satış İade
	b.VardiyaNo AS Ind,	
	h.Owner,
	38 as TipInd,
	'TL' AS ParaBirimi,
	1.00 AS Kur,
	0.00 AS Giren,
	SUM(h2.Miktar*h2.Fiyat) as Cikan,
	CAST(b.VardiyaNo AS varchar(50)) + '. Market Vardiya' as HesapAdi, 
	B.HesapKodu as HesapKodu,  
	'Pos Satış İade' as Aciklama,
	B.Tarih as GirisTarihi,
	null as VadeTarihi,
	null as VardiyaKartInd	
	, 0.00 AS Bakiye
	,max(h.Ind) as MaxInd
FROM Hareketler as h WITH(NOLOCK)
INNER JOIN Hareketler H2 WITH(NOLOCK) ON H.Ind = H2.BaslikInd
INNER JOIN SatisKasasi AS SK WITH(NOLOCK) ON h.Ind = SK.IslemInd
INNER JOIN Basliklar AS B WITH(NOLOCK) ON SK.BaslikInd = b.Ind
WHERE
	h.TipInd = 504
	AND h2.TipInd = 513
	AND b.TipInd = 505
	AND SK.IsYeniSatis = 0
	AND SK.Tablo = 'Hareketler'
GROUP BY
	b.VardiyaNo,
	h.Owner,
	B.HesapKodu,
	h.TipInd,
	B.Tarih


GO
GO
CREATE VIEW [dbo].[KasaHareketleriForDevir]
AS
SELECT
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	--CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	(
		CASE WHEN (h.TipInd In (7))
		THEN ISNULL(h.Tutar,0)
		ELSE 0.00
		END
	) as Giren,
	(
		CASE WHEN (h.TipInd In (8))
		THEN ISNULL(h.Tutar,0)
		ELSE 0.00
		END
	) as Cikan,
	null as HesapAdi, 
	null as HesapKodu, 
	h.Aciklama,
	h.GirisTarihi,
	h.AktarimTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd, 
	0.00 AS Bakiye,
	h.Aktarildi 
FROM Hareketler as h WITH(NOLOCK)
WHERE (h.TipInd in (7,8))

UNION ALL 

SELECT
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	--CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	ISNULL(h.Tutar,0)  as Giren,
	0.00 as Cikan,
	h.CariHesapAdi as HesapAdi, 
	h.CariHesapKodu as HesapKodu, 
	isnull(h.GelirAdi ,'') + ' ' + isnull(h.Aciklama,'') as Aciklama,
	h.GirisTarihi,
	h.AktarimTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Aktarildi 	
FROM Hareketler as h WITH(NOLOCK)
WHERE (h.TipInd = 9 
	AND h.VardiyaKartInd IS NULL 
	AND h.Tutar>0 )
	AND h.KasayaIslensinMi IS NULL 

UNION ALL 

SELECT
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	--CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	0.00  as Giren,
	ISNULL(h.Tutar,0) as Cikan,
	h.CariHesapAdi as HesapAdi, 
	h.CariHesapKodu as HesapKodu, 
	isnull(h.GiderAdi ,'') + ' ' + isnull(h.Aciklama,'') as Aciklama,
	h.GirisTarihi,
	h.AktarimTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Aktarildi 
FROM Hareketler as h WITH(NOLOCK)
WHERE (h.TipInd = 13 
	AND h.VardiyaKartInd IS NULL 
	AND h.Tutar>0 )
	AND h.KasayaIslensinMi IS NULL 

UNION ALL

SELECT
	k.Ind,
	0 as KdvOrani,
	k.Owner,
	k.TipInd,
	null,
	null,
	null,
	null as MuhasebeKodu,
	k.ParaBirimi,
	--CASE WHEN k.Kur > 0 THEN k.Kur ELSE Case k.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	ISNULL(k.GirenTutar,0) as Giren,
	0.00 as Cikan,
	null as HesapAdi, 
	null as HesapKodu, 
	k.Aciklama,
	k.GirisTarihi,
	k.AktarimTarihi,
	null as VadeTarihi,
	null as VardiyaKartInd, 
	0.00 AS Bakiye,
	k.Aktarildi
FROM KasaVirmanHareketleri as k WITH(NOLOCK)
WHERE k.GirenTutar > 0

UNION ALL

SELECT
	k.Ind,
    0 as KdvOrani,
	k.Owner,
	k.TipInd,
	null,
	null,
	null,
	null as MuhasebeKodu,
	k.ParaBirimi,
	--CASE WHEN k.Kur > 0 THEN k.Kur ELSE Case k.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	0.00 as Giren,
	ISNULL(k.CikanTutar,0) as Cikan,
	null as HesapAdi, 
	null as HesapKodu, 
	k.Aciklama,
	k.GirisTarihi,
	k.AktarimTarihi,
	null as VadeTarihi,
	null as VardiyaKartInd
	, 0.00 AS Bakiye,
	k.Aktarildi
FROM KasaVirmanHareketleri as k WITH(NOLOCK)
WHERE k.CikanTutar > 0

UNION ALL

SELECT
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	--CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	ISNULL(h.Tutar,0) as Giren,
	0.00 as Cikan,
	h.CariHesapAdi as HesapAdi, 
	h.CariHesapKodu as HesapKodu, 
	h.Aciklama,
	h.IslemTarihi as GirisTarihi,
	h.VadeTarihi as VadeTarihi,
	h.AktarimTarihi as AktarimTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Aktarildi 
FROM Hareketler as h WITH(NOLOCK)
WHERE h.TipInd = 11 
	AND h.DurumInd=5 
	AND h.VardiyaKartInd IS NULL

UNION ALL

SELECT
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	Hesaplar.ParaBirimi,
	--CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	(
		CASE WHEN (h.TipInd In (19))
		THEN ISNULL(h.Tutar,0)
		ELSE 0.00
		END
	) as Giren,
	(
		CASE WHEN (h.TipInd In (17))
		THEN ISNULL(Tutar,0)
		ELSE 0.00
		END
	) as Cikan,
	h.BankaHesapAdi as HesapAdi, 
	h.BankaHesapKodu as HesapKodu, 
	h.Aciklama,
	h.GirisTarihi,
	h.AktarimTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd	
	, 0.00 AS Bakiye,
	h.Aktarildi 
FROM Hareketler as h WITH(NOLOCK)
LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.BankaHesapInd
WHERE h.TipInd in (17,19) 
	AND h.VardiyaKartInd IS NULL

UNION ALL

SELECT 
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	--CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	ISNULL(h.Tutar,0) AS Giren,
	0 AS Cikan,
	h.GelirAdi AS HesapAdi,
	h.GelirKodu AS HesapKodu,
	h.Aciklama,
	h.GirisTarihi,
	h.AktarimTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Aktarildi 

FROM Hareketler as h WITH(NOLOCK)
WHERE h.TipInd = 25
	AND h.VardiyaKartInd IS NULL 

UNION ALL

SELECT 
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	--CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	0 AS Giren,
	ISNULL(h.Tutar,0) AS Cikan,
	h.GiderAdi AS HesapAdi,
	h.GiderKodu AS HesapKodu,
	h.Aciklama,
	h.GirisTarihi,
	h.AktarimTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Aktarildi 
FROM Hareketler as h WITH(NOLOCK)
WHERE h.TipInd = 26 
	AND h.VardiyaKartInd IS NULL

UNION ALL

SELECT
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	--CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	(
		CASE WHEN (h.TipInd In (20))
		THEN ISNULL(h.Tutar,0)
		ELSE 0.00
		END
	) as Giren,
	(
		CASE WHEN (h.TipInd In (18))
		THEN ISNULL(h.Tutar, 0)
		ELSE 0.00
		END
	) as Cikan,
	h.PersonelHesapAdi as HesapAdi, 
	h.PersonelHesapKodu as HesapKodu, 
	h.Aciklama,
	h.GirisTarihi,
	h.AktarimTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Aktarildi 
FROM Hareketler as h WITH(NOLOCK)
WHERE h.TipInd IN (18,20) 
	AND h.VardiyaKartInd IS NULL
	AND h.KasayaIslensinMi IS NULL 



UNION ALL

SELECT 
	e.VardiyaNo AS Ind,
    0 as KdvOrani,
	e.Owner,
	38 as TipInd,	
	null,
	null,	
	null,	
	null as MuhasebeKodu,
	e.ParaBirimi,
	--CASE WHEN e.Kur > 0 THEN e.Kur ELSE Case e.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	SUM(CASE WHEN(h.ParaBirimi = e.ParaBirimi AND h.TipInd = 38)
		THEN ISNULL(h.Tutar,0)
		ELSE 0.00
		END) as Giren,
	0.00 as Cikan,
	CAST(e.VardiyaNo AS varchar(50)) + '. Vardiya' as HesapAdi,
	NULL AS HesapKodu,
	'Vardiya kabul' AS Aciklama,
	e.Tarih AS GirisTarihi,
	e.AktarimTarihi AS AktarimTarihi,
	NULL AS VadeTarihi,
	NULL as VardiyaKartInd, 
	0.00 AS Bakiye,
	h.Aktarildi

FROM EskiVardiyaTarihleriForDevir as e WITH(NOLOCK)
LEFT JOIN Basliklar WITH(NOLOCK) ON Basliklar.TipInd = 108 AND Basliklar.Tarih = e.Tarih AND Basliklar.VardiyaNo = e.VardiyaNo AND Basliklar.Owner = e.Owner
LEFT JOIN Hareketler as h WITH(NOLOCK) ON h.VardiyaKartInd = Basliklar.Ind AND h.TipInd = 38  AND e.ParaBirimi = h.ParaBirimi
WHERE Basliklar.TipInd = 108 
	AND Basliklar.Tarih = e.Tarih
	AND Basliklar.Owner = e.Owner
	AND Basliklar.VardiyaNo = e.VardiyaNo
	AND e.ParaBirimi = h.ParaBirimi
GROUP BY 
	e.ParaBirimi,
	--e.Kur,
	e.VardiyaNo,
	e.Owner,
	e.Tarih,
	e.AktarimTarihi,
	h.TipInd,
	h.Aktarildi,
	h.KDVOrani 

UNION ALL

SELECT
	b.Ind as Ind,
	h.KDVOrani,
	b.Owner,
	h.TipInd as TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	--CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	ISNULL(h.Tutar,0) as Giren,
	0.00 as Cikan,
	h.PersonelHesapAdi as HesapAdi, 
	h.PersonelHesapKodu as HesapKodu,  
	'Vardiya kabul' as Aciklama,
	b.Tarih as GirisTarihi,
	h.AktarimTarihi as AktarimTarihi,
	null as VadeTarihi,
	null as VardiyaKartInd, 
	0.00 AS Bakiye,
	h.Aktarildi 
FROM Basliklar as b WITH(NOLOCK)
LEFT JOIN Hareketler as h WITH(NOLOCK) ON h.BaslikInd = b.Ind
WHERE
	b.TipInd = 505
	AND h.TipInd = 38

UNION ALL

SELECT 
	h.Ind,
	h.KDVOrani,
	h.Owner,
	h.TipInd AS TipInd,
	h.GelirInd,
	h.GiderInd,
	h.OTVTutar,
	null as MuhasebeKodu,
	h.ParaBirimi,
	--CASE WHEN h.Kur > 0 THEN h.Kur ELSE Case h.ParaBirimi when 'TL' Then 1.00 end END As Kur,
	0.00 AS Giren,
	h.Tutar AS Cikan,
	h.PersonelHesapAdi AS HesapAdi,
	h.PersonelHesapKodu AS HesapKodu,
	Basliklar.Aciklama AS Aciklama,
	h.GirisTarihi AS GirisTarihi,
	h.AktarimTarihi AS AktarimTarihi,
	null AS VadeTarihi, 
	null as VardiyaKartInd
	, 0.00 AS Bakiye,
	h.Aktarildi 
FROM Hareketler as h WITH(NOLOCK)
LEFT JOIN  Basliklar WITH(NOLOCK) ON h.BaslikInd = Basliklar.Ind
WHERE  h.TipInd = 31
	AND Basliklar.TipInd = 107
	AND Basliklar.HesapInd IS NULL 
	AND h.Tutar >0
GO



GO
CREATE VIEW [dbo].[KasaHareketleriVardiyaTahsilatOdeme]
AS
SELECT
	h.Ind,
	h.Owner,
	h.TipInd,
	h.GelirInd,
	h.GiderInd,
	h.ParaBirimi,
	(
		CASE WHEN (h.TipInd In (7,9))
		THEN ISNULL(h.Tutar,0)
		ELSE 0.00
		END
	) as Giren,
	(
		CASE WHEN (h.TipInd In (8,13))
		THEN ISNULL(h.Tutar,0)
		ELSE 0.00
		END
	) as Cikan,
	h.CariHesapAdi as HesapAdi, 
	h.CariHesapKodu as HesapKodu, 
	h.Aciklama,
	h.GirisTarihi,
	null as VadeTarihi,
	h.VardiyaKartInd
	, 0.00 AS Bakiye
	,h.Aktarildi
FROM Hareketler as h WITH(NOLOCK)
WHERE (h.TipInd in (9,13))
AND h.VardiyaKartInd IN (select Ind From Basliklar WHERE TipInd=108)






GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KasaMasrafHareketleri]
AS
	SELECT h.Ind,
		h.Owner,
		h.TipInd AS HareketTipInd,
		ISNULL(h.ParaBirimi, 'TL') AS ParaBirimi,
		0.00  as Giren,
		ISNULL(h.Tutar,0) as Cikan,
		h.GiderKodu AS GiderKodu,
		h.GiderInd AS GiderInd,
		ISNULL(h.GiderAdi ,'') AS GiderAdi,
		ISNULL(h.GiderAdi ,'') + ' ' + ISNULL(h.Aciklama,'') as Aciklama,
		h.GirisTarihi,
		null as VadeTarihi,
		h.VardiyaKartInd
		, 0.00 AS Bakiye,
		h.Aktarildi,
		b.Ind as BaslikInd,
		b.Tarih as BaslikTarih,
		b.TipInd AS BaslikTipInd,
		b.OdemeTarihi AS BaslikOdemeTarihi,
		b.BelgeNo,
		b.HesapInd,
		hs.VergiNo AS CariVergiNo,
		hs.HesapKodu AS CariHesapKodu,
		hs.HesapAdi AS CariHesapAdi
	FROM Hareketler AS h WITH(NOLOCK)
	INNER JOIN Basliklar AS b WITH(NOLOCK) ON b.Ind = h.BaslikInd
	INNER JOIN Hesaplar AS hs WITH(NOLOCK) ON hs.Ind = b.HesapInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KKartlariWithBakiye]
AS
		SELECT  
			Hesaplar.Owner,
			Hesaplar.Ind,
			Hesaplar.HesapKodu,
			Hesaplar.UyeIsyeriNo, 
			Hesaplar.HesapAdi,
			Hesaplar.MuhasebeKodu,
			Hesaplar.BankaKomisyon,
			Hesaplar.MusteriKomisyon,
			Hesaplar.Vade,
			SUM(
			CASE WHEN Hareketler.Tutar IS NULL
			THEN 0
			ELSE
				Hareketler.Tutar
			END) as Bakiye,
			Hesaplar.BankaInd,
			Hesaplar.StokInd,
			Hesaplar.DBSKullan,
			CASE WHEN Hesaplar.Owner IS NULL
			THEN 'Merkez'
			ELSE
				Subeler.SubeAdi
			END AS SubeAdi
		FROM Hesaplar WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hesaplar.Ind=Hareketler.KKHesapInd AND Hareketler.TipInd=10 AND DurumInd=4
		LEFT JOIN Subeler WITH(NOLOCK) ON Hesaplar.Owner = Subeler.Ind
		WHERE Hesaplar.TipInd=203
		GROUP BY 
			Hesaplar.Owner,
			Hesaplar.Ind,
			Hesaplar.HesapKodu,
			Hesaplar.UyeIsyeriNo,
			Hesaplar.HesapAdi,
			Hesaplar.MuhasebeKodu,
			Hesaplar.BankaInd,
			Hesaplar.StokInd,
			Hesaplar.DBSKullan,
			Hesaplar.BankaKomisyon,
			Hesaplar.MusteriKomisyon,
			Hesaplar.Vade,
			Subeler.SubeAdi
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KKliTahsilatVardiyaTutarlariTurev]
AS
	SELECT 
		NULL AS Owner
		, Hareketler.VardiyaKartInd,
		SUM(Hareketler.Tutar) AS Tutar
	FROM 
		Hareketler  WITH(NOLOCK)
	WHERE 
		TipInd = 533
	GROUP BY
		Hareketler.VardiyaKartInd
GO
CREATE VIEW [dbo].[KKTahsilatListesi]
AS
SELECT DISTINCT
	B.Ind,
	B.Owner,
	B.TipInd,
	B.Tarih,
	B.BelgeNo,
	HS2.Ind AS BankaHesapInd,
	HS2.HesapKodu AS BankaHesapKodu,
	HS2.HesapAdi AS BankaHesapAdi,
	HS2.BankaAdi,
	HS2.ParaBirimi,
	HS2.ParaBirimi as BankaParaBirimi,
	B.Aciklama,
	H.KKHesapInd,
	H.KKHesapKodu,
	H.KKHesapAdi,
	HS3.MuhasebeKodu AS KKMuhHesapKodu,
	B.GiderInd,
	B.GiderKodu,
	B.GiderAdi,
	B.Iskonto AS Komisyon,
	B.TahsilatTutari,
	B.Aktarildi,
	B.AktarildiBG
FROM Basliklar B  WITH(NOLOCK)
INNER JOIN Hareketler H  WITH(NOLOCK) ON H.BaslikInd = B.Ind
INNER JOIN Hesaplar HS  WITH(NOLOCK) ON B.HesapInd = HS.Ind
INNER JOIN Hesaplar HS2  WITH(NOLOCK) ON HS2.Ind = HS.BankaInd
INNER JOIN Hesaplar HS3  WITH(NOLOCK) ON HS3.Ind = H.KKHesapInd
WHERE B.TipInd = 105

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KKVardiyaTutarlariTurev]
AS
	SELECT 
		NULL AS Owner
		, Hareketler.VardiyaKartInd,
		SUM(Hareketler.Tutar) AS Tutar
	FROM 
		Hareketler  WITH(NOLOCK)
	WHERE 
		TipInd = 10 OR TipInd = 54
	GROUP BY
		Hareketler.VardiyaKartInd

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KKVardiyaTutarlariView]
AS
	SELECT 
		Hareketler.Ind,
		Hareketler.Owner,
		Hareketler.KKHesapInd,
		Hareketler.KKHesapKodu,
		Hareketler.KKHesapAdi,
		Hareketler.GirisTarihi,
		Hareketler.Tutar,
		Hareketler.GunSonu
		, Hareketler.VardiyaKartInd
	FROM Hareketler  WITH(NOLOCK)
	WHERE
		(TipInd = 10 OR TipInd = 54)

GO
GO
CREATE VIEW [dbo].[KonsolideAlimSatim]
AS
		SELECT
				'Alis' AS Tip,		g.BaslikInd,		g.Owner,		g.Tarih,		0 AS HesapInd,		g.StokInd,		s.GrupInd,		s.StokKodu,		s.StokAdi, 
				CASE g.TipIndAltHareket
					WHEN 2 THEN (ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h  WITH(NOLOCK) WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00))
					ELSE k.KDVOrani
					END AS KDVOrani,
				CASE g.TipIndAltHareket
					WHEN 112 THEN SUM(g.Giren)
					ELSE SUM(g.Miktar * ISNULL(g.Carpan,1))
					END 
				AS AlisMiktar, 
			CASE g.TipIndAltHareket
				WHEN 3 THEN SUM( ( CASE WHEN g.NetMiktar=0 THEN g.Miktar ELSE ISNULL(g.NetMiktar, g.Miktar) END ) * g.Carpan * g.Fiyat) 
				WHEN 2 THEN SUM( g.Miktar * g.Carpan * (g.Fiyat / (1 + (k.KdvOrani / 100))))
				WHEN 112 THEN SUM(g.Giren * g.Fiyat)
				END as AlisTutar, 
				0.00 AS SatisMiktar,		0.00 AS SatisTutar,		'' AS HesapKodu,		0 AS FisSayisi,		'' AS HesapInds
		FROM
			GirisCikisHareketleri as g   WITH(NOLOCK)
			LEFT OUTER JOIN dbo.Stoklar AS s  WITH(NOLOCK) ON s.Ind = g.StokInd 
			LEFT JOIN dbo.KDVGruplari AS k  WITH(NOLOCK) ON k.Ind = s.AlisKDVGrupInd
		WHERE
			g.TipIndAltHareket IN (2, 3 , 112) AND g.Giren > 0
			and g.StokInd IN (SELECT StokInd FROM Hesaplar  WITH(NOLOCK) WHERE TipInd = 205 AND StokInd IS NOT NULL)
		GROUP BY
			g.Owner, 	g.Tarih,	g.DepoInd, 	g.StokInd,	s.GrupInd, 	s.StokKodu, 	s.StokAdi, 	g.HesapInd,	g.BaslikInd,	g.TipIndAltHareket,	g.Fiyat, 	k.KdvOrani
UNION ALL
		SELECT   	
			'Satis' AS Tip,		g.BaslikInd,		g.Owner,		g.Tarih,		g.HesapInd,		g.StokInd,		s.GrupInd,		s.StokKodu,		s.StokAdi,		k.KDVOrani, 
			0.00 AS AlisMiktar, 		0.00 AS AlisTutar,
			SUM(g.Miktar * ISNULL(g.Carpan,1)) AS SatisMiktar,
			CASE 
				WHEN g.TipIndAltHareket=6 
					THEN SUM(g.Miktar * g.Carpan * g.Fiyat) 
				WHEN g.TipIndAltHareket=5 OR g.TipIndAltHareket=39 OR g.TipIndAltHareket=40
					THEN SUM(g.Miktar * g.Carpan * (g.Fiyat /(1+(k.KDVOrani/100)))) 
			END 	
			AS SatisTutar, 		'' AS HesapKodu,		0 AS FisSayisi,		'' AS HesapInds
		FROM
			GirisCikisHareketleri as g   WITH(NOLOCK)
			LEFT OUTER JOIN dbo.Stoklar AS s  WITH(NOLOCK) ON s.Ind = g.StokInd 
			LEFT JOIN dbo.KDVGruplari AS k  WITH(NOLOCK) ON k.Ind = s.SatisKDVGrupInd
		WHERE
			g.TipIndAltHareket  IN (6, 5, 39, 40) AND g.Miktar > 0
			AND g.StokInd IN (SELECT StokInd FROM Hesaplar  WITH(NOLOCK) WHERE TipInd = 205 AND StokInd IS NOT NULL)
		GROUP BY
			g.Owner, 		g.Tarih,		g.DepoInd, 		g.StokInd,		s.GrupInd, 		s.StokKodu, 		s.StokAdi, 		g.HesapInd,		g.BaslikInd,			g.TipIndAltHareket,        
			g.Fiyat,		k.KdvOrani,		g.KasiyerKodu



	--UNION ALL
	--SELECT    
	--	'Diger' AS Tip,
	--	g.BaslikInd,
	--	g.Owner, 
	--	g.Tarih,
	--	g.HesapInd,
	--	g.StokInd,
	--	g.GrupInd,
	--	g.StokKodu,
	--	g.StokAdi,
	--	g.KDVOrani, 
	--	0.00 AS AlisMiktar,
	--	0.00 AS AlisTutar,
	--	g.Miktar		AS SatisMiktar,
	--	g.Tutar 		AS SatisTutar,
	--	'' AS HesapKodu,
	--	0 AS FisSayisi,
	--	'' AS HesapInds
	--FROM
	--	SatisRaporDokumu AS g
	--	--LEFT JOIN Hareketler AS h ON h.BaslikInd = g.BaslikInd AND g.StokInd = h.StokInd
	--WHERE
	--	g.StokInd IN (SELECT StokInd FROM Hesaplar WHERE TipInd = 205 AND StokInd IS NOT NULL)

GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KrediKartiTahsilatDevirleri]
AS

SELECT
	h.Ind as HesapInd,
	h.Owner,
	SUM(k.TahsilatDevir) as TahsilatDevir
FROM Hesaplar as h  WITH(NOLOCK)
LEFT JOIN KrediKartiTahsilat as k  WITH(NOLOCK) ON k.HesapInd = h.Ind
WHERE h.TipInd = 203
GROUP BY
	h.Ind,
	h.Owner
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[KullanicilarinRolleri]
AS
	SELECT
		NULL AS Owner,
		K.Ind, 
		K.SubeInd, 
		K.RolInd, 
		R.Yetkiler, 
		ISNULL(K.KullaniciInd, 0) AS KullaniciInd 
	FROM 
		KullaniciRolleri as K 
		LEFT JOIN Roller as R  WITH(NOLOCK) ON K.RolInd = R.Ind
	WHERE
		R.Yetkiler IS NOT NULL
	--WHERE KullaniciInd = 1
GO
CREATE VIEW [dbo].[KurFarkiHareketleri]
AS


	WITH VardiyaNakit(VardiyaKartInd, GirisTarihi, PersonelHesapInd, PersonelHesapKodu, PersonelHesapAdi) AS
	(
		SELECT b.Ind, b.Tarih, h.PersonelHesapInd, h.PersonelHesapKodu, h.PersonelHesapAdi 
		FROM Basliklar b  WITH(NOLOCK) INNER JOIN Hareketler h  WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd	
		WHERE b.TipInd = 108 AND h.TipInd = 35 AND h.PersonelHesapInd != 0 
	)
	SELECT 
			Hareketler.Ind,
			Hareketler.Owner,
			Hareketler.TipInd,
			KurBilgileri.Ind as KasaTipInd,
			Hareketler.ParaBirimi,
			Hareketler.Kur,
			Hareketler.Tutar,
			Hareketler.Aciklama,
			Hareketler.VardiyaKartInd,
			VardiyaNakit.PersonelHesapInd,
			VardiyaNakit.PersonelHesapKodu,
			VardiyaNakit.PersonelHesapAdi,
			Hareketler.CariHesapInd,
			Hareketler.CariHesapKodu,
			Hareketler.CariHesapAdi,
			'Vardiya Nakit' AS IslemTipi,
			VardiyaNakit.GirisTarihi,
			Hareketler.KasaTahsilatInd
		FROM KurBilgileri  WITH(NOLOCK)
		INNER JOIN Hareketler  WITH(NOLOCK) ON KurBilgileri.ParaBirimi=Hareketler.ParaBirimi 
		INNER JOIN VardiyaNakit  WITH(NOLOCK) ON VardiyaNakit.VardiyaKartInd = Hareketler.VardiyaKartInd AND TipInd = 38
				
	UNION ALL
					
		SELECT 
		Hareketler.Ind,
		Hareketler.Owner,
		Hareketler.TipInd,
		KurBilgileri.Ind as KasaTipInd,
		Hareketler.ParaBirimi,
		Hareketler.Kur,
		Hareketler.Tutar,
		Hareketler.Aciklama,
		Hareketler.VardiyaKartInd,
		Hareketler.PersonelHesapInd,
		Hareketler.PersonelHesapKodu,
		Hareketler.PersonelHesapKodu,
		Hareketler.CariHesapInd,
		Hareketler.CariHesapKodu,
		Hareketler.CariHesapAdi,
		IslemTipi =
		CASE WHEN Hareketler.TipInd = 9 THEN 'Cari Nakit Tahsilat'
				WHEN Hareketler.TipInd = 12 THEN 'Cari Bankadan Tahsilat'
				WHEN Hareketler.TipInd = 88 THEN 'Kur Farki Tahsilat'
		END,
		Hareketler.GirisTarihi,
		Hareketler.KasaTahsilatInd
	FROM Hareketler  WITH(NOLOCK)
	INNER JOIN KurBilgileri  WITH(NOLOCK) ON KurBilgileri.ParaBirimi = Hareketler.ParaBirimi
	WHERE TipInd in (9,12,88)
				
					 

GO



GO
CREATE VIEW [dbo].[LokasyonCariAyrinti]
AS
SELECT L.LokasyonAdi AS LokasyonAdi, L.LokasyonKodu AS LokasyonKodu, LC.Ind, LC.CariInd, LC.LokasyonInd, LC.Aktif, LC.Tutar, LC.Owner FROM Lokasyon AS L  WITH(NOLOCK)
INNER JOIN LokasyonCari AS LC  WITH(NOLOCK)
ON L.Ind = LC.LokasyonInd
GO
CREATE VIEW [dbo].[MarketKKTahsilatListesi]
AS
SELECT 
B.Tarih,
B.Owner,
H.KKHesapInd,
H.KKHesapKodu,
H.KKHesapAdi,
H.Tutar
FROM Basliklar B  WITH(NOLOCK) INNER JOIN Hareketler H  WITH(NOLOCK)
ON B.Ind = H.BaslikInd
WHERE B.TipInd = 505 AND H.TipInd = 10
GO
GO
CREATE VIEW [dbo].[MiktariGuncellenmisSayimHareketleri]
AS
SELECT
		h.Ind, 
		h.TipInd, 
		h.Owner, 
		h.BaslikInd, 
		h.StokInd, 
		h.StokKodu, 
		h.StokAdi, 
		h.DepoInd, 
		h.DepoAdi, 
		h.DepoKodu, 
		h.Miktar,
		h.SayimMiktari,
		ISNULL(SAF.Fiyat, 0) AS AlisFiyati,
		ISNULL(SSF.Fiyat, 0) AS SatisFiyati,
		st.GrupInd as StokGrupInd,
		sg.GrupAdi as StokGrupAdi,
		sg.GrupAdi as StokOrtaGrupAdi,
		sg.GrupAdi as StokUstGrupAdi

	FROM dbo.Hareketler AS h  WITH(NOLOCK)
	INNER JOIN dbo.Stoklar as st  WITH(NOLOCK) on st.Ind = h.StokInd
	CROSS APPLY dbo.SonSatisFiyatiForSayim(GETDATE(), h.StokInd, h.Owner) AS SSF
	CROSS APPLY dbo.SonAlisFiyatiIskontoluForSayim(GETDATE(), h.StokInd, h.Owner) AS SAF
	INNER JOIN dbo.StokGruplari sg  WITH(NOLOCK) ON sg.Ind = st.GrupInd
	WHERE 
		(h.TipInd = 112) AND 
		(h.BaslikInd IS NULL)



GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[MuhteviyatGenelDepoListesi]
AS
	SELECT 
		TOP (100) PERCENT dbo.Hesaplar.Owner,
		dbo.Hesaplar.HesapKodu,
		dbo.Hesaplar.HesapAdi,
		dbo.Hesaplar.Ind,
		s.StokKodu,
		s.StokAdi,
		dbo.Hesaplar.Kapasite, 
		SUM(g.Giren) - SUM(g.Cikan) AS Miktar,
		(SUM(g.Giren) - SUM(g.Cikan)) / ISNULL(dbo.Hesaplar.Kapasite,1) * 100 AS KulOran,
		g.DepoInd
	FROM
		dbo.Hesaplar  WITH(NOLOCK)
		LEFT OUTER JOIN GirisCikisHareketleri AS g  WITH(NOLOCK) ON dbo.Hesaplar.Ind = g.DepoInd
		LEFT OUTER JOIN dbo.Stoklar AS s  WITH(NOLOCK) ON s.Ind = dbo.Hesaplar.StokInd
	WHERE
		(g.DepoInd IS NOT NULL) AND (dbo.Hesaplar.Kapasite IS NOT NULL) and (dbo.Hesaplar.Kapasite != 0)
	GROUP BY
		dbo.Hesaplar.Owner,
		dbo.Hesaplar.Kapasite,
		g.DepoInd,
		dbo.Hesaplar.HesapKodu,
		dbo.Hesaplar.HesapAdi,
		dbo.Hesaplar.Ind,
		s.StokKodu, 
		s.StokAdi
	--ORDER BY
		--dbo.Hesaplar.Owner

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[MuhteviyatOlmayanStoklar]
AS
SELECT     Stoklar.Owner,dbo.Stoklar.Ind, dbo.Stoklar.StokAdi, dbo.Stoklar.StokKodu
FROM         dbo.Stoklar  WITH(NOLOCK) INNER JOIN
                      dbo.Hesaplar  WITH(NOLOCK) ON dbo.Hesaplar.TipInd = 205 AND dbo.Stoklar.Ind <> dbo.Hesaplar.StokInd
GO
CREATE VIEW [dbo].[OnayliAktifSatisKasalari]
AS

	SELECT 
		OSK.Owner,
		OSK.KullaniciInd,
		OSK.BaslikInd,
		B.Tarih,
		B.HesapKodu AS PersonelKodu,
		B.HesapAdi AS PersonelAdi,
		B.Aciklama,
		B.VardiyaNo,
		SUM (OSK.Tutar) AS KasaTutar,
		H.Tutar AS AcikFazlaTutari,
		(CASE
		WHEN H.TipInd=56 THEN 'Fazla'
		WHEN H.TipInd=55 THEN 'Açık'
		ELSE 'Tamam'
		END) as AcikFazlaDurumu
	FROM
	(
		SELECT
			S.KullaniciInd,
			S.BaslikInd,
			SUM(H.Miktar*H.Carpan*H.Fiyat*(1+H.KDVOrani/100)-H.Iskonto) AS Tutar, 
			S.Owner AS Owner
		FROM SatisKasasi AS S  WITH(NOLOCK)
		LEFT JOIN Basliklar AS B  WITH(NOLOCK) ON S.IslemInd = B.Ind
		LEFT JOIN BaslikMatrahTutari AS BMT  WITH(NOLOCK) ON BMT.BaslikInd = B.Ind
		LEFT JOIN Hareketler AS H  WITH(NOLOCK) ON H.BaslikInd = B.Ind
		WHERE H.TipInd = 6 AND B.TipInd = 102
		AND S.Tablo = N'Basliklar'
		AND S.IsYeniSatis = 'false'
		GROUP BY 
			S.Owner,
			S.BaslikInd,
			S.KullaniciInd 

		UNION ALL

		SELECT
			S.KullaniciInd,
			S.BaslikInd,
			P.Miktar*P.Carpan*P.Fiyat AS Tutar, 
			S.Owner AS Owner
		FROM SatisKasasi AS S  WITH(NOLOCK)
		LEFT JOIN Hareketler AS P  WITH(NOLOCK)
		ON S.IslemInd = P.Ind
		WHERE P.TipInd = 504 AND S.IsYeniSatis = 'false'
		AND S.Tablo = N'Hareketler'

		UNION ALL

		-- SELECT
			-- S.KullaniciInd,
			-- S.BaslikInd,
			-- P1.Miktar*P1.Carpan*P1.Fiyat AS Tutar,
			-- S.Owner
		-- FROM SatisKasasi AS S
		-- LEFT JOIN Hareketler AS P
		-- ON S.IslemInd = P.Ind
		-- LEFT JOIN Hareketler AS P1
		-- ON P.Ind = P1.BaslikInd
		-- WHERE P.TipInd = 504 AND S.IsYeniSatis = 'false'
		-- AND S.Tablo = N'Hareketler'
		-- AND P1.TipInd = 513

		-- UNION ALL	

		SELECT DISTINCT
			S.KullaniciInd,
			S.BaslikInd,
			SUM(Miktar*Carpan*Fiyat) AS Tutar, 
			S.Owner AS Owner
		FROM SatisKasasi AS S  WITH(NOLOCK)
		LEFT JOIN Basliklar AS B  WITH(NOLOCK) ON S.IslemInd = B.Ind
		LEFT JOIN Hareketler AS H  WITH(NOLOCK) ON H.BaslikInd = B.Ind
		WHERE B.TipInd = 104 AND H.TipInd = 5
		AND S.Tablo = N'Basliklar'
		AND S.IsYeniSatis = 'false'
		GROUP BY
			S.Ind,
			S.Owner,
			S.BaslikInd,
			S.KullaniciInd

	) AS OSK
	LEFT JOIN Basliklar AS B  WITH(NOLOCK) ON B.Ind = OSK.BaslikInd
	LEFT JOIN Hareketler AS H  WITH(NOLOCK) ON  H.BaslikInd = OSK.BaslikInd AND H.TipInd IN (55,56)
	GROUP BY 
		OSK.Owner, 
		OSK.BaslikInd, 
		OSK.KullaniciInd,
		B.Tarih,
		B.HesapInd,
		B.HesapKodu,
		B.HesapAdi,
		B.Aciklama,
		B.VardiyaNo,
		H.Tutar,
		H.TipInd


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[OnayliPasifSatisKasalari]
AS

	SELECT 
		OSK.Owner,
		OSK.KullaniciInd,
		OSK.BaslikInd,
		B.Tarih,
		B.HesapKodu AS PersonelKodu,
		B.HesapAdi AS PersonelAdi,
		B.Aciklama,
		B.VardiyaNo,
		SUM (OSK.Tutar) AS KasaTutar,
		H.Tutar AS AcikFazlaTutari,
		(SUM (OSK.Tutar)+H.Tutar) AS ToplamTutar,
		(CASE
		WHEN H.TipInd=77 THEN 'Fazla'
		WHEN H.TipInd=76 THEN 'Açık'
		ELSE 'Tamam'
		END) as AcikFazlaDurumu
	FROM
	(
		SELECT
			S.KullaniciInd,
			S.BaslikInd,
			SUM(H.Miktar*H.Carpan*H.Fiyat*(1+H.KDVOrani/100)-H.Iskonto) AS Tutar, 
			S.Owner AS Owner
		FROM SatisKasasi AS S  WITH(NOLOCK)
		LEFT JOIN Basliklar AS B  WITH(NOLOCK) ON S.IslemInd = B.Ind
		LEFT JOIN BaslikMatrahTutari AS BMT  WITH(NOLOCK) ON BMT.BaslikInd = B.Ind
		LEFT JOIN Hareketler AS H  WITH(NOLOCK) ON H.BaslikInd = B.Ind
		WHERE H.TipInd = 74 AND B.TipInd = 115
		AND S.Tablo = N'Basliklar'
		AND S.IsYeniSatis = 'false'
		GROUP BY 
			S.Owner,
			S.BaslikInd,
			S.KullaniciInd 

		UNION ALL

		SELECT
			S.KullaniciInd,
			S.BaslikInd,
			P.Miktar*P.Carpan*P.Fiyat AS Tutar, 
			S.Owner AS Owner
		FROM SatisKasasi AS S  WITH(NOLOCK)
		LEFT JOIN Hareketler AS P  WITH(NOLOCK)
		ON S.IslemInd = P.Ind
		WHERE P.TipInd = 73 AND S.IsYeniSatis = 'false'
		AND S.Tablo = N'Hareketler'

		UNION ALL

		SELECT 
			S.KullaniciInd,
			S.BaslikInd,
			SUM(Miktar*Carpan*Fiyat) AS Tutar, 
			S.Owner AS Owner
		FROM SatisKasasi AS S  WITH(NOLOCK)
		LEFT JOIN Basliklar AS B  WITH(NOLOCK) ON S.IslemInd = B.Ind
		LEFT JOIN Hareketler AS H  WITH(NOLOCK) ON H.BaslikInd = B.Ind
		WHERE B.TipInd = 116 AND H.TipInd = 75
		AND S.Tablo = N'Basliklar'
		AND S.IsYeniSatis = 'false'
		GROUP BY 
			S.Owner,
			S.BaslikInd,
			S.KullaniciInd

	) AS OSK
	LEFT JOIN Basliklar AS B  WITH(NOLOCK) ON B.Ind = OSK.BaslikInd
	LEFT JOIN Hareketler AS H  WITH(NOLOCK) ON  H.BaslikInd = OSK.BaslikInd AND H.TipInd IN (76,77)
	GROUP BY 
		OSK.Owner, 
		OSK.BaslikInd, 
		OSK.KullaniciInd,
		B.Tarih,
		B.HesapInd,
		B.HesapKodu,
		B.HesapAdi,
		B.Aciklama,
		B.VardiyaNo,
		H.Tutar,
		H.TipInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[OtomasyonVardiyaKurumsalSatis]
AS
	SELECT
	v.Ind as OtomasyonVardiya_Ind,
	v.Owner as Owner,
	v.SubeId as OtomasyonVardiya_SubeId,
	v.KayitDurumu,
	v.AktarimDurumu,
	v.DosyaVardiyaKodu,
	v.VardiyaTarihi,
	v.VardiyaNo,
	
	vd.Ind as OtomasyonVardiyaDetay_Ind,
	vd.Owner as OtomasyonVardiyaDetay_Owner,
	vd.SatisTarihi,
	vd.OtomasyonVardiyaInd as OtomasyonVardiyaDetay_VardiyaInd,
	vd.SatisTipi,
	vd.OtomasyonOdemeTipi,
	vd.StokKodu,
	vd.Miktar,
	vd.Birim,
	vd.BirimFiyat,
	vd.IskontoTutari,
	vd.PompaNo,
	vd.TabancaNo,
	vd.KazanilanPuan,
	vd.KazanilanTutar,
	vd.KartNo,
	vd.KartTipi,
	vd.FisNo,
	vd.OtomasyonSatisId,
	vd.Plaka,
	vd.PersonelOtomasyonKodu,
	vd.UstIsilDeger,
	vd.Yogunluk,
	vd.Aktarildi,
	vd.AktarildiDurum,
	vd.RfId,
	vd.Tutar,
	vd.OtomasyonFirmaKodu as OtomasyonVardiya_FirmaKodu,
	vd.OtomasyonMusteriId,
	vd.OtomasyonSatisTipId,
	vd.OtomasyonPompaciAdi,
	vd.DenemeSayisi,
	
	vs.OtomasyonFirmaKodu as OtomasyonVardiyaSube_FirmaKodu,
	vs.OtomasyonSubeKodu,
	vs.Ind as OtomasyonVardiyaSube_Ind,
	vs.SubeId as OtomasyonVardiyaSube_SubeId,
	
	sb.SubeKodu as HititSubeKodu
	FROM OtomasyonVardiya as v  WITH(NOLOCK)
	INNER JOIN OtomasyonVardiyaDetay as vd  WITH(NOLOCK) ON vd.OtomasyonVardiyaInd = v.Ind
	INNER JOIN OtomasyonVardiyaSube as vs  WITH(NOLOCK) ON vs.Ind = vd.OtomasyonVardiyaSubeInd
	INNER JOIN Subeler as sb  WITH(NOLOCK) ON sb.Ind = vs.SubeId

GO



GO
CREATE VIEW [dbo].[OzelKodlarCariAyrinti]
AS
SELECT  OKCH.Ind, OK.OzelKodu, OKCH.CariInd, OKCH.OzelKodInd, OKCH.Aktif, OKCH.Owner FROM OzelKodlar AS OK  WITH(NOLOCK)
INNER JOIN OzelKodlarCariHesap AS OKCH  WITH(NOLOCK)
ON OK.Ind = OKCH.OzelKodInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[OzelMenuler]
AS
SELECT
	R.Ind,
	R.SayfaInd,
	R.ParentInd,
	R.RolInd,
	R.Owner,
	R.SiraNo,
	M.SayfaAdi,
	M.Sayfa
FROM RolMenuleri AS R  WITH(NOLOCK)
LEFT JOIN Menu AS M  WITH(NOLOCK)
ON R.SayfaInd = M.Ind
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[PBKrediKartlari]
AS
SELECT   
	KKHesap.Ind as Ind,  
	KKHesap.Owner, 
	KKHesap.Ind AS KKHesapInd, 
	KKHesap.HesapKodu AS KKHesapKodu, 
	KKHesap.HesapAdi AS KKHesapAdi,
	KKHesap.MusteriKomisyon AS MusteriKomisyon,
	BHesap.Ind AS BankaHesapInd,
	BHesap.HesapKodu AS BankaHesapKodu,
	BHesap.HesapAdi AS BankaHesapAdi
FROM dbo.Hesaplar AS KKHesap  WITH(NOLOCK)
LEFT OUTER JOIN
	dbo.Hesaplar AS BHesap  WITH(NOLOCK) ON KKHesap.BankaInd = BHesap.Ind 
LEFT OUTER JOIN
    dbo.Ayarlar  WITH(NOLOCK) ON BHesap.ParaBirimi = dbo.Ayarlar.AnaParaBirimi AND dbo.Ayarlar.TipInd = 301
WHERE     (KKHesap.TipInd = 203)

GO
CREATE VIEW [dbo].[PerakendeSatisIadeListesi]
AS
SELECT     S.Owner, H.Ind, H.TipInd, H.StokInd, H.StokKodu, H.StokAdi, SG.Ind AS GrupInd, SG.GrupAdi, H.Miktar, H.Carpan, H.Fiyat, H.Tutar, S.KullaniciInd,S.PerakendeKasaIslemTarihi
FROM         dbo.SatisKasasi AS S  WITH(NOLOCK) LEFT OUTER JOIN
                      dbo.Hareketler AS H  WITH(NOLOCK) ON S.IslemInd = H.BaslikInd LEFT OUTER JOIN
                      dbo.Stoklar  WITH(NOLOCK) ON H.StokInd = dbo.Stoklar.Ind LEFT OUTER JOIN
                      dbo.StokGruplari AS SG  WITH(NOLOCK) ON SG.Ind = dbo.Stoklar.GrupInd
WHERE     (H.TipInd = 513) AND (S.Tablo = N'Hareketler') AND (S.IsYeniSatis = 'true')


GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[PersonelGetir]
AS
	SELECT 
		Ind AS PersonelHesapInd,
		HesapKodu AS PersonelHesapKodu,
		HesapAdi AS PersonelHesapAdi,
		Owner
	FROM Hesaplar  WITH(NOLOCK)
	WHERE	TipInd=204 AND 
			GrupInd IN(SELECT PersonelGrupInd FROM Ayarlar  WITH(NOLOCK) WHERE TipInd=304) AND
			(CikisTarihi > CAST(FLOOR(CAST(GETDATE() AS float)) AS datetime) OR CikisTarihi IS NULL) AND 
			Ind NOT IN (SELECT PersonelHesapInd FROM Hareketler WHERE TipInd=33)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[PersonelGetirForOtomasyonluVardiya]
AS
SELECT     Ind, Owner, HesapKodu, HesapAdi, OtomasyonKodu
FROM         dbo.Hesaplar  WITH(NOLOCK)
WHERE     (TipInd = 204) AND (OtomasyonKodu IS NOT NULL) AND (Ind NOT IN
                          (SELECT     PersonelHesapInd
                            FROM          dbo.Hareketler  WITH(NOLOCK)
                            WHERE      (TipInd = 33) AND (VardiyaKartInd =
                                                       (SELECT     MAX(Ind) AS Expr1
                                                         FROM          (SELECT     Ind
                                                                                 FROM          dbo.Basliklar  WITH(NOLOCK)
                                                                                 WHERE      (TipInd = 109)) AS derivedtbl_1))))
GO
CREATE VIEW [dbo].[PlakaliYeniVardiyaVeresiyeFisleri]
AS	
	SELECT 
		Basliklar.Owner,
		SUM(Hareketler.Tutar) AS Tutar,
		--SUM(Hareketler.Miktar * Hareketler.Carpan) AS Miktar,
		--Hareketler.Fiyat,
		--Hareketler.DurumInd,
		Basliklar.HesapInd,
		Basliklar.HesapKodu,
		Basliklar.HesapAdi,
		Basliklar.Tarih,
		Basliklar.PlakaNo,
		Basliklar.Ind,
		Basliklar.VardiyaKartInd
	FROM 
		Hareketler  WITH(NOLOCK)
		LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
	WHERE 
		Hareketler.TipInd = 41
		AND 
		(Basliklar.DurumInd != 11 OR Basliklar.DurumInd IS NULL)
		AND 
		(Hareketler.DurumInd NOT IN (-1, 3) OR Hareketler.DurumInd IS NULL)
		AND
		Basliklar.TipInd = 110
		AND
		Basliklar.PlakaNo IS NOT NULL
		AND
		LTRIM(RTRIM(Basliklar.PlakaNo)) != ''
	GROUP BY
		Basliklar.Ind,
		Basliklar.Owner,
		Basliklar.HesapInd,
		Basliklar.HesapKodu,
		Basliklar.HesapAdi,
		Basliklar.Tarih,
		Basliklar.PlakaNo,
		
		Basliklar.VardiyaKartInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[PositionForSonSatisFiyatlar]
AS
	SELECT null as Owner, StokInd, 
		ROW_NUMBER() OVER(
		PARTITION BY StokInd 
		ORDER BY Tarih DESC) AS Position, 
		Fiyat,
		SatisHareketleri.Tarih,
		SatisHareketleri.TipInd
	FROM SatisHareketleri  WITH(NOLOCK)
GO
CREATE VIEW [dbo].[PrimliSatislar]
AS
	WITH Personeller(Owner, Ind, HesapKodu, HesapAdi, KasiyerKodu, SaticiKodu)
	AS
	(
		select h.Owner, h.Ind AS HesapInd, HesapKodu, HesapAdi, k.KasiyerKodu, h.SaticiKodu from Hesaplar h
		left join Kullanicilar k ON k.PersonelInd = h.Ind WHERE h.TipInd = 204
	)

	SELECT 
	h.Ind, h.Owner, NULL AS KasiyerKodu, h.SaticiKodu,
    p.Owner as HesapOwner, p.Ind as HesapInd, p.HesapAdi, p.HesapKodu,
	h.GirisTarihi, h.PerakendeKasaIslemTarihi, h.StokInd, h.StokKodu, h.StokAdi,
	h.Miktar, h.Fiyat, h.Carpan, h.BirimAdi, h.Tutar 
	FROM SatisKasasi sk  WITH(NOLOCK) inner join Hareketler h  WITH(NOLOCK) ON sk.IslemInd = h.Ind 
	inner join Basliklar b  WITH(NOLOCK) ON sk.BaslikInd = b.Ind and b.TipInd = 505
	left join Personeller p  WITH(NOLOCK) ON h.SaticiKodu = p.SaticiKodu
	WHERE sk.Tablo = 'Hareketler' and sk.IsYeniSatis = 0
	and h.TipInd = 504 and (h.SaticiKodu != '0' AND h.SaticiKodu IS NOT NULL)

	UNION ALL

	SELECT 
	h.Ind, h.Owner, h.KasiyerKodu, NULL AS SaticiKodu,
    p.Owner as HesapOwner, p.Ind as HesapInd, p.HesapAdi, p.HesapKodu,
	h.GirisTarihi, h.PerakendeKasaIslemTarihi, h.StokInd, h.StokKodu, h.StokAdi,
	h.Miktar, h.Fiyat, h.Carpan, h.BirimAdi, h.Tutar 
	FROM SatisKasasi sk  WITH(NOLOCK) inner join Hareketler h  WITH(NOLOCK) ON sk.IslemInd = h.Ind 
	inner join Basliklar b  WITH(NOLOCK) ON sk.BaslikInd = b.Ind and b.TipInd = 505
	left join Personeller p  WITH(NOLOCK) ON h.KasiyerKodu = p.KasiyerKodu
	WHERE sk.Tablo = 'Hareketler' and sk.IsYeniSatis = 0
	and h.TipInd = 504 AND ISNULL(h.KasiyerKodu, '0') != '0' AND ISNULL(h.SaticiKodu,'0') = '0'

GO



GO
CREATE VIEW RolMenuleriWSayfaKodu

AS
SELECT RM.* ,M.SayfaKodu
	FROM RolMenuleri RM  WITH(NOLOCK)
	LEFT JOIN Menu M  WITH(NOLOCK) ON M.Ind=RM.SayfaInd
GO
CREATE VIEW [dbo].[SatilanUrunListesi]
AS
	-- FATURA SATIRLARI
	SELECT 
		S.Owner AS Owner,
		H.TipInd,
		H.StokInd,
		H.StokKodu,
		H.StokAdi,
		SG.Ind as GrupInd,
		SG.GrupAdi,
		H.Miktar,
		H.Carpan,
		H.Fiyat*(1+H.KDVOrani/100) as Fiyat,
		(H.Miktar*H.Carpan*H.Fiyat)*(1+H.KDVOrani/100) AS Tutar,
		S.KullaniciInd,
		S.PerakendeKasaIslemTarihi
	FROM SatisKasasi AS S  WITH(NOLOCK)
	LEFT JOIN Basliklar AS B  WITH(NOLOCK) ON S.IslemInd = B.Ind
	LEFT JOIN BaslikMatrahTutari AS BMT  WITH(NOLOCK) ON BMT.BaslikInd = B.Ind
	LEFT JOIN Hareketler AS H  WITH(NOLOCK) ON H.BaslikInd = B.Ind
	LEFT JOIN Stoklar  WITH(NOLOCK) ON  H.StokInd = Stoklar.Ind
	LEFT JOIN StokGruplari AS SG  WITH(NOLOCK) ON SG.Ind = Stoklar.GrupInd
	WHERE H.TipInd = 6 AND B.TipInd = 102
		AND S.Tablo = N'Basliklar' AND S.IsYeniSatis = 'true'

	UNION ALL

	-- PERAKENDE SATIRLARI
	SELECT 
		S.Owner AS Owner,
		H.TipInd,
		H.StokInd,
		H.StokKodu,
		H.StokAdi,
		SG.Ind as GrupInd,
		SG.GrupAdi,
		H.Miktar,
		H.Carpan,
		H.Fiyat,
		Tutar,
		S.KullaniciInd,
		S.PerakendeKasaIslemTarihi
	FROM SatisKasasi AS S  WITH(NOLOCK)
	LEFT JOIN Hareketler AS H  WITH(NOLOCK) ON S.IslemInd = H.Ind
	LEFT JOIN Stoklar  WITH(NOLOCK) ON  H.StokInd = Stoklar.Ind
	LEFT JOIN StokGruplari AS SG  WITH(NOLOCK) ON SG.Ind = Stoklar.GrupInd
	WHERE H.TipInd = 40 OR H.TipInd = 504
	AND S.Tablo = N'Hareketler'  AND S.IsYeniSatis = 'true'

	UNION ALL

	--IRSALİYE SATIRLARI
	SELECT 
		S.Owner AS Owner,
		H.TipInd,
		H.StokInd,
		H.StokKodu,
		H.StokAdi,
		SG.Ind as GrupInd,
		SG.GrupAdi,
		H.Miktar,
		H.Carpan,
		H.Fiyat,
		(H.Miktar*H.Carpan*H.Fiyat) AS Tutar,
		S.KullaniciInd,
		S.PerakendeKasaIslemTarihi
	FROM SatisKasasi AS S  WITH(NOLOCK)
	LEFT JOIN Basliklar AS B  WITH(NOLOCK) ON S.IslemInd = B.Ind
	LEFT JOIN Hareketler AS H  WITH(NOLOCK) ON H.BaslikInd = B.Ind
	LEFT JOIN Stoklar  WITH(NOLOCK) ON  H.StokInd = Stoklar.Ind
	LEFT JOIN StokGruplari AS SG  WITH(NOLOCK) ON SG.Ind = Stoklar.GrupInd
	WHERE B.TipInd = 104 AND H.TipInd = 5
	AND S.Tablo = N'Basliklar'  AND S.IsYeniSatis = 'true'

GO



GO
CREATE VIEW SatisFiyatDegisen
as
Select  
	SD.Ind,
	SD.Owner,
	SD.TipInd,
	SD.StokInd,
	SD.Barkod,
	SD.FiyatAdi,
	SD.BirimInd,
	SD.ParaBirimi,
	SD.Tutar,
	SD.IsAnaFiyat,
	ST.StokKodu,
	ST.StokAdi	
From 
StokDetaylari SD,Stoklar ST  WITH(NOLOCK)
Where 
ST.Ind=SD.StokInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[SatisFiyatiSiralamaWithStokInd]
AS
SELECT     
	SatisFiyatiSiralama.Ind, 
	SatisFiyatiSiralama.Owner, 
	SatisFiyatiSiralama.FiyatInd, 
	SatisFiyatiSiralama.SiraNo, 
    StokDetaylari.StokInd
FROM
	SatisFiyatiSiralama  WITH(NOLOCK) INNER JOIN StokDetaylari   WITH(NOLOCK)
		ON SatisFiyatiSiralama.FiyatInd = StokDetaylari.Ind
GO
CREATE VIEW [dbo].[SatisIrsaliyesiOzet]
AS
SELECT     dbo.Basliklar.Ind, dbo.Basliklar.Owner, dbo.Basliklar.HesapInd, dbo.Basliklar.Tarih, dbo.Basliklar.BelgeNo, 5 AS TipInd, 
                      SUM(dbo.Hareketler.Miktar * dbo.Hareketler.Fiyat) AS Tutar, dbo.Basliklar.PlakaNo
FROM         dbo.Basliklar  WITH(NOLOCK) INNER JOIN
                      dbo.Hareketler ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
WHERE     (dbo.Basliklar.TipInd = 104) AND (dbo.Hareketler.TipInd = 5) AND (dbo.Basliklar.DurumInd IS NULL) AND (dbo.Hareketler.DurumInd IS NULL OR dbo.Hareketler.DurumInd = 0)
GROUP BY dbo.Basliklar.Ind, dbo.Basliklar.Owner, dbo.Basliklar.Tarih, dbo.Basliklar.BelgeNo, dbo.Basliklar.HesapInd, dbo.Basliklar.PlakaNo
UNION ALL
SELECT     Basliklar_1.Ind, Basliklar_1.Owner, Basliklar_1.HesapInd, Basliklar_1.Tarih, Basliklar_1.BelgeNo, 37 AS TipInd, SUM(Hareketler_1.Tutar) AS Tutar, 
                      Basliklar_1.PlakaNo
FROM         dbo.Basliklar AS Basliklar_1  WITH(NOLOCK) INNER JOIN
                      dbo.Hareketler AS Hareketler_1  WITH(NOLOCK) ON Basliklar_1.Ind = Hareketler_1.BaslikInd
WHERE     (Basliklar_1.TipInd = 111) AND (Hareketler_1.TipInd = 37) AND (Basliklar_1.DurumInd IS NULL) AND (Hareketler_1.DurumInd IS NULL)
GROUP BY Basliklar_1.Ind, Basliklar_1.Owner, Basliklar_1.Tarih, Basliklar_1.BelgeNo, Basliklar_1.HesapInd, Basliklar_1.PlakaNo


GO


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[SatisIrsaliyesiOzetWithFaturasiz]
AS
	SELECT     
		dbo.Basliklar.Ind, 
		dbo.Basliklar.Owner, 
		dbo.Basliklar.HesapInd, 
		dbo.Basliklar.Tarih, 
		dbo.Basliklar.BelgeNo,
		5 AS TipInd,
		SUM(dbo.Hareketler.Miktar * dbo.Hareketler.Fiyat) AS Tutar
	FROM
		dbo.Basliklar  WITH(NOLOCK) INNER JOIN
		dbo.Hareketler  WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
	WHERE
		(dbo.Basliklar.TipInd = 104) AND
		(dbo.Hareketler.TipInd = 5) AND
		(dbo.Basliklar.DurumInd IS NULL) AND
		(dbo.Hareketler.DurumInd IS NULL)
	GROUP BY 
		dbo.Basliklar.Ind, 
		dbo.Basliklar.Owner, 
		dbo.Basliklar.Tarih, 
		dbo.Basliklar.BelgeNo, 
		dbo.Basliklar.HesapInd
	UNION ALL
	SELECT     
		dbo.Basliklar.Ind, 
		dbo.Basliklar.Owner, 
		dbo.Basliklar.HesapInd, 
		--dbo.Basliklar.
		(SELECT TOP 1 Tarih FROM Basliklar as vb  WITH(NOLOCK) WHERE vb.Ind = dbo.Basliklar.VardiyaKartInd) AS Tarih,
		dbo.Basliklar.BelgeNo,
		37 AS TipInd,
		SUM(dbo.Hareketler.Tutar) AS Tutar
	FROM
		dbo.Basliklar  WITH(NOLOCK) INNER JOIN
		dbo.Hareketler  WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
	WHERE
		(dbo.Basliklar.TipInd = 111)
	GROUP BY 
		dbo.Basliklar.Ind, 
		dbo.Basliklar.Owner, 
		dbo.Basliklar.Tarih, 
		dbo.Basliklar.BelgeNo, 
		dbo.Basliklar.HesapInd, 
		dbo.Basliklar.VardiyaKartInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[SatisRaporDokumuDepoBazli]
AS
	SELECT
		h1.Owner,
		h1.DepoInd,
		dbo.Hesaplar.HesapKodu AS DepoKodu,
		dbo.Hesaplar.HesapAdi AS DepoAdi,
		h1.StokInd,
		h1.StokAdi,
		h1.KDVOrani,
		Miktar as Cikan,
		Tutar,
		CASE WHEN (Miktar > 0) 
		THEN (Tutar / Miktar) 
		ELSE 0
		END as BirimFiyat,
		0.00 as Iskonto,
		205 AS TipInd,
		h1.TipIndAltHareket,
		h1.Tarih
	FROM
		dbo.Hesaplar  WITH(NOLOCK) LEFT OUTER JOIN
		SatisRaporDokumu as h1  WITH(NOLOCK) ON (dbo.Hesaplar.Ind = h1.DepoInd)
	WHERE
		dbo.Hesaplar.TipInd = 205 
GO
CREATE VIEW [dbo].[SayacKDVOranlari] 
AS


	SELECT HD.Owner,HD.Ind SayacInd,HD.SayacAdi,HD.SayacKodu,KG.KDVOrani
		FROM HesapDetaylari HD  WITH(NOLOCK)
		INNER JOIN Hesaplar H  WITH(NOLOCK) ON H.Ind=HD.DepoInd
		INNER JOIN Stoklar S  WITH(NOLOCK) ON H.StokInd=S.Ind
		INNER JOIN KDVGruplari KG  WITH(NOLOCK) ON S.SatisKDVGrupInd=KG.Ind
		WHERE HD.TipInd=402
GO


CREATE VIEW [dbo].[SonAlisFiyatListesiGenel]
AS
SELECT
	*
FROM
	(SELECT
		StokInd,
		Owner,
		ROW_NUMBER() OVER (PARTITION BY StokInd ORDER BY Tarih DESC) AS Position,
		Fiyat
	 FROM
		GirisCikisHareketleri  WITH(NOLOCK)
	 WHERE
		(TipIndAltHareket = 3)) AS result
WHERE
	position = 1
	and
	(StokInd=0 or StokInd in (select StokInd from Stoklar))

GO


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[SonSatisFiyatlariCariTurev]
AS
	SELECT
		g.Owner,
		brm.BirimAdi,
		g.Fiyat,
		g.StokInd,
		g.DepoInd,
		g.Tarih,
		g.HesapInd
	FROM
		GirisCikisHareketleri as g  WITH(NOLOCK)
		LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm  WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
	WHERE
		(g.TipIndAltHareket = 5 OR g.TipIndAltHareket = 6)
		--AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		--AND g.Tarih <= @Tarih
		--AND g.HesapInd = @CariInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[StogaAitFiyatKDVturev]
AS
SELECT		
	DISTINCT TOP 100 PERCENT
	SatisFiyatiSiralama.SiraNo,
	dbo.StokDetaylari.StokInd AS Ind, 
	dbo.StokDetaylari.Tutar, 
	dbo.StokDetaylari.Owner
FROM
	dbo.StokDetaylari  WITH(NOLOCK) LEFT JOIN SatisFiyatiSiralama  WITH(NOLOCK) ON SatisFiyatiSiralama.FiyatInd = StokDetaylari.Ind
WHERE
	dbo.StokDetaylari.TipInd=501 --AND dbo.StokDetaylari.StokInd = 3034
ORDER BY SatisFiyatiSiralama.SiraNo ASC, dbo.StokDetaylari.StokInd, dbo.StokDetaylari.Owner
GO
CREATE VIEW [dbo].[StokGrubuFireOranlariAyrinti]
AS
select S.SubeAdi, SI.FireOrani, SI.SubeInd, SI.Ind, SI.StokGrubuInd, SI.Aktif, SI.Owner FROM Subeler AS S   WITH(NOLOCK)
INNER JOIN StokGrupFireOranlari AS SI  WITH(NOLOCK)
ON S.Ind = SI.SubeInd

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[StokGruplarininAkaryakitOlmasiTurevi]
AS
	SELECT 
		* 
		, (
			SELECT 
				COUNT(Ind) 
			FROM 
				Hesaplar 
			WHERE 
				Hesaplar.TipInd=205 
				AND Hesaplar.StokInd=Stoklar.Ind
		  ) AS DepoSayisi
		,0 Sira
		FROM Stoklar  WITH(NOLOCK)

GO
CREATE VIEW [dbo].[StokGrupluHareketler]
AS
SELECT h.Ind, h.Owner, h.TipInd, h.BaslikInd, h.CariHesapInd, h.CariHesapKodu, h.CariHesapAdi, h.BankaHesapInd, h.BankaHesapKodu, h.BankaHesapAdi, 
	h.KKHesapInd, h.KKHesapKodu, h.KKHesapAdi, h.GirisTarihi, h.VadeTarihi, h.CekHesapInd, h.CekHesapAdi, h.CekNo, h.Aciklama, h.StokInd, 
	h.StokKodu, h.StokAdi, h.Barkod, h.SatisFiyatiInd, h.Miktar, h.SatisFiyati, h.AnaBirimAdi, h.BirimAdi, h.Carpan, h.ParaBirimi, h.Kur, h.Fiyat, 
	h.AnaParaBirimi, h.KDVOrani, h.Iskonto, h.Tutar, h.YazarKasaFisNo, h.DepoInd, h.DepoKodu, h.DepoAdi, h.HedefBankaInd, h.HedefBankaHesapKodu, 
	h.HedefBankaHesapAdi, h.PersonelHesapInd, h.PersonelHesapKodu, h.PersonelHesapAdi, h.DurumInd, h.TeslimTarihi, h.GelirInd, h.GelirKodu, 
	h.GelirAdi, h.GiderInd, h.GiderKodu, h.GiderAdi, h.CiroBankaInd, h.CiroBankaKodu, h.CiroBankaAdi, h.CiroCariInd, h.CiroCariKodu, h.CiroCariAdi, 
	h.Hakedilen, h.Prim, h.Gun, h.VardiyaKartInd, h.AdaGrubu, h.SayacInd, h.SayacAdi, h.SayacKodu, h.EskiEndeks, h.YeniEndeks, h.Aktarma, h.AcikFazla, 
	h.IslemTarihi, h.PerakendeInd, h.SayimMiktari, h.AlisFiyati, h.GunSonu, h.VTSInd, h.PlakaNo, h.Rid, h.HedefHesapInd, h.HedefHesapKodu, 
	h.HedefHesapAdi, h.NetMiktar, h.PerakendeKasaIslemTarihi, h.KaynakInd, h.KaynakKodu, h.KaynakAdi, h.HedefInd, h.HedefKodu, h.HedefAdi, 
	s.GrupInd AS StokGrupInd, SG.GrupAdi AS StokGrupAdi,SG.GrupAdi AS StokOrtaGrupAdi,SG.GrupAdi AS StokUstGrupAdi
FROM dbo.Hareketler AS h  WITH(NOLOCK)
	LEFT OUTER JOIN dbo.Stoklar AS s  WITH(NOLOCK) ON s.Ind = h.StokInd 
	INNER JOIN dbo.StokGruplari AS SG  WITH(NOLOCK) ON s.GrupInd = SG.Ind 

GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[StoklarBarkodlari]
AS
	SELECT 
		Stoklar.Owner,
		Stoklar.Ind,
		Stoklar.StokKodu,
		Stoklar.StokAdi,
		'' as Barkod,
		Stoklar.AnaBirimInd,
		Stoklar.GrupInd,
		Stoklar.AlisKDVGrupInd,
		Stoklar.SatisKDVGrupInd,
		Stoklar.Aktif
	FROM
		Stoklar  WITH(NOLOCK)

	UNION ALL

	SELECT 
		Stoklar.Owner,
		Stoklar.Ind,
		Stoklar.StokKodu,
		Stoklar.StokAdi,
		StokDetaylari.Barkod,
		Stoklar.AnaBirimInd,
		Stoklar.GrupInd,
		Stoklar.AlisKDVGrupInd,
		Stoklar.SatisKDVGrupInd,
		Stoklar.Aktif
	FROM Stoklar  WITH(NOLOCK)
	LEFT JOIN StokDetaylari  WITH(NOLOCK) ON StokDetaylari.StokInd=Stoklar.Ind
	WHERE StokDetaylari.TipInd=502

GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[StoklarDepoIliskili]
AS
SELECT TOP 100 PERCENT
    S.Ind,
	S.Owner,
	S.StokAdi,
	S.StokKodu,
	S.AnaBirimInd,
	S.GrupInd,
	S.AlisKDVGrupInd,
	S.SatisKDVGrupInd,
	S.Aktif,
	S.MuhasebeKodu,
	S.KasiyerKoduVarMi,
	S.KasiyerFiyatDegistirebilir,
	S.GTIPKodu,
    S.OtvTutar,
    Depolar = LEFT(o.list, LEN(o.list)-1) 
FROM 
    Stoklar S  WITH(NOLOCK)
CROSS APPLY 
( 
        SELECT 
            CONVERT(VARCHAR(12), Ind) + ',' AS [text()] 
        FROM 
            Hesaplar H  WITH(NOLOCK)
        WHERE 
            H.StokInd = S.Ind 
        ORDER BY 
            Ind 
        FOR XML PATH('') 
    ) o (list) 
ORDER BY 
    S.Ind

GO

SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO


GO
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[StokListesiFiyatWithStokInd]
AS
SELECT     
	SatisFiyatiSiralama.Ind, 
	SatisFiyatiSiralama.Owner, 
	SatisFiyatiSiralama.FiyatInd, 
	ISNULL(SatisFiyatiSiralama.SiraNo,0) AS SiraNo,   
    StokDetaylari.StokInd,
	StokDetaylari.FiyatAdi,
	StokDetaylari.Tutar,
	StokDetaylari.IsAnaFiyat

FROM
	SatisFiyatiSiralama  WITH(NOLOCK) RIGHT JOIN StokDetaylari  WITH(NOLOCK)
		ON SatisFiyatiSiralama.FiyatInd = StokDetaylari.Ind		
		where StokDetaylari.TipInd = 501 
GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[StokSayisi]
AS
	SELECT     COUNT(dbo.Stoklar.Ind) AS Ss, dbo.Stoklar.Owner
FROM         dbo.Stoklar  WITH(NOLOCK) LEFT OUTER JOIN
                      dbo.StokDetaylari  WITH(NOLOCK) ON dbo.Stoklar.Ind = dbo.StokDetaylari.StokInd AND dbo.StokDetaylari.TipInd = 502
					  LEFT OUTER JOIN  dbo.KDVGruplari  WITH(NOLOCK) ON dbo.Stoklar.SatisKDVGrupInd = dbo.KDVGruplari.Ind
	GROUP BY
		dbo.Stoklar.Owner
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[StokSonAlisKdvli]
AS
	SELECT
		TOP 1
		h.Owner,
		SUM
		(
			Fiyat
			*
			(
				CASE WHEN NetMiktar=0 
				THEN Miktar 
				ELSE ISNULL(NetMiktar,Miktar) END
			)
		)
		/
		SUM
		(
			(
				CASE WHEN NetMiktar=0
				THEN Miktar 
				ELSE ISNULL(NetMiktar,Miktar) 
				END
			)
		) AS Fiyat
		, KDVOrani
		, StokInd
	FROM 
		Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON b.Ind  = h.BaslikInd 
	WHERE 
		h.TipInd=3
	GROUP BY
		h.Owner,
		KDVOrani,
		StokInd,
		h.BaslikInd
	ORDER BY
		h.BaslikInd
	DESC
GO
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[SubeVardiyalariTurev]
AS
	SELECT
		DISTINCT TOP 100 PERCENT
		                              B.Ind
		,                       B.VardiyaNo
		, B.Tarih          AS VardiyaTarihi
		, B.Owner          AS     SubeOwner
		, S.SubeAdi        AS  SubeOwnerAdi
		,                           B.Owner
		, ROW_NUMBER()
			OVER
			(
				PARTITION BY 
					B.Owner 
				ORDER BY 
					    B.Tarih ASC
						, B.VardiyaNo ASC
			)              AS          Sira  
	FROM 
		Basliklar          AS  	    	  B  WITH(NOLOCK)
		INNER JOIN Subeler AS             S  WITH(NOLOCK) ON S.Ind = B.Owner
	WHERE 
		B.TipInd = 108
	ORDER BY
									B.Owner
								  , B.Tarih
							  , B.VardiyaNo
			ASC
			
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[TumSubelereAitSatislar]
AS
SELECT     CONVERT(char(10), dbo.VTS.GirisTarihi, 104) AS GirisTarihi, s.SubeAdi, dbo.VTS.Owner, dbo.VTS.StokKodu, dbo.VTS.StokAdi, SUM(dbo.VTS.Miktar) 
                      AS Miktar, dbo.VTS.Fiyat, SUM(dbo.VTS.Tutar) AS Tutar,
                          (SELECT     SUM(Miktar) AS Expr1
                            FROM          dbo.VTS AS v1  WITH(NOLOCK)
                            WHERE      (CONVERT(char(10), GirisTarihi, 104) = CONVERT(char(10), vts.GirisTarihi, 104)) AND (Owner = vts.owner)) AS SubeToplamMiktar,
                          (SELECT     SUM(Tutar) AS Expr1
                            FROM          dbo.VTS AS v1  WITH(NOLOCK)
                            WHERE      (CONVERT(char(10), GirisTarihi, 104) = CONVERT(char(10), vts.GirisTarihi, 104)) AND (Owner = vts.owner)) AS SubeToplamTutar
FROM         dbo.VTS  WITH(NOLOCK) LEFT OUTER JOIN
                      dbo.Subeler AS s  WITH(NOLOCK) ON dbo.VTS.Owner = s.Ind
GROUP BY CONVERT(char(10), dbo.VTS.GirisTarihi, 104), s.SubeAdi, dbo.VTS.Owner, dbo.VTS.StokKodu, dbo.VTS.StokAdi, dbo.VTS.Fiyat

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VardiyaAdetSatis]
AS
	SELECT
		COUNT(Ind) AS AdetSatis
		, VardiyaKartInd 
	FROM   
		Hareketler as b  WITH(NOLOCK)
    WHERE 
		b.TipInd = 39 
		OR b.TipInd = 44
GROUP BY
	VardiyaKartInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VardiyaAkaryakitCikislari]
AS
	WITH Dokumu(Owner, StokInd, StokKodu, StokAdi,SatisFiyati)
	AS
	(		
		SELECT 
			Stoklar.Owner,
			Stoklar.Ind AS StokInd,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			StokDetaylari.Tutar as SatisFiyati
		FROM Hesaplar  WITH(NOLOCK)
		LEFT JOIN Stoklar  WITH(NOLOCK) ON Hesaplar.StokInd=Stoklar.Ind
		LEFT JOIN StokDetaylari  WITH(NOLOCK) ON StokDetaylari.StokInd=Stoklar.Ind AND StokDetaylari.IsAnaFiyat='True'
		WHERE Hesaplar.TipInd=205
		GROUP BY
			Stoklar.Owner,
			Stoklar.Ind,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			StokDetaylari.Tutar
	)
	SELECT
		Dokumu.Owner,
		Dokumu.StokInd,
		Dokumu.StokKodu,
		Dokumu.StokAdi,
		Dokumu.SatisFiyati,
		SUM(
				YeniEndeks-EskiEndeks
			) AS Cikan
	FROM Dokumu   WITH(NOLOCK)
	LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.StokInd=Dokumu.StokInd
	LEFT JOIN HesapDetaylari  WITH(NOLOCK) ON HesapDetaylari.DepoInd=Hesaplar.Ind
	LEFT JOIN Hareketler  WITH(NOLOCK) ON Hareketler.SayacInd=HesapDetaylari.Ind
	GROUP BY
		Dokumu.Owner,
		Dokumu.StokInd,
		Dokumu.StokKodu,
		Dokumu.StokAdi,
		Dokumu.SatisFiyati
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VardiyaAkaryakitDurumu]
AS
	SELECT 
		VardiyaAkaryakitCikislari.Owner,
		VardiyaAkaryakitCikislari.StokInd,
		VardiyaAkaryakitCikislari.StokKodu,
		VardiyaAkaryakitCikislari.StokAdi,
		SUM(
			CASE  WHEN (Hareketler.TipInd=29)
			THEN Miktar * Carpan
			ELSE 0
			END)-SUM(
			CASE  WHEN (Hareketler.TipInd=30 )
			THEN Miktar * Carpan
			ELSE 0
			END
			) AS Devir,
		VardiyaAkaryakitCikislari.Cikan,
		SUM(
			CASE  WHEN (Hareketler.TipInd=29)
			THEN Miktar * Carpan
			ELSE 0
			END)-SUM(
			CASE  WHEN (Hareketler.TipInd=30 )
			THEN Miktar * Carpan
			ELSE 0
			END
			) -VardiyaAkaryakitCikislari.Cikan as KalanMiktar,
		VardiyaAkaryakitCikislari.SatisFiyati,
		SUM(
			CASE  WHEN (Hareketler.TipInd=29)
			THEN Miktar * Carpan
			ELSE 0
			END)-SUM(
			CASE  WHEN (Hareketler.TipInd=30 )
			THEN Miktar * Carpan
			ELSE 0
			END
			) -VardiyaAkaryakitCikislari.Cikan*	VardiyaAkaryakitCikislari.SatisFiyati as KalanTutar	
		FROM VardiyaAkaryakitCikislari  WITH(NOLOCK)
		LEFT JOIN Hareketler  WITH(NOLOCK) ON VardiyaAkaryakitCikislari.StokInd=Hareketler.StokInd
		GROUP BY 
			VardiyaAkaryakitCikislari.Owner,
			VardiyaAkaryakitCikislari.StokInd,
			VardiyaAkaryakitCikislari.StokKodu,
			VardiyaAkaryakitCikislari.StokAdi,
			VardiyaAkaryakitCikislari.SatisFiyati,
			VardiyaAkaryakitCikislari.Cikan
GO
CREATE VIEW [dbo].[VardiyaAyari]
AS
SELECT
	dbo.Ayarlar.Owner,
    dbo.Ayarlar.Ind,
	dbo.Ayarlar.TipInd,
	dbo.Ayarlar.PersonelGrupInd,
	dbo.PersonelGruplari.GrupAdi,
	dbo.Ayarlar.Turtip,
	dbo.Ayarlar.StawizTip,
    dbo.Ayarlar.OtomasyonFirmaAdi,
	dbo.Ayarlar.OtomasyonFirmaKodu,
	dbo.Ayarlar.OtomasyonFirmaInd,
	dbo.Ayarlar.OtomasyonKsslFirmaAdi,
	dbo.Ayarlar.OtomasyonKsslFirmaKodu,
	dbo.Ayarlar.OtomasyonKsslFirmaInd,
	dbo.Ayarlar.SayacAktarmaKodu,
	dbo.Ayarlar.SayacAktarmaKodu2
	, dbo.Ayarlar.SiraliMi
	, dbo.Ayarlar.OtomasyonKartlar
	, dbo.Ayarlar.KredMusSatGrup
	, dbo.Ayarlar.KKGunSonuVardiyaOnay
	, dbo.Ayarlar.PartnerCardFirmaInd
	, dbo.Ayarlar.PartnerCardFirmaKodu
	, dbo.Ayarlar.PartnerCardFirmaAdi
	, dbo.Ayarlar.GiftCardFirmaInd
	, dbo.Ayarlar.GiftCardFirmaKodu
	, dbo.Ayarlar.GiftCardFirmaAdi
	, dbo.Ayarlar.PromosyonSatisiniGiderlestir
	, dbo.Ayarlar.XmlVersiyon
	, dbo.Ayarlar.PlakaIleEslestir
	, dbo.Ayarlar.VardiyaDisariAktar
	, dbo.Ayarlar.VardiyaDisariAktarFormat
	, dbo.Ayarlar.VardiyaDisariAktarEPosta
	, dbo.Ayarlar.VardiyaDisariAktarGeriden
	, dbo.Ayarlar.SatisFiyatiniGuncelleme
	, dbo.Ayarlar.OtomasyonFirmasi
	, dbo.Ayarlar.VTSKaydet
	, dbo.Ayarlar.GenelSayi
	, dbo.Ayarlar.GenelMetin
	, dbo.Ayarlar.TTSDisiSatislardaPlakaUzerindenVeresiyeFisKaydi
	, dbo.Ayarlar.MobilKKHesapInd
	, dbo.Ayarlar.MobilKKHesapKodu
	, dbo.Ayarlar.MobilKKHesapAdi
	, dbo.Ayarlar.BelgeNumarasinaGoreSirala
	, dbo.Ayarlar.FiloKoduKontroluYapilsin
	, dbo.Ayarlar.BP
FROM
	dbo.Ayarlar  WITH(NOLOCK) LEFT OUTER JOIN
    dbo.PersonelGruplari  WITH(NOLOCK) ON dbo.Ayarlar.PersonelGrupInd = dbo.PersonelGruplari.Ind





GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VardiyaCikis]
AS
SELECT 
	Owner,
	VardiyaKartInd,
	'Kredi kartlı satış' AS ListeAdi,
	Tutar
FROM Hareketler  WITH(NOLOCK)
WHERE (TipInd = 54 OR TipInd = 10)

UNION ALL

SELECT 
	Hareketler.Owner,
	Basliklar.VardiyaKartInd,
	'Kredili satış' AS ListeAdi,
	CASE WHEN (b.OtomasyonVardiyaInd > 0) THEN Tutar
	ELSE Miktar*Carpan*Fiyat
	END AS Tutar
FROM Hareketler  WITH(NOLOCK)
LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind	
LEFT JOIN Basliklar as b  WITH(NOLOCK) ON b.Ind = Basliklar.VardiyaKartInd	
WHERE (Hareketler.TipInd=41 OR Hareketler.TipInd=37)

UNION ALL

SELECT 
	Hareketler.Owner,
	VardiyaKartInd,
	'Giderler' AS ListeAdi,
	CASE  WHEN (Hareketler.TipInd in (26,49,13,50,17,52,11,53))
	THEN Hareketler.Tutar*Hareketler.Kur 
	WHEN (Hareketler.TipInd in (18,51))
	THEN Hareketler.Tutar
	ELSE 0
	END AS Tutar
	FROM Hareketler  WITH(NOLOCK)

UNION ALL

SELECT 
	Hareketler.Owner,
	VardiyaKartInd,
	'Vardiya Nakit' AS ListeAdi,
	Hareketler.Tutar*Hareketler.Kur AS Tutar
	FROM Hareketler  WITH(NOLOCK)
	WHERE (Hareketler.TipInd = 42 OR Hareketler.TipInd = 38)


GO
CREATE VIEW [dbo].[VardiyaEkstraSmartStokListesi]
AS
SELECT
H.Owner, 
B.Tarih, 
SUM(H.Tutar) AS Tutar,
S.Ind AS StokInd, 
S.StokKodu, 
S.StokAdi, 
H.CariHesapKodu, 
H.CariHesapInd, 
H.CariHesapAdi
FROM Hareketler H  WITH(NOLOCK)
INNER JOIN Basliklar B  WITH(NOLOCK)
ON H.VardiyaKartInd = B.Ind
INNER JOIN Stoklar S  WITH(NOLOCK)
ON H.StokInd = S.Ind
WHERE H.TipInd = 13 
GROUP BY H.Owner,B.Tarih,S.Ind, S.StokKodu, S.StokAdi, H.CariHesapKodu,H.CariHesapInd, H.CariHesapAdi

GO
GO
CREATE VIEW [dbo].[VardiyaEmtiaTutarListesi]
AS
SELECT 
	H.Ind,
	H.TipInd,
	H.Owner,
	B.Tarih,
	H.StokInd,
	H.StokKodu, 
	H.StokAdi, 
	H.Miktar,
	H.Fiyat,
	H.KDVOrani
FROM Hareketler H  WITH(NOLOCK)
INNER JOIN Basliklar B  WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind
WHERE 
	H.TipInd IN (40)
GO


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VardiyaEskiOtomasyonHariciSayacToplamlari]
AS
	SELECT 
		 *
	  FROM
		(SELECT 
			NULL AS Owner,
			MIN(EskiEndeks) AS EskiEndeks,
			MIN(EskiEndeks)+SUM(YeniEndeks-EskiEndeks) AS YeniEndeks,
			SUM(Tutar) as Tutar,	
			VardiyaKartInd,
			SUM(YeniEndeks-EskiEndeks-Aktarma) AS Fark
		FROM
			Hareketler  WITH(NOLOCK)
		INNER JOIN HesapDetaylari HD  WITH(NOLOCK) ON HD.Ind = Hareketler.SayacInd
		WHERE Hareketler.TipInd = 39 AND HD.TipInd = 402 AND HD.OtomasyonAktif IS NOT NULL AND HD.OtomasyonAktif = 0
		GROUP BY 
			VardiyaKartInd) AS VardiyaEskiSayaclarWithTumSubelerinSayacinaAitDepoStoklarla
	    WHERE
		VardiyaEskiSayaclarWithTumSubelerinSayacinaAitDepoStoklarla.EskiEndeks != VardiyaEskiSayaclarWithTumSubelerinSayacinaAitDepoStoklarla.YeniEndeks
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VardiyaEskiSayacToplamlari]
AS
	SELECT 
		*
	FROM
		(SELECT 
			NULL AS Owner,
			MIN(EskiEndeks) AS EskiEndeks,
			MIN(EskiEndeks)+SUM(YeniEndeks-EskiEndeks) AS YeniEndeks,
			SUM(Tutar) as Tutar,	
			VardiyaKartInd,
			SUM(YeniEndeks-EskiEndeks-Aktarma) AS Fark
		FROM
			Hareketler  WITH(NOLOCK)
		LEFT JOIN SayacaAitDepoStok  WITH(NOLOCK) ON SayacaAitDepoStok.Ind = Hareketler.SayacInd  
		WHERE TipInd = 39
		GROUP BY 
			VardiyaKartInd) AS VardiyaEskiSayaclarWithTumSubelerinSayacinaAitDepoStoklarla
	WHERE
		VardiyaEskiSayaclarWithTumSubelerinSayacinaAitDepoStoklarla.EskiEndeks != VardiyaEskiSayaclarWithTumSubelerinSayacinaAitDepoStoklarla.YeniEndeks
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VardiyaGelirToplam]
AS
	SELECT
		NULL AS Owner
		, VardiyaKartInd,
		SUM
		(
			CASE WHEN (TipInd!=20)
				THEN ISNULL(Tutar*Kur,0) 
			ELSE ISNULL(Tutar,0) END
		)	
		AS Tutar
	FROM 
		Hareketler  WITH(NOLOCK)
	WHERE
		(
			TipInd=25 
			or TipInd=9 
			or TipInd= 20 
			or TipInd=19 
			or TipInd=11
		)
	GROUP BY
		VardiyaKartInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VardiyaGiderToplam]
AS
	SELECT
		NULL AS Owner
		, VardiyaKartInd,
		SUM
		(
			CASE WHEN (TipInd!=18)
			THEN ISNULL(Tutar*Kur,0) 
			ELSE ISNULL(Tutar,0) END
		)	
		AS Tutar
	FROM 
		Hareketler  WITH(NOLOCK)
	WHERE
		(
			TipInd=26 
			or TipInd=13 
			or TipInd= 18 
			or TipInd=17
		)
	GROUP BY
		VardiyaKartInd
GO
CREATE VIEW [dbo].[VardiyaKartGelirGider]
AS
SELECT     Ind, Owner, VardiyaKartInd, TipInd, Tutar, Aciklama, GirisTarihi, VadeTarihi, ParaBirimi, GiderInd, GelirInd, CASE WHEN (TipInd = 25) 
                      THEN 'Gelir001' WHEN (TipInd IN(9,533)) THEN CariHesapKodu WHEN (TipInd = 20) THEN PersonelHesapKodu ELSE BankaHesapKodu END AS GelirKodu, 
                      CASE WHEN (TipInd = 25) THEN 'KasaGelir' WHEN (TipInd IN(9,533)) THEN CariHesapAdi WHEN (TipInd = 20) 
                      THEN PersonelHesapAdi ELSE BankaHesapAdi END AS GelirAdi, CASE WHEN (TipInd = 26) THEN 'Gider001' WHEN (TipInd = 13) 
                      THEN CariHesapKodu WHEN (TipInd = 18) THEN PersonelHesapKodu WHEN (TipInd = 17) THEN BankaHesapKodu WHEN (TipInd = 49) THEN GiderKodu ELSE CekNo END AS GiderKodu, 
                      CASE WHEN (TipInd = 25) THEN 'KasaGelir' WHEN (TipInd IN(9,533)) THEN CariHesapAdi WHEN (TipInd = 20) THEN PersonelHesapAdi WHEN (TipInd = 19) 
                      THEN BankaHesapAdi WHEN (TipInd = 49) THEN GiderAdi ELSE 'Çek' END AS GiderAdi, CariHesapInd, CariHesapKodu, CariHesapAdi, BankaHesapInd, BankaHesapKodu, 
                      BankaHesapAdi, PersonelHesapInd, PersonelHesapKodu, PersonelHesapAdi, CekNo, Kur, Fiyat, Miktar
FROM         Hareketler  WITH(NOLOCK)



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VardiyaKartInds]
AS
	SELECT TipInd,Owner,Ind,Tarih,VardiyaNo,KartNo,OtomasyonVardiyaInd FROM Basliklar  WITH(NOLOCK) WHERE TipInd=108 or TipInd=109
GO
CREATE VIEW [dbo].[VardiyaKKTutarListesi]
AS
SELECT 
	H.Ind,
	H.TipInd,
	H.Owner,
	B.Tarih AS Tarih, 
	H.GirisTarihi,
	H.CariHesapInd, 
	H.CariHesapKodu, 
	H.CariHesapAdi,
	H.Aciklama,
	H.KKHesapInd,
	H.KKHesapKodu,
	H.KKHesapAdi,
	H.VardiyaKartInd,
	HS2.MuhasebeKodu AS KKMuhHesapKodu,
	HS3.Ind AS BankaHesapInd,
	HS3.HesapKodu AS BankaHesapKodu,
	HS3.HesapAdi AS BankaHesapAdi,
	HS3.BankaAdi,
	H.Tutar,
	H.Aktarildi
FROM Hareketler H  WITH(NOLOCK)
LEFT JOIN Hesaplar HS2  WITH(NOLOCK) ON H.KKHesapInd = HS2.Ind
LEFT JOIN Hesaplar HS3  WITH(NOLOCK) ON HS2.BankaInd = HS3.Ind
LEFT JOIN Basliklar B  WITH(NOLOCK) ON H.BaslikInd = B.Ind
WHERE 
	H.TipInd IN (10,533)



GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VardiyaNakitTahsilatListesiToplamlari]
AS
	SELECT
		NULL AS Owner,
		h.VardiyaKartInd,
		SUM(h.Tutar * h.Kur) as Tutar
	FROM 
		Hareketler as h  WITH(NOLOCK)
	WHERE 
		h.TipInd = 38 
		OR h.TipInd = 42
	GROUP BY
		h.VardiyaKartInd
GO
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[VardiyaOtomasyonHariciSatisAdetleri]
AS
	SELECT
		NULL AS Owner,
		VardiyaKartInd,
		COUNT(*)  as SatisAdedi 
	FROM 
		Hareketler H  WITH(NOLOCK) INNER JOIN HesapDetaylari HD  WITH(NOLOCK) ON H.SayacInd = HD.Ind
	WHERE 
		HD.OtomasyonAktif = 0 
		AND (H.TipInd = 39 OR H.TipInd = 44)
		AND H.EskiEndeks != H.YeniEndeks 
		AND H.Tutar != 0 AND H.TeslimTarihi IS NOT NULL
	GROUP BY
		VardiyaKartInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VardiyaPerakendeTahsilatlar]
AS

SELECT H.Ind,
	H.Owner,
	H.TipInd AS HareketTipInd,
	H.KKHesapAdi,
	H.KKHesapInd,
	H.KKHesapKodu,
	H.GirisTarihi,
	H.VadeTarihi,
	H.VardiyaKartInd,
	H.Aciklama,
	ISNULL(H.ParaBirimi,'TL') AS ParaBirimi,
	H.Tutar,
	H.KDVOrani,
	H.GunSonu,
	ISNULL(H.Aktarildi, 0) AS Aktarildi,
	v.Ind AS OtomasyonVardiyaInd,
	v.VardiyaNo AS OtomasyonVardiyaNo,
	v.VardiyaTarihi AS OtomasyonVardiyaTarihi,
	k.Ind AS VardiyaKartsInd,
	k.KartNo,
	k.VardiyaNo,
	k.TipInd AS VardiyaTipInd
FROM OtomasyonVardiya v  WITH(NOLOCK)
INNER JOIN VardiyaKartInds k  WITH(NOLOCK) ON k.OtomasyonVardiyaInd = v.Ind
INNER JOIN Hareketler H  WITH(NOLOCK) ON H.VardiyaKartInd = k.Ind
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VardiyaPerakendeToplmalari]
AS
	SELECT
		NULL AS Owner,
		VardiyaKartInd,
		SUM(Miktar * Fiyat * Carpan) as Tutar
	FROM 
		Hareketler  WITH(NOLOCK)
	WHERE 
		TipInd = 40
	GROUP BY
		VardiyaKartInd
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
create VIEW [dbo].[VardiyaPersonelSayisi]
AS
	select 
		VardiyaKartInd
		, count(*) as Sayi 
	from 
		hareketler  WITH(NOLOCK)
	WHERE 
		(
			TipInd = 33
			OR TipInd = 35
		)
	GROUP BY 
		VardiyaKartInd
GO
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE VIEW [dbo].[VardiyaPlakaFiloAdetleri]
AS
	SELECT
		NULL AS Owner,
		VardiyaKartInd,
		count(DISTINCT PlakaNo) AS PlakaFiloAdedi
	FROM 
        Basliklar  WITH(NOLOCK)
	WHERE 
		VardiyaKartInd IS NOT NULL AND VardiyaKartInd != 0 AND PlakaNo IS NOT NULL AND PlakaNo != '' AND TipInd = 111
	GROUP BY
		VardiyaKartInd
GO
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE VIEW [dbo].[VardiyaSatisAdetleri]
AS
	SELECT
		NULL AS Owner,
		VardiyaKartInd,
		COUNT(*)  as SatisAdedi 
	FROM 
		Hareketler  WITH(NOLOCK)
	WHERE 
		(TipInd = 39 OR TipInd = 44) 
		AND EskiEndeks != YeniEndeks 
		AND Tutar != 0 
		AND TeslimTarihi IS NOT NULL
	GROUP BY
		VardiyaKartInd

GO
CREATE VIEW [dbo].[VardiyaTTSCariListesi]
AS
SELECT
BV.Tarih,
H.Owner,
B.HesapKodu AS CariKodu,
B.HesapInd AS CariInd,
B.HesapAdi AS CariAdi,
SUM(H.Miktar) AS Miktar,
SUM(H.Tutar) AS Tutar
FROM Basliklar B  WITH(NOLOCK) INNER JOIN Hareketler H  WITH(NOLOCK)
ON B.Ind = H.BaslikInd 
INNER JOIN Basliklar BV  WITH(NOLOCK)
ON H.VardiyaKartInd = BV.Ind
WHERE H.TipInd = 37
AND BV.TipInd = 108
GROUP BY
bv.Tarih,
H.Owner,
B.HesapKodu,
B.HesapInd,
B.HesapAdi
GO
GO
CREATE VIEW [dbo].[VardiyaTTSCariStokListesi]
AS
SELECT
BV.Tarih,
H.Owner,
B.HesapKodu AS CariKodu,
B.HesapInd AS CariInd,
B.HesapAdi AS CariAdi,
H.StokKodu AS StokKodu,
H.StokInd AS StokInd,
H.StokAdi AS StokAdi,
SUM(H.Miktar) AS Miktar,
SUM(H.Tutar) AS Tutar
FROM Basliklar B  WITH(NOLOCK) INNER JOIN Hareketler H  WITH(NOLOCK)
ON B.Ind = H.BaslikInd 
INNER JOIN Basliklar BV  WITH(NOLOCK)
ON H.VardiyaKartInd = BV.Ind
WHERE H.TipInd = 37
AND BV.TipInd = 108
GROUP BY
bv.Tarih,
H.Owner,
B.HesapKodu,
B.HesapInd,
B.HesapAdi,
H.StokKodu,
H.StokInd,
H.StokAdi
GO
GO
CREATE VIEW [dbo].[VardiyaTTSStokListesi]
AS
SELECT
BV.Tarih,
H.Owner,
H.StokInd,
H.StokKodu,
H.StokAdi,
SUM(H.Miktar) AS Miktar,
SUM(H.Tutar) AS Tutar
FROM Basliklar B  WITH(NOLOCK) INNER JOIN Hareketler H  WITH(NOLOCK)
ON B.Ind = H.BaslikInd 
INNER JOIN Basliklar BV  WITH(NOLOCK)
ON H.VardiyaKartInd = BV.Ind
WHERE H.TipInd = 37
AND BV.TipInd = 108
GROUP BY
bv.Tarih,
H.Owner,
H.StokInd,
H.StokKodu,
H.StokAdi
GO

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VardiyaTtsToplam]
AS
	SELECT 
		NULL AS Owner
		, v.Ind
		, ISNULL(SUM(h.Tutar),0) AS TtsToplam
	FROM 
		Hareketler as h  WITH(NOLOCK)
		LEFT JOIN VardiyaKartInds as v  WITH(NOLOCK) on h.VardiyaKartInd = v.Ind
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON h.BaslikInd = b.Ind
	WHERE
		(b.TipInd = 111)
		AND  b.VardiyaKartInd IN (
									SELECT
										h.VardiyaKartInd
									FROM 
										Hareketler as h  WITH(NOLOCK)
										LEFT JOIN VardiyaKartInds as v  WITH(NOLOCK) on h.VardiyaKartInd = v.Ind
									WHERE
										h.TipInd = 35
										AND PersonelHesapAdi LIKE '%Elektronik Pompacı%'
								 )
	GROUP BY
		v.Ind
		--AND v.Ind = @vardiyaInd

GO
CREATE VIEW [dbo].[VardiyaTumSayaclar]
AS
	SELECT 
		DISTINCT TOP 10000
		HesapDetaylari.SayacKodu,
		HesapDetaylari.SayacAdi,
		HesapDetaylari.Owner,
		Hareketler.EskiEndeks,
		Hareketler.YeniEndeks,
		Hareketler.VardiyaKartInd,
		Hareketler.Aktarma,
		(Hareketler.YeniEndeks-Hareketler.EskiEndeks) as Fark,
		StokDetaylari.Tutar as Fiyat,
		((Hareketler.YeniEndeks-Hareketler.EskiEndeks)*StokDetaylari.Tutar*(1+KDVOrani.SatisKDVOrani/100)) as Tutar
	FROM HesapDetaylari  WITH(NOLOCK)
		LEFT JOIN hareketler  WITH(NOLOCK) ON HesapDetaylari.Ind=hareketler.SayacInd
		LEFT JOIN Hesaplar  WITH(NOLOCK) ON HesapDetaylari.DepoInd=Hesaplar.Ind
		LEFT JOIN StokDetaylari  WITH(NOLOCK) ON StokDetaylari.StokInd=Hesaplar.StokInd AND StokDetaylari.IsAnaFiyat=1
		LEFT JOIN KDVOrani  WITH(NOLOCK) ON dbo.StokDetaylari.StokInd = dbo.KDVOrani.Ind
	order by HesapDetaylari.SayacKodu

GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[VTSVeresiyeleri]
AS
SELECT     
dbo.Basliklar.Owner, 
dbo.Basliklar.Ind, 
dbo.Basliklar.VardiyaKartInd, 
dbo.Basliklar.Tarih, 
dbo.Hareketler.PersonelHesapInd, 
dbo.Hareketler.PersonelHesapKodu, 
dbo.Hareketler.PersonelHesapAdi
FROM  dbo.Basliklar  WITH(NOLOCK)
INNER JOIN dbo.Hareketler  WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
WHERE     (dbo.Basliklar.TipInd = 110) AND (dbo.Hareketler.PersonelHesapInd IS NOT NULL)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [dbo].[YVardiyaPersonelList]
AS
SELECT TOP 10000
	B.Ind AS VardiyaKartInd, 
	B.Owner, 
	B.Baslangic, 
	B.Bitis, 
	H.PersonelHesapInd, 
	H.PersonelHesapKodu, 
	H.PersonelHesapAdi,B.KartNo
FROM  Basliklar AS B  WITH(NOLOCK)
LEFT OUTER JOIN dbo.Hareketler AS H  WITH(NOLOCK) ON B.Ind = H.VardiyaKartInd
WHERE     (B.TipInd = 109) AND (H.TipInd = 33)
ORDER BY B.KartNo ASC
GO
CREATE FUNCTION [dbo].[AcikSayimKontrol]
(
	@DepoInd INT,
	@TipInd INT 
)

RETURNS 
TABLE 
AS
RETURN 
(
	SELECT COUNT(Ind) AS Sonuc, 0 As Owner FROM Hareketler H 
	WHERE H.DepoInd = @DepoInd AND H.TipInd = @TipInd
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[AdaGetir]
(	
	@AdaGrups nvarchar(200)
)
RETURNS TABLE 
AS
RETURN
(
	SELECT DISTINCT AdaGrubu, HesapDetaylari.Owner 
	FROM HesapDetaylari  WITH(NOLOCK)
	LEFT JOIN Hesaplar  WITH(NOLOCK) ON HesapDetaylari.DepoInd=Hesaplar.Ind
	WHERE	HesapDetaylari.TipInd=402 AND Hesaplar.StokInd IS NOT NULL AND
			HesapDetaylari.AdaGrubu NOT IN (SELECT * FROM fnSplit(@AdaGrups,','))
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[AkaryakitCikanMiktar] 
(	
	@StokInd nvarchar(4000),
	@VardiyaKartInds nvarchar(max)
)
RETURNS 
@Dokum TABLE 
(
	Owner int,
	StokInd int,
	Cikan decimal(28,8)
)
AS
BEGIN
		INSERT INTO @Dokum
		SELECT
			Hareketler.Owner,
			@StokInd as StokInd,
			SUM(CASE WHEN (Hareketler.TipInd IN (44))
				THEN ABS(Hareketler.YeniEndeks-Hareketler.EskiEndeks)
				ELSE 0
				END) AS Cikan
		FROM Hareketler  WITH(NOLOCK)
		LEFT JOIN HesapDetaylari  WITH(NOLOCK) ON Hareketler.SayacInd = HesapDetaylari.Ind
		LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = HesapDetaylari.DepoInd
		left JOIN Stoklar  WITH(NOLOCK) ON Hesaplar.StokInd = Stoklar.Ind
		WHERE 
			Hareketler.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,',')) 
			AND Hareketler.TipInd IN (44)
			AND Stoklar.Ind = @StokInd
		GROUP BY
			Hareketler.Owner

		
		DECLARE @x int
		SELECT 
			@x=COUNT(*) 
		FROM Hareketler  WITH(NOLOCK)
		LEFT JOIN HesapDetaylari  WITH(NOLOCK) ON Hareketler.SayacInd = HesapDetaylari.Ind
		LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = HesapDetaylari.DepoInd
		left JOIN Stoklar  WITH(NOLOCK) ON Hesaplar.StokInd = Stoklar.Ind
		WHERE 
			Hareketler.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,',')) 
			AND Hareketler.TipInd IN (44)
			AND Stoklar.Ind = @StokInd

		IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
			Stoklar.Owner,
			@StokInd as StokInd,
			0 as Cikan
		FROM Stoklar  WITH(NOLOCK)
		WHERE Stoklar.Ind = @StokInd

	RETURN
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[AkaryakitMiktari] 
(	
	@StokInd nvarchar(4000),
	@DepoInds nvarchar(max),
	@tarih datetime,
	@VardiyaKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	WITH HareketDokumu(Owner,StokInd,StokKodu,StokAdi,Devir,SatisFiyati)
	AS
	(
		SELECT * FROM AkaryakitMiktariDevir(@StokInd,@DepoInds,@tarih)
	)
	
	SELECT
		HareketDokumu.Owner,
		HareketDokumu.StokInd,
		HareketDokumu.StokKodu,
		HareketDokumu.StokAdi,
		HareketDokumu.Devir,
		HareketDokumu.SatisFiyati,
		SUM(CASE WHEN (Hareketler.TipInd IN (44))
			THEN Hareketler.YeniEndeks-Hareketler.EskiEndeks
			ELSE 0
			END) AS Cikan,
		 ((0 + SUM(CASE WHEN (Hareketler.TipInd IN (44))
							 THEN Hareketler.YeniEndeks-Hareketler.EskiEndeks
							 ELSE 0
							 END))*HareketDokumu.SatisFiyati) as Tutar,
		(HareketDokumu.Devir - SUM(CASE WHEN (Hareketler.TipInd IN (44))
							THEN Hareketler.YeniEndeks-Hareketler.EskiEndeks
							ELSE 0
							END)) as KalanMiktar,
		((HareketDokumu.Devir - SUM(CASE WHEN (Hareketler.TipInd IN (44))
							 THEN Hareketler.YeniEndeks-Hareketler.EskiEndeks
							 ELSE 0
							 END))*HareketDokumu.SatisFiyati) as KalanTutar
	FROM HareketDokumu   WITH(NOLOCK)	
	LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.StokInd = HareketDokumu.StokInd
	LEFT JOIN HesapDetaylari  WITH(NOLOCK) ON HesapDetaylari.DepoInd = Hesaplar.Ind
	LEFT JOIN Hareketler  WITH(NOLOCK) ON Hareketler.SayacInd = HesapDetaylari.Ind AND Hareketler.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
	GROUP BY
		HareketDokumu.Owner,
		HareketDokumu.StokInd,
		HareketDokumu.StokKodu,
		HareketDokumu.StokAdi,
		HareketDokumu.Devir,
		HareketDokumu.SatisFiyati
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[AkaryakitMiktariButun] 
(	
	@DepoInds nvarchar(max),
	@tarih datetime,
	@VardiyaKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	WITH HareketDokumu(Owner,StokInd,StokKodu,StokAdi,Devir,SatisFiyati)
	AS
	(
		SELECT * FROM AkaryakitMiktariDevirButun(@DepoInds,@tarih)
	)
	
	SELECT
		HareketDokumu.Owner,
		HareketDokumu.StokInd,
		HareketDokumu.StokKodu,
		HareketDokumu.StokAdi,
		HareketDokumu.Devir,
		HareketDokumu.SatisFiyati,
		SUM(CASE WHEN (Hareketler.TipInd IN (44))
			THEN Hareketler.YeniEndeks-Hareketler.EskiEndeks
			ELSE 0
			END) AS Cikan,
		(HareketDokumu.Devir - SUM(CASE WHEN (Hareketler.TipInd IN (44))
							THEN ABS(Hareketler.YeniEndeks-Hareketler.EskiEndeks)
							ELSE 0
							END)) as KalanMiktar,
		((HareketDokumu.Devir - SUM(CASE WHEN (Hareketler.TipInd IN (44))
							 THEN ABS(Hareketler.YeniEndeks-Hareketler.EskiEndeks)
							 ELSE 0
							 END))*HareketDokumu.SatisFiyati) as KalanTutar
	FROM HareketDokumu   WITH(NOLOCK)	
	LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.StokInd = HareketDokumu.StokInd
	LEFT JOIN HesapDetaylari  WITH(NOLOCK) ON HesapDetaylari.DepoInd = Hesaplar.Ind
	LEFT JOIN Hareketler  WITH(NOLOCK) ON Hareketler.SayacInd = HesapDetaylari.Ind AND Hareketler.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
	GROUP BY
		HareketDokumu.Owner,
		HareketDokumu.StokInd,
		HareketDokumu.StokKodu,
		HareketDokumu.StokAdi,
		HareketDokumu.Devir,
		HareketDokumu.SatisFiyati
)
GO
CREATE FUNCTION [dbo].[AkaryakitMiktariForEskiVardiya] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT
		Owner,
		StokInd,
		StokKodu,
		StokAdi,
		EskiEndeks as Devir,
		SatisFiyati,
		(YeniEndeks-ISNULL(Aktarma,0)) as Cikan,
		YeniEndeks * SatisFiyati as Tutar,
		EskiEndeks-YeniEndeks as KalanMiktar,
		(EskiEndeks-YeniEndeks-ISNULL(Aktarma,0))	*SatisFiyati as KalanTutar
	FROM Hareketler as h1 	 WITH(NOLOCK)
	WHERE 
		h1.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
		AND TipInd = 71
)




GO
CREATE VIEW [dbo].[AktifAlisFaturalariAkaryakit]
AS
SELECT
	dbo.Basliklar.Ind, 
	dbo.Basliklar.BelgeNo, 
	dbo.Basliklar.Tarih,
	dbo.Basliklar.OdemeTarihi,
	dbo.Basliklar.Aciklama, 
	dbo.Basliklar.HesapInd, 
	dbo.Basliklar.HesapKodu, 
	dbo.Basliklar.HesapAdi,
	dbo.Basliklar.Yuvarlama,
	dbo.Basliklar.Iskonto, 
	ISNULL
	(
		SUM
		(
			(
				ISNULL
				(
					dbo.Hareketler.NetMiktar
					, dbo.Hareketler.Miktar
				) 
				* 
				dbo.Hareketler.Fiyat 
				- 
				dbo.Hareketler.Iskonto
			) 
			* 
			(
				1 
				+ 
				dbo.Hareketler.KDVOrani 
				/ 
				100
			) 
			* 
			(
				1
				-
				A.IskontoOran
				/
				100
			)
		)
		,0
	)
	+ 
	dbo.Basliklar.Yuvarlama  
	+
	ISNULL
	(
		(
			SELECT SUM
				   (
					h3.Tutar
					*
					(
						100
						/
						(
							100
							+
							h3.KDVOrani
						)
					)
					*
					(
						1
						+
						h3.KDVOrani
						/
						100
					)
					*
					(
						1
						-
						A.IskontoOran
						/
						100
					)
				   ) 
			FROM 
				Hareketler AS h3  WITH(NOLOCK)
				left join AlisFaturasiIskontoOranlari as A  WITH(NOLOCK) on A.Ind = h3.BaslikInd 
			WHERE 
				h3.BaslikInd = Basliklar.Ind 
				AND h3.TipInd = 57
		)
		, 0
	) AS Tutar, 
	ISNULL
	(
		ISNULL
		(
			SUM
			(
				dbo.Hareketler.Iskonto
			)
			, 0
		)
		+
		(dbo.Basliklar.Iskonto)
		, 0
	) ToplamIskonto,
	dbo.Basliklar.Owner
	FROM 
		dbo.Basliklar  WITH(NOLOCK)
		INNER JOIN dbo.Hareketler  WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
		LEFT JOIN AlisFaturasiIskontoOranlari as A   WITH(NOLOCK) on A.Ind = Basliklar.Ind
	WHERE 
		(dbo.Basliklar.Aktif IS NULL OR dbo.Basliklar.Aktif = 1) 
		AND (dbo.Basliklar.TipInd = 101) 
		AND (dbo.Hareketler.TipInd = 3 or dbo.Hareketler.TipInd = 57)
		AND (dbo.Hareketler.StokInd IN (SELECT IND FROM dbo.AkaryakitStoklari))
	GROUP BY 
		dbo.Basliklar.Ind, 
		dbo.Basliklar.BelgeNo, 
		dbo.Basliklar.Tarih,
		dbo.Basliklar.OdemeTarihi,
		dbo.Basliklar.Aciklama, 
		dbo.Basliklar.HesapInd, 
		dbo.Basliklar.HesapKodu, 
		dbo.Basliklar.HesapAdi, 
		dbo.Basliklar.Iskonto, 
		dbo.Basliklar.Owner, 
		dbo.Basliklar.Yuvarlama


GO
GO
CREATE FUNCTION [dbo].[AktifGenelFaturalar]
(	
	@hbaslangic nvarchar(100),
	@hbitis nvarchar(100),
	@baslangic datetime,
	@bitis datetime,
	@tip int
)
RETURNS @Liste TABLE 
(
	HesapInd int,
	HesapAdi varchar(max),
	Owner int,
	HesapKodu varchar(max),
	FaturaTipi int,
	Tutar decimal(28, 8),
	ToplamIskonto decimal(28, 8)
)
AS
BEGIN
	IF(@tip=1 OR @tip=2)
	BEGIN
		INSERT INTO @Liste
		SELECT
				asf.HesapInd,
				h.HesapAdi,
				h.Owner,
				asf.HesapKodu,
				asf.FaturaTipi,
				SUM(asf.Tutar) AS Tutar,
				SUM(asf.ToplamIskonto) AS ToplamIskonto
		FROM
				AktifSatisFaturalari AS asf  WITH(NOLOCK)
				LEFT JOIN Hesaplar as h ON asf.HesapInd = h.Ind
		WHERE (asf.Tarih >= @baslangic AND asf.Tarih <= @bitis) AND (h.HesapKodu >= @hbaslangic AND h.HesapKodu <= @hbitis) AND (asf.FaturaTipi = @tip)
		GROUP BY
				asf.HesapInd,
				h.HesapAdi,
				asf.HesapKodu,
				asf.FaturaTipi,
				h.Owner
	END
	IF(@tip=0)
	BEGIN
		INSERT INTO @Liste
		SELECT
				aaf.HesapInd,
				h.HesapAdi,
				h.Owner,
				aaf.HesapKodu,
				0 FaturaTipi,
				SUM(aaf.Tutar) AS Tutar,
				SUM(aaf.ToplamIskonto) AS ToplamIskonto
		FROM
				AktifAlisFaturalari AS aaf  WITH(NOLOCK)
				LEFT JOIN Hesaplar as h  WITH(NOLOCK) ON aaf.HesapInd = h.Ind
		WHERE (aaf.Tarih >= @baslangic AND aaf.Tarih <= @bitis) AND (h.HesapKodu >= @hbaslangic AND h.HesapKodu <= @hbitis)
		GROUP BY
				aaf.HesapInd,
				h.HesapAdi,
				aaf.HesapKodu,
				h.Owner
	END
	IF(@tip=3)
	BEGIN
		INSERT INTO @Liste
		SELECT
				asf.HesapInd,
				h.HesapAdi,
				h.Owner,
				asf.HesapKodu,
				3 FaturaTipi,
				SUM(asf.Tutar) AS Tutar,
				SUM(asf.ToplamIskonto) AS ToplamIskonto
		FROM
				AktifSatisFaturalari AS asf  WITH(NOLOCK)
				LEFT JOIN Hesaplar as h  WITH(NOLOCK) ON asf.HesapInd = h.Ind
		WHERE (asf.Tarih >= @baslangic AND asf.Tarih <= @bitis) AND (h.HesapKodu >= @hbaslangic AND h.HesapKodu <= @hbitis)
		GROUP BY
				asf.HesapInd,
				h.HesapAdi,
				asf.HesapKodu,
				h.Owner
	END
	IF(@tip=4)
	BEGIN
		INSERT INTO @Liste
		SELECT
			aaf.HesapInd,
			h.HesapAdi,
			h.Owner,
			aaf.HesapKodu,
			4 FaturaTipi,
			SUM(aaf.Tutar) AS Tutar,
			SUM(aaf.ToplamIskonto) AS ToplamIskonto
		FROM
			AktifAlisFaturalari AS aaf  WITH(NOLOCK)
			LEFT JOIN Hesaplar as h  WITH(NOLOCK) ON aaf.HesapInd = h.Ind
		WHERE (aaf.Tarih >= @baslangic AND aaf.Tarih <= @bitis) AND (h.HesapKodu >= @hbaslangic AND h.HesapKodu <= @hbitis) AND aaf.FaturaIadeMi = 1
		GROUP BY
			aaf.HesapInd,
			h.HesapAdi,
			aaf.HesapKodu,
			h.Owner		
	END
	IF(@tip=5)
	BEGIN
		INSERT INTO @Liste
		SELECT
			asf.HesapInd,
			h.HesapAdi,
			h.Owner,
			asf.HesapKodu,
			5 FaturaTipi,
			SUM(asf.Tutar) AS Tutar,
			SUM(asf.ToplamIskonto) AS ToplamIskonto
		FROM
			AktifSatisFaturalari AS asf  WITH(NOLOCK)
			LEFT JOIN Hesaplar as h  WITH(NOLOCK) ON asf.HesapInd = h.Ind
		WHERE (asf.Tarih >= @baslangic AND asf.Tarih <= @bitis) AND (h.HesapKodu >= @hbaslangic AND h.HesapKodu <= @hbitis) AND asf.FaturaIadeMi = 1
		GROUP BY
			asf.HesapInd,
			h.HesapAdi,
			asf.HesapKodu,
			h.Owner
	END
RETURN
END



GO



GO
CREATE FUNCTION [dbo].[AktifPerakendeSatislar] 
(	
	@Owner int,
	@StokKodu nvarchar(50)
)
RETURNS @dokum TABLE 
(
	Ind int,
	Owner int,
	TipInd int,
	StokInd int,
	StokKodu nvarchar(50),
	StokAdi nvarchar(100),
	Miktar decimal(28,13),
	Fiyat decimal(28,13),
	Tutar decimal(28,13),
	PerakendeKasaIslemTarihi DateTime
)
begin
		insert into @dokum
		SELECT 
			H.Ind,
			SK.Owner,
			H.TipInd,
			StokInd,
			StokKodu,
			StokAdi,
			SUM(Miktar) AS Miktar,
			Fiyat,
			SUM(Miktar*Fiyat) AS Tutar,
			H.PerakendeKasaIslemTarihi
		FROM Hareketler H  WITH(NOLOCK)
		INNER JOIN SatisKasasi SK  WITH(NOLOCK) ON H.Ind = SK.IslemInd
		WHERE SK.Owner = @Owner AND SK.Tablo = 'Hareketler'
			AND SK.IsYeniSatis = 1
			AND H.StokKodu = @StokKodu
			AND H.TipInd = 504
		GROUP BY
			H.Ind,
			SK.Owner,
			H.TipInd,
			StokInd,
			StokKodu,
			StokAdi,
			Fiyat,
			H.PerakendeKasaIslemTarihi
return
end


GO

CREATE FUNCTION [dbo].[AktifVeresiyeFisiCariBazli] 
(	
	@TipInd int,
	@VardiyaKartInds nvarchar(max)
)
RETURNS TABLE
AS
RETURN
(
	SELECT
		TOP 100 PERCENT 
		SUM(CASE WHEN (b.OtomasyonVardiyaInd >0)
			THEN dbo.Hareketler.Tutar
			ELSE dbo.Hareketler.Miktar * dbo.Hareketler.Fiyat
			END) AS Tutar, 
		SUM(dbo.Hareketler.Miktar) AS Miktar,
		dbo.Hareketler.Owner, 
		dbo.Basliklar.HesapInd, 
		dbo.Basliklar.HesapKodu, 
		dbo.Basliklar.HesapAdi
	FROM
		dbo.Basliklar  WITH(NOLOCK)
		INNER JOIN dbo.Hareketler  WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
		LEFT JOIN dbo.Basliklar as b  WITH(NOLOCK) ON b.Ind = dbo.Basliklar.VardiyaKartInd
	WHERE
		dbo.Basliklar.TipInd =  @TipInd
		AND dbo.Basliklar.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,',')) 
	GROUP BY 
		dbo.Hareketler.Owner, 
		dbo.Basliklar.HesapInd, 
		dbo.Basliklar.HesapKodu, 
		dbo.Basliklar.HesapAdi
	ORDER BY
		dbo.Basliklar.HesapKodu
)

GO



GO
CREATE FUNCTION [dbo].[AlisFaturasiAltToplam]
(	
	@BaslikInd int
)
RETURNS TABLE 
AS
RETURN 
(
SELECT 
	Basliklar.Owner as Owner,
	@BaslikInd AS BaslikInd,
	SUM
	(
		Hareketler.Miktar*Hareketler.Fiyat
	) as Matrah,
	
	SUM
	(
		Hareketler.Iskonto
	)+Basliklar.Iskonto as ToplamIndirim,
	-- fatura iskontosu
	Basliklar.Iskonto as FaturaIskontosu,
	--OTVTutar
	SUM
	(
		CASE 
			WHEN Hareketler.OTVTutar IS NULL
			THEN 0
			WHEN Hareketler.OTVTutar IS NOT NULL
			THEN Hareketler.Miktar*Hareketler.OTVTutar-Hareketler.Iskonto
		END
		--TODO
		--Hareketler.Miktar*Hareketler.Fiyat-Hareketler.Iskonto
	) as OTVTutar,
	--Ara Toplam	
	SUM
	(
		CASE 
			WHEN Hareketler.OTVTutar IS NULL
			THEN Hareketler.Miktar*Hareketler.Fiyat-Hareketler.Iskonto
			WHEN Hareketler.OTVTutar IS NOT NULL
			THEN Hareketler.Miktar*(Hareketler.Fiyat +Hareketler.OTVTutar)-Hareketler.Iskonto
		END
		--TODO
		--Hareketler.Miktar*Hareketler.Fiyat-Hareketler.Iskonto
	)-Basliklar.Iskonto as AraToplam,

	--kdv tutari
	SUM
	(
		(
			CASE 
				WHEN Hareketler.OTVTutar IS NULL
				THEN Hareketler.Miktar*Hareketler.Fiyat-Hareketler.Iskonto
				WHEN Hareketler.OTVTutar IS NOT NULL
				THEN Hareketler.Miktar*(Hareketler.Fiyat +Hareketler.OTVTutar)-Hareketler.Iskonto
			END
			--TODO
			--Hareketler.Miktar*Hareketler.Fiyat-Hareketler.Iskonto
		) * KDVOrani/100
	) * (1-Basliklar.Iskonto/SUM
	(
		CASE 
			WHEN Hareketler.OTVTutar IS NULL
			THEN Hareketler.Miktar*Hareketler.Fiyat-Hareketler.Iskonto
			WHEN Hareketler.OTVTutar IS NOT NULL
			THEN Hareketler.Miktar*(Hareketler.Fiyat +Hareketler.OTVTutar)-Hareketler.Iskonto
		END
		--TODO
		--Hareketler.Miktar*Hareketler.Fiyat-Hareketler.Iskonto
	)) as KDVTutari,
	-- yuvarlama
	Basliklar.Yuvarlama,
	-- net toplam
	(SUM
	(
		(
			CASE 
				WHEN Hareketler.OTVTutar IS NULL
				THEN Hareketler.Miktar*Hareketler.Fiyat-Hareketler.Iskonto
				WHEN Hareketler.OTVTutar IS NOT NULL
				THEN Hareketler.Miktar*(Hareketler.Fiyat +Hareketler.OTVTutar)-Hareketler.Iskonto
			END
		--TODO
		--Hareketler.Miktar*Hareketler.Fiyat-Hareketler.Iskonto
		) * (1+KDVOrani/100)
	) * (1-Basliklar.Iskonto/SUM
	(
		CASE 
			WHEN Hareketler.OTVTutar IS NULL
			THEN Hareketler.Miktar*Hareketler.Fiyat-Hareketler.Iskonto
			WHEN Hareketler.OTVTutar IS NOT NULL
			THEN Hareketler.Miktar*(Hareketler.Fiyat +Hareketler.OTVTutar)-Hareketler.Iskonto
		END
		--Hareketler.Miktar*Hareketler.Fiyat-Hareketler.Iskonto
	))) + Basliklar.Yuvarlama as NetToplam,
	'' as GTYaziyla,
	'' as OncekiBakiyeYaziIle,
	'' as SonrakiBakiyeYaziIle
FROM
Hareketler  WITH(NOLOCK)
LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
WHERE Basliklar.Ind=@BaslikInd
GROUP BY Basliklar.Iskonto,Basliklar.Owner, Basliklar.Yuvarlama
)



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[AlisFaturasiAltToplamForEkGiders]
(	
	@BaslikInd int
)
RETURNS TABLE 
AS
RETURN 
(
SELECT 
	CASE WHEN (Hareketler.TipInd = 57) 
	THEN
	SUM
	(
		Hareketler.Tutar*100/(100 + Hareketler.KDVOrani)
	) ELSE 0 
		ENd  as Matrah,
	
	CASE WHEN (Hareketler.TipInd = 57) 
	THEN	
	SUM
	(
		Hareketler.Tutar*100/(100 + Hareketler.KDVOrani)
	)ELSE 0 
		ENd as AraToplam,

	--kdv tutari
	CASE WHEN (Hareketler.TipInd = 57) 
	THEN
	SUM
	(
		Hareketler.Tutar - Hareketler.Tutar*100/(100 + Hareketler.KDVOrani)
	) ELSE 0 
		ENd as KDVTutari,
	
	-- net toplam
	CASE WHEN (Hareketler.TipInd = 57) 
	THEN
	SUM
	(
		Hareketler.Tutar
	)  ELSE 0
		ENd as NetToplam,
	'' as GTYaziyla,
	Basliklar.Owner as Owner
	
FROM
Hareketler  WITH(NOLOCK)
LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
WHERE Basliklar.Ind=@BaslikInd AND Hareketler.TipInd = 57
GROUP BY Basliklar.Iskonto,Basliklar.Owner,Basliklar.Yuvarlama,Hareketler.TipInd
)


GO
CREATE FUNCTION [dbo].[AlisFaturasiMiktarNetMiktar]
(
	@baslikInd INT
)
RETURNS  TABLE
AS
RETURN
(
	SELECT h.Ind,
	(
		SELECT 
			SUM(ISNULL(NetMiktar,Miktar)) / 
			CASE WHEN SUM(ISNULL(Miktar, 0)) = 0 THEN
			1
			ELSE
			SUM(Miktar)
			END
			FROM 
			hareketler  WITH(NOLOCK)
			WHERE baslikInd =h.BaslikInd and TipInd=3 AND StokInd = h.StokInd 


	) * Miktar NetMiktar,NULL OWNER
		FROM 
			hareketler h  WITH(NOLOCK)
		WHERE baslikInd =@baslikInd And TipInd=29
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[AylikPrimTakipRaporu] 
(	
	@BasTar SMALLDATETIME,
	@BitTar SMALLDATETIME
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		 TesisAdi
		, AylikAlisTL
		, PrimYuzde
		,(AylikAlisTL*PrimYuzde)/100 PrimTutar4
		, BildirilenPrim BildirilenPrim5
		,(BildirilenPrim -((AylikAlisTL*PrimYuzde)/100)) BildirilenPrim6
		,(BildirilenPrim -((AylikAlisTL*PrimYuzde)/100))/AylikAlisTL FarkYuzde
		,[Owner]
		,SubeKodu
	FROM 
	(
	SELECT 
		 s.SubeAdi TesisAdi
		,SUM(ah.Tutar) AylikAlisTL
		,ISNULL(s.PrimOran,0) PrimYuzde
		,ISNULL(s.PrimBildirilen,0) BildirilenPrim
		,s.Ind [Owner]
		,s.SubeKodu
	FROM 
		dbo.AktifAlisFaturalariAkaryakit ah  WITH(NOLOCK),Subeler s  WITH(NOLOCK)
	WHERE 
		ah.Owner = s.Ind
		AND Tarih BETWEEN @BasTar AND @BitTar
	GROUP BY 
		s.Ind
		,s.SubeAdi 
		,s.SubeKodu
		,s.PrimOran
		,s.PrimBildirilen
	)	hareketler

)



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[BankaBakiye] 
(	
	@BankaHesapInd int
)
RETURNS TABLE 
AS
RETURN 
(
		SELECT 
			TBL1.Owner,
			(Yatirilan-Cekilen) as Bakiye
			FROM
			(
				SELECT 
			h.Owner,
			SUM(CASE
					WHEN
						h.TipInd IN (12, 17, 27)
						OR (h.TipInd = 11 AND h.DurumInd = 8)
						OR (h.TipInd = 21 AND h.HedefBankaInd = @BankaHesapInd) 
					THEN h.Tutar
					WHEN (h.TipInd = 10 AND k.IsKomisyon ='False')
					THEN k.Tahsilat 
					ELSE 0
					END) as Yatirilan,
			SUM(CASE
					WHEN
						h.TipInd IN (14,15,19,22,28)
						OR (h.TipInd = 21 AND h.BankaHesapInd = @BankaHesapInd)
						OR (h.TipInd = 31 AND h.BankaHesapInd = @BankaHesapInd) 
					THEN h.Tutar 
					WHEN (h.TipInd = 10 AND k.IsKomisyon = 'True')
					THEN k.Tahsilat
					ELSE 0
					END) as Cekilen	
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON b.Ind = h.BaslikInd
		LEFT JOIN Hesaplar  WITH(NOLOCK) ON h.KKHesapInd  = Hesaplar.Ind
		LEFT JOIN KrediKartiTahsil AS k  WITH(NOLOCK) ON k.BaslikInd = h.BaslikInd
		WHERE 
		((
			h.BankaHesapInd = @BankaHesapInd
			OR h.HedefBankaInd = @BankaHesapInd
			OR h.CiroBankaInd = @BankaHesapInd
		)
		AND
		(
			(h.TipInd IN (12,15,17,19,21,22,27,28,31))
			OR (h.TipInd=11 AND h.DurumInd=8  ) 
			OR (h.TipInd=14 AND h.DurumInd=10 )
		)) OR (h.TipInd = 10 AND h.BaslikInd = k.BaslikInd AND Hesaplar.BankaInd = @BankaHesapInd)
		GROUP BY h.Owner
		) AS TBL1
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[BankaCekBakiye] 
(	
	@BankaHesapInd int
)
RETURNS TABLE 
AS
RETURN 
(
		SELECT 
		Hareketler.Owner,
		SUM(Tutar) AS CekTutar
		FROM Hareketler  WITH(NOLOCK)
		WHERE Hareketler.TipInd=14 AND DurumInd=4 AND Hareketler.BankaHesapInd=@BankaHesapInd
		GROUP BY Hareketler.Owner
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[BankaHareketDevir] 
(	
	@Ind int,
	@Tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		23 as TipInd,
		h.Owner,
		SUM(h.Yatirilan) as Yatirilan,
		SUM(h.Cekilen) as Cekilen
	FROM BankaHesapHareketleri as h  WITH(NOLOCK)
	WHERE h.GirisTarihi<@Tarih 
		AND h.BankaHesapInd = @Ind
	GROUP BY
		h.Owner
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[BankaHareketDokumu] 
(
	@Ind int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH HareketDokumu(Ind, TipInd, Owner, BelgeNo, Yatirilan, Cekilen, Aciklama, GirisTarihi,PersonelHesapInd,PersonelHesapKodu,Bakiye)
	AS
	(
		SELECT
			H.Ind,
			H.TipInd,
			H.Owner,
			CASE WHEN H.VardiyaKartInd IS NOT NULL 
				THEN CAST(B.VardiyaNo as nvarchar)+'.Vardiya' 
				ELSE NULL
				END as BelgeNo,	
			CASE WHEN H.TipInd IN (12,17,27) OR (H.TipInd = 21 AND H.HedefBankaInd = @Ind) 
				THEN H.Tutar 
				ELSE 0
				END as Yatirilan,
			CASE WHEN H.TipInd in (15,19,22,28) OR (H.TipInd = 21 AND H.BankaHesapInd = @Ind)
				THEN H.Tutar 
				ELSE 0
				END as Cekilen,
			H.Aciklama,
			H.GirisTarihi,
			H.PersonelHesapInd,
			H.PersonelHesapKodu,
			null as Bakiye
		FROM Hareketler AS H  WITH(NOLOCK)
		LEFT JOIN Basliklar as B WITH(NOLOCK)  ON H.VardiyaKartInd = B.Ind
		WHERE (H.BankaHesapInd = @Ind OR H.HedefBankaInd = @Ind)
		AND H.GirisTarihi >= @BaslangicTarihi
		AND H.GirisTarihi < @BitisTarihi
		AND H.TipInd IN (12,15,17,19,21,22,27,28)

		UNION ALL

		SELECT
			Ind,
			TipInd,
			Owner,
			CekNo as BelgeNo,
			Tutar as Yatirilan,
			0 as Cekilen,
			Aciklama,
			IslemTarihi as GirisTarihi,
			null as PersonelHesapInd,
			null as PersonelHesapKodu,
			null as Bakiye
		FROM Hareketler  WITH(NOLOCK)
		WHERE TipInd = 11
		AND CiroBankaInd = @Ind
		AND DurumInd = 8
		AND IslemTarihi >= @BaslangicTarihi
		AND IslemTarihi < @BitisTarihi

		UNION ALL

		SELECT
			Ind,
			TipInd,
			Owner,
			CekNo as BelgeNo,
			0 as Yatirilan,
			Tutar as Cekilen,
			Aciklama,
			IslemTarihi as GirisTarihi,
			null as PersonelHesapInd,
			null as PersonelHesapKodu,
			null as Bakiye
		FROM Hareketler  WITH(NOLOCK)
		WHERE TipInd = 14
		AND BankaHesapInd = @Ind
		AND DurumInd = 10
		AND IslemTarihi >= @BaslangicTarihi
		AND IslemTarihi < @BitisTarihi
	
		UNION ALL	

		SELECT
			0,
			10,
			Owner,
			BelgeNo,
			CASE
				WHEN IsKomisyon = 'False' THEN Tahsilat
				ELSE 0
				END AS Yatirilan,
			CASE WHEN IsKomisyon = 'True'
				THEN Tahsilat
				ELSE 0
				END AS Cekilen,
			Aciklama,
			Tarih,
			null as PersonelHesapInd,
			null as PersonelHesapKodu,
			null as Bakiye
		FROM KrediKartiTahsil  WITH(NOLOCK)
		WHERE BankaInd = @Ind
		AND Tarih >= @BaslangicTarihi
		AND Tarih < @BitisTarihi

		UNION ALL

		--Personel Maaş Dağıtım Satırları
		SELECT
			h.BaslikInd,
			h.TipInd,
			h.Owner,
			b.BelgeNo,
			NULL,
			Sum(Tutar) as Cekilen,
			b.Aciklama,
			h.GirisTarihi,
			null as PersonelHesapInd,
			null as PersonelHesapKodu,
			null as Bakiye
		FROM Hareketler  as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON h.BaslikInd = b.Ind
		WHERE h.BaslikInd IN
		(
			SELECT Ind FROM Basliklar
			WHERE Ind IN (SELECT BaslikInd FROM Hareketler)
			AND TipInd = 107
			AND HesapInd IS NOT NULL
		)
		AND h.BankaHesapInd = @Ind
		AND h.GirisTarihi >= @BaslangicTarihi
		AND h.GirisTarihi< @BitisTarihi
		GROUP BY
			h.BaslikInd,
			h.Owner,
			b.BelgeNo,
			b.Aciklama,
			h.GirisTarihi,
			h.TipInd
	)

	SELECT
		TOP 100 PERCENT
		h.*,
		s.SubeAdi
	FROM HareketDokumu as h  WITH(NOLOCK)
	LEFT JOIN Subeler as s  WITH(NOLOCK) ON h.Owner = s.Ind
	ORDER BY 
		h.GirisTarihi, 
		h.Ind, 
		h.TipInd
)
GO
CREATE FUNCTION [dbo].[BankaIcmalHareket](
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)

RETURNS @bankaSonuc TABLE
(Owner INT,BankaHesapInd INT,BankaHesapKodu VARCHAR(50),BankaHesapAdi VARCHAR(100),Devir DECIMAL(28,8),Yatirilan DECIMAL(28,8), Cekilen DECIMAL(28,8), Bakiye DECIMAL(28,8))
AS
BEGIN

DECLARE   @bankaSonucTemp TABLE
	(Owner INT,BankaHesapInd INT,BankaHesapKodu VARCHAR(50),BankaHesapAdi VARCHAR(100),Devir DECIMAL(28,8),Yatirilan DECIMAL(28,8), Cekilen DECIMAL(28,8), Bakiye DECIMAL(28,8))



INSERT INTO @bankaSonucTemp
	select 
		[Owner], 
		BankaHesapInd, 
		BankaHesapKodu,
		BankaHesapAdi, 
		0,
		sum(Yatirilan)as Yatirilan, 
		sum(Cekilen) as Cekilen, 
		(sum(Yatirilan) - sum(Cekilen)) as Bakiye
	from BankaHesapHareketleri  WITH(NOLOCK)
	--LEFT JOIN Hesaplar hsp ON hsp.Ind=BankaHesapHareketleri.BankaHesapInd
	where BankaHesapHareketleri.GirisTarihi >= @BaslangicTarihi and BankaHesapHareketleri.GirisTarihi < @BitisTarihi
	group by [Owner],BankaHesapInd, BankaHesapKodu,BankaHesapAdi
	
	DECLARE @Owner INT,@bankaInd INT,@bankaHesapKodu VARCHAR(50),@bankaHesapAdi VARCHAR(50),@recCount INT
	DECLARE BankaCursor CURSOR FOR 
	SELECT [Owner],Ind,HesapKodu,HesapAdi FROM Hesaplar WHERE TipInd=202


	OPEN BankaCursor;
	FETCH NEXT FROM BankaCursor
	INTO @Owner,@bankaInd,@bankaHesapKodu,@bankaHesapAdi
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @recCount=(SELECT COUNT(*) FROM @bankaSonucTemp WHERE BankaHesapInd=@bankaInd)
		IF (@recCount=0)
		BEGIN
			INSERT INTO @bankaSonucTemp ([Owner],BankaHesapInd,BankaHesapKodu,BankaHesapAdi,Yatirilan,Cekilen,Bakiye)
				VALUES(@Owner,@bankaInd,@bankaHesapKodu,@bankaHesapAdi,0,0,0)
			
		END
		FETCH NEXT FROM BankaCursor
		INTO @Owner,@bankaInd,@bankaHesapKodu,@bankaHesapAdi
	END

	CLOSE BankaCursor
	DEALLOCATE BankaCursor

INSERT INTO @bankaSonuc
SELECT 
		Dokum.[Owner], 
		Dokum.BankaHesapInd, 
		Dokum.BankaHesapKodu,
		Dokum.BankaHesapAdi,
		(sum(b.Yatirilan) - sum(b.Cekilen)) as Devir,
		Dokum.Yatirilan,
		Dokum.Cekilen,
		(Dokum.Bakiye + (sum(ISNULL(b.Yatirilan,0)) - sum(ISNULL(b.Cekilen,0))) ) as Bakiye
        
FROM @bankaSonucTemp Dokum   
left join BankaHesapHareketleri as  b on b.BankaHesapInd = Dokum.BankaHesapInd AND b.GirisTarihi < @BaslangicTarihi
group by 
        Dokum.[Owner],
        Dokum.BankaHesapInd, 
		Dokum.BankaHesapKodu,
		Dokum.BankaHesapAdi,
		Dokum.Yatirilan,
		Dokum.Cekilen,
		Dokum.Bakiye

RETURN

END
GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go

CREATE FUNCTION [dbo].[BankaToplamlari](
	@tarih DATETIME
)

RETURNS @tblBankaToplamlari TABLE
(HesapKodu VARCHAR(50),HesapAdi VARCHAR(50),BankaAdi VARCHAR(50), Bakiye DECIMAL(28,8),Owner INT,Aciklama VARCHAR(100))
AS
BEGIN 

DECLARE @hesapKodu VARCHAR(50),@hesapAdi VARCHAR(50),@bankaAdi VARCHAR(50),@bankaInd INT
	,@paraBirimi VARCHAR(30),@kur DECIMAL(28,8)

	DECLARE BankaCursor CURSOR FOR 
	SELECT Ind,HesapKodu,HesapAdi,BankaAdi,ParaBirimi  FROM Hesaplar WHERE TipInd = 202


	OPEN BankaCursor;
	FETCH NEXT FROM BankaCursor
	INTO @bankaInd,@hesapKodu,@hesapAdi,@bankaAdi,@paraBirimi
	WHILE @@FETCH_STATUS = 0
	BEGIN

		SELECT @kur=Kur 
			FROM KurBilgileri
			WHERE ParaBirimi=@paraBirimi

		INSERT INTO @tblBankaToplamlari
		SELECT @hesapKodu HesapKodu,@hesapAdi HesapAdi,@bankaAdi BankaAdi,ISNULL((SUM(Yatirilan- Cekilen)*@kur),0) 
			AS Bakiye, NULL Owner, '' Aciklama
			FROM BankaHareketDevir(@bankaInd,@tarih)

		FETCH NEXT FROM BankaCursor
		INTO @bankaInd,@hesapKodu,@hesapAdi,@bankaAdi,@paraBirimi
	END

	CLOSE BankaCursor
	DEALLOCATE BankaCursor
	RETURN
END


	


GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
CREATE FUNCTION [dbo].[BaslikMatrahForIcmalFnc] 
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE
AS
RETURN 
(
	SELECT 
		Basliklar.Ind as BaslikInd,
		--Basliklar.Tarih,
		SUM
		(
			(
				CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
				THEN ISNULL(Hareketler.Miktar, 1) 
				ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
				END
			) 
			*
			ISNULL(Hareketler.Carpan, 1)
			*
			ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
			-
			ISNULL(Hareketler.Iskonto, 0)
		) as Matrah
	FROM Hareketler  WITH(NOLOCK)
	LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind 
	LEFT JOIN Tipler  WITH(NOLOCK) ON Basliklar.TipInd=Tipler.Ind
	WHERE
		(Hareketler.TipInd = 3 OR Hareketler.TipInd = 6 OR Hareketler.TipInd = 511)
		AND Basliklar.Tarih >= @BaslangicTarihi
		AND Basliklar.Tarih < @BitisTarihi
	GROUP BY
		Basliklar.Ind--,
		--Basliklar.Tarih
);
GO
CREATE FUNCTION [dbo].[BelgeNoKontrol]
(
	@DepoInd INT,
	@GirisTarihi datetime
)

RETURNS 
TABLE 
AS
RETURN 
(
	SELECT COUNT(Ind) AS Sonuc, 0 As Owner FROM Basliklar b
	WHERE  b.Ind IN(select distinct h.BaslikInd from Hareketler h  WITH(NOLOCK) where H.DepoInd = @DepoInd AND H.BaslikInd IS NOT NULL)
 AND B.Tarih BETWEEN @GirisTarihi AND DATEADD(d,1,@GirisTarihi)
)

GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go


CREATE FUNCTION [dbo].[BilancoCariHesapHareketleri](
@hesapInd INT ,@tarih DATETIME, @Owner Int, @Merkezebak Int
)

RETURNS 
TABLE 
AS
RETURN 
(
	WITH CariTutar(CariHesapInd, Owner,Borc,Alacak,Bakiye)
	AS
	(
		SELECT
			CariHesapInd,
			Owner,
			--TipInd,		
			Borc,
			Alacak,
			(Borc - Alacak) AS Bakiye
		FROM 
			CariHesapHareketleri  WITH(NOLOCK)
		WHERE Tarih <= @tarih
		AND CariHesapInd=@hesapInd
			AND
			(
				@Owner =
				CASE 
					WHEN @Owner>0
						THEN Owner
					ELSE
						@Owner
					END
				OR
				Owner IS NULL
			)
		--GROUP BY  CariHesapInd
	)

	SELECT 
		c.CariHesapInd,
		NULL AS Owner,
		SUM(c.Borc) AS Borc,
		SUM(c.Alacak) AS Alacak,
		SUM(c.Bakiye) AS Bakiye,
		HSP.HesapKodu,
		HSP.HesapAdi,
		HSP.OzelKodu,
		HSP.Aktif
	FROM CariTutar c  WITH(NOLOCK)
	LEFT JOIN Hesaplar HSP  WITH(NOLOCK) ON HSP.Ind=c.CariHesapInd
	WHERE
		@Owner =
		CASE 
			WHEN (@Merkezebak = 0 OR @Merkezebak = 1) AND @Owner = 0
				THEN @Owner
			WHEN @Merkezebak = 1 AND @Owner != 0 THEN
				c.Owner
			WHEN @Merkezebak = 0 AND @Owner != 0
				THEN @Owner
			END
	GROUP BY
		c.CariHesapInd,
		--c.Owner,
		HSP.HesapKodu,
		HSP.HesapAdi,
		HSP.OzelKodu,
		HSP.Aktif
)








GO
CREATE FUNCTION [dbo].[BilancoCek](
	@bilancoTarihi DATETIME,@cekDurumu INT,@cekTipi INT -- @cekDurumu : 4:portfoy , 7 :bankaya ciro , @cekTipi:11 alinan 14 verilen
)

RETURNS @tblCek TABLE
(Bakiye DECIMAL(28,8),Owner INT,Aciklama VARCHAR(100))
AS
BEGIN 

	IF (@cekDurumu=7 AND @cekTipi=11)	
		INSERT INTO @tblCek
		SELECT SUM(Tutar), Owner ,'' FROM 
			Hareketler  WITH(NOLOCK)
			WHERE  
			IslemTarihi<=@bilancoTarihi AND DurumInd=7
			AND TipInd=11
			AND Senet = 0 
		GROUP BY
			Owner
	IF(@cekDurumu=4 AND @cekTipi=11)  -- portfoy
	BEGIN
		INSERT INTO @tblCek	
		SELECT SUM(Tutar), Owner,'' FROM 
			Hareketler  WITH(NOLOCK)
			WHERE  
				DurumInd=4
				AND GirisTarihi<=@bilancoTarihi
				AND TipInd=11 
				AND Senet = 0 
			GROUP BY
				Owner
		INSERT INTO @tblCek
		SELECT SUM(Tutar), Owner,'' FROM 
			Hareketler  WITH(NOLOCK)
			WHERE  (IslemTarihi>@bilancoTarihi )
				AND DurumInd!=4
				AND GirisTarihi<=@bilancoTarihi
				AND TipInd=11
				AND Senet = 0 
			GROUP BY
				Owner
		END
	IF(@cekTipi=14)  -- verilen
	BEGIN
		INSERT INTO @tblCek	
		SELECT SUM(Tutar), Owner,'' FROM 
			Hareketler  WITH(NOLOCK)
			WHERE  
				DurumInd=4
				AND GirisTarihi<=@bilancoTarihi
				AND TipInd=14 
				AND Senet = 0 
			GROUP BY
				Owner
		INSERT INTO @tblCek
		SELECT SUM(Tutar), Owner,'' FROM 
			Hareketler  WITH(NOLOCK)
			WHERE  (IslemTarihi>@bilancoTarihi )
				AND DurumInd!=4
				AND GirisTarihi<=@bilancoTarihi
				AND TipInd=14
				AND Senet = 0 
			GROUP BY
				Owner
		END


	RETURN
END






GO
CREATE FUNCTION [dbo].[BilancoIliskiliHesaplar](
@hesapInd INT
)

RETURNS @tblIliskiliHesaplar TABLE 
(Ind INT,CariHesapInd INT, HesapKodu VARCHAR(50), HesapAdi VARCHAR(100),Owner INT)
AS
BEGIN

	DECLARE @hesapTipi INT
		
	SELECT 	@hesapTipi=TipInd 
		FROM BilancoHesaplari  WITH(NOLOCK)
		WHERE Ind=@hesapInd

	IF(@hesapTipi=208 OR @hesapTipi=210 OR @hesapTipi=211 OR @hesapTipi=212) --cari , gider
	BEGIN
		INSERT INTO @tblIliskiliHesaplar
		SELECT HD.Ind,H.Ind CariHesapInd,H.HesapKodu,H.HesapAdi,HD.Owner
			FROM  HesapDetaylari HD  WITH(NOLOCK)
			INNER JOIN Hesaplar H  WITH(NOLOCK) ON HD.CariHesapInd=H.Ind
			WHERE HD.DepoInd=@hesapInd AND HD.TipInd=403
	END
	ELSE IF (@hesapTipi=209) --stok
	BEGIN
		INSERT INTO @tblIliskiliHesaplar
		SELECT HD.Ind,S.Ind CariHesapInd,S.StokKodu HesapKodu,S.StokAdi HesapAdi,HD.Owner
			FROM  HesapDetaylari HD  WITH(NOLOCK)
			INNER JOIN Stoklar S  WITH(NOLOCK) ON HD.CariHesapInd=S.Ind
			WHERE HD.DepoInd=@hesapInd AND HD.TipInd=403
	END

	RETURN
END



GO
CREATE FUNCTION [dbo].[BilancoSenet](
	@bilancoTarihi DATETIME,@cekDurumu INT,@cekTipi INT -- @cekDurumu : 4:portfoy , 7 :bankaya ciro , @cekTipi:11 alinan 14 verilen
)

RETURNS @tblCek TABLE
(Bakiye DECIMAL(28,8),Owner INT,Aciklama VARCHAR(100))
AS
BEGIN 

	IF (@cekDurumu=7 AND @cekTipi=11)	
		INSERT INTO @tblCek
		SELECT SUM(Tutar), Owner ,'' FROM 
			Hareketler  WITH(NOLOCK)
			WHERE  
			IslemTarihi<=@bilancoTarihi AND DurumInd=7
			AND TipInd=11
			AND Senet = 1 
		GROUP BY
			Owner
	IF(@cekDurumu=4 AND @cekTipi=11)  -- portfoy
	BEGIN
		INSERT INTO @tblCek	
		SELECT SUM(Tutar), Owner,'' FROM 
			Hareketler  WITH(NOLOCK)
			WHERE  
				DurumInd=4
				AND GirisTarihi<=@bilancoTarihi
				AND TipInd=11 
				AND Senet = 1 
			GROUP BY
				Owner
		INSERT INTO @tblCek
		SELECT SUM(Tutar), Owner,'' FROM 
			Hareketler  WITH(NOLOCK)
			WHERE  (IslemTarihi>@bilancoTarihi )
				AND DurumInd!=4
				AND GirisTarihi<=@bilancoTarihi
				AND TipInd=11
				AND Senet = 1 
			GROUP BY
				Owner
		END
	IF(@cekTipi=14)  -- verilen
	BEGIN
		INSERT INTO @tblCek	
		SELECT SUM(Tutar), Owner,'' FROM 
			Hareketler  WITH(NOLOCK)
			WHERE  
				DurumInd=4
				AND GirisTarihi<=@bilancoTarihi
				AND TipInd=14 
				AND Senet = 1 
			GROUP BY
				Owner
		INSERT INTO @tblCek
		SELECT SUM(Tutar), Owner,'' FROM 
			Hareketler  WITH(NOLOCK)
			WHERE  (IslemTarihi>@bilancoTarihi )
				AND DurumInd!=4
				AND GirisTarihi<=@bilancoTarihi
				AND TipInd=14
				AND Senet = 1 
			GROUP BY
				Owner
		END


	RETURN
END






GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[BilancoVeresiyeToplam] 
(	
	@tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(


			SELECT  
				SUM(Hareketler.Miktar * dbo.Hareketler.Fiyat) AS Bakiye,Basliklar.Owner
			FROM	dbo.Basliklar  WITH(NOLOCK)
			INNER JOIN Basliklar b2  WITH(NOLOCK) ON b2.Ind=Basliklar.FaturaInd
			INNER JOIN	dbo.Hareketler  WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
			WHERE	(dbo.Basliklar.TipInd = 111) AND (dbo.Hareketler.TipInd = 37) 
					AND (dbo.Basliklar.DurumInd IS NULL) AND (dbo.Basliklar.FisPortfoyu IS NULL OR dbo.Basliklar.FisPortfoyu = 0) AND  (dbo.Hareketler.DurumInd IS NULL)
				AND (b2.Tarih > @tarih  AND Basliklar.Tarih <=@tarih AND b2.TipInd=102)
				--AND Basliklar.Tarih < @BitisTarihi

				GROUP BY Basliklar.Owner

UNION ALL

			SELECT  
				SUM(Hareketler.Miktar * dbo.Hareketler.Fiyat) AS Bakiye,
				Basliklar.Owner
			FROM	dbo.Basliklar  WITH(NOLOCK)
			
			INNER JOIN	dbo.Hareketler  WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
			WHERE	(dbo.Basliklar.TipInd = 111) AND (dbo.Hareketler.TipInd = 37) 
					AND (dbo.Basliklar.DurumInd IS NULL) AND (dbo.Basliklar.FisPortfoyu IS NULL OR dbo.Basliklar.FisPortfoyu = 0) AND  (dbo.Hareketler.DurumInd IS NULL)
				AND Basliklar.Tarih <= @tarih
			GROUP BY Basliklar.Owner

UNION ALL
		SELECT
			(h.Miktar * h.Carpan *(
				SELECT SUM(Fiyat*Miktar)/SUM(Miktar) FROM Hareketler WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=5
			)) AS Bakiye, b.Owner
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON h.BaslikInd = b.Ind --AND b.TipInd = 104		
		LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd 
		WHERE
			h.TipInd = 30 AND (b.DurumInd != 11 or b.DurumInd IS NULL)
			AND b.TipInd = 104
			AND (b.DurumInd IS NULL) AND b.Tarih <= @tarih

)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[BorcluAlacakliCariListesi] 
(	
	@HesapKoduBaslangic nvarchar(max),
	@HesapKoduBitis nvarchar(max),
--	@HesapIndBaslangic int,
--	@HesapIndBitis int,
	@OzelKodlar nvarchar(max),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH CariTutar(CariHesapInd,Owner,TipInd,Borc,Alacak,Irsaliye,AlinanCekMiktari,VerilenCekMiktari)
	AS
	(
			SELECT
				c.CariHesapInd,
				c.Owner,
				c.TipInd,		
				c.Borc,
				c.Alacak,
				0.00 as Irsaliye,
				0.00 as AlinanCekMiktari,
				0.00 as VerilenCekMiktari
			FROM CariHesapHareketleri as c  WITH(NOLOCK)
			WHERE c.Tarih >= @BaslangicTarihi
			AND c.Tarih < @BitisTarihi							

			UNION ALL



			SELECT 
				Basliklar.HesapInd as CariHesapInd,
				Hareketler.Owner,
				Hareketler.TipInd,	
				0.00 as Borc,
				0.00 as Alacak,
				SUM(
					CASE WHEN Hareketler.TipInd =5
					THEN Miktar*Fiyat
					ELSE 0.00
					END 
				)-SUM(
					CASE WHEN Hareketler.TipInd =2
					THEN Miktar*Fiyat
					ELSE 0.00
					END
				) AS Irsaliye,
				0.00 as AlinanCekMiktari,
				0.00 as VerilenCekMiktari
			FROM Hareketler  WITH(NOLOCK)
			LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
			WHERE Hareketler.TipInd IN (2,5) AND Hareketler.DurumInd is NULL
			AND Basliklar.Tarih >= @BaslangicTarihi
			AND Basliklar.Tarih < @BitisTarihi	
			GROUP BY 
				Hareketler.Owner,
				Basliklar.HesapInd,			
				Hareketler.TipInd

			UNION ALL

			SELECT  
				Basliklar.HesapInd as CariHesapInd, 
				Basliklar.Owner, 
				Basliklar.TipInd,
				0.00 as Borc,
				0.00 as Alacak,		
				SUM(Hareketler.Miktar * dbo.Hareketler.Fiyat) AS Irsaliye,
				0.00 as AlinanCekMiktari,
				0.00 as VerilenCekMiktari
			FROM	dbo.Basliklar  WITH(NOLOCK) INNER JOIN
						dbo.Hareketler  WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
			WHERE	(dbo.Basliklar.TipInd = 111) AND (dbo.Hareketler.TipInd = 37) 
					AND (dbo.Basliklar.DurumInd IS NULL) AND (dbo.Basliklar.FisPortfoyu IS NULL OR dbo.Basliklar.FisPortfoyu = 0) AND  (dbo.Hareketler.DurumInd IS NULL)
				AND Basliklar.Tarih >= @BaslangicTarihi
				AND Basliklar.Tarih < @BitisTarihi
			GROUP BY 
				Basliklar.Owner,
				Basliklar.HesapInd, 
				Basliklar.TipInd

			UNION ALL

			SELECT 
				Hareketler.CariHesapInd,
				Hareketler.Owner,
				Hareketler.TipInd,
				0.00 as Borc,
				0.00 as Alacak,
				0.00 as Irsaliye,
				SUM(
					Tutar
					) as AlinanCekMiktari,
				0.00 as VerilenCekMiktari
			FROM
			Hareketler  WITH(NOLOCK)
			WHERE Hareketler.TipInd=11 
			AND Hareketler.DurumInd IN (4,7)   -- 7 eklendi  , 12 çıkarıldı -Sonat
			AND Hareketler.GirisTarihi >= @BaslangicTarihi
			AND Hareketler.GirisTarihi < @BitisTarihi	
			GROUP BY 
				Hareketler.Owner,
				Hareketler.CariHesapInd,
				Hareketler.TipInd

		UNION ALL

		SELECT 
			Hareketler.CariHesapInd,
			Hareketler.Owner,
			Hareketler.TipInd,	
			0.00 as Borc,
			0.00 as Alacak,
			0.00 as Irsaliye,
			0.00 as AlinanCekMiktari,
			SUM(
				Tutar
				) as VerilenCekMiktari
		FROM
		Hareketler  WITH(NOLOCK)
		WHERE Hareketler.TipInd=14 
		AND Hareketler.DurumInd IN (4,12)
		AND Hareketler.GirisTarihi >= @BaslangicTarihi
		AND Hareketler.GirisTarihi < @BitisTarihi	
		GROUP BY 
			Hareketler.Owner,
			Hareketler.CariHesapInd,
			Hareketler.TipInd	
)

		SELECT 
			c.Owner,
			c.Ind,
			c.HesapKodu,
			c.HesapAdi,
			c.OzelKodu,
			SUM(
					CariTutar.Borc
				) AS Borc,
			SUM(
					CariTutar.Alacak
				) AS Alacak,
			SUM(
					CariTutar.Borc
				)-SUM(
					CariTutar.Alacak
				) AS Bakiye,
			SUM(
					CariTutar.Irsaliye
				) AS Irsaliye,
			SUM(
					CariTutar.Borc
				)-SUM(
					CariTutar.Alacak
				)+ SUM(
					CariTutar.Irsaliye
				) as Toplam,
			SUM(
				CariTutar.AlinanCekMiktari
				) as AlinanCekMiktari,
			SUM(
				CariTutar.VerilenCekMiktari
				) as VerilenCekMiktari,
			c.Telefon,
			c.GSM,
			c.Faks,
			c.SonFaturaTarihi as FaturaTarihi,
			HSP.Aktif,
            0.00 as Devir
		FROM CarilerinSonFaturaTarihiListesi as c  WITH(NOLOCK)
		LEFT JOIN CariTutar  WITH(NOLOCK) ON c.Ind=CariTutar.CariHesapInd
		LEFT JOIN Hesaplar HSP  WITH(NOLOCK) ON HSP.Ind=c.Ind
		WHERE c.TipInd=201
		AND c.HesapKodu >= @HesapKoduBaslangic AND c.HesapKodu <= @HesapKoduBitis + @HesapKoduBitis -- Compare sorunu için eklendi
		--AND c.Ind >= @HesapIndBaslangic AND c.Ind <= @HesapIndBitis
		AND (c.OzelKodu IN (SELECT * FROM fnSplit(@OzelKodlar,',')) OR c.OzelKodu=''  OR c.OzelKodu IS NULL)
		GROUP BY
			c.Owner,
			c.Ind,
			c.HesapKodu,
			c.HesapAdi,
			c.OzelKodu,
			c.Telefon,
			c.GSM,
			c.Faks,
			c.SonFaturaTarihi,
			HSP.Aktif
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[BorcluAlacakliCariListesi2] 
(	
	@HesapKoduBaslangic nvarchar(max),
	@HesapKoduBitis nvarchar(max),
	@OzelKodlar nvarchar(max),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH CariTutar(CariHesapInd,Owner,TipInd,Borc,Alacak,Irsaliye,AlinanCekMiktari,VerilenCekMiktari)
	AS
	(
			SELECT
				c.CariHesapInd,
				c.Owner,
				c.TipInd,		
				c.Borc,
				c.Alacak,
				0.00 as Irsaliye,
				0.00 as AlinanCekMiktari,
				0.00 as VerilenCekMiktari
			FROM CariHesapHareketleri as c  WITH(NOLOCK)
			WHERE c.Tarih >= @BaslangicTarihi
			AND c.Tarih < @BitisTarihi							

			UNION ALL



			SELECT 
				Basliklar.HesapInd as CariHesapInd,
				Hareketler.Owner,
				Hareketler.TipInd,	
				0.00 as Borc,
				0.00 as Alacak,
				SUM(
					CASE WHEN Hareketler.TipInd =5
					THEN Miktar*Fiyat
					ELSE 0.00
					END 
				)-SUM(
					CASE WHEN Hareketler.TipInd =2
					THEN Miktar*Fiyat
					ELSE 0.00
					END
				) AS Irsaliye,
				0.00 as AlinanCekMiktari,
				0.00 as VerilenCekMiktari
			FROM Hareketler  WITH(NOLOCK)
			LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
			WHERE Hareketler.TipInd IN (2,5) AND Hareketler.DurumInd is NULL
			AND Basliklar.Tarih >= @BaslangicTarihi
			AND Basliklar.Tarih < @BitisTarihi	
			GROUP BY 
				Hareketler.Owner,
				Basliklar.HesapInd,			
				Hareketler.TipInd

			UNION ALL

			SELECT  
				Basliklar.HesapInd as CariHesapInd, 
				Basliklar.Owner, 
				Basliklar.TipInd,
				0.00 as Borc,
				0.00 as Alacak,		
				SUM(Hareketler.Miktar * dbo.Hareketler.Fiyat) AS Irsaliye,
				0.00 as AlinanCekMiktari,
				0.00 as VerilenCekMiktari
			FROM	dbo.Basliklar  WITH(NOLOCK) INNER JOIN
						dbo.Hareketler  WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
			WHERE	(dbo.Basliklar.TipInd = 111) AND (dbo.Hareketler.TipInd = 37) 
					AND (dbo.Basliklar.DurumInd IS NULL) AND (dbo.Basliklar.FisPortfoyu IS NULL OR dbo.Basliklar.FisPortfoyu = 0) AND  (dbo.Hareketler.DurumInd IS NULL)
				AND Basliklar.Tarih >= @BaslangicTarihi
				AND Basliklar.Tarih < @BitisTarihi
			GROUP BY 
				Basliklar.Owner,
				Basliklar.HesapInd, 
				Basliklar.TipInd

			UNION ALL

			SELECT 
				Hareketler.CariHesapInd,
				Hareketler.Owner,
				Hareketler.TipInd,
				0.00 as Borc,
				0.00 as Alacak,
				0.00 as Irsaliye,
				SUM(
					Tutar
					) as AlinanCekMiktari,
				0.00 as VerilenCekMiktari
			FROM
			Hareketler  WITH(NOLOCK)
			WHERE Hareketler.TipInd=11 
			AND Hareketler.DurumInd IN (4,7)   -- 7 eklendi  , 12 çıkarıldı -Sonat
			AND Hareketler.GirisTarihi >= @BaslangicTarihi
			AND Hareketler.GirisTarihi < @BitisTarihi	
			GROUP BY 
				Hareketler.Owner,
				Hareketler.CariHesapInd,
				Hareketler.TipInd

		UNION ALL

		SELECT 
			Hareketler.CariHesapInd,
			Hareketler.Owner,
			Hareketler.TipInd,	
			0.00 as Borc,
			0.00 as Alacak,
			0.00 as Irsaliye,
			0.00 as AlinanCekMiktari,
			SUM(
				Tutar
				) as VerilenCekMiktari
		FROM
		Hareketler  WITH(NOLOCK)
		WHERE Hareketler.TipInd=14 
		AND Hareketler.DurumInd IN (4,12)
		AND Hareketler.GirisTarihi >= @BaslangicTarihi
		AND Hareketler.GirisTarihi < @BitisTarihi	
		GROUP BY 
			Hareketler.Owner,
			Hareketler.CariHesapInd,
			Hareketler.TipInd	
)

		SELECT 
			c.Owner,
			c.Ind,
			c.HesapKodu,
			c.HesapAdi,
			c.OzelKodu,
			SUM(
					CariTutar.Borc
				) AS Borc,
			SUM(
					CariTutar.Alacak
				) AS Alacak,
			SUM(
					CariTutar.Borc
				)-SUM(
					CariTutar.Alacak
				) AS Bakiye,
			SUM(
					CariTutar.Irsaliye
				) AS Irsaliye,
			SUM(
					CariTutar.Borc
				)-SUM(
					CariTutar.Alacak
				)+ SUM(
					CariTutar.Irsaliye
				) as Toplam,
			SUM(
				CariTutar.AlinanCekMiktari
				) as AlinanCekMiktari,
			SUM(
				CariTutar.VerilenCekMiktari
				) as VerilenCekMiktari,
			c.Telefon,
			c.GSM,
			c.Faks,
			c.SonFaturaTarihi as FaturaTarihi,
			HSP.Aktif,
            0.00 as Devir,
			CariTutar.Owner AS COwner
		FROM CarilerinSonFaturaTarihiListesi as c  WITH(NOLOCK)
		LEFT JOIN CariTutar  WITH(NOLOCK) ON c.Ind=CariTutar.CariHesapInd
		LEFT JOIN Hesaplar HSP  WITH(NOLOCK) ON HSP.Ind=c.Ind
		WHERE c.TipInd=201
		AND c.HesapKodu >= @HesapKoduBaslangic AND c.HesapKodu <= @HesapKoduBitis
		--AND c.Ind >= @HesapIndBaslangic AND c.Ind <= @HesapIndBitis
		AND (c.OzelKodu IN (SELECT * FROM fnSplit(@OzelKodlar,',')) OR c.OzelKodu=''  OR c.OzelKodu IS NULL)
		GROUP BY
			c.Owner,
			c.Ind,
			c.HesapKodu,
			c.HesapAdi,
			c.OzelKodu,
			c.Telefon,
			c.GSM,
			c.Faks,
			c.SonFaturaTarihi,
			HSP.Aktif,
			CariTutar.Owner
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[BorcluAlacakliCariListesiGecici] 
(	
	@HesapKoduBaslangic nvarchar(max),
	@HesapKoduBitis nvarchar(max),
	@TeminatKodlar nvarchar(max),
	@OzelKodlar nvarchar(max),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@KullaniciCarileri nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	WITH CariTutar(CariHesapInd,Owner,TipInd,Borc,Alacak,Irsaliye,AlinanCekMiktari,VerilenCekMiktari)
	AS
	(
		SELECT
			c.CariHesapInd,
			c.Owner,
			c.TipInd,		
			c.Borc,
			c.Alacak,
			0.00 as Irsaliye,
			0.00 as AlinanCekMiktari,
			0.00 as VerilenCekMiktari
		FROM 
			CariHesapHareketleri as c  WITH(NOLOCK)
		WHERE 
			c.Tarih >= @BaslangicTarihi
		AND 
			c.Tarih < @BitisTarihi
		UNION ALL
		SELECT 
			Basliklar.HesapInd as CariHesapInd,
			Hareketler.Owner,
			Hareketler.TipInd,	
			0.00 as Borc,
			0.00 as Alacak,
			SUM(CASE WHEN Hareketler.TipInd =5 THEN Miktar*Fiyat ELSE 0.00 END)-SUM(CASE WHEN Hareketler.TipInd =2 THEN Miktar*Fiyat ELSE 0.00 END) AS Irsaliye,
			0.00 as AlinanCekMiktari,
			0.00 as VerilenCekMiktari
		FROM
			Hareketler  WITH(NOLOCK)
			LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
		WHERE 
			Hareketler.TipInd IN (2,5)
			AND
			Hareketler.DurumInd is NULL
			AND
			Basliklar.Tarih >= @BaslangicTarihi
			AND
			Basliklar.Tarih < @BitisTarihi
		GROUP BY 
			Hareketler.Owner,
			Basliklar.HesapInd,			
			Hareketler.TipInd
		UNION ALL
		SELECT  
			Basliklar.HesapInd as CariHesapInd, 
			Basliklar.Owner, 
			Basliklar.TipInd,
			0.00 as Borc,
			0.00 as Alacak,		
			SUM(Hareketler.Tutar) AS Irsaliye,
			0.00 as AlinanCekMiktari,
			0.00 as VerilenCekMiktari
		FROM	
			dbo.Basliklar  WITH(NOLOCK)
			INNER JOIN dbo.Hareketler  WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
		WHERE	
			(dbo.Basliklar.TipInd = 111) 
			AND 
			(dbo.Hareketler.TipInd = 37) 
			AND 
			(dbo.Basliklar.DurumInd IS NULL) 
			AND 
			(dbo.Basliklar.FisPortfoyu IS NULL OR dbo.Basliklar.FisPortfoyu = 0) 
			AND  
			(dbo.Hareketler.DurumInd IS NULL)
			AND 
			Basliklar.Tarih >= @BaslangicTarihi
			AND 
			Basliklar.Tarih < @BitisTarihi
		GROUP BY 
			Basliklar.Owner,
			Basliklar.HesapInd, 
			Basliklar.TipInd
		UNION ALL
		SELECT 
			Hareketler.CariHesapInd,
			Hareketler.Owner,
			Hareketler.TipInd,
			0.00 as Borc,
			0.00 as Alacak,
			0.00 as Irsaliye,
			SUM(Tutar) as AlinanCekMiktari,
			0.00 as VerilenCekMiktari
		FROM
			Hareketler  WITH(NOLOCK)
		WHERE 
			Hareketler.TipInd=11 
			AND 
			Hareketler.DurumInd IN (4,7)   -- 7 eklendi  , 12 çıkarıldı -Sonat
			AND 
			Hareketler.GirisTarihi >= @BaslangicTarihi
			AND 
			Hareketler.GirisTarihi < @BitisTarihi
		GROUP BY 
			Hareketler.Owner,
			Hareketler.CariHesapInd,
			Hareketler.TipInd
		UNION ALL
		SELECT 
			Hareketler.CariHesapInd,
			Hareketler.Owner,
			Hareketler.TipInd,	
			0.00 as Borc,
			0.00 as Alacak,
			0.00 as Irsaliye,
			0.00 as AlinanCekMiktari,
			SUM(Tutar) as VerilenCekMiktari
		FROM
			Hareketler  WITH(NOLOCK)
		WHERE 
			Hareketler.TipInd=14 
			AND 
			Hareketler.DurumInd IN (4,12)
			AND 
			Hareketler.GirisTarihi >= @BaslangicTarihi
			AND 
			Hareketler.GirisTarihi < @BitisTarihi
		GROUP BY 
			Hareketler.Owner,
			Hareketler.CariHesapInd,
			Hareketler.TipInd	
	)
	SELECT 
		c.Owner,
		c.Ind,
		c.HesapKodu,
		c.HesapAdi,
		c.OzelKodu,
		c.TeminatKodu,
		SUM(CariTutar.Borc) AS Borc,
		SUM(CariTutar.Alacak) AS Alacak,
		SUM(CariTutar.Borc)-SUM(CariTutar.Alacak) AS Bakiye,
		SUM(CariTutar.Irsaliye) AS Irsaliye,
		SUM(CariTutar.Borc)-SUM(CariTutar.Alacak)+ SUM(CariTutar.Irsaliye) as Toplam,
		SUM(CariTutar.AlinanCekMiktari) as AlinanCekMiktari,
		SUM(CariTutar.VerilenCekMiktari) as VerilenCekMiktari,
		c.Telefon,
		c.GSM,
		c.Faks,
		c.SonFaturaTarihi as FaturaTarihi,
		HSP.Aktif,
		0.00 as Devir
	FROM 
		CarilerinSonFaturaTarihiListesi as c  WITH(NOLOCK)
		LEFT JOIN CariTutar  WITH(NOLOCK) ON c.Ind=CariTutar.CariHesapInd
		LEFT JOIN Hesaplar HSP  WITH(NOLOCK) ON HSP.Ind=c.Ind
	WHERE 
		c.TipInd=201
		AND 
		c.HesapKodu >= @HesapKoduBaslangic 
		AND 
		c.HesapKodu <= @HesapKoduBitis
		AND 
		(c.TeminatKodu IN (SELECT * FROM fnSplit(@TeminatKodlar,',')) OR c.TeminatKodu=''  OR c.TeminatKodu IS NULL)
		AND 
		(c.OzelKodu IN (SELECT * FROM fnSplit(@OzelKodlar,',')) OR c.OzelKodu=''  OR c.OzelKodu IS NULL)
	GROUP BY
		c.Owner,
		c.Ind,
		c.HesapKodu,
		c.HesapAdi,
		c.OzelKodu,
		c.TeminatKodu,
		c.Telefon,
		c.GSM,
		c.Faks,
		c.SonFaturaTarihi,
		HSP.Aktif
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[BorcluAlacakliCariListesiGecici2] 
(	
	@HesapKoduBaslangic nvarchar(max),
	@HesapKoduBitis nvarchar(max),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@KullaniciCarileri nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	WITH CariTutar(CariHesapInd,Owner,TipInd,Borc,Alacak,Irsaliye,AlinanCekMiktari,VerilenCekMiktari)
	AS
	(
		SELECT
			c.CariHesapInd,
			c.Owner,
			c.TipInd,		
			c.Borc,
			c.Alacak,
			0.00 as Irsaliye,
			0.00 as AlinanCekMiktari,
			0.00 as VerilenCekMiktari
		FROM 
			CariHesapHareketleri as c  WITH(NOLOCK)
		WHERE 
			c.Tarih >= @BaslangicTarihi
		AND 
			c.Tarih < @BitisTarihi
		UNION ALL
		SELECT 
			Basliklar.HesapInd as CariHesapInd,
			Hareketler.Owner,
			Hareketler.TipInd,	
			0.00 as Borc,
			0.00 as Alacak,
			SUM(CASE WHEN Hareketler.TipInd =5 THEN Miktar*Fiyat ELSE 0.00 END)-SUM(CASE WHEN Hareketler.TipInd =2 THEN Miktar*Fiyat ELSE 0.00 END) AS Irsaliye,
			0.00 as AlinanCekMiktari,
			0.00 as VerilenCekMiktari
		FROM
			Hareketler  WITH(NOLOCK)
			LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
		WHERE 
			Hareketler.TipInd IN (2,5)
			AND
			Hareketler.DurumInd is NULL
			AND
			Basliklar.Tarih >= @BaslangicTarihi
			AND
			Basliklar.Tarih < @BitisTarihi
		GROUP BY 
			Hareketler.Owner,
			Basliklar.HesapInd,			
			Hareketler.TipInd
		UNION ALL
		SELECT  
			Basliklar.HesapInd as CariHesapInd, 
			Basliklar.Owner, 
			Basliklar.TipInd,
			0.00 as Borc,
			0.00 as Alacak,		
			SUM(Hareketler.Tutar) AS Irsaliye,
			0.00 as AlinanCekMiktari,
			0.00 as VerilenCekMiktari
		FROM	
			dbo.Basliklar  WITH(NOLOCK)
			INNER JOIN dbo.Hareketler  WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
		WHERE	
			(dbo.Basliklar.TipInd = 111) 
			AND 
			(dbo.Hareketler.TipInd = 37) 
			AND 
			(dbo.Basliklar.DurumInd IS NULL) 
			AND 
			(dbo.Basliklar.FisPortfoyu IS NULL OR dbo.Basliklar.FisPortfoyu = 0) 
			AND  
			(dbo.Hareketler.DurumInd IS NULL)
			AND 
			Basliklar.Tarih >= @BaslangicTarihi
			AND 
			Basliklar.Tarih < @BitisTarihi
		GROUP BY 
			Basliklar.Owner,
			Basliklar.HesapInd, 
			Basliklar.TipInd
		UNION ALL
		SELECT 
			Hareketler.CariHesapInd,
			Hareketler.Owner,
			Hareketler.TipInd,
			0.00 as Borc,
			0.00 as Alacak,
			0.00 as Irsaliye,
			SUM(Tutar) as AlinanCekMiktari,
			0.00 as VerilenCekMiktari
		FROM
			Hareketler  WITH(NOLOCK)
		WHERE 
			Hareketler.TipInd=11 
			AND 
			Hareketler.DurumInd IN (4,7)   -- 7 eklendi  , 12 çıkarıldı -Sonat
			AND 
			Hareketler.GirisTarihi >= @BaslangicTarihi
			AND 
			Hareketler.GirisTarihi < @BitisTarihi
		GROUP BY 
			Hareketler.Owner,
			Hareketler.CariHesapInd,
			Hareketler.TipInd
		UNION ALL
		SELECT 
			Hareketler.CariHesapInd,
			Hareketler.Owner,
			Hareketler.TipInd,	
			0.00 as Borc,
			0.00 as Alacak,
			0.00 as Irsaliye,
			0.00 as AlinanCekMiktari,
			SUM(Tutar) as VerilenCekMiktari
		FROM
			Hareketler  WITH(NOLOCK)
		WHERE 
			Hareketler.TipInd=14 
			AND 
			Hareketler.DurumInd IN (4,12)
			AND 
			Hareketler.GirisTarihi >= @BaslangicTarihi
			AND 
			Hareketler.GirisTarihi < @BitisTarihi
		GROUP BY 
			Hareketler.Owner,
			Hareketler.CariHesapInd,
			Hareketler.TipInd	
	)
	SELECT 
		c.Owner,
		c.Ind,
		c.HesapKodu,
		c.HesapAdi,
		c.OzelKodu,
		c.TeminatKodu,
		SUM(CariTutar.Borc) AS Borc,
		SUM(CariTutar.Alacak) AS Alacak,
		SUM(CariTutar.Borc)-SUM(CariTutar.Alacak) AS Bakiye,
		SUM(CariTutar.Irsaliye) AS Irsaliye,
		SUM(CariTutar.Borc)-SUM(CariTutar.Alacak)+ SUM(CariTutar.Irsaliye) as Toplam,
		SUM(CariTutar.AlinanCekMiktari) as AlinanCekMiktari,
		SUM(CariTutar.VerilenCekMiktari) as VerilenCekMiktari,
		c.Telefon,
		c.GSM,
		c.Faks,
		c.SonFaturaTarihi as FaturaTarihi,
		HSP.Aktif,
		0.00 as Devir
	FROM 
		CarilerinSonFaturaTarihiListesi as c  WITH(NOLOCK)
		LEFT JOIN CariTutar  WITH(NOLOCK) ON c.Ind=CariTutar.CariHesapInd
		LEFT JOIN Hesaplar HSP  WITH(NOLOCK) ON HSP.Ind=c.Ind
	WHERE 
		c.TipInd=201
		AND 
		c.HesapKodu >= @HesapKoduBaslangic 
		AND 
		c.HesapKodu <= @HesapKoduBitis
	GROUP BY
		c.Owner,
		c.Ind,
		c.HesapKodu,
		c.HesapAdi,
		c.OzelKodu,
		c.TeminatKodu,
		c.Telefon,
		c.GSM,
		c.Faks,
		c.SonFaturaTarihi,
		HSP.Aktif
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[BorcluAlacakliCariListesiWithSubeGruplu] 
(	
	@HesapKoduBaslangic nvarchar(30),
	@HesapKoduBitis nvarchar(30),
	@OzelKodlar nvarchar(max),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@SubeGrupInds nvarchar(max),
	@TeminatKodlar nvarchar(max),
	@KullaniciCarileri nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	WITH CariTutar(CariHesapInd, Owner, TipInd, Borc, Alacak, Irsaliye, AlinanCekMiktari, VerilenCekMiktari)
	AS
	(
		SELECT
			c.CariHesapInd,
			c.Owner,
			c.TipInd,		
			c.Borc,
			c.Alacak,
			0.00 as Irsaliye,
			0.00 as AlinanCekMiktari,
			0.00 as VerilenCekMiktari
		FROM 
			CariHesapHareketleri as c  WITH(NOLOCK)
		WHERE 
			c.Tarih >= @BaslangicTarihi
			AND 
			c.Tarih < @BitisTarihi
			AND 
			(c.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR c.Owner IS NULL OR c.Owner IN (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True'))
		UNION ALL
		SELECT 
			Basliklar.HesapInd as CariHesapInd,
			Hareketler.Owner,
			Hareketler.TipInd,	
			0.00 as Borc,
			0.00 as Alacak,
			SUM(CASE WHEN Hareketler.TipInd =5 THEN Miktar*Fiyat ELSE 0.00 END)-SUM(CASE WHEN Hareketler.TipInd =2 THEN Miktar*Fiyat ELSE 0.00 END) AS Irsaliye,
			0.00 as AlinanCekMiktari,
			0.00 as VerilenCekMiktari
		FROM 
			Hareketler  WITH(NOLOCK)
			LEFT JOIN Basliklar ON Hareketler.BaslikInd=Basliklar.Ind
		WHERE 
			Hareketler.TipInd IN (2,5) AND Hareketler.DurumInd is NULL
			AND 
			Basliklar.Tarih >= @BaslangicTarihi
			AND 
			Basliklar.Tarih < @BitisTarihi
			AND 
			(Hareketler.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR Hareketler.Owner IS NULL OR Hareketler.Owner IN (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True'))
		GROUP BY 
			Hareketler.Owner,
			Basliklar.HesapInd,			
			Hareketler.TipInd
		UNION ALL
		SELECT  
			Basliklar.HesapInd as CariHesapInd, 
			Basliklar.Owner,
			Basliklar.TipInd,
			0.00 as Borc,
			0.00 as Alacak,		
			SUM(Hareketler.Miktar * dbo.Hareketler.Fiyat) AS Irsaliye,
			0.00 as AlinanCekMiktari,
			0.00 as VerilenCekMiktari
		FROM	
			dbo.Basliklar  WITH(NOLOCK)
			INNER JOIN dbo.Hareketler ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
		WHERE	
			(dbo.Basliklar.TipInd = 111) 
			AND 
			(dbo.Hareketler.TipInd = 37) 
			AND 
			(dbo.Basliklar.DurumInd IS NULL) 
			AND 
			(dbo.Basliklar.FisPortfoyu IS NULL OR dbo.Basliklar.FisPortfoyu = 0) 
			AND  
			(dbo.Hareketler.DurumInd IS NULL)
			AND 
			Basliklar.Tarih >= @BaslangicTarihi
			AND 
			Basliklar.Tarih < @BitisTarihi
			AND 
			(Basliklar.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR Basliklar.Owner IS NULL OR Basliklar.Owner IN (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True'))
		GROUP BY 
			Basliklar.Owner,
			Basliklar.HesapInd, 
			Basliklar.TipInd
		UNION ALL
		SELECT 
			Hareketler.CariHesapInd,
			Hareketler.Owner,
			Hareketler.TipInd,
			0.00 as Borc,
			0.00 as Alacak,
			0.00 as Irsaliye,
			SUM(Tutar) as AlinanCekMiktari,
			0.00 as VerilenCekMiktari
		FROM
			Hareketler  WITH(NOLOCK)
		WHERE 
			Hareketler.TipInd=11 
			AND 
			Hareketler.DurumInd IN (4,7)   -- 7 eklendi  , 12 çıkarıldı -Sonat
			AND 
			Hareketler.GirisTarihi >= @BaslangicTarihi
			AND 
			Hareketler.GirisTarihi < @BitisTarihi	
			AND 
			(Hareketler.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR Hareketler.Owner IS NULL OR Hareketler.Owner IN (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True'))
		GROUP BY 
			Hareketler.Owner,
			Hareketler.CariHesapInd,
			Hareketler.TipInd
		UNION ALL
		SELECT 
			Hareketler.CariHesapInd,
			Hareketler.Owner,
			Hareketler.TipInd,	
			0.00 as Borc,
			0.00 as Alacak,
			0.00 as Irsaliye,
			0.00 as AlinanCekMiktari,
			SUM(Tutar) as VerilenCekMiktari
		FROM
			Hareketler  WITH(NOLOCK)
		WHERE 
			Hareketler.TipInd=14 
			AND 
			Hareketler.DurumInd IN (4,12)
			AND 
			Hareketler.GirisTarihi >= @BaslangicTarihi
			AND 
			Hareketler.GirisTarihi < @BitisTarihi
			AND 
			(Hareketler.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR Hareketler.Owner IS NULL OR Hareketler.Owner IN (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True'))
		GROUP BY 
			Hareketler.Owner,
			Hareketler.CariHesapInd,
			Hareketler.TipInd
	)
	SELECT 
		c.Owner,
		c.OwnerSG,
		c.Ind,
		c.HesapKodu,
		c.HesapAdi,
		c.OzelKodu,
		c.TeminatKodu,
		SUM(CariTutar.Borc) AS Borc,
		SUM(CariTutar.Alacak) AS Alacak,
		SUM(CariTutar.Borc)-SUM(CariTutar.Alacak) AS Bakiye,
		SUM(CariTutar.Irsaliye) AS Irsaliye,
		SUM(CariTutar.Borc)-SUM(CariTutar.Alacak)+ SUM(CariTutar.Irsaliye) as Toplam,
		SUM(CariTutar.AlinanCekMiktari) as AlinanCekMiktari,
		SUM(CariTutar.VerilenCekMiktari) as VerilenCekMiktari,
		c.Telefon,
		c.GSM,
		c.Faks,
		c.SonFaturaTarihi as FaturaTarihi,
		HSP.Aktif,
		0.00 as Devir
	FROM 
		CarilerinSonFaturaTarihiListesi as c  WITH(NOLOCK)
		LEFT JOIN CariTutar  WITH(NOLOCK) ON c.Ind=CariTutar.CariHesapInd
		LEFT JOIN Hesaplar HSP  WITH(NOLOCK) ON HSP.Ind=c.Ind
	WHERE 
		c.TipInd = 201
		AND 
		c.HesapKodu >= @HesapKoduBaslangic 
		AND 
		c.HesapKodu <= @HesapKoduBitis
		AND 
		(c.OzelKodu IN (SELECT * FROM fnSplit(@OzelKodlar,',')) OR c.OzelKodu=''  OR c.OzelKodu IS NULL)
		AND 
		(c.TeminatKodu IN (SELECT * FROM fnSplit(@TeminatKodlar,',')) OR c.TeminatKodu=''  OR c.TeminatKodu IS NULL)
		AND 
		(c.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR c.Owner IS NULL OR c.Owner IN (SELECT TOP 1 Ind FROM Subeler  WITH(NOLOCK) WHERE IsMerkez = 'True'))
	GROUP BY
		c.Owner,
		c.Ind,
		c.HesapKodu,
		c.HesapAdi,
		c.OzelKodu,
		c.TeminatKodu,
		c.Telefon,
		c.GSM,
		c.Faks,
		c.SonFaturaTarihi,
		HSP.Aktif,
		c.OwnerSG
)

GO
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[ButunGelirlerDokumu] 
(	
	-- Add the parameters for the function here
    @Baslangic datetime,
    @Bitis datetime
)
RETURNS @Dokum TABLE
(
	GelirInd int,
	Tutar decimal(28,8),
	Owner int,
	Tarih datetime
)
AS
BEGIN 
	INSERT INTO @Dokum
	SELECT
		GelirInd, 
		Tutar,
		Owner,
		GirisTarihi as Tarih
	FROM Hareketler  WITH(NOLOCK)
	WHERE 
	GirisTarihi >= @Baslangic AND GirisTarihi < @Bitis AND TipInd in (27)

	UNION ALL
	SELECT
		GelirInd, 
		Tutar,
		Owner,
		GirisTarihi as Tarih
	FROM Hareketler  WITH(NOLOCK)
	WHERE 
	GirisTarihi >= @Baslangic AND GirisTarihi < @Bitis AND TipInd in (9)

	UNION ALL
	SELECT
		GelirInd, 
		Tutar,
		Owner,
		GirisTarihi as Tarih
	FROM Hareketler  WITH(NOLOCK)
	WHERE 
	GirisTarihi >= @Baslangic AND GirisTarihi < @Bitis AND TipInd in (20)

	UNION ALL
	SELECT
		GelirInd, 
		Tutar,
		Owner,
		GirisTarihi as Tarih
	FROM Hareketler  WITH(NOLOCK)
	WHERE 
	GirisTarihi >= @Baslangic AND GirisTarihi < @Bitis AND TipInd in (25)
RETURN
END
GO
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[ButunGiderlerDokumu] 
(	
	-- Add the parameters for the function here
    @Baslangic datetime,
    @Bitis datetime
)
RETURNS @Dokum TABLE
(
	GiderInd int,
	Tutar decimal(28,8),
	Owner int,
	Tarih datetime
)
AS
BEGIN 
	INSERT INTO @Dokum
	SELECT
		GiderInd, 
		Tutar,
		Owner,
		GirisTarihi as Tarih
	FROM Hareketler  WITH(NOLOCK)
	WHERE 
	GirisTarihi >= @Baslangic AND GirisTarihi < @Bitis AND TipInd in (21)

	UNION ALL
	SELECT
		GiderInd, 
		Tutar,
		Owner,
		GirisTarihi as Tarih
	FROM Hareketler  WITH(NOLOCK)
	WHERE 
	GirisTarihi >= @Baslangic AND GirisTarihi < @Bitis AND TipInd in (22)

	UNION ALL
	SELECT
		GiderInd, 
		Tutar,
		Owner,
		GirisTarihi as Tarih
	FROM Hareketler  WITH(NOLOCK)
	WHERE 
	GirisTarihi >= @Baslangic AND GirisTarihi < @Bitis AND TipInd in (28)

	UNION ALL
	SELECT
		GiderInd, 
		Tutar,
		Owner,
		GirisTarihi as Tarih
	FROM Hareketler  WITH(NOLOCK)
	WHERE 
	GirisTarihi >= @Baslangic AND GirisTarihi < @Bitis AND TipInd in (13)

	UNION ALL
	SELECT
		GiderInd, 
		Tutar,
		Owner,
		GirisTarihi as Tarih
	FROM Hareketler  WITH(NOLOCK)
	WHERE 
	GirisTarihi >= @Baslangic AND GirisTarihi < @Bitis AND TipInd in (18)

	UNION ALL
	SELECT
		GiderInd, 
		Tutar,
		Owner,
		GirisTarihi as Tarih
	FROM Hareketler  WITH(NOLOCK)
	WHERE 
	GirisTarihi >= @Baslangic AND GirisTarihi < @Bitis AND TipInd in (26)

	UNION ALL
	SELECT
		GiderInd, 
		Tutar,
		Owner,
		GirisTarihi as Tarih
	FROM Hareketler  WITH(NOLOCK)
	WHERE 
	GirisTarihi >= @Baslangic AND GirisTarihi < @Bitis AND TipInd in (10) AND BaslikInd IS NOT NULL
RETURN
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[CariAlinanCekTutar] 
(	
	@CariHesapInd int
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
	NULL as Owner,SUM(Tutar) as Tutar
	FROM
	Hareketler  WITH(NOLOCK)
	WHERE TipInd=11 AND DurumInd IN (4,7) AND CariHesapInd=@CariHesapInd
)

GO
CREATE FUNCTION CariGenelRisk
(
@limitMin INT ,@limitMax INT
)

RETURNS 
TABLE 
AS
RETURN 
(

SELECT Ind,RiskLimiti,HesapKodu,HesapAdi,Borc,Alacak,Bakiye,AlinanCek,VerilenCek,IrsaliyeToplam,GenelToplam,Owner
,(Bakiye+IrsaliyeToplam+AlinanCek) AS CekliRiskToplam , 
((Bakiye+IrsaliyeToplam+AlinanCek)/RiskLimiti *100) AS YuzdeRisk
FROM CariKartTutarBilgileri  WITH(NOLOCK) WHERE 0=0 AND(RiskLimiti >0)
AND (((Bakiye+IrsaliyeToplam+AlinanCek)/RiskLimiti *100) >=@limitMin AND ((Bakiye+IrsaliyeToplam+AlinanCek)/RiskLimiti *100)<=@limitMax)


)

GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
--N.E.E.13.4.9.11.22
CREATE FUNCTION [dbo].[CariHareketAltToplam] 
(	
	@Ind int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@SubeGrupInds nvarchar(max)
)
RETURNS @Liste TABLE
(Owner int, OwnerSG int, Borc decimal(28, 8), Alacak decimal(28, 8))
AS
BEGIN
	if(@SubeGrupInds = 'yok')
		BEGIN
			INSERT INTO @Liste
			SELECT
				NULL AS Owner,
				0 AS OwnerSG,
				SUM(Borc) AS Borc,
				SUM(Alacak) AS Alacak
			FROM CariHareket  WITH(NOLOCK)
			WHERE HesapInd = @Ind
			AND GirisTarihi >= @BaslangicTarihi 
			AND GirisTarihi <= @BitisTarihi
			INSERT INTO @Liste
			SELECT
				NULL AS Owner,
				0 AS OwnerSG,
				SUM(Borc) AS Borc,
				SUM(Alacak) AS Alacak
			FROM CariHareket  WITH(NOLOCK)
			WHERE HesapInd = @Ind
			AND GirisTarihi < @BitisTarihi
			INSERT INTO @Liste
			SELECT
				NULL AS Owner,
				0 AS OwnerSG,
				SUM(Borc) AS Borc,
				SUM(Alacak) AS Alacak
			FROM CariHareket  WITH(NOLOCK)
			WHERE HesapInd = @Ind
			INSERT INTO @Liste
			SELECT
				NULL AS Owner,
				0 AS OwnerSG,
				SUM(Borc) AS Borc,
				SUM(Alacak) AS Alacak
			FROM CariHareket  WITH(NOLOCK)
			WHERE HesapInd = @Ind
			AND GirisTarihi >= @BaslangicTarihi 
			AND GirisTarihi <= @BitisTarihi
		END
	ELSE
		BEGIN
			INSERT INTO @Liste
			SELECT
				NULL AS Owner,
				0 AS OwnerSG,
				SUM(Borc) AS Borc,
				SUM(Alacak) AS Alacak
			FROM CariHareket  WITH(NOLOCK)
			WHERE HesapInd = @Ind
			AND GirisTarihi >= @BaslangicTarihi 
			AND GirisTarihi <= @BitisTarihi
			AND (CariHareket.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR CariHareket.Owner IS NULL OR CariHareket.Owner IN (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True'))
			INSERT INTO @Liste
			SELECT
				NULL AS Owner,
				0 AS OwnerSG,
				SUM(Borc) AS Borc,
				SUM(Alacak) AS Alacak
			FROM CariHareket  WITH(NOLOCK)
			WHERE HesapInd = @Ind
			AND GirisTarihi < @BitisTarihi
			AND (CariHareket.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR CariHareket.Owner IS NULL OR CariHareket.Owner IN (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True'))
			INSERT INTO @Liste
			SELECT
				NULL AS Owner,
				0 AS OwnerSG,
				SUM(Borc) AS Borc,
				SUM(Alacak) AS Alacak
			FROM CariHareket  WITH(NOLOCK)
			WHERE HesapInd = @Ind
			AND (CariHareket.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR CariHareket.Owner IS NULL OR CariHareket.Owner IN (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True'))
			INSERT INTO @Liste
			SELECT
				NULL AS Owner,
				0 AS OwnerSG,
				SUM(Borc) AS Borc,
				SUM(Alacak) AS Alacak
			FROM CariHareket  WITH(NOLOCK)
			WHERE HesapInd = @Ind
			AND GirisTarihi >= @BaslangicTarihi 
			AND GirisTarihi <= @BitisTarihi
			AND (CariHareket.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR CariHareket.Owner IS NULL OR CariHareket.Owner IN (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True'))
		END
	RETURN
END

GO


set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
--N.E.E.13.4.9.16.22
CREATE FUNCTION [dbo].[CariHareketToplam] 
(	
	@Ind int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@SubeGrupInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
		SELECT
		@Ind AS Ind,
		Owner,	
		23 AS TipInd,
		SUM(Borc) AS Borc,
		NULL AS BelgeNo,
		SUM(Alacak) AS Alacak,
		'Devir' AS Aciklama,
		NULL AS GirisTarihi,
		NULL AS OdemeTarihi,
		'' AS OdemeTarihiStr,
		NULL AS VadeTarihi,
		'' AS VadeTarihiStr,
		NULL AS SubeAdi,
		NULL AS CariHesapAdi,
		NULL AS BankaHesapAdi,
		NULL AS KKHesapAdi,
		NULL AS KKHesapInd,
		NULL AS GelirAdi,
		NULL AS GiderAdi,
		NULL AS HedefHesapAdi,
		NULL AS Bakiye,
		NULL AS KasayaIslensinMi,
		NULL AS Senet,
		NULL AS Kur,
		'TL' AS ParaBirimi,
		NULL AS Tutar
	FROM CariHareket  WITH(NOLOCK)
	WHERE HesapInd = @Ind
	AND GirisTarihi < @BaslangicTarihi
	group by Owner
	
	UNION ALL

	SELECT
		Ind,
		Owner,
		TipInd,
		Borc,
		BelgeNo,
		Alacak,
		Aciklama,
		GirisTarihi,
		OdemeTarihi,
		convert(varchar(25), OdemeTarihi, 120) AS OdemeTarihiStr,	
		VadeTarihi,
		convert(varchar(25), VadeTarihi, 120) AS VadeTarihiStr,	
		SubeAdi,
		CariHesapAdi,
		BankaHesapAdi,
		KKHesapAdi,
		KKHesapInd,
		GelirAdi,
		GiderAdi,
		HedefHesapAdi,
		NULL AS Bakiye,
		KasayaIslensinMi,
		Senet,
		Kur,
		ParaBirimi,
		Tutar
	FROM CariHareket  WITH(NOLOCK)
	WHERE HesapInd = @Ind
	AND GirisTarihi >= @BaslangicTarihi 
	AND GirisTarihi < @BitisTarihi
)

GO




SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[CariHesapTutar]  
(
	@CariHesapInd int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Dokum(Ind,TipInd,Owner,Borc,Alacak,Aciklama,GirisTarihi,VadeTarihi,BelgeNo,SubeAdi)
	AS
	(	
		SELECT
			FaturaOzet2.Ind,
			TipInd,
			FaturaOzet2.Owner,
			CASE WHEN (TipInd in (6))
				THEN Alacak 
				ELSE 0
			END as Borc,
			CASE WHEN (TipInd in(3))
				THEN Borc 
				ELSE 0
			END as Alacak,
			Aciklama,
			GirisTarihi,
			null as VadeTarihi,
			BelgeNo,
			Subeler.SubeAdi
		FROM FaturaOzet2  WITH(NOLOCK)
	    LEFT JOIN Subeler  WITH(NOLOCK) ON FaturaOzet2.Owner = Subeler.Owner
		WHERE
			HesapInd = @CariHesapInd 

		UNION ALL

		SELECT 
			Hareketler.Ind, 
			TipInd,
			Hareketler.Owner,
			CASE WHEN (TipInd IN(13,15,507,510))
				THEN Tutar 
				ELSE 0
				END as Borc,
			CASE WHEN (TipInd IN(9,10,12,508,509,533))
				THEN Tutar 
				ELSE 0
				END as Alacak,
			Aciklama,
			GirisTarihi,
			null as VadeTarihi,
			null AS BelgeNo,
			Subeler.SubeAdi

		FROM Hareketler  WITH(NOLOCK)
		LEFT JOIN Subeler  WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
		WHERE 
			CariHesapInd = @CariHesapInd 
			AND TipInd in (9,10,12,13,15,507,508,509,510,533)

-- sonat hedef cari için
		UNION ALL

		SELECT 
			Hareketler.Ind, 
			TipInd,
			Hareketler.Owner,
			CASE WHEN (TipInd IN(509))
				THEN Tutar 
				ELSE 0
				END as Borc,
			CASE WHEN (TipInd IN(510))
				THEN Tutar 
				ELSE 0
				END as Alacak,
			Aciklama,
			GirisTarihi,
			null as VadeTarihi,
			null AS BelgeNo,
			Subeler.SubeAdi
		FROM Hareketler  WITH(NOLOCK)
		LEFT JOIN Subeler  WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
		WHERE 
			HedefHesapInd = @CariHesapInd 
			AND TipInd IN (509, 510)
			AND Hareketler.HedefHesapInd IS NOT NULL 
	
--
		UNION ALL

		SELECT 
			Hareketler.Ind,
			TipInd,
			Hareketler.Owner, 
			0 as Borc,
			CASE WHEN (TipInd=11 AND (Hareketler.DurumInd = 4 OR Hareketler.DurumInd = 6 OR Hareketler.DurumInd = 8 OR Hareketler.DurumInd = 7 OR Hareketler.DurumInd = 5 ) )
				THEN Tutar 
				ELSE 0
				END as Alacak,			
			Aciklama,
			GirisTarihi,
			Hareketler.VadeTarihi as VadeTarihi,
			null AS BelgeNo,
			Subeler.SubeAdi
		FROM Hareketler  WITH(NOLOCK)
		LEFT JOIN Subeler  WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
		WHERE 
			CariHesapInd = @CariHesapInd 
			AND TipInd = 11 
			AND Hareketler.DurumInd!= 9

		UNION ALL

		SELECT 
			Hareketler.Ind, 
			TipInd,
			Hareketler.Owner,
			Tutar as Borc,
			0 as Alacak,
			Aciklama,
			GirisTarihi,
			Hareketler.VadeTarihi as VadeTarihi,
			null AS BelgeNo,
			Subeler.SubeAdi
		FROM Hareketler  WITH(NOLOCK)
		LEFT JOIN Subeler  WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
		WHERE 
			CariHesapInd = @CariHesapInd 
			AND TipInd = 14 
			AND Hareketler.DurumInd IN (4,10) 

		UNION ALL
	
		SELECT 
			Hareketler.Ind, 
			TipInd,
			Hareketler.Owner, 
			Tutar as Borc,
			0 as Alacak,
			Aciklama,
			GirisTarihi,
			Hareketler.VadeTarihi as VadeTarihi,
			null AS BelgeNo,
			Subeler.SubeAdi
		FROM Hareketler  WITH(NOLOCK)
		LEFT JOIN Subeler  WITH(NOLOCK) ON Hareketler.Owner = Subeler.Owner
		WHERE 
			Hareketler.CiroCariInd = @CariHesapInd 

		UNION ALL

		SELECT
			h.Ind,
			h.TipInd as TipInd,
			h.Owner as Owner,
			h.Tutar as Borc,
			0 as Alacak,
			b.Aciklama as Aciklama,
			b.Tarih as GirisTarihi,
			NULL as	VadeTarihi,
			b.BelgeNo as BelgeNo,
			s.SubeAdi as SubeAdi
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Subeler as s  WITH(NOLOCK) ON h.Owner = s.Owner
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON b.Ind = h.BaslikInd
		LEFT JOIN Hesaplar as hsp  WITH(NOLOCK) ON hsp.Ind = @CariHesapInd
		WHERE 
		b.HesapInd = @CariHesapInd
		AND h.TipInd = 37
		AND b.FisPortfoyu = 'True'

	)

	SELECT
		NULL as Owner,
		(SUM(Dokum.Borc) - SUM(Dokum.Alacak)) as Tutar
	FROM Dokum  WITH(NOLOCK)
)

GO
CREATE FUNCTION [dbo].[CariIrsaliyeHareketAltToplam] 
(	
	@Ind int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@SubeGrupInds nvarchar(max)
)
RETURNS @Liste TABLE
(Owner int, OwnerSG int, Borc decimal(28, 8), Alacak decimal(28, 8))
AS
BEGIN
	DECLARE @SonTarih DATETIME
	SET @SonTarih = DATEADD(day,1,@BitisTarihi) 
	

	if(@SubeGrupInds = 'yok')
		BEGIN
			INSERT INTO @Liste
			SELECT
				NULL AS Owner,
				0 AS OwnerSG,
				SUM(Borc) AS Borc,
				SUM(Alacak) AS Alacak
			FROM CariIrsaliyeHareket(@Ind,@BaslangicTarihi,@SonTarih)

			INSERT INTO @Liste
			SELECT
				NULL AS Owner,
				0 AS OwnerSG,
				SUM(Borc) AS Borc,
				SUM(Alacak) AS Alacak
			FROM CariIrsaliyeHareket(@Ind,'1900/01/01',@SonTarih)

		END
	ELSE
		BEGIN
			INSERT INTO @Liste
			SELECT
				NULL AS Owner,
				0 AS OwnerSG,
				SUM(Borc) AS Borc,
				SUM(Alacak) AS Alacak
			FROM CariIrsaliyeHareket(@Ind,@BaslangicTarihi,@SonTarih)
			WHERE 

			(CariIrsaliyeHareket.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR CariIrsaliyeHareket.Owner IS NULL OR CariIrsaliyeHareket.Owner IN (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True'))
			INSERT INTO @Liste
			SELECT
				NULL AS Owner,
				0 AS OwnerSG,
				SUM(Borc) AS Borc,
				SUM(Alacak) AS Alacak
			FROM CariIrsaliyeHareket(@Ind,'1900/01/01',@SonTarih)
			WHERE 
			(CariIrsaliyeHareket.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR CariIrsaliyeHareket.Owner IS NULL OR CariIrsaliyeHareket.Owner IN (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True'))
		END
	RETURN
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[CariIrsaliyeTutar] 
(	
	@CariHesapInd int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Dokum(Owner, AlisTutar,SatisTutar)
	AS
	(		
			SELECT 
			Basliklar.Owner,
			(CASE WHEN Hareketler.TipInd =2
				THEN Miktar*Fiyat
				ELSE 0
				END 
			) AS AlisTutar,
			(
				CASE WHEN Hareketler.TipInd =5
				THEN Miktar*Fiyat
				ELSE 0
				END
			) AS SatisTutar
			FROM Hareketler  WITH(NOLOCK)
			LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
			WHERE Hareketler.TipInd IN (2,5) AND Hareketler.DurumInd is NULL AND Basliklar.HesapInd=@CariHesapInd 

			UNION ALL

			SELECT     
			Basliklar.Owner, 
			0 as AlisTutar,
			(Hareketler.Miktar * dbo.Hareketler.Fiyat) AS SatisTutar
			FROM	dbo.Basliklar  WITH(NOLOCK) INNER JOIN
						dbo.Hareketler  WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
			WHERE	(dbo.Basliklar.TipInd = 111) AND (dbo.Hareketler.TipInd = 37) 
					AND (dbo.Basliklar.DurumInd IS NULL) AND (dbo.Basliklar.FisPortfoyu IS NULL OR dbo.Basliklar.FisPortfoyu = 0) AND  (dbo.Hareketler.DurumInd IS NULL) AND Basliklar.HesapInd=@CariHesapInd 
	)

	SELECT
		NULL as Owner,
		SUM(
				SatisTutar - AlisTutar
			) AS Tutar
	FROM Dokum	
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[CarilereAitIrsaliyelerToplam] 
(	
	@Tarih datetime,
	@CariInd INT
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT
	B.Owner, 
	B.HesapInd,
	B.HesapKodu,
	B.HesapAdi,
	SUM(H.Miktar*H.Fiyat) AS Tutar
	FROM Hareketler H  WITH(NOLOCK)
	INNER JOIN Basliklar B  WITH(NOLOCK) ON H.BaslikInd = B.Ind
	WHERE B.hesapInd = @CariInd AND B.Tarih = @Tarih
	AND B.TipInd = 104 AND H.TipInd = 5
	GROUP BY B.Owner,B.HesapInd,B.HesapKodu,B.HesapAdi
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[CariSecimKonroluForCombobox] 
(	
	@CariHesapInd int,
	@SelectedSube int
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
	null as Owner,
	Hesaplar.Ind as CariHesapInd,
	(CASE WHEN(@SelectedSube = 0 AND Hesaplar.Owner != Subeler.Ind) OR (@SelectedSube > 0 AND (Hesaplar.Owner IS NOT NULL AND Hesaplar.Owner != @SelectedSube))
	THEN cast(0 as bit)
	ELSE cast(1 as bit)
	END) as Durum
	FROM Hesaplar  WITH(NOLOCK)
	LEFT JOIN Subeler  WITH(NOLOCK) ON Subeler.IsMerkez = 1
	WHERE Hesaplar.Ind = @CariHesapInd
)
GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go

CREATE FUNCTION [dbo].[CariTahsilatlarListesi] (@OzelKodlar nvarchar(max))
RETURNS TABLE
AS
RETURN 
(
	SELECT TOP 100 PERCENT HSP.OzelKodu,HSP.OzelKodInd,CHH.* ,HSP.HesapKodu,HSP.HesapAdi,0.0 Bakiye,'' TipAdi
		FROM CariHesapHareketleri CHH
		INNER JOIN Hesaplar HSP  WITH(NOLOCK) ON HSP.Ind=CHH.CariHesapInd
		WHERE HSP.OzelKodu IN (SELECT * FROM fnSplit(@OzelKodlar,','))

)


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[CariVerilenCekTutar] 
(	
	@CariHesapInd int
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		NULL as Owner,
		SUM(Tutar) as Tutar
	FROM
	Hareketler  WITH(NOLOCK)
	WHERE TipInd=14 AND DurumInd=4 AND CariHesapInd=@CariHesapInd
)

GO
CREATE FUNCTION [dbo].[CariyeAitBaslikHareketVarmi] 
(
    @HesapInd int,
	@Owner int
)
RETURNS @Cariler TABLE 
(
	HesapInd int,
	Owner int
)
AS
BEGIN

	DECLARE @_Sonuc	INT	 

	SELECT TOP 1 
		@_Sonuc = Ind,
		@Owner = Owner
	FROM Hesaplar  WITH(NOLOCK) WHERE TipInd = 201 AND Ind = @HesapInd
	AND Ind NOT IN(SELECT HesapInd FROM Basliklar  WITH(NOLOCK) WHERE HesapInd IS NOT NULL) 
	AND Ind NOT IN (SELECT CariHesapInd FROM Hareketler  WITH(NOLOCK) WHERE CariHesapInd IS NOT NULL)

	INSERT INTO @Cariler 
		(HesapInd,Owner)
		VALUES (ISNULL(@_Sonuc,0),@Owner)
	RETURN
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[cbKasaTipiSec]
(	
	@filtre nvarchar(255),
	@Index int,
	@PageSize int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH TableWithRows AS 
	( 
		SELECT ROW_NUMBER() OVER (ORDER BY ParaBirimi) AS Row, TBL1.ParaBirimi FROM( SELECT DISTINCT Hareketler.ParaBirimi FROM Hareketler  WITH(NOLOCK) 
		WHERE ParaBirimi LIKE @filtre+'%' ) AS TBL1 
	) 
	SELECT * FROM TableWithRows  WITH(NOLOCK) WHERE Row BETWEEN @Index + 1 AND @Index + @PageSize
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[CheckAlinanCekNo] 
(	
	@cekNo nvarchar(50)
)
RETURNS @Dokum TABLE 
(
	Owner int,
	CekNonunKullanilmaDurumu bit
)
AS
BEGIN
	DECLARE @count int
	SELECT 
		@count=Count(*) 
	FROM Hareketler
	WHERE TipInd = 11 AND CekNo = @cekNo

	IF(@count >0)
		INSERT INTO @Dokum VALUES(NULL,1)
	ELSE
		INSERT INTO @Dokum VALUES(NULL,0)
RETURN
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[CheckBirim]
(
	@Ind int
)
RETURNS 
@Birim TABLE
(
	IsDeletable tinyint,
	Owner int
)
AS
BEGIN
	DECLARE @sayi1 int
	DECLARE @sayi2 int
	DECLARE @sayi3 int
	SELECT @sayi1=Count(*) FROM Stoklar WHERE AnaBirimInd=@Ind
	SELECT @sayi2=Count(*) FROM StokDetaylari WHERE BirimInd=@Ind
	SELECT @sayi3=Count(*) FROM Birimler WHERE Ind=@Ind

	IF( @sayi1=0 AND @sayi2=0 AND @sayi3=0)
	INSERT INTO @Birim VALUES(1,NULL);
	
	ELSE IF( @sayi1=0 AND @sayi2=0 AND @sayi3=1)
	INSERT INTO @Birim 
		SELECT 1, Owner FROM Birimler WHERE Birimler.Ind=@Ind

	ELSE
	INSERT INTO @Birim 
		SELECT 0, Owner FROM Birimler WHERE Birimler.Ind=@Ind

	RETURN 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[CheckFaturalastirilmisIrsaliye] 
(	
	@FaturaInd int,
	@TipInd int
)
RETURNS @Dokum TABLE 
(
	Owner int,
	Durum bit,
	FaturaInd int,
	TipInd int
)
AS
BEGIN 
	DECLARE @irsaliyeCount int
	SELECT @irsaliyeCount=Count(*) 
	FROM Basliklar  WITH(NOLOCK)
	WHERE Basliklar.TipInd IN (103,104)
		AND Basliklar.FaturaInd = @FaturaInd
	IF @irsaliyeCount>0
		INSERT INTO @Dokum VALUES(NULL,1,@FaturaInd,@TipInd)
	ELSE 
		INSERT INTO @Dokum VALUES(NULL,0,@FaturaInd,@TipInd)
RETURN 
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[CheckIrsaliyeBelgeNo] 
(	
	@BelgeNo nvarchar(100)
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		Null as Owner,
		Basliklar.Ind as Ind,
		(CASE WHEN(Basliklar.BelgeNo IS NOT NULL AND Basliklar.BelgeNo =@BelgeNo )
		THEN cast(0 as bit)
		ELSE cast(1 as bit)
		END)as Durum
	FROM Basliklar  WITH(NOLOCK)
	WHERE Basliklar.TipInd IN (104,110)
	GROUP BY 
		Basliklar.Owner,
		Basliklar.BelgeNo,
		Basliklar.Ind
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[CheckVerilenCekNo] 
(	
	@cekNo nvarchar(50)
)
RETURNS @Dokum TABLE 
(
	Owner int,
	CekNonunKullanilmaDurumu bit
)
AS
BEGIN
	DECLARE @count int
	SELECT 
		@count=Count(*) 
	FROM Hareketler  WITH(NOLOCK)
	WHERE TipInd = 14 AND CekNo = @cekNo

	IF(@count >0)
		INSERT INTO @Dokum VALUES(NULL,1)
	ELSE
		INSERT INTO @Dokum VALUES(NULL,0)
RETURN
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[DepoAktarimDokumu] 
(
	@DepoInd int,
	@baslangic datetime,
	@bitis datetime
)
RETURNS @HareketDokumu TABLE
(Ind int, Tarih datetime, Hedef nvarchar(max), Kaynak nvarchar(max), Aciklama nvarchar(max), BelgeNo nvarchar(max), Owner int, Miktar decimal(28,8), Kalan decimal(28,8)) 
AS
BEGIN
	IF(@DepoInd>0)
		INSERT INTO @HareketDokumu
		SELECT
			g.BaslikInd as Ind,
			g.Tarih,
			h2.DepoAdi as Hedef,
			h.DepoAdi as Kaynak,
			g.Aciklama as Aciklama,
			g.Belge as BelgeNo,
			h.Owner as Owner,
			SUM(h.Miktar) as Miktar,
			0.00 as Kalan
		FROM
			GirisCikisHareketleri AS g  WITH(NOLOCK)
			LEFT JOIN Hareketler as h  WITH(NOLOCK) ON h.BaslikInd = g.BaslikInd AND h.TipInd = 30
			LEFT JOIN Hareketler as h2  WITH(NOLOCK) ON h2.BaslikInd = g.BaslikInd AND h2.TipInd = 29
		WHERE
			g.TipInd = 503
			AND h.DepoInd = @DepoInd
			AND g.Tarih >= @baslangic
			AND g.Tarih <= @bitis
		GROUP BY g.BaslikInd, g.Tarih, h2.DepoAdi, h.DepoAdi, g.Aciklama, g.Belge, h.Owner
	ELSE
		INSERT INTO @HareketDokumu
		SELECT
			g.BaslikInd as Ind,
			g.Tarih,
			h2.DepoAdi as Hedef,
			h.DepoAdi as Kaynak,
			g.Aciklama as Aciklama,
			g.Belge as BelgeNo,
			h.Owner as Owner,
			SUM(h.Miktar) as Miktar,
			0.00 as Kalan
		FROM
			GirisCikisHareketleri AS g  WITH(NOLOCK)
			LEFT JOIN Hareketler as h  WITH(NOLOCK) ON h.BaslikInd = g.BaslikInd AND h.TipInd = 30
			LEFT JOIN Hareketler as h2  WITH(NOLOCK) ON h2.BaslikInd = g.BaslikInd AND h2.TipInd = 29
		WHERE
			g.TipInd = 503
			AND g.Tarih >= @baslangic
			AND g.Tarih <= @bitis
		GROUP BY g.BaslikInd, g.Tarih, h2.DepoAdi, h.DepoAdi, g.Aciklama, g.Belge, h.Owner
	RETURN
END


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[DepoAktarimDokumuGenel] 
(
	@baslangic datetime,
	@bitis datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH HareketDokumu(Ind,Tarih,Hedef,Kaynak,Aciklama,BelgeNo,Owner,Miktar)
	AS
	(
		SELECT 
			b.Ind,
			b.Tarih as Tarih,
			h2.DepoAdi as Hedef,
			h.DepoAdi as Kaynak,
			b.Aciklama as Aciklama,
			b.BelgeNo as BelgeNo,
			h.Owner as Owner,
			SUM(h.Miktar) as Miktar
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 503
		LEFT JOIN Hareketler as h2  WITH(NOLOCK) ON h2.BaslikInd = h.BaslikInd  
		WHERE h.TipInd = 30 
		AND h2.TipInd = 29 
		AND b.Tarih >= @baslangic
		AND b.Tarih <= @bitis
		AND b.TipInd = 503
		GROUP BY b.Ind, b.Tarih, h2.DepoAdi, h.DepoAdi, b.Aciklama, b.BelgeNo, h.Owner	
	)
	SELECT 
		TOP 100 PERCENT
		h1.*, 
		0.00 as Kalan
	FROM HareketDokumu as h1
	ORDER BY h1.Tarih
)

GO
CREATE FUNCTION DepoBazliGunlukSayacHareketleriToplami
(@Tarih DATETIME)

RETURNS @tbl TABLE
(
	Owner INT,
	DepoInd INT, 
	StokInd INT, 
	StokKodu varchar(30),
	StokAdi varchar(40),
	Cikan DECIMAL(28,8),
	Tutar DECIMAL(28,8)
)
AS
BEGIN 
	INSERT INTO @tbl
		SELECT 
			EskiVardiyaKarti.Owner,
			Depo.Ind AS DepoInd,
			Stoklar.Ind AS StokInd,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			SUM(EskiVardiyaSayacHareket.YeniEndeks - EskiVardiyaSayacHareket.EskiEndeks - EskiVardiyaSayacHareket.Aktarma) AS Cikan,
			SUM(EskiVardiyaSayacHareket.Tutar) AS Tutar
		FROM Basliklar AS EskiVardiyaKarti  WITH(NOLOCK)
		LEFT JOIN Hareketler AS EskiVardiyaSayacHareket  WITH(NOLOCK) on (EskiVardiyaKarti.Ind = EskiVardiyaSayacHareket.VardiyaKartInd) 
		INNER JOIN HesapDetaylari AS Sayac  WITH(NOLOCK) on (EskiVardiyaSayacHareket.SayacInd = Sayac.Ind)
		INNER JOIN Hesaplar AS Depo  WITH(NOLOCK) ON (Sayac.DepoInd = Depo.Ind)
		INNER JOIN Stoklar  WITH(NOLOCK) ON (Depo.StokInd = Stoklar.Ind)
		WHERE 
			EskiVardiyaKarti.TipInd = 108 AND
			EskiVardiyaSayacHareket.TipInd = 39 AND
			Depo.TipInd = 205 AND
			Sayac.TipInd = 402 AND
			EskiVardiyaKarti.Tarih = @Tarih AND 
			(EskiVardiyaSayacHareket.YeniEndeks - EskiVardiyaSayacHareket.EskiEndeks - EskiVardiyaSayacHareket.Aktarma) > 0 
		GROUP BY
			EskiVardiyaKarti.Owner,
			Depo.Ind,
			Stoklar.Ind,
			Stoklar.StokKodu,
			Stoklar.StokAdi
	RETURN
END

GO
CREATE FUNCTION DepoBazliGunlukSayacHareketleriToplamiTarAralik
(
	@BaslangicTarihi DATETIME,
	@BitisTarihi DATETIME
)
RETURNS @tbl TABLE
(
	Owner INT,
	DepoInd INT, 
	StokInd INT, 
	StokKodu varchar(30),
	StokAdi varchar(40),
	Cikan DECIMAL(28,8),
	Tutar DECIMAL(28,8)
)
AS
BEGIN 
	INSERT INTO @tbl
		SELECT 
			EskiVardiyaKarti.Owner,
			Depo.Ind AS DepoInd,
			Stoklar.Ind AS StokInd,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			SUM(EskiVardiyaSayacHareket.YeniEndeks - EskiVardiyaSayacHareket.EskiEndeks - EskiVardiyaSayacHareket.Aktarma) AS Cikan,
			SUM(EskiVardiyaSayacHareket.Tutar) AS Tutar
		FROM Basliklar AS EskiVardiyaKarti  WITH(NOLOCK)
		LEFT JOIN Hareketler AS EskiVardiyaSayacHareket  WITH(NOLOCK) on (EskiVardiyaKarti.Ind = EskiVardiyaSayacHareket.VardiyaKartInd) 
		INNER JOIN HesapDetaylari AS Sayac  WITH(NOLOCK) on (EskiVardiyaSayacHareket.SayacInd = Sayac.Ind)
		INNER JOIN Hesaplar AS Depo  WITH(NOLOCK) ON (Sayac.DepoInd = Depo.Ind)
		INNER JOIN Stoklar  WITH(NOLOCK) ON (Depo.StokInd = Stoklar.Ind)
		WHERE 
			EskiVardiyaKarti.TipInd = 108 AND
			EskiVardiyaSayacHareket.TipInd = 39 AND
			Depo.TipInd = 205 AND
			Sayac.TipInd = 402 AND
			(EskiVardiyaKarti.Tarih >= @BaslangicTarihi AND EskiVardiyaKarti.Tarih <= @BitisTarihi) AND 
			(EskiVardiyaSayacHareket.YeniEndeks - EskiVardiyaSayacHareket.EskiEndeks - EskiVardiyaSayacHareket.Aktarma) > 0 
		GROUP BY
			EskiVardiyaKarti.Owner,
			Depo.Ind,
			Stoklar.Ind,
			Stoklar.StokKodu,
			Stoklar.StokAdi
	RETURN
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[DepoHareketDevir]
(
	@DepoInd int,
	@tarih datetime	
)
RETURNS 
@Devir TABLE 
(
	Owner int,
	Giren decimal(28,8),
	Cikan decimal(28,8)
)
AS
BEGIN
	WITH HareketDokumu(Owner,Giren,Cikan)
	AS
	(
		SELECT 
			h.Owner as Owner,
			(h2.Miktar * h2.Carpan) as Giren,
			0 as Cikan
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 101
		LEFT JOIN Hareketler as h2	 WITH(NOLOCK) ON h2.BaslikInd = h.BaslikInd AND h.StokInd = h2.StokInd 
		WHERE h.TipInd = 3 
		AND h2.DepoInd = @DepoInd
		AND h2.TipInd = 29
		AND b.Aktif != 0	
		AND b.Tarih < @tarih
		AND b.TipInd = 101	



		UNION ALL

		SELECT 
			h.Owner as Owner,
			0 as Giren,
			(h2.Miktar * h2.Carpan) as Cikan
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 102
		LEFT JOIN Hareketler as h2	 WITH(NOLOCK) ON h2.BaslikInd = h.BaslikInd AND h.StokInd = h2.StokInd 
		WHERE h.TipInd = 6 
		AND h2.DepoInd = @DepoInd
		AND (b.Aktif = 1 OR b.Aktif IS NULL)
		AND h2.TipInd = 30
		AND b.Tarih < @tarih
		AND b.TipInd = 102

		UNION ALL

		SELECT 
			h.Owner as Owner,
			(h2.Miktar * h2.Carpan) as Giren,
			0 as Cikan
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 103
		LEFT JOIN Hareketler as h2	 WITH(NOLOCK) ON h2.BaslikInd = h.BaslikInd AND h.StokInd = h2.StokInd 
		WHERE h.TipInd = 2 
		AND h2.DepoInd = @DepoInd
		AND h2.TipInd = 29
		AND (b.Aktif = 1 OR b.Aktif IS NULL)
		AND b.Tarih < @tarih
		AND b.TipInd = 103

		UNION ALL
		
		SELECT 
			h.Owner as Owner,
			0 as Giren,
			(h2.Miktar * h2.Carpan) as Cikan
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 104
		LEFT JOIN Hareketler as h2	 WITH(NOLOCK) ON h2.BaslikInd = h.BaslikInd AND h.StokInd = h2.StokInd 
		WHERE h.TipInd = 5 
		AND h2.DepoInd = @DepoInd
		AND h2.TipInd = 30
		AND (b.Aktif = 1 OR b.Aktif IS NULL)
		AND b.Tarih < @tarih
		AND b.TipInd = 104
		AND (b.DurumInd != 11 OR b.DurumInd IS NULL)


		UNION ALL
		
		SELECT 
			h.Owner as Owner,
			0 as Giren,
			(h.Miktar * h.Carpan) as Cikan
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 503
		WHERE h.TipInd = 30 
		AND h.DepoInd = @DepoInd
		AND b.Tarih < @tarih
		AND b.TipInd = 503

		UNION ALL
		
		SELECT 
			h.Owner as Owner,
			(h.Miktar * h.Carpan) as Giren,
			 0 as Cikan
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 503
		WHERE h.TipInd = 29 
		AND h.DepoInd = @DepoInd
		AND b.Tarih < @tarih
		AND b.TipInd = 503

		UNION ALL

		SELECT 
			h.Owner as Owner,
			CASE WHEN(Hareketler.TipInd = 29)
				THEN (Hareketler.Miktar * Hareketler.Carpan) 
				ELSE 0
				END as Giren,
			CASE WHEN(Hareketler.TipInd = 30)
				THEN (Hareketler.Miktar * Hareketler.Carpan)
				ELSE 0
				END as Cikan
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 113
		LEFT JOIN Hareketler  WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd 
			AND Hareketler.StokInd = h.StokInd 
			AND Hareketler.DepoInd = h.DepoInd 
			AND Hareketler.TipInd IN (29,30)
		WHERE h.TipInd = 112 
		AND h.DepoInd = @DepoInd
		AND b.Tarih < @tarih
		AND b.TipInd = 113

		UNION ALL
		
		SELECT 
		h.Owner as Owner,
		0 as Giren,
		h.Fark as Cikan
		FROM EskiVardiyaSayacHareketleri as h  WITH(NOLOCK)
		WHERE h.TipInd = 39
		AND h.DepoInd = @DepoInd
		AND h.Tarih < @tarih 

		UNION ALL

		SELECT
		h.Owner as Owner,
		0 as Giren,
		(Hareketler.Miktar * Hareketler.Carpan) as Cikan
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd
		LEFT JOIN Hareketler  WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind
		WHERE h.TipInd = 40
		AND Hareketler.DepoInd = @DepoInd		
		AND b.Tarih < @tarih 
		AND b.TipInd = 108

		UNION ALL
		
		SELECT
		h.Owner as Owner,
		0 as Giren,
		(h.Miktar * h.Carpan) as Cikan
		FROM Hareketler as h  WITH(NOLOCK) 
		LEFT JOIN Hareketler  WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind
		WHERE h.TipInd = 504
		AND Hareketler.DepoInd = @DepoInd
		AND h.GirisTarihi < @tarih 
	)
	INSERT INTO @Devir
			SELECT 
				h1.*
			FROM HareketDokumu as h1  WITH(NOLOCK)


	DECLARE @x int
	SELECT @x=COUNT(*) FROM @Devir

	IF(@x=0)
	INSERT INTO @Devir 
	SELECT
		null as Owner,
		0 as Giren,
		0 as Cikan
	
	RETURN 
END




GO
CREATE FUNCTION [dbo].[DepoStoklari] (@depoInd int, @tarih datetime)
RETURNS TABLE
AS
RETURN 
(
SELECT  S.Ind, S.Owner, S.StokKodu, S.StokAdi,SD.Tutar SatisFiyati, AF.Fiyat AS AlisFiyati
	,SUM(DGCM.Giren - DGCM.Cikan)  AS Miktar , S.GrupInd
		FROM Stoklar  S
		LEFT JOIN StokDetaylari SD ON SD.StokInd=S.Ind AND SD.IsAnaFiyat = 1
		LEFT JOIN (SELECT * FROM SonAlisFiyatlar('2059-12-31', 0)) AS AF ON AF.StokInd = S.Ind
		INNER JOIN dbo.GirisCikisHareketleri  AS DGCM ON DGCM.StokInd = S.Ind 		

		WHERE (DGCM.Giren IS NOT NULL OR DGCM.Cikan IS NOT NULL) 
		--and DGCM.DepoInd=@depoInd ---------orjinal hali stokları depoya göre getirdiğinden hatalı oluyordu
		and DGCM.Owner =  (select owner from hesaplar where Ind=@depoInd  ) --mhan edition -----şubelere göre getirdim
		and S.Ind not in (select Ind from AkaryakitStoklari) ---- şubeye göre getirince akaryakıt stoklarının dahil olmaması için ekledim
		AND DGCM.Tarih <= @tarih
		and S.Aktif=1  --Mhan Sayılmayan ürünler raporunda pasif stokların gelmemesi sağlandı.
		
GROUP BY S.Ind, S.Owner, S.StokKodu, S.StokAdi,SD.Tutar,AF.Fiyat,S.GrupInd
);
--RETURNS TABLE
--AS
--RETURN 
--(
--SELECT S.Ind, S.Owner, S.StokKodu, S.StokAdi,SD.Tutar SatisFiyati, AF.Fiyat AS AlisFiyati
--	,SUM(DGCM.Giren - DGCM.Cikan) AS Miktar, S.GrupInd
--		FROM Stoklar  S  WITH(NOLOCK)
--		LEFT JOIN StokDetaylari SD  WITH(NOLOCK) ON SD.StokInd=S.Ind AND SD.IsAnaFiyat = 1
--		LEFT JOIN (SELECT * FROM SonAlisFiyatlar('2059-12-31', 0)) AS AF    ON AF.StokInd = S.Ind
--		INNER JOIN dbo.GirisCikisHareketleri AS DGCM  WITH(NOLOCK) ON DGCM.StokInd = S.Ind 		
--		WHERE (DGCM.Giren IS NOT NULL OR DGCM.Cikan IS NOT NULL) and DGCM.DepoInd = @depoInd
--		AND DGCM.Tarih <= @tarih
--GROUP BY S.Ind, S.Owner, S.StokKodu, S.StokAdi,SD.Tutar,AF.Fiyat,S.GrupInd
--);




GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go



CREATE FUNCTION [dbo].[DepoStoklariMiktari] (@depoInd int)
RETURNS TABLE
AS
RETURN 
(
	SELECT @depoInd AS DepoInd,0 AS Owner,COUNT(DISTINCT(StokInd)) AS DepoStokSayisi FROM Hareketler  WITH(NOLOCK)
		WHERE DepoInd=@depoInd AND StokInd IS NOT NULL	
);

GO
-- =============================================
-- Author:		Ermah Kasal
-- Create date: 19.09.2013
-- Description:	Verilen tarihte Devir kaydı varsa (tipind=507 veya 508)
-- Öncesindeki tarihlerde var olan çek ve kredikartı hareketlerinin (tipind=10,11)
-- Toplam borç ve alacağını getirir
-- =============================================
CREATE FUNCTION [dbo].[DevirKaydiOncesiCekKKToplami]
(	
	@Ind int,
	@DevirTarihi datetime,
	@SubeGrupInds nvarchar(max)
)
RETURNS @Liste TABLE
(Owner int, OwnerSG int, Borc decimal(28, 8), Alacak decimal(28, 8))
AS
BEGIN
	if(@SubeGrupInds = 'yok')
		BEGIN
			INSERT INTO @Liste
			SELECT
				NULL AS Owner,
				0 AS OwnerSG,
				SUM(Borc) AS Borc,
				SUM(Alacak) AS Alacak
			FROM CariHareket  WITH(NOLOCK)
			WHERE HesapInd = @Ind
			AND GirisTarihi <= @DevirTarihi
			AND (TipInd = 10 OR TipInd = 11 OR TipInd = 14 OR TipInd = 533)
		END
	ELSE
		BEGIN
			INSERT INTO @Liste
			SELECT
				NULL AS Owner,
				0 AS OwnerSG,
				SUM(Borc) AS Borc,
				SUM(Alacak) AS Alacak
			FROM CariHareket  WITH(NOLOCK)
			WHERE HesapInd = @Ind
			AND GirisTarihi <= @DevirTarihi
			AND (TipInd = 10 OR TipInd = 11 OR TipInd = 14 OR TipInd = 533)
			AND (CariHareket.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR CariHareket.Owner IS NULL OR CariHareket.Owner IN (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True'))
		END
	RETURN
END



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[DigerGelirlerDokumu] 
(	
    @Baslangic datetime,
    @Bitis datetime
)

RETURNS @Dokum TABLE
(
	Tutar decimal(28,8),
	Owner int
)
AS
BEGIN 
	INSERT INTO @Dokum
	SELECT 
		Tutar,
		Owner
	FROM Hareketler
	WHERE 
	GirisTarihi >= @Baslangic AND GirisTarihi < @Bitis AND TipInd in (25)

	UNION ALL

	SELECT 
		Tutar,
		Owner
	FROM Hareketler  WITH(NOLOCK)
	WHERE 
	GirisTarihi > @Baslangic AND GirisTarihi <= @Bitis AND TipInd in (27)

	DECLARE @x int
	SELECT @x=COUNT(*) FROM @Dokum

	IF(@x=0)
	INSERT INTO @Dokum 
	SELECT
		0 as Tutar,
		NULL as Owner
RETURN
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[DigerGiderlerDokumu] 
(	
    @Baslangic datetime,
    @Bitis datetime
)

RETURNS @Dokum TABLE
(
	Tutar decimal(28,8),
	Owner int
)
AS
BEGIN 
	INSERT INTO @Dokum
	SELECT 
		Tutar,
		Owner
	FROM Hareketler  WITH(NOLOCK)
	WHERE 
	GirisTarihi > @Baslangic AND GirisTarihi <= @Bitis AND TipInd in (26)

	UNION ALL

	SELECT 
		Tutar,
		Owner
	FROM Hareketler  WITH(NOLOCK)
	WHERE 
	GirisTarihi >= @Baslangic AND GirisTarihi < @Bitis AND TipInd in (28)

	DECLARE @x int
	SELECT @x=COUNT(*) FROM @Dokum

	IF(@x=0)
	INSERT INTO @Dokum 
	SELECT
		0 as Tutar,
		NULL as Owner
RETURN
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[DirektSatisEskiAktifKasaKullanicilari] 
(	
	@dBaslangic datetime,
	@dBitis datetime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT DISTINCT
		S.Owner,
		S.KullaniciInd,
		K.KullaniciAdi
	FROM Basliklar AS B  WITH(NOLOCK)
	INNER JOIN SatisKasasi AS S  WITH(NOLOCK) ON s.BaslikInd =  B.Ind
	LEFT JOIN Kullanicilar AS K  WITH(NOLOCK) ON S.KullaniciInd = K.Ind
	WHERE 
		S.IsYeniSatis = 'false' AND B.TipInd = 505 
		AND B.Tarih >=@dBaslangic AND B.Tarih<=@dBitis
)

GO
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[DirektSatisEskiPasifKasaKullanicilari] 
(	
	@dBaslangic datetime,
	@dBitis datetime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT DISTINCT
		S.Owner,
		S.KullaniciInd,
		K.KullaniciAdi
	FROM Basliklar AS B  WITH(NOLOCK)
	INNER JOIN SatisKasasi AS S  WITH(NOLOCK) ON s.BaslikInd =  B.Ind
	LEFT JOIN Kullanicilar AS K  WITH(NOLOCK) ON S.KullaniciInd = K.Ind
	WHERE 
		S.IsYeniSatis = 'false' AND B.TipInd = 506 
		AND S.Tarih >=@dBaslangic AND S.Tarih<=@dBitis
)
GO
CREATE FUNCTION [dbo].[DonemIciAlisButun]
(	
    @Baslangic datetime,
	@Bitis datetime,
	@DepoInds nvarchar(4000)
)
RETURNS @Dokum TABLE
(
	Tutar decimal(28,8),
	BirimAdi nvarchar(15),
	Owner int,
	Miktar decimal(28,8),
	Tarih datetime,
	StokInd INT,
	TipInd INT,
	KDVOrani decimal(28,8)
)
AS
BEGIN
	INSERT INTO @Dokum
	SELECT
		(
		(CASE WHEN g.NetMiktar=0 THEN g.Miktar ELSE ISNULL(g.NetMiktar,g.Miktar) END) 
			* g.Carpan * g.Fiyat) as Tutar,
		brm.BirimAdi,
		g.Owner,
		(g.Miktar * g.Carpan) as Miktar,
		g.Tarih,
		g.StokInd,
		g.TipIndAltHareket	 as TipInd,
		(
			SELECT
				TOP 1
				h.KDVOrani
			FROM
				Hareketler AS h  WITH(NOLOCK)
			WHERE
				g.BaslikInd = h.BaslikInd
				AND
				g.StokInd = h.StokInd
				AND
				h.TipInd = 3
		) AS KDVOrani
	FROM
		GirisCikisHareketleri as g  WITH(NOLOCK)
		LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm  WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
	WHERE
		g.TipIndAltHareket IN (3)
		AND @Baslangic <= g.Tarih
		AND g.Tarih <= @Bitis
	UNION ALL
	SELECT
		(g.Miktar * g.Carpan * g.Fiyat) as Tutar,
		brm.BirimAdi,
		g.Owner,
		(g.Miktar * g.Carpan) as Miktar,
		g.Tarih,
		g.StokInd,
		g.TipIndAltHareket as TipInd,
		ISNULL(ka.KdvOrani, 18.00) AS KDVOrani
	FROM
		GirisCikisHareketleri as g  WITH(NOLOCK)
		LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm  WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
		LEFT JOIN dbo.KDVGruplari AS ka  WITH(NOLOCK) ON ka.Ind = s.AlisKDVGrupInd
	WHERE
		g.TipInd IN (503) AND g.TipIndAltHareket =29
		AND @Baslangic <= g.Tarih
		AND g.Tarih <= @Bitis
		AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
	UNION ALL
	SELECT
		(g.Miktar * g.Carpan * (g.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h  WITH(NOLOCK) WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00)) / 100)))) as Tutar,
		brm.BirimAdi,
		g.Owner,
		(g.Miktar * g.Carpan) as Miktar,
		g.Tarih,
		g.StokInd,
		g.TipIndAltHareket as TipInd,
		k.KdvOrani AS KDVOrani
	FROM
		GirisCikisHareketleri as g   WITH(NOLOCK) LEFT OUTER JOIN
		dbo.Stoklar AS s  WITH(NOLOCK) ON s.Ind = g.StokInd LEFT OUTER JOIN
		--dbo.KDVGruplari AS k ON k.Ind = s.SatisKDVGrupInd LEFT OUTER JOIN
		Birimler as brm  WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
		LEFT JOIN dbo.KDVGruplari AS k  WITH(NOLOCK) ON k.Ind = s.AlisKDVGrupInd
	WHERE g.TipIndAltHareket = 2 
		AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))	
		AND g.Tarih >= @Baslangic
		AND g.Tarih <= @Bitis
		--AND (g.DurumInd != 3 OR g.DurumInd IS NULL)
	UNION ALL
--Sayım/ölçümlerde girilen fazlalıklar da dikkate alınmalı / Ulaş
	SELECT
		ABS(g.Giren * g.Carpan * g.Fiyat) as Tutar,
		brm.BirimAdi,
		g.Owner,
		ABS(g.Giren * g.Carpan) as Miktar,
		g.Tarih,
		g.StokInd,
		g.TipIndAltHareket as TipInd,
		ISNULL(ISNULL(ka.KdvOrani, (SELECT TOP 1 h.KDVOrani FROM Hareketler AS h WHERE g.BaslikInd = h.BaslikInd AND g.StokInd = h.StokInd AND h.TipInd = 3)), 18)
			AS KDVOrani
	FROM
		GirisCikisHareketleri as g  WITH(NOLOCK)
		LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm  WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
		LEFT JOIN dbo.KDVGruplari AS ka  WITH(NOLOCK) ON ka.Ind = s.AlisKDVGrupInd
	WHERE
		(g.TipIndBaslik = 113 AND g.TipIndAltHareket=112)
		AND @Baslangic <= g.Tarih AND g.Tarih <= @Bitis
		AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
	DECLARE @x int
	SELECT @x=COUNT(*) FROM @Dokum

	IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
			0 as Tutar,
			b.BirimAdi as BirimAdi,
			NULL as Owner,
			0 as Miktar,
			NULL as Tarih,	
			0 as StokInd,
			0,
			0
		FROM
		Stoklar as s  WITH(NOLOCK)
		LEFT JOIN Birimler as b on b.Ind =s.AnaBirimInd
RETURN
END

GO
CREATE FUNCTION [dbo].[DonemIciSatisButun]
(	
    @Baslangic datetime,
	@Bitis datetime,
	@DepoInds nvarchar(4000)--,
	--@Ind int
	--, @KullaniciInds nvarchar(max)
)
RETURNS @Dokum TABLE
(
	Tutar decimal(28,8),
	BirimAdi nvarchar(15),
	Owner int,
	Miktar decimal(28,8),
	StokInd int,
	TipInd int,
	KDVOrani decimal(28,8)
)
AS
BEGIN
	INSERT INTO @Dokum
	SELECT
		(g.Miktar * g.Carpan * g.Fiyat) as Tutar,
		brm.BirimAdi,
		g.Owner,
		ABS(g.Miktar * g.Carpan) as Miktar,
		g.StokInd
		, g.TipIndAltHareket as TipInd,
		CASE WHEN g.TipIndAltHareket=30 THEN
			ISNULL(ks.KdvOrani, 18)
		ELSE
			(
				SELECT
					TOP 1
					h.KDVOrani
				FROM
					Hareketler AS h  WITH(NOLOCK)
				WHERE
					g.BaslikInd = h.BaslikInd
					AND
					g.StokInd = h.StokInd
					AND
					h.TipInd = 6
			)
		END AS KDVOrani
	FROM
		GirisCikisHareketleri as g
		LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm  WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
		LEFT JOIN dbo.KDVGruplari AS ks  WITH(NOLOCK) ON ks.Ind = s.SatisKDVGrupInd
	WHERE
		(g.TipIndAltHareket = 6  OR (g.TipInd =503 AND g.TipIndAltHareket=30))
		AND @Baslangic <= g.Tarih AND g.Tarih <= @Bitis
		AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
	UNION ALL
	SELECT
		ABS((h.Fiyat /(1+(h.KdvOrani/100))) * (h.Fark)) as Tutar,
		NULL as BirimAdi,
		h.Owner as Owner,
		ABS(h.Fark) as Miktar,
		h.StokInd
		,h.TipInd,
		18.00 AS KDVOrani
	FROM
		EskiVardiyaSayacHareketleri as h  WITH(NOLOCK)
	WHERE h.TipInd = 39
		AND h.Tarih <= @Bitis AND h.Tarih >= @Baslangic
	UNION ALL
	SELECT
		(g.Miktar * g.Carpan * ABS(g.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h  WITH(NOLOCK) 
		WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00)) / 100)))) as Tutar,
		brm.BirimAdi,
		g.Owner,
		ABS(g.Miktar * g.Carpan) as Miktar,
		g.StokInd 
		,g.TipIndAltHareket,
		(
			SELECT
				TOP 1
				h.KDVOrani
			FROM
				Hareketler AS h
			WHERE
				g.BaslikInd = h.BaslikInd
				AND
				g.StokInd = h.StokInd
				AND
				h.TipInd = 5
		) AS KDVOrani
	FROM
		GirisCikisHareketleri as g   WITH(NOLOCK) LEFT OUTER JOIN
		dbo.Stoklar AS s  WITH(NOLOCK) ON s.Ind = g.StokInd LEFT OUTER JOIN
		--dbo.KDVGruplari AS k ON k.Ind = s.SatisKDVGrupInd LEFT OUTER JOIN
		Birimler as brm  WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
	WHERE 
		g.TipIndAltHareket = 5 
		AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))	
		AND g.Tarih >= @Baslangic
		AND g.Tarih <= @Bitis
	UNION ALL
	SELECT
		((g.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.Ind=g.Ind), 0.00)) / 100))) * g.Miktar * g.Carpan) as Tutar,
		NULL as BirimAdi,
		g.Owner as Owner,
		ABS(g.Miktar * g.Carpan) as Miktar,
		g.StokInd
		,g.TipIndAltHareket as TipInd,
		(
			SELECT
				TOP 1
				h.KDVOrani
			FROM
				Hareketler AS h  WITH(NOLOCK)
			WHERE
				g.Ind = h.Ind
		) AS KDVOrani
	FROM
		GirisCikisHareketleri as g   WITH(NOLOCK) LEFT OUTER JOIN
		dbo.Stoklar AS s  WITH(NOLOCK) ON s.Ind = g.StokInd --LEFT OUTER JOIN
		--dbo.KDVGruplari AS k ON k.Ind = s.SatisKDVGrupInd
	WHERE
		g.TipIndAltHareket = 40
		AND g.Tarih <= @Bitis AND g.Tarih >= @Baslangic
	UNION ALL
	SELECT
		(h.Miktar * h.Carpan * (h.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h2 WHERE h2.Ind = h.Ind), 0.00)) / 100)))) as Tutar,
		NULL as BirimAdi,
		h.Owner,
		ABS(h.Miktar * h.Carpan) as Miktar,
		h.StokInd
		,h.TipInd,
		 h.KDVOrani
	FROM
		SatisKasasi as sk  WITH(NOLOCK)
		LEFT JOIN Hareketler h  WITH(NOLOCK) ON h.Ind=sk.IslemInd 
		LEFT JOIN Hareketler  WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
		LEFT JOIN Basliklar b  WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504
		AND (b.Tarih >= @Baslangic
		AND b.Tarih <= @Bitis) --AND
		--(h.Ind < @Ind)
		--AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0
		--AND (sk.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')))
	UNION ALL
--Sayım/ölçümlerde girilen fazlalıklar da dikkate alınmalı / Ulaş
	SELECT
		ABS(g.Cikan * g.Carpan * g.Fiyat) as Tutar,
		brm.BirimAdi,
		g.Owner,
		ABS(g.Cikan * g.Carpan) as Miktar,
		g.StokInd
		,g.TipIndAltHareket as TipInd,
		ISNULL(ISNULL(ks.KdvOrani, (SELECT TOP 1 h.KDVOrani FROM Hareketler AS h WHERE g.BaslikInd = h.BaslikInd AND g.StokInd = h.StokInd AND h.TipInd = 6)), 18)
			AS KDVOrani
	FROM
		GirisCikisHareketleri as g  WITH(NOLOCK)
		LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm  WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
		LEFT JOIN dbo.KDVGruplari AS ks  WITH(NOLOCK) ON ks.Ind = s.SatisKDVGrupInd
	WHERE
		(g.TipIndBaslik = 113 AND g.TipIndAltHareket=112)
		AND @Baslangic <= g.Tarih AND g.Tarih <= @Bitis
		AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))

	DECLARE @x int
	SELECT @x=COUNT(*) FROM @Dokum
	IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
			0 as Tutar,
			b.BirimAdi as BirimAdi,
			NULL as Owner,
			0 as Miktar,
			0 as StokInd
			,0 TipInd
			,0 KDVOrani
		FROM
		Stoklar as s
		LEFT JOIN Birimler as b  WITH(NOLOCK) on b.Ind =s.AnaBirimInd
RETURN
END


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[DonemselAlisSatisRaporu] 
(
	@StokInd int,
	@DepoInds nvarchar(max),
	@baslangic datetime,
	@bitis datetime
)

RETURNS @Dokum TABLE 
(
	Owner int,
	StokKodu nvarchar(50),
	StokAdi nvarchar(50),
	AyYil nvarchar(50),
	GirenMiktar decimal(28,8),
	GirenTutar decimal(28,8),
	GirenIskontoTutar decimal(28,8),
	CikanMiktar decimal(28,8),
	CikanTutar decimal(28,8),
	CikanIskontoTutar decimal(28,8)	
)
AS
BEGIN
	DECLARE @sayi int
	SET @sayi = 1
	WHILE(@sayi<=12) 
	BEGIN
		INSERT INTO @Dokum	
		SELECT
			s.Owner,
			s.StokKodu,
			s.StokAdi,
			CASE WHEN(DATEPART(MONTH,@baslangic) = 1)
				THEN 'Ocak ' + CAST(DATEPART(YEAR,@baslangic) as nvarchar(20))
				WHEN(DATEPART(MONTH,@baslangic) = 2)
				THEN 'Şubat ' + CAST(DATEPART(YEAR,@baslangic) as nvarchar(20))
				WHEN(DATEPART(MONTH,@baslangic) = 3)
				THEN 'Mart ' + CAST(DATEPART(YEAR,@baslangic) as nvarchar(20))
				WHEN(DATEPART(MONTH,@baslangic) = 4)
				THEN 'Nisan ' + CAST(DATEPART(YEAR,@baslangic) as nvarchar(20))
				WHEN(DATEPART(MONTH,@baslangic) = 5)
				THEN 'Mayıs ' + CAST(DATEPART(YEAR,@baslangic) as nvarchar(20))
				WHEN(DATEPART(MONTH,@baslangic) = 6)
				THEN 'Haziran ' + CAST(DATEPART(YEAR,@baslangic) as nvarchar(20))
				WHEN(DATEPART(MONTH,@baslangic) = 7)
				THEN 'Temmuz ' + CAST(DATEPART(YEAR,@baslangic) as nvarchar(20))
				WHEN(DATEPART(MONTH,@baslangic) = 8)
				THEN 'Ağustos ' + CAST(DATEPART(YEAR,@baslangic) as nvarchar(20))
				WHEN(DATEPART(MONTH,@baslangic) = 9)
				THEN 'Eylül ' + CAST(DATEPART(YEAR,@baslangic) as nvarchar(20))
				WHEN(DATEPART(MONTH,@baslangic) = 10)
				THEN 'Ekim ' + CAST(DATEPART(YEAR,@baslangic) as nvarchar(20))
				WHEN(DATEPART(MONTH,@baslangic) = 11)
				THEN 'Kasım ' + CAST(DATEPART(YEAR,@baslangic) as nvarchar(20))
				WHEN(DATEPART(MONTH,@baslangic) = 12)
				THEN 'Aralık ' + CAST(DATEPART(YEAR,@baslangic) as nvarchar(20))
			END AS AyYil,
			SUM(CASE WHEN(h.GirenMiktar IS NULL)
				THEN 0
				ELSE h.GirenMiktar
				END) as GirenMiktar,
			SUM(CASE WHEN(h.GirenTutar IS NULL)
				THEN 0
				ELSE h.GirenTutar
				END) as GirenTutar,
			SUM(CASE WHEN(h.GirenIskontoTutar IS NULL)
				THEN 0
				ELSE h.GirenIskontoTutar
				END) as GirenIskontoTutar,
			SUM(CASE WHEN(h.CikanMiktar IS NULL)
				THEN 0
				ELSE h.CikanMiktar
				END) as CikanMiktar,
			SUM(CASE WHEN(h.CikanTutar IS NULL)
				THEN 0
				ELSE h.CikanTutar
				END) as CikanTutar,
			SUM(CASE WHEN(h.CikanIskontoTutar IS NULL)
				THEN 0
				ELSE h.CikanIskontoTutar
				END) as CikanIskontoTutar
		FROM  Stoklar as s  WITH(NOLOCK)
		LEFT JOIN TarihAraliginaBagliAlisSatisRaporu(@StokInd,@DepoInds,@baslangic,@bitis) as h ON 0=0
		WHERE s.Ind = @StokInd
		GROUP BY
			s.Owner,
			s.StokKodu,
			s.StokAdi
		
		SET @sayi = @sayi + 1
		SET @baslangic = DATEADD(MONTH,1,@baslangic)
		SET @bitis = DATEADD(MONTH,1,@bitis)
	END	
RETURN
END
GO

CREATE FUNCTION [dbo].[EnvanterFiltreliStoklar2]
(
	@raporTipi int,
	@grupInd int,
	@ozelKodInds nvarchar(max),
	@cariInd int,
	@subeInd int,
	@depoInds nvarchar(max)
)
RETURNS  @Stoklar TABLE
(
	Ind int,
	Owner int
)
AS
BEGIN

	IF(@raporTipi = 0)
		INSERT INTO @Stoklar
			SELECT Ind,Owner FROM Stoklar  WITH(NOLOCK)

	IF(@raporTipi = 1)
		INSERT INTO @Stoklar
			SELECT Ind,Owner FROM Stoklar  WITH(NOLOCK)
			WHERE Stoklar.GrupInd = @grupInd
	
	IF(@raporTipi = 2)
		INSERT INTO @Stoklar
			SELECT
				DISTINCT a.StokInd as Ind,s.Owner
			FROM AlisHareketleri as a  WITH(NOLOCK)
			LEFT JOIN Stoklar as s  WITH(NOLOCK) ON a.StokInd = s.Ind
			WHERE a.OzelKodInd IN (SELECT * FROM fnSplit(@ozelKodInds,','))

	IF(@raporTipi = 3)
		INSERT INTO @Stoklar
			SELECT
				DISTINCT a.StokInd as Ind,s.Owner
			FROM AlisHareketleri as a  WITH(NOLOCK)
			LEFT JOIN Stoklar as s  WITH(NOLOCK) ON a.StokInd = s.Ind
			WHERE a.HesapInd = @cariInd

	IF(@raporTipi = 4)
		INSERT INTO @Stoklar
			SELECT
				DISTINCT a.Ind as Ind, @subeInd as Owner
			FROM StoklarinSubelereGoreMuhteviyatDurumu as a
			WHERE a.MuhteviyatDurumu = 0
	
	IF(@raporTipi = 5)
		INSERT INTO @Stoklar
			SELECT
				DISTINCT a.Ind as Ind, @subeInd as Owner
			FROM StoklarinSubelereGoreMuhteviyatDurumu as a  WITH(NOLOCK)
			WHERE a.MuhteviyatDurumu = 1
	
	IF(@raporTipi = 6)
		INSERT INTO @Stoklar
			SELECT
				DISTINCT a.StokInd as Ind,s.Owner
			FROM GirisCikisHareketleri as a  WITH(NOLOCK)
			LEFT JOIN Stoklar as s  WITH(NOLOCK) ON a.StokInd = s.Ind
			WHERE a.DepoInd IN (SELECT * FROM fnSplit(@depoInds,','))
				AND (a.TipIndAltHareket = 3 or a.TipIndAltHareket = 112 or a.TipIndAltHareket = 16)

	RETURN 
END








GO
CREATE FUNCTION [dbo].[EnvanterRaporuAlisKDVGruplarinaGoreFIFOMerkez]
(	
    @Tarih DATETIME,
    @IskontoEtkilesin INT 
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari, AlisKDVGrupInd) AS 
	(
		SELECT GCH.StokInd
		      ,SUM(Giren) - SUM(Cikan) AS  StokMiktari, S.AlisKDVGrupInd
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			INNER JOIN dbo.Stoklar S  WITH(NOLOCK) ON S.Ind = GCH.StokInd
			LEFT OUTER JOIN dbo.Hesaplar   AS h WITH(NOLOCK) ON h.StokInd = S.Ind
		WHERE Tarih <= @Tarih
			AND h.StokInd IS NULL
		GROUP BY GCH.StokInd, S.AlisKDVGrupInd
	),
	KDVGrupMiktar(AlisKDVGrupInd, KDVOraniMiktar, KDVOrani)AS 
	(
		SELECT AlisKDVGrupInd, SUM(StokMiktari) AS KDVOraniMiktar, KDVG.KDVOrani
		FROM StokDurumu AS SD INNER JOIN KDVGruplari AS KDVG ON SD.AlisKDVGrupInd = KDVG.Ind
		GROUP BY AlisKDVGrupInd, KDVOrani
	),
    SatisFiyati(StokInd, Fiyat) AS
	(
    		SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
			FROM dbo.GirisCikisHareketleriEnvanter GCH 
			WHERE (Cikan > 0)
				AND Tarih <= @Tarih
			GROUP BY StokInd
	),
	  AlisFiyati(StokInd, Fiyat) AS
    (
	select StokInd, Fiyat from FIFOAlisFiyati(0, @Tarih)
	)  
	SELECT
			0 as Owner
		  , KDVG.KDVOrani
		  , KDVG.KDVOraniMiktar	as StokMiktari
		  , SUM((SD.StokMiktari * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(null, SD.StokInd) * (1 / (1 + KDVG.KDVOrani/100))))) AS  SatisMaliyetiKDVHaric 
		  , SUM((ISNULL(SF.Fiyat,   dbo.StokSatisFiyati(null, SD.StokInd) * (1 / (1 + KDVG.KDVOrani/100))))*(1+(KDVG.KDVOrani/100))) AS  SatisMaliyeti
		  , SUM((CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat, 0)) ELSE 0 END)) AS  AlisMaliyetiKDVHaric
		  , SUM( CASE WHEN SD.StokMiktari > 0 THEN  SD.StokMiktari *(ISNULL(AF.Fiyat, 0))*(1+(KDVG.KDVOrani/100)) ELSE 0 END) AS  AlisMaliyeti 
	FROM	StokDurumu SD  WITH(NOLOCK)
			LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
			LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
			INNER JOIN KDVGrupMiktar AS  KDVG  WITH(NOLOCK) ON SD.AlisKDVGrupInd = KDVG.AlisKDVGrupInd
	GROUP BY KDVG.KDVOrani, KDVG.KDVOraniMiktar 
)



GO
CREATE FUNCTION [dbo].[EnvanterRaporuAlisKDVGruplarinaGoreFIFOSube]
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
AS
RETURN
(
	WITH 
	StokDurumu(StokInd, StokMiktari, AlisKDVGrupInd) AS 
	(
		SELECT GCH.StokInd
				,SUM(Giren) - SUM(Cikan) AS  StokMiktari, S.AlisKDVGrupInd
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
				INNER JOIN dbo.Stoklar S  WITH(NOLOCK) ON S.Ind = GCH.StokInd
				LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = S.Ind
		WHERE Tarih <= @Tarih
				AND h.StokInd IS NULL
				AND (@Owner = 0 OR @Owner = GCH.[Owner])
		GROUP BY GCH.StokInd, S.AlisKDVGrupInd
	),
	KDVGrupMiktar(AlisKDVGrupInd, KDVOraniMiktar, KDVOrani)AS 
	(
		SELECT AlisKDVGrupInd, SUM(StokMiktari) AS KDVOraniMiktar, KDVG.KDVOrani
		FROM StokDurumu AS SD  WITH(NOLOCK) INNER JOIN KDVGruplari AS KDVG  WITH(NOLOCK) ON SD.AlisKDVGrupInd = KDVG.Ind
		GROUP BY AlisKDVGrupInd, KDVOrani
	),
	SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd 
    	      ,(SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
				AND Tarih <= @Tarih
				AND GCH.owner = @Owner
		GROUP BY StokInd
	)
	,
	 AlisFiyati(StokInd, Fiyat) AS
    (
    select StokInd, Fiyat from FIFOAlisFiyati(@Owner, @Tarih)
	)  
	SELECT
		0 as Owner
		, KDVG.KDVOrani
		, KDVG.KDVOraniMiktar	as StokMiktari
		, SUM(SD.StokMiktari * ISNULL(SF.Fiyat,  dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVG.KDVOrani/100)))) AS SatisMaliyetiKDVHaric
		, SUM(SD.StokMiktari * (ISNULL(SF.Fiyat,  dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVG.KDVOrani/100)))) * (1+(KDVG.KDVOrani/100))) AS SatisMaliyeti
		, SUM(CASE WHEN SD.StokMiktari > 0 THEN SD.StokMiktari * ISNULL(AF.Fiyat, 0) ELSE 0 END) AS AlisMaliyetiKDVHaric
		, SUM(CASE WHEN SD.StokMiktari > 0 THEN SD.StokMiktari *(ISNULL(AF.Fiyat, 0)) * (1+(KDVG.KDVOrani/100)) ELSE 0 END) AS AlisMaliyeti
	FROM	StokDurumu SD  WITH(NOLOCK)
	LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
	LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
	INNER JOIN KDVGrupMiktar AS  KDVG  WITH(NOLOCK) ON SD.AlisKDVGrupInd = KDVG.AlisKDVGrupInd
	GROUP BY KDVG.KDVOrani, KDVG.KDVOraniMiktar 

)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuAlisKDVGruplarinaGoreGOMerkez]
(	
    @Tarih DATETIME,
    @IskontoEtkilesin INT 
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari, AlisKDVGrupInd) AS 
	(
		SELECT GCH.StokInd
		      ,SUM(Giren) - SUM(Cikan) AS  StokMiktari, S.AlisKDVGrupInd
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			INNER JOIN dbo.Stoklar S  WITH(NOLOCK) ON S.Ind = GCH.StokInd
			LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = S.Ind
		WHERE Tarih <= @Tarih
			AND h.StokInd IS NULL
		GROUP BY GCH.StokInd, S.AlisKDVGrupInd
	),
	KDVGrupMiktar(AlisKDVGrupInd, KDVOraniMiktar, KDVOrani)AS 
	(
		SELECT AlisKDVGrupInd, SUM(StokMiktari) AS KDVOraniMiktar, KDVG.KDVOrani
		FROM StokDurumu AS SD  WITH(NOLOCK) INNER JOIN KDVGruplari AS KDVG  WITH(NOLOCK) ON SD.AlisKDVGrupInd = KDVG.Ind
		GROUP BY AlisKDVGrupInd, KDVOrani
	),
    SatisFiyati(StokInd, Fiyat) AS
	(
    			SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			AND Tarih <= @Tarih
		GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
	(		
			SELECT StokInd, CASE @IskontoEtkilesin 
		WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)  
		ELSE ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Giren > 0
			AND  Tarih <= @Tarih
		GROUP BY StokInd
	)	
	SELECT
			0 as Owner
		  , KDVG.KDVOrani
		  , KDVG.KDVOraniMiktar	as StokMiktari
		  , SUM((SD.StokMiktari * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(null, SD.StokInd) * (1 / (1 + KDVG.KDVOrani/100))))) AS  SatisMaliyetiKDVHaric 
		  , SUM((ISNULL(SF.Fiyat,   dbo.StokSatisFiyati(null, SD.StokInd) * (1 / (1 + KDVG.KDVOrani/100))))*(1+(KDVG.KDVOrani/100))) AS  SatisMaliyeti
		  , SUM((SD.StokMiktari * ISNULL(AF.Fiyat, 0))) AS  AlisMaliyetiKDVHaric
		  , SUM((ISNULL(AF.Fiyat, 0))*(1+(KDVG.KDVOrani/100))) AS  AlisMaliyeti 
	FROM	StokDurumu SD  WITH(NOLOCK)
			LEFT JOIN SatisFiyati SF ON SD.StokInd = SF.StokInd
			LEFT JOIN AlisFiyati AF ON SD.StokInd = AF.StokInd
			INNER JOIN KDVGrupMiktar AS  KDVG ON SD.AlisKDVGrupInd = KDVG.AlisKDVGrupInd
	GROUP BY KDVG.KDVOrani, KDVG.KDVOraniMiktar 
)



GO
CREATE FUNCTION [dbo].[EnvanterRaporuAlisKDVGruplarinaGoreGOSube]
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
AS
RETURN
(
	WITH 
	StokDurumu(StokInd, StokMiktari, AlisKDVGrupInd) AS 
	(
		SELECT GCH.StokInd
				,SUM(Giren) - SUM(Cikan) AS  StokMiktari, S.AlisKDVGrupInd
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
				INNER JOIN dbo.Stoklar S  WITH(NOLOCK) ON S.Ind = GCH.StokInd
				LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = S.Ind
		WHERE Tarih <= @Tarih
				AND h.StokInd IS NULL
				AND (@Owner = 0 OR @Owner = GCH.[Owner])
		GROUP BY GCH.StokInd, S.AlisKDVGrupInd
	),
	KDVGrupMiktar(AlisKDVGrupInd, KDVOraniMiktar, KDVOrani)AS 
	(
		SELECT AlisKDVGrupInd, SUM(StokMiktari) AS KDVOraniMiktar, KDVG.KDVOrani
		FROM StokDurumu AS SD  WITH(NOLOCK) INNER JOIN KDVGruplari AS KDVG  WITH(NOLOCK) ON SD.AlisKDVGrupInd = KDVG.Ind
		GROUP BY AlisKDVGrupInd, KDVOrani
	),
	SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd 
    	      ,(SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
				AND Tarih <= @Tarih
				AND GCH.owner = @Owner
		GROUP BY StokInd
	)
	,AlisFiyati(StokInd, Fiyat) AS
	(		
			SELECT StokInd, CASE @IskontoEtkilesin 
			WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)
			ELSE  ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Giren > 0
				AND owner = @Owner
				AND Tarih <= @Tarih
			GROUP BY StokInd
	)
	SELECT
		0 as Owner
		, KDVG.KDVOrani
		, KDVG.KDVOraniMiktar	as StokMiktari
		, SUM(SD.StokMiktari * ISNULL(SF.Fiyat,  dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVG.KDVOrani/100)))) AS SatisMaliyetiKDVHaric
		, SUM(SD.StokMiktari * (ISNULL(SF.Fiyat,  dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVG.KDVOrani/100)))) * (1+(KDVG.KDVOrani/100))) AS SatisMaliyeti
		, SUM(SD.StokMiktari * ISNULL(AF.Fiyat, 0)) AS AlisMaliyetiKDVHaric
		, SUM(SD.StokMiktari * (ISNULL(AF.Fiyat, 0)) * (1+(KDVG.KDVOrani/100))) AS AlisMaliyeti
	FROM	StokDurumu SD  WITH(NOLOCK)
	LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
	LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
	INNER JOIN KDVGrupMiktar AS  KDVG  WITH(NOLOCK) ON SD.AlisKDVGrupInd = KDVG.AlisKDVGrupInd
	GROUP BY KDVG.KDVOrani, KDVG.KDVOraniMiktar 

)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuAlisKDVGruplarinaGoreMerkez]
(	
	@Tarih DATETIME,
    @IskontoEtkilesin INT 
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari, AlisKDVGrupInd) AS 
	(
		SELECT GCH.StokInd
		      ,SUM(Giren) - SUM(Cikan) AS  StokMiktari, S.AlisKDVGrupInd
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			INNER JOIN dbo.Stoklar S  WITH(NOLOCK) ON S.Ind = GCH.StokInd
			LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = S.Ind
		WHERE Tarih <= @Tarih
			AND h.StokInd IS NULL
		GROUP BY GCH.StokInd, S.AlisKDVGrupInd
	),
	KDVGrupMiktar(AlisKDVGrupInd, KDVOraniMiktar, KDVOrani)AS 
	(
		SELECT AlisKDVGrupInd, SUM(StokMiktari) AS KDVOraniMiktar, KDVG.KDVOrani
		FROM StokDurumu AS SD  WITH(NOLOCK) INNER JOIN KDVGruplari AS KDVG  WITH(NOLOCK) ON SD.AlisKDVGrupInd = KDVG.Ind
		GROUP BY AlisKDVGrupInd, KDVOrani
	),
    SatisFiyati(StokInd, Fiyat) AS
	(
    		SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE (Cikan > 0)
				AND Tarih <= @Tarih
			GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
	(		
			SELECT StokInd,  (SELECT TOP 1 CASE @IskontoEtkilesin 
			WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0)
			ELSE Fiyat END
			FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE (Giren > 0) 
				AND Tarih <= @Tarih
			GROUP BY StokInd
	)	
	SELECT
			0 as Owner
		  , KDVG.KDVOrani
		  , KDVG.KDVOraniMiktar	as StokMiktari
		  , SUM((SD.StokMiktari * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(null, SD.StokInd) * (1 / (1 + KDVG.KDVOrani/100))))) AS  SatisMaliyetiKDVHaric 
		  , SUM((ISNULL(SF.Fiyat,   dbo.StokSatisFiyati(null, SD.StokInd) * (1 / (1 + KDVG.KDVOrani/100))))*(1+(KDVG.KDVOrani/100))) AS  SatisMaliyeti
		  , SUM((SD.StokMiktari * ISNULL(AF.Fiyat, 0))) AS  AlisMaliyetiKDVHaric
		  , SUM((ISNULL(AF.Fiyat, 0))*(1+(KDVG.KDVOrani/100))) AS  AlisMaliyeti 
	FROM	StokDurumu SD  WITH(NOLOCK)
			LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
			LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
			INNER JOIN KDVGrupMiktar AS  KDVG  WITH(NOLOCK) ON SD.AlisKDVGrupInd = KDVG.AlisKDVGrupInd
	GROUP BY KDVG.KDVOrani, KDVG.KDVOraniMiktar 
)


GO
GO
CREATE FUNCTION [dbo].[EnvanterRaporuAlisKDVGruplarinaGoreSube]
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
AS
RETURN
(
	WITH 
	StokDurumu(StokInd, StokMiktari, AlisKDVGrupInd) AS 
	(
		SELECT GCH.StokInd
				,SUM(Giren) - SUM(Cikan) AS  StokMiktari, S.AlisKDVGrupInd
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
				INNER JOIN dbo.Stoklar S  WITH(NOLOCK) ON S.Ind = GCH.StokInd
				LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = S.Ind
		WHERE Tarih <= @Tarih
				AND h.StokInd IS NULL
				AND (@Owner = 0 OR @Owner = GCH.[Owner])
		GROUP BY GCH.StokInd, S.AlisKDVGrupInd
	),
	KDVGrupMiktar(AlisKDVGrupInd, KDVOraniMiktar, KDVOrani)AS 
	(
		SELECT AlisKDVGrupInd, SUM(StokMiktari) AS KDVOraniMiktar, KDVG.KDVOrani
		FROM StokDurumu AS SD  WITH(NOLOCK) INNER JOIN KDVGruplari AS KDVG  WITH(NOLOCK) ON SD.AlisKDVGrupInd = KDVG.Ind
		GROUP BY AlisKDVGrupInd, KDVOrani
	),
	SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd 
    	      ,(SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
				AND Tarih <= @Tarih
				AND GCH.owner = @Owner
		GROUP BY StokInd
	)
	,AlisFiyati(StokInd, Fiyat) AS
	(		
			SELECT StokInd,  (SELECT TOP 1 CASE @IskontoEtkilesin 
			WHEN 1 THEN  Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0)
			ELSE Fiyat END
			FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Giren > 0
				AND Tarih <= @Tarih
				AND GCH.owner = @Owner
			GROUP BY StokInd
	)
	SELECT
		0 as Owner
		, KDVG.KDVOrani
		, KDVG.KDVOraniMiktar	as StokMiktari
		, SUM(SD.StokMiktari * ISNULL(SF.Fiyat,  dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVG.KDVOrani/100)))) AS SatisMaliyetiKDVHaric
		, SUM(SD.StokMiktari * (ISNULL(SF.Fiyat,  dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVG.KDVOrani/100)))) * (1+(KDVG.KDVOrani/100))) AS SatisMaliyeti
		, SUM(SD.StokMiktari * ISNULL(AF.Fiyat, 0)) AS AlisMaliyetiKDVHaric
		, SUM(SD.StokMiktari * (ISNULL(AF.Fiyat, 0)) * (1+(KDVG.KDVOrani/100))) AS AlisMaliyeti
	FROM	StokDurumu SD  WITH(NOLOCK)
	LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
	LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
	INNER JOIN KDVGrupMiktar AS  KDVG  WITH(NOLOCK) ON SD.AlisKDVGrupInd = KDVG.AlisKDVGrupInd
	GROUP BY KDVG.KDVOrani, KDVG.KDVOraniMiktar 

)





GO
CREATE FUNCTION [dbo].[EnvanterRaporuButunUrunlerFIFOMerkez] --FIFO ile alış maliyeti hesaplama
(
	@Owner INT,
	@Tarih DATETIME
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
      (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleri
            WHERE Tarih <= @Tarih
            GROUP BY StokInd
      ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleri GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			AND TipIndAltHareket IN (6, 39, 504)
			AND Tarih <= @Tarih
		GROUP BY StokInd
	)  ,
    AlisFiyati(StokInd, Fiyat) AS
    (
		--Her ürünün fifo'ya göre hesaplanarak, belirtilen tarihten önceki yapılan hareketlerle alış fiyatları bulunuyor. Ve sıralanıyor.
		select StokInd, Fiyat from FIFOAlisFiyati(0, @Tarih)
	)  
	     
	SELECT  DISTINCT NULL AS [Owner],  SD.StokInd AS Ind, S.StokKodu
		, S.StokAdi, SD.StokMiktari AS Miktar 
		, ISNULL(SF.Fiyat,  dbo.SuAnkiStokSatisFiyati(NULL, SD.StokInd)) * (1 / (1 + KDVS.KDVOrani /100)) AS SatisFiyatiKDVHaric
		, (SD.StokMiktari * ISNULL(SF.Fiyat, dbo.SuAnkiStokSatisFiyati(NULL, SD.StokInd)) * (1 / (1 + KDVS.KDVOrani /100))) AS  SatisMaliyetiKDVHaric 
		, (ISNULL(AF.Fiyat, 0)) AS AlisFiyatiKDVHaric
		, CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari*ISNULL(AF.Fiyat, 0)) ELSE 0 END AS  AlisMaliyetiKDVHaric
		, ISNULL(SF.Fiyat,  dbo.SuAnkiStokSatisFiyati(NULL, SD.StokInd)) AS SatisFiyati
		, (SD.StokMiktari * ISNULL(SF.Fiyat, dbo.SuAnkiStokSatisFiyati(NULL, SD.StokInd))) AS  SatisMaliyeti 
		, (ISNULL(AF.Fiyat, 0) * (1 + (KDVA.KDVOrani/100))) AS AlisFiyati
		, CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari *ISNULL(AF.Fiyat, 0)*(1 + (KDVA.KDVOrani/100))) ELSE 0 END AS  AlisMaliyeti
	FROM StokDurumu SD 
	     LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd --Stokların belirtilen tarih ya da önceki tarihteki alış fiyatı alınıyor bu nedenle en üst sıradaki alış fiyatı alınıyor
	     INNER JOIN Stoklar S  WITH(NOLOCK) ON	S.Ind = SD.StokInd
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuButunUrunlerFIFOSube] 
(
	@Owner INT,
	@Tarih DATETIME
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
      (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleri
            WHERE [EnvanterOwner] = @Owner AND 
				Tarih <= @Tarih
            GROUP BY StokInd
      ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleri GCH  WITH(NOLOCK)
		WHERE Cikan > 0 
			AND owner = @Owner
			AND TipIndAltHareket IN (6, 39, 504)
			AND Tarih <= @Tarih
		GROUP BY StokInd
	)  ,
    AlisFiyati(StokInd, Fiyat) AS
    (
		select StokInd, Fiyat from FIFOAlisFiyati(@Owner, @Tarih)
	)  
	     
	SELECT  DISTINCT @Owner AS [Owner],  SD.StokInd AS Ind, S.StokKodu
		, S.StokAdi, SD.StokMiktari AS Miktar 
		, ISNULL(SF.Fiyat,  dbo.SuAnkiStokSatisFiyati(@Owner, SD.StokInd)) * (1 / (1 + KDVS.KDVOrani /100)) AS SatisFiyatiKDVHaric
		, (SD.StokMiktari * ISNULL(SF.Fiyat, dbo.SuAnkiStokSatisFiyati(@Owner, SD.StokInd)) * (1 / (1 + KDVS.KDVOrani /100))) AS  SatisMaliyetiKDVHaric 
		, (ISNULL(AF.Fiyat, 0)) AS AlisFiyatiKDVHaric
		, CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari *ISNULL(AF.Fiyat, 0)) ELSE 0 END AS AlisMaliyetiKDVHaric
		, ISNULL(SF.Fiyat,  dbo.SuAnkiStokSatisFiyati(@Owner, SD.StokInd)) AS SatisFiyati
		, (SD.StokMiktari * ISNULL(SF.Fiyat, dbo.SuAnkiStokSatisFiyati(@Owner, SD.StokInd))) AS  SatisMaliyeti 
		, (ISNULL(AF.Fiyat, 0) * (1 + (KDVA.KDVOrani/100))) AS AlisFiyati
		, CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari *ISNULL(AF.Fiyat, 0)*(1 + (KDVA.KDVOrani/100))) ELSE 0 END AS  AlisMaliyeti
	FROM StokDurumu SD  WITH(NOLOCK)
	     LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)





GO
CREATE FUNCTION [dbo].[EnvanterRaporuButunUrunlerGOMerkez] --Genel Ortalama ile alış maliyeti hesaplama
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
    (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE Tarih <= @Tarih
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			AND Tarih <= @Tarih
		GROUP BY StokInd
	),
    AlisFiyati(StokInd, Fiyat) AS
    (
		SELECT StokInd, CASE @IskontoEtkilesin 
		WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)  
		ELSE ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Giren > 0
			AND  Tarih <= @Tarih
		GROUP BY StokInd
	)  	     
	SELECT  DISTINCT NULL AS [Owner],  SD.StokInd AS Ind, S.StokKodu
		, S.StokAdi, SD.StokMiktari AS Miktar 
		, ISNULL(SF.Fiyat,  dbo.StokSatisFiyati(null, SD.StokInd) * (1 / (1 + KDVS.KDVOrani/100))) AS SatisFiyatiKDVHaric
		, (SD.StokMiktari * ISNULL(SF.Fiyat,  dbo.StokSatisFiyati(null, SD.StokInd) * (1 / (1 + KDVS.KDVOrani/100)))) AS  SatisMaliyetiKDVHaric
		, ISNULL(AF.Fiyat, 0) AS AlisFiyatiKDVHaric
		, (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric
		, ISNULL(SF.Fiyat,   dbo.StokSatisFiyati(null, SD.StokInd) * (1 / (1 + KDVS.KDVOrani/100))) * (1+(KDVS.KDVOrani/100)) AS SatisFiyati
		, (SD.StokMiktari * ISNULL(SF.Fiyat,  dbo.StokSatisFiyati(null, SD.StokInd) * (1 / (1 + KDVS.KDVOrani/100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		, ISNULL(AF.Fiyat, 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		, (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti
	FROM StokDurumu SD  WITH(NOLOCK) LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd 
		INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
		LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)








GO
CREATE FUNCTION [dbo].[EnvanterRaporuButunUrunlerGOSube] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
AS
RETURN
(
		WITH 
		StokDurumu(StokInd, StokMiktari) AS 
		(
			SELECT StokInd
			, SUM(Giren) - SUM(Cikan) AS  StokMiktari
			FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
			WHERE [EnvanterOwner] = @Owner AND
					Tarih <= @Tarih
			GROUP BY StokInd
		),
		SatisFiyati(StokInd, Fiyat) AS
		(
    		SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Cikan > 0 
				AND owner = @Owner
				AND Tarih <= @Tarih
			GROUP BY StokInd
		)  ,
		AlisFiyati(StokInd, Fiyat) AS
		(
			SELECT StokInd, CASE @IskontoEtkilesin 
			WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)
			ELSE  ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH   WITH(NOLOCK)
			WHERE Giren > 0
				AND owner = @Owner
				AND Tarih <= @Tarih
			GROUP BY StokInd
		)  
		SELECT  DISTINCT @Owner AS [Owner],  SD.StokInd AS Ind, S.StokKodu
			, S.StokAdi, SD.StokMiktari AS Miktar 
			, ISNULL(SF.Fiyat ,  dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani/100))) AS SatisFiyatiKDVHaric
			, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani/100)))) AS  SatisMaliyetiKDVHaric
			, ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
			, (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
			, ISNULL(SF.Fiyat ,  dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani/100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
			, (SD.StokMiktari * ISNULL(SF.Fiyat ,  dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani/100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
			, ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
			, (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti
		FROM StokDurumu SD  WITH(NOLOCK) LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
			LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd 
			INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
			LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
			LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd	
)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuButunUrunlerMerkez] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
      (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE Tarih <= @Tarih
            GROUP BY StokInd
      ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			AND Tarih <= @Tarih
			AND TipInd <> 112
		GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
	(
		SELECT StokInd, (SELECT TOP 1 
		CASE @IskontoEtkilesin 
		WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0)
		ELSE Fiyat END 
		FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Giren > 0
			AND Tarih <= @Tarih
		GROUP BY StokInd	
	)   
	     
	SELECT  
			DISTINCT NULL AS [Owner],  SD.StokInd AS Ind, S.StokKodu
		  , S.StokAdi, SD.StokMiktari AS Miktar 
		  , ISNULL(SF.Fiyat ,  dbo.StokSatisFiyati(null, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat ,  dbo.StokSatisFiyati(null, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(null, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100)) AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat ,  dbo.StokSatisFiyati(null, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti  
	FROM StokDurumu SD  WITH(NOLOCK) LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S ON S.Ind = SD.StokInd
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)








GO
CREATE FUNCTION [dbo].[EnvanterRaporuButunUrunlerMerkezForMizan] 
(
	@Owner INT,
	@Tarih DATETIME
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
      (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleri  WITH(NOLOCK)
            WHERE Tarih <= @Tarih
            GROUP BY StokInd
      ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleri WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleri GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			AND TipIndAltHareket IN (39, 504)
			AND Tarih <= @Tarih
		GROUP BY StokInd
	)   
	     
	SELECT  
			DISTINCT NULL AS [Owner],  SD.StokInd AS Ind, S.StokKodu
		  , S.StokAdi, SD.StokMiktari AS Miktar 
		  , ISNULL(SF.Fiyat,  dbo.SuAnkiStokSatisFiyatiForMizan(NULL, SD.StokInd)) AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat, dbo.SuAnkiStokSatisFiyatiForMizan(NULL, SD.StokInd))) AS  SatisMaliyeti 
		  , dbo.SonAlisFiyatiIskontolu(null, SD.StokInd, @Tarih) AS AlisFiyati
		  ,(SD.StokMiktari * dbo.SonAlisFiyatiIskontolu(null, SD.StokInd, @Tarih) ) AS  AlisMaliyeti
	FROM StokDurumu SD  WITH(NOLOCK) LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
)








GO
CREATE FUNCTION [dbo].[EnvanterRaporuButunUrunlerNetLog] 
(
	@Owner INT,
	@Tarih DATETIME
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
      (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleri  WITH(NOLOCK)
            WHERE [Owner] = @Owner
				AND Tarih <= @Tarih
            GROUP BY StokInd
      )
   	     
	SELECT  
		   DISTINCT @Owner AS [Owner]
	     , SD.StokInd AS Ind, S.StokKodu
		 , S.StokAdi, SD.StokMiktari AS Miktar 
	FROM StokDurumu SD  WITH(NOLOCK)
		INNER JOIN Stoklar S  WITH(NOLOCK) ON
		S.Ind = SD.StokInd
)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuButunUrunlerSube]
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
AS
RETURN
(
	WITH 
		StokDurumu(StokInd, StokMiktari) AS 
		(
			SELECT StokInd
			, SUM(Giren) - SUM(Cikan) AS  StokMiktari
			FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
			WHERE [EnvanterOwner] = @Owner AND
					Tarih <= @Tarih
			GROUP BY StokInd
		),
		SatisFiyati(StokInd, Fiyat) AS
		(
    			SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
				FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
				WHERE [Owner] = @Owner
					AND (Cikan > 0) 
					AND Tarih <= @Tarih
					AND TipInd <> 112
				GROUP BY StokInd
		)
		,AlisFiyati(StokInd, Fiyat) AS
		(		
				SELECT StokInd,  (SELECT TOP 1 CASE @IskontoEtkilesin 
				WHEN 1 THEN  Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0)
				ELSE Fiyat END
				FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
				FROM dbo.GirisCikisHareketleriEnvanter GCH   WITH(NOLOCK)
				WHERE [Owner] = @Owner
					AND (Giren > 0) 
					AND Tarih <= @Tarih
				GROUP BY StokInd
		)
		SELECT  DISTINCT @Owner AS [Owner]
			, SD.StokInd AS Ind, S.StokKodu
			, S.StokAdi, SD.StokMiktari AS Miktar
			, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
			, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
			, ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
			, (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
			, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
			, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
			, ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
			, (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti  
		FROM StokDurumu SD  WITH(NOLOCK) LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
			LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON AF.StokInd = SD.StokInd
			INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
			LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
			LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd	

)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuButunUrunlerSubeForMizan] 
(
	@Owner INT,
	@Tarih DATETIME
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
      (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleri
            WHERE [Owner] = @Owner
				AND Tarih <= @Tarih
            GROUP BY StokInd
      ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleri WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleri GCH  WITH(NOLOCK)
		WHERE Cikan > 0 
			AND owner = @Owner
			AND TipIndAltHareket IN (39, 504)
			AND Tarih <= @Tarih
		GROUP BY StokInd
	) 
	     
	SELECT  
		   DISTINCT @Owner AS [Owner]
	     , SD.StokInd AS Ind, S.StokKodu
		 , S.StokAdi, SD.StokMiktari AS Miktar 
		 , ISNULL(SF.Fiyat,  dbo.SuAnkiStokSatisFiyatiForMizan(@Owner, SD.StokInd)) AS SatisFiyati
		 , (SD.StokMiktari * ISNULL(SF.Fiyat, dbo.SuAnkiStokSatisFiyatiForMizan(@Owner, SD.StokInd))) AS  SatisMaliyeti 
		 , dbo.SonAlisFiyatiIskontolu(@Owner, SD.StokInd, @Tarih) AS AlisFiyati
		 ,(SD.StokMiktari * dbo.SonAlisFiyatiIskontolu(@Owner, SD.StokInd, @Tarih) ) AS  AlisMaliyeti
	FROM StokDurumu SD  WITH(NOLOCK) LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		INNER JOIN Stoklar S  WITH(NOLOCK) ON
		S.Ind = SD.StokInd
)







GO
CREATE FUNCTION [dbo].[EnvanterRaporuButunUrunlerSubeNetLog]

(

       @Owner INT,

       @Tarih DATETIME

)

RETURNS TABLE

AS

RETURN

(

       WITH

       StokDurumu(StokInd, StokMiktari) AS

      (

            SELECT StokInd

            , SUM(Giren) - SUM(Cikan) AS  StokMiktari

            FROM dbo.GirisCikisHareketleri  WITH(NOLOCK)

            WHERE [Owner] = @Owner

                           AND Tarih <= @Tarih

            GROUP BY StokInd

      )

 

            

       SELECT 

                DISTINCT @Owner AS [Owner]

            , SD.StokInd AS Ind, S.StokKodu

             , S.StokAdi, SD.StokMiktari AS Miktar

       FROM StokDurumu SD  WITH(NOLOCK)

             INNER JOIN Stoklar S ON

             S.Ind = SD.StokInd

)
GO

 
GO
CREATE FUNCTION [dbo].[EnvanterRaporuDepoyaGore] 
(
	@Owner int,
	@DepoInd INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
AS
RETURN
(
	WITH 
		StokDurumu(StokInd, StokMiktari) AS 
		(
			SELECT StokInd
			, SUM(Giren) - SUM(Cikan) AS  StokMiktari
			FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
			WHERE  (DepoInd = @DepoInd OR @DepoInd = -1)
				AND (EnvanterOwner = @Owner OR @Owner = 0)
				AND Tarih <= @Tarih           
			GROUP BY StokInd, DepoInd
		),
		SatisFiyati(StokInd, Fiyat) AS
		(
    		SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH 
			WHERE (DepoInd = @DepoInd OR @DepoInd = -1)
				AND (GCH.owner = @Owner  OR @Owner = 0)
				AND Cikan > 0
				AND Tarih <= @Tarih
				AND TipInd <> 112
			GROUP BY StokInd
		),
		AlisFiyati(StokInd, Fiyat) AS
		(
			SELECT StokInd,  (SELECT TOP 1 
			CASE @IskontoEtkilesin 
			WHEN 1 THEN  Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0)
			ELSE Fiyat END
			FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
			FROM dbo.GirisCikisHareketleriEnvanter GCH   WITH(NOLOCK)
			WHERE (DepoInd = @DepoInd OR @DepoInd = -1)
				AND (GCH.owner = @Owner  OR @Owner = 0)
				AND (Giren > 0) 
				AND Tarih <= @Tarih
			GROUP BY StokInd
		) 
		SELECT  
				DISTINCT CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner]
				, SD.StokInd AS Ind, S.StokKodu
				, S.StokAdi, SD.StokMiktari AS Miktar 
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
				, ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
				, ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
				, (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti 
		FROM StokDurumu SD  WITH(NOLOCK)
				LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
				LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
				INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
				LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
				LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)











GO
CREATE FUNCTION [dbo].[EnvanterRaporuDepoyaGoreFIFO] 
(
	@Owner int,
	@DepoInd INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
AS
RETURN
(
	WITH 
		StokDurumu(StokInd, StokMiktari) AS 
		(
			SELECT StokInd
			, SUM(Giren) - SUM(Cikan) AS  StokMiktari
			FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
			WHERE  (DepoInd = @DepoInd OR @DepoInd = -1)
				AND (EnvanterOwner = @Owner OR @Owner = 0)
				AND Tarih <= @Tarih           
			GROUP BY StokInd, DepoInd
		),
		SatisFiyati(StokInd, Fiyat) AS
		(
    		SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter WHERE Ind = MAX(GCH.Ind)) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE (DepoInd = @DepoInd OR @DepoInd = -1)
				AND (GCH.owner = @Owner  OR @Owner = 0)
				AND Cikan > 0
				AND Tarih <= @Tarih
			GROUP BY StokInd
		),
		AlisFiyati(StokInd, Fiyat) AS
    (
		select StokInd, Fiyat from FIFOAlisFiyati(@Owner, @Tarih)
	) 
		SELECT  
				DISTINCT CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner]
				, SD.StokInd AS Ind, S.StokKodu
				, S.StokAdi, SD.StokMiktari AS Miktar 
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
				, ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
				, CASE WHEN SD.StokMiktari > 0 THEN(SD.StokMiktari * ISNULL(AF.Fiyat , 0)) ELSE 0 END AS  AlisMaliyetiKDVHaric  
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
				, ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
				, CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) ELSE 0 END AS  AlisMaliyeti 
		FROM StokDurumu SD  WITH(NOLOCK)
				LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
				LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
				INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
				LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
				LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)












GO
CREATE FUNCTION [dbo].[EnvanterRaporuDepoyaGoreGO] 
(
	@Owner int,
	@DepoInd INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
AS
RETURN
(
	WITH 
		StokDurumu(StokInd, StokMiktari) AS 
		(
			SELECT StokInd
			, SUM(Giren) - SUM(Cikan) AS  StokMiktari
			FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
			WHERE  (DepoInd = @DepoInd OR @DepoInd = -1)
				AND (EnvanterOwner = @Owner OR @Owner = 0)
				AND Tarih <= @Tarih           
			GROUP BY StokInd, DepoInd
		),
		SatisFiyati(StokInd, Fiyat) AS
		(
			SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Cikan > 0 
			    AND (DepoInd = @DepoInd OR @DepoInd = -1)
				AND ([Owner] = @Owner  OR @Owner = 0)
				AND Tarih <= @Tarih
			GROUP BY StokInd

		),
		AlisFiyati(StokInd, Fiyat) AS
		(
			SELECT StokInd, CASE @IskontoEtkilesin 
			WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)
			ELSE  ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Giren > 0
			    AND (GCH.owner = @Owner  OR @Owner = 0)
				AND ([Owner] = @Owner  OR @Owner = 0)
				AND Tarih <= @Tarih
			GROUP BY StokInd
		) 
		SELECT  
				DISTINCT CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner]
				, SD.StokInd AS Ind, S.StokKodu
				, S.StokAdi, SD.StokMiktari AS Miktar 
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
				, ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
				, ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
				, (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti 
		FROM StokDurumu SD  WITH(NOLOCK)
				LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
				LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
				INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
				LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
				LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)












GO
CREATE FUNCTION [dbo].[EnvanterRaporuEksiVerenUrunlerFIFO] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
AS
RETURN
(
		WITH StokDurumu(StokInd, StokMiktari) AS 
		(
				SELECT StokInd, SUM(Giren) - SUM(Cikan) AS  StokMiktari
				FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
				WHERE ([Owner] = @Owner OR @Owner = 0) AND Tarih <= @Tarih 
				GROUP BY StokInd HAVING SUM(Giren) - SUM(Cikan) < 0
		),
		SatisFiyati(StokInd, Fiyat) AS
		(
    			SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
				FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
				WHERE ([Owner] = @Owner  OR @Owner = 0)
					AND (Cikan > 0) 
					AND Tarih <= @Tarih
				GROUP BY StokInd
		)
		,
		 AlisFiyati(StokInd, Fiyat) AS
    (
		select StokInd, Fiyat from FIFOAlisFiyati(@Owner, @Tarih)
	)  
		SELECT 
				DISTINCT CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner]
				, SD.StokInd as Ind
				,SD.StokMiktari as Miktar
				, S.StokKodu as StokKodu, s.StokAdi as StokAdi
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
				, ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
				, CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) ELSE 0 END AS  AlisMaliyetiKDVHaric  
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100)) AS SatisFiyati
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
				, ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
				, CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) ELSE 0 END AS  AlisMaliyeti
		FROM StokDurumu SD  WITH(NOLOCK) INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
		LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SF.StokInd = SD.StokInd
		LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON AF.StokInd = SD.StokInd
		LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)





GO
CREATE FUNCTION [dbo].[EnvanterRaporuEksiVerenUrunlerGO] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
AS
RETURN
(
		WITH StokDurumu(StokInd, StokMiktari) AS 
		(
				SELECT StokInd, SUM(Giren) - SUM(Cikan) AS  StokMiktari
				FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
				WHERE ([Owner] = @Owner OR @Owner = 0) AND Tarih <= @Tarih 
				GROUP BY StokInd HAVING SUM(Giren) - SUM(Cikan) < 0
		),
		SatisFiyati(StokInd, Fiyat) AS
		(
    			SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Cikan > 0 
				AND ([Owner] = @Owner  OR @Owner = 0)
				AND Tarih <= @Tarih
			GROUP BY StokInd
		)
		,AlisFiyati(StokInd, Fiyat) AS
		(		
				SELECT StokInd, CASE @IskontoEtkilesin 
			WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)
			ELSE  ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Giren > 0
				AND ([Owner] = @Owner  OR @Owner = 0)
				AND Tarih <= @Tarih
			GROUP BY StokInd
		)  
		SELECT 
				DISTINCT CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner]
				, SD.StokInd as Ind
				,SD.StokMiktari as Miktar
				, S.StokKodu as StokKodu, s.StokAdi as StokAdi
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
				, ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100)) AS SatisFiyati
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
				, ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
				, (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti
		FROM StokDurumu SD  WITH(NOLOCK) INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
		LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SF.StokInd = SD.StokInd
		LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON AF.StokInd = SD.StokInd
		LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)





GO
CREATE FUNCTION [dbo].[EnvanterRaporuElimizdeOlanUrunlerFIFO] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
RETURN
(
	WITH StokDurumu(StokInd, StokMiktari) AS 
		(
				SELECT StokInd, SUM(Giren) - SUM(Cikan) AS  StokMiktari
				FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
				WHERE ([Owner] = @Owner OR @Owner = 0) AND Tarih <= @Tarih 
				GROUP BY StokInd HAVING SUM(Giren) - SUM(Cikan) > 0
		),
		SatisFiyati(StokInd, Fiyat) AS
		(
    			SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
				FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
				WHERE ([Owner] = @Owner  OR @Owner = 0)
					AND (Cikan > 0) 
					AND Tarih <= @Tarih					
				GROUP BY StokInd
		)
		,
		AlisFiyati(StokInd, Fiyat) AS
    (
		select StokInd, Fiyat from FIFOAlisFiyati(@Owner, @Tarih)
	)  
		SELECT 
				CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner]
				, SD.StokInd as Ind
				, SD.StokMiktari as Miktar
				, S.StokKodu as StokKodu, s.StokAdi as StokAdi
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
				, ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
				, CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) ELSE 0 END AS  AlisMaliyetiKDVHaric  
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
				, ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
				, CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) ELSE 0 END AS  AlisMaliyeti
		FROM StokDurumu SD  WITH(NOLOCK) INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
			LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SF.StokInd = SD.StokInd
			LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON AF.StokInd = SD.StokInd
			LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
			LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuElimizdeOlanUrunlerGO] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
RETURN
(
	WITH StokDurumu(StokInd, StokMiktari) AS 
		(
				SELECT StokInd, SUM(Giren) - SUM(Cikan) AS  StokMiktari
				FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
				WHERE ([Owner] = @Owner OR @Owner = 0) AND Tarih <= @Tarih 
				GROUP BY StokInd HAVING SUM(Giren) - SUM(Cikan) > 0
		),
		SatisFiyati(StokInd, Fiyat) AS
		(
    			SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Cikan > 0 
				AND ([Owner] = @Owner  OR @Owner = 0)
				AND Tarih <= @Tarih
			GROUP BY StokInd
		)
		,AlisFiyati(StokInd, Fiyat) AS
		(		
				SELECT StokInd, CASE @IskontoEtkilesin 
			WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)
			ELSE  ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Giren > 0
				AND ([Owner] = @Owner  OR @Owner = 0)
				AND Tarih <= @Tarih
			GROUP BY StokInd
		)  
		SELECT 
				CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner]
				, SD.StokInd as Ind
				, SD.StokMiktari as Miktar
				, S.StokKodu as StokKodu, s.StokAdi as StokAdi
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
				, ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
				, (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
				, ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
				, (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
				, ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
				, (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti
		FROM StokDurumu SD  WITH(NOLOCK) INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
			LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SF.StokInd = SD.StokInd
			LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON AF.StokInd = SD.StokInd
			LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
			LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuFirmayaGore] 
(
	@Owner INT,
	@CariHesapInd INT,
	@Tarih DATETIME,
	@StokGrupInd INT,
	@IskontoEtkilesin INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	FirmaninUrunleri (StokInd) AS
	(
		SELECT DISTINCT H.StokInd
			FROM Basliklar B  WITH(NOLOCK) INNER JOIN Hareketler H  WITH(NOLOCK) ON H.BaslikInd = B.Ind
			WHERE B.TipInd = 101 AND HesapInd = @CariHesapInd
	),
	StokDurumu(StokInd, StokMiktari) AS 
      (
		SELECT GCH.StokInd
		, SUM(Giren) - SUM(Cikan) AS  StokMiktari
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK) INNER JOIN FirmaninUrunleri F  WITH(NOLOCK) ON F.StokInd = GCH.StokInd
		LEFT JOIN dbo.Stoklar S  WITH(NOLOCK) ON S.Ind = GCH.StokInd
		WHERE  ((@StokGrupInd > 0) AND (@Owner = 0 OR @Owner = GCH.[Owner])
			AND Tarih <= @Tarih
			AND S.GrupInd IN (select Ind from AlisSatis_Gruplar(@StokGrupInd))) OR (@StokGrupInd = 0 AND (@Owner = 0 OR @Owner = GCH.[Owner])
			AND Tarih <= @Tarih)
		GROUP BY GCH.StokInd
      ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT GCH.StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK) INNER JOIN FirmaninUrunleri F  WITH(NOLOCK) ON F.StokInd = GCH.StokInd
		WHERE Cikan > 0
			AND ([Owner] = @Owner  OR @Owner = 0)
			AND Tarih <= @Tarih
			AND TipInd <> 112
		GROUP BY GCH.StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
	(
		SELECT GCH.StokInd, (SELECT TOP 1 
		CASE @IskontoEtkilesin 
		WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0) 
		ELSE Fiyat END
		FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK) INNER JOIN FirmaninUrunleri F  WITH(NOLOCK) ON F.StokInd = GCH.StokInd
		WHERE Giren > 0
			AND ([Owner] = @Owner  OR @Owner = 0)
			AND Tarih <= @Tarih
		GROUP BY GCH.StokInd
	)   

	SELECT  
			DISTINCT CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner]
		  , SD.StokInd AS Ind, S.StokKodu
		  , S.StokAdi, SD.StokMiktari AS Miktar 
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti 
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S WITH(NOLOCK) ON   S.Ind = SD.StokInd
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd 
)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuFirmayaGoreFIFO] 
(
	@Owner INT,
	@CariHesapInd INT,
	@Tarih DATETIME,
	@StokGrupInd INT,
	@IskontoEtkilesin INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	FirmaninUrunleri (StokInd) AS
	(
		SELECT DISTINCT H.StokInd
			FROM Basliklar B  WITH(NOLOCK) INNER JOIN Hareketler H ON H.BaslikInd = B.Ind
			WHERE B.TipInd = 101 AND HesapInd = @CariHesapInd
	),
	StokDurumu(StokInd, StokMiktari) AS 
      (
		SELECT GCH.StokInd
		, SUM(Giren) - SUM(Cikan) AS  StokMiktari
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK) INNER JOIN FirmaninUrunleri F  WITH(NOLOCK) ON F.StokInd = GCH.StokInd
		LEFT JOIN dbo.Stoklar S  WITH(NOLOCK) ON S.Ind = GCH.StokInd
		WHERE  ((@StokGrupInd > 0) AND (@Owner = 0 OR @Owner = GCH.[Owner])
			AND Tarih <= @Tarih
			AND S.GrupInd IN (select Ind from AlisSatis_Gruplar(@StokGrupInd))) OR (@StokGrupInd = 0 AND (@Owner = 0 OR @Owner = GCH.[Owner])
			AND Tarih <= @Tarih)
		GROUP BY GCH.StokInd
      ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleri GCH  WITH(NOLOCK)
		WHERE Cikan > 0 
			AND ([Owner] = @Owner  OR @Owner = 0)
			AND TipIndAltHareket IN (6, 39, 504)
			AND Tarih <= @Tarih
		GROUP BY StokInd
	)  ,
    AlisFiyati(StokInd, Fiyat) AS
    (
		select StokInd, Fiyat from FIFOAlisFiyati(@Owner, @Tarih)
	)  
	     
	SELECT  DISTINCT CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner],  SD.StokInd AS Ind, S.StokKodu
		, S.StokAdi, SD.StokMiktari AS Miktar 
		, ISNULL(SF.Fiyat,  dbo.SuAnkiStokSatisFiyati(@Owner, SD.StokInd)) * (1 / (1 + KDVS.KDVOrani /100)) AS SatisFiyatiKDVHaric
		, (SD.StokMiktari * ISNULL(SF.Fiyat, dbo.SuAnkiStokSatisFiyati(@Owner, SD.StokInd)) * (1 / (1 + KDVS.KDVOrani /100))) AS  SatisMaliyetiKDVHaric 
		, (ISNULL(AF.Fiyat, 0)) AS AlisFiyatiKDVHaric
		, CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari *ISNULL(AF.Fiyat, 0)) ELSE 0 END AS  AlisMaliyetiKDVHaric
		, ISNULL(SF.Fiyat,  dbo.SuAnkiStokSatisFiyati(@Owner, SD.StokInd)) AS SatisFiyati
		, (SD.StokMiktari * ISNULL(SF.Fiyat, dbo.SuAnkiStokSatisFiyati(@Owner, SD.StokInd))) AS  SatisMaliyeti 
		, (ISNULL(AF.Fiyat, 0) * (1 + (KDVA.KDVOrani/100))) AS AlisFiyati
		, CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari *ISNULL(AF.Fiyat, 0)* (1 + (KDVA.KDVOrani/100))) ELSE 0 END AS  AlisMaliyeti
	FROM StokDurumu SD  WITH(NOLOCK)
	     LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuFirmayaGoreGO] 
(
	@Owner INT,
	@CariHesapInd INT,
	@Tarih DATETIME,
	@StokGrupInd INT,
	@IskontoEtkilesin INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	FirmaninUrunleri (StokInd) AS
	(
		SELECT DISTINCT H.StokInd
			FROM Basliklar B  WITH(NOLOCK) INNER JOIN Hareketler H  WITH(NOLOCK) ON H.BaslikInd = B.Ind
			WHERE B.TipInd = 101 AND HesapInd = @CariHesapInd
	),
	StokDurumu(StokInd, StokMiktari) AS 
      (
		SELECT GCH.StokInd
		, SUM(Giren) - SUM(Cikan) AS  StokMiktari
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK) INNER JOIN FirmaninUrunleri F  WITH(NOLOCK) ON F.StokInd = GCH.StokInd
		LEFT JOIN dbo.Stoklar S  WITH(NOLOCK) ON S.Ind = GCH.StokInd
		WHERE  ((@StokGrupInd > 0) AND (@Owner = 0 OR @Owner = GCH.[Owner])
			AND Tarih <= @Tarih
			AND S.GrupInd IN (select Ind from AlisSatis_Gruplar(@StokGrupInd))) OR (@StokGrupInd = 0 AND (@Owner = 0 OR @Owner = GCH.[Owner])
			AND Tarih <= @Tarih)
		GROUP BY GCH.StokInd
      ),
    SatisFiyati(StokInd, Fiyat) AS
    (
		SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Cikan > 0 
				AND ([Owner] = @Owner  OR @Owner = 0)
				AND Tarih <= @Tarih
			GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
	(
		SELECT StokInd, CASE @IskontoEtkilesin 
			WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)
			ELSE  ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Giren > 0
				AND ([Owner] = @Owner  OR @Owner = 0)
				AND Tarih <= @Tarih
			GROUP BY StokInd
	)   

	SELECT  
			DISTINCT CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner]
		  , SD.StokInd AS Ind, S.StokKodu
		  , S.StokAdi, SD.StokMiktari AS Miktar 
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti 
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd 
)







GO
CREATE FUNCTION [dbo].[EnvanterRaporuMuhteviyatFIFOMerkez] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT	
)
RETURNS TABLE 
AS
RETURN 
(
	   WITH StokDurumu(StokInd, StokMiktari)
	   AS 
       (
            SELECT GH.StokInd, SUM(Giren) - SUM(Cikan) AS  StokMiktari
			FROM dbo.GirisCikisHareketleriEnvanter GH  WITH(NOLOCK)
			INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = GH.StokInd
			INNER JOIN Hesaplar H  WITH(NOLOCK) ON H.StokInd = S.Ind and GH.DepoInd = H.Ind
			WHERE Tarih <= @Tarih
			AND H.TipInd = 205 AND S.Aktif = 1
			GROUP BY GH.StokInd
        ),   
		SatisFiyati(StokInd, Fiyat) AS
		(
    		SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE (Cikan > 0) 
				AND Tarih <= @Tarih
			GROUP BY StokInd
		)
		,
		AlisFiyati(StokInd, Fiyat) AS
    (
	  select StokInd, Fiyat from FIFOAlisFiyati(0, @Tarih)
	)  
		SELECT  
			NULL AS [Owner]
		  , S.Ind
		  , S.StokKodu
		  , S.StokAdi
		  , SD.StokMiktari AS Miktar
 		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) ELSE 0 END AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))  AS AlisFiyati
		  , CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) ELSE 0 END AS  AlisMaliyeti 
		FROM StokDurumu SD  WITH(NOLOCK)
			 LEFT JOIN SatisFiyati SF ON SF.StokInd = SD.StokInd
			 LEFT JOIN AlisFiyati AF ON AF.StokInd = SD.StokInd
			 INNER JOIN Stoklar S ON S.Ind = SD.StokInd
			 LEFT JOIN KDVGruplari KDVS ON KDVS.Ind = S.SatisKDVGrupInd
			 LEFT JOIN KDVGruplari KDVA ON KDVA.Ind = S.AlisKDVGrupInd	
	
)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuMuhteviyatFIFOSube] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin int
	
)
RETURNS TABLE 
AS
RETURN 
(
		 WITH StokDurumu(StokInd, StokMiktari)
		 AS 
		 (
				SELECT GH.StokInd, SUM(Giren) - SUM(Cikan) AS  StokMiktari
				FROM dbo.GirisCikisHareketleriEnvanter GH  WITH(NOLOCK)
				INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = GH.StokInd
				INNER JOIN Hesaplar H  WITH(NOLOCK) ON H.StokInd = S.Ind and GH.DepoInd = H.Ind
				WHERE GH.[Owner] = @Owner AND  Tarih <= @Tarih
				AND H.TipInd = 205 AND S.Aktif = 1
				GROUP BY GH.StokInd
		 ),
		 SatisFiyati(StokInd, Fiyat) AS
		 (
    			SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
				FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
				WHERE [Owner] = @Owner
						AND (Cikan > 0) 
					AND Tarih <= @Tarih
				GROUP BY StokInd
		 )
		,
		 AlisFiyati(StokInd, Fiyat) AS
    (
	 select StokInd, Fiyat from FIFOAlisFiyati(@Owner, @Tarih)
	)   
		SELECT  
			@Owner AS [Owner]
		  , S.Ind
		  , S.StokKodu
		  , S.StokAdi
		  , SD.StokMiktari AS Miktar
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) ELSE 0 END AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , CASE WHEN SD.StokMiktari > 0 THEN  (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) ELSE 0 END AS  AlisMaliyeti 
		FROM StokDurumu SD  WITH(NOLOCK)
			 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SF.StokInd = SD.StokInd
			 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON AF.StokInd = SD.StokInd
			 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
			 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
			 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)





GO
CREATE FUNCTION [dbo].[EnvanterRaporuMuhteviyatGOMerkez] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT	
)
RETURNS TABLE 
AS
RETURN 
(
	   WITH StokDurumu(StokInd, StokMiktari)
	   AS 
       (
            SELECT GH.StokInd, SUM(Giren) - SUM(Cikan) AS  StokMiktari
			FROM dbo.GirisCikisHareketleriEnvanter GH  WITH(NOLOCK)
			INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = GH.StokInd
			INNER JOIN Hesaplar H  WITH(NOLOCK) ON H.StokInd = S.Ind and GH.DepoInd = H.Ind
			WHERE Tarih <= @Tarih
			AND H.TipInd = 205 AND S.Aktif = 1
			GROUP BY GH.StokInd
        ),   
		SatisFiyati(StokInd, Fiyat) AS
		(
    		SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			AND Tarih <= @Tarih
		GROUP BY StokInd
		)
		,AlisFiyati(StokInd, Fiyat) AS
		(		
			SELECT StokInd, CASE @IskontoEtkilesin 
		WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)  
		ELSE ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Giren > 0
			AND  Tarih <= @Tarih
		GROUP BY StokInd
		)   
		SELECT  
			NULL AS [Owner]
		  , S.Ind
		  , S.StokKodu
		  , S.StokAdi
		  , SD.StokMiktari AS Miktar
 		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti 
		FROM StokDurumu SD  WITH(NOLOCK)
			 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SF.StokInd = SD.StokInd
			 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON AF.StokInd = SD.StokInd
			 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
			 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
			 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd	
	
)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuMuhteviyatGOSube] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin int
	
)
RETURNS TABLE 
AS
RETURN 
(
		 WITH StokDurumu(StokInd, StokMiktari)
		 AS 
		 (
				SELECT GH.StokInd, SUM(Giren) - SUM(Cikan) AS  StokMiktari
				FROM dbo.GirisCikisHareketleriEnvanter GH  WITH(NOLOCK)
				INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = GH.StokInd
				INNER JOIN Hesaplar H  WITH(NOLOCK) ON H.StokInd = S.Ind and GH.DepoInd = H.Ind
				WHERE GH.[Owner] = @Owner AND  Tarih <= @Tarih
				AND H.TipInd = 205 AND S.Aktif = 1
				GROUP BY GH.StokInd
		 ),
		 SatisFiyati(StokInd, Fiyat) AS
		 (
    				SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Cikan > 0 
				AND owner = @Owner
				AND Tarih <= @Tarih
			GROUP BY StokInd
		 )
		,AlisFiyati(StokInd, Fiyat) AS
		(		
				SELECT StokInd, CASE @IskontoEtkilesin 
			WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)
			ELSE  ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Giren > 0
				AND owner = @Owner
				AND Tarih <= @Tarih
			GROUP BY StokInd
		)     
		SELECT  
			@Owner AS [Owner]
		  , S.Ind
		  , S.StokKodu
		  , S.StokAdi
		  , SD.StokMiktari AS Miktar
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti 
		FROM StokDurumu SD  WITH(NOLOCK)
			 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SF.StokInd = SD.StokInd
			 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON AF.StokInd = SD.StokInd
			 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
			 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
			 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)





GO
CREATE FUNCTION [dbo].[EnvanterRaporuMuhteviyatMerkez] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT	
)
RETURNS TABLE 
AS
RETURN 
(
	   WITH StokDurumu(StokInd, StokMiktari)
	   AS 
       (
            SELECT GH.StokInd, SUM(Giren) - SUM(Cikan) AS  StokMiktari
			FROM dbo.GirisCikisHareketleriEnvanter GH  WITH(NOLOCK)
			INNER JOIN Stoklar S  WITH(NOLOCK)  ON S.Ind = GH.StokInd
			INNER JOIN  Hesaplar H WITH(NOLOCK)  ON H.StokInd = S.Ind and GH.DepoInd = H.Ind
			WHERE Tarih <= @Tarih
			AND H.TipInd = 205 AND S.Aktif = 1
			GROUP BY GH.StokInd
        ),   
		SatisFiyati(StokInd, Fiyat) AS
		(
    		SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE (Cikan > 0) 
				AND Tarih <= @Tarih
				AND TipInd <> 112
			GROUP BY StokInd
		)
		,AlisFiyati(StokInd, Fiyat) AS
		(		
			SELECT StokInd,  (SELECT TOP 1 CASE @IskontoEtkilesin 
			WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0) 
			ELSE Fiyat END 
			FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
			FROM dbo.GirisCikisHareketleriEnvanter GCH   WITH(NOLOCK)
			WHERE (Giren > 0) 
				AND Tarih <= @Tarih
			GROUP BY StokInd
		)   
		SELECT  
			NULL AS [Owner]
		  , S.Ind
		  , S.StokKodu
		  , S.StokAdi
		  , SD.StokMiktari AS Miktar
 		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti 
		FROM StokDurumu SD  WITH(NOLOCK)
			 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SF.StokInd = SD.StokInd
			 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON AF.StokInd = SD.StokInd
			 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
			 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
			 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd	
	
)





GO
CREATE FUNCTION [dbo].[EnvanterRaporuMuhteviyatSube] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin int
	
)
RETURNS TABLE 
AS
RETURN 
(
		 WITH StokDurumu(StokInd, StokMiktari)
		 AS 
		 (
				SELECT GH.StokInd, SUM(Giren) - SUM(Cikan) AS  StokMiktari
				FROM dbo.GirisCikisHareketleriEnvanter GH  WITH(NOLOCK)
				INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = GH.StokInd
				INNER JOIN Hesaplar H  WITH(NOLOCK) ON H.StokInd = S.Ind and GH.DepoInd = H.Ind
				WHERE GH.[Owner] = @Owner AND  Tarih <= @Tarih
				AND H.TipInd = 205 AND S.Aktif = 1
				GROUP BY GH.StokInd
		 ),
		 SatisFiyati(StokInd, Fiyat) AS
		 (
    			SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
				FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
				WHERE [Owner] = @Owner
					AND (Cikan > 0) 
					AND Tarih <= @Tarih
					AND TipInd <> 112
				GROUP BY StokInd
		 )
		,AlisFiyati(StokInd, Fiyat) AS
		(		
				SELECT StokInd,  (SELECT TOP 1 CASE @IskontoEtkilesin 
				WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0)  
				ELSE Fiyat END 
				FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
				FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
				WHERE [Owner] = @Owner
					AND (Giren > 0) 
					AND Tarih <= @Tarih
				GROUP BY StokInd
		)     
		SELECT  
			@Owner AS [Owner]
		  , S.Ind
		  , S.StokKodu
		  , S.StokAdi
		  , SD.StokMiktari AS Miktar
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti 
		FROM StokDurumu SD  WITH(NOLOCK)
			 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SF.StokInd = SD.StokInd
			 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON AF.StokInd = SD.StokInd
			 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
			 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
			 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)




GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeAnlikFIFOMerkez] 
(
	@Owner INT,
	@Tarih DATETIME,
    @IskontoEtkilesin INT 
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, MevcutMiktar) AS 
      (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE Tarih <= @Tarih
            GROUP BY StokInd
      ),
    AnlikStokDurumu(StokInd, KapanmamisKasaMiktar) AS
    (
			 SELECT StokInd
            , SUM(Miktar) AS StokMiktari
            FROM Hareketler H  WITH(NOLOCK)
            INNER JOIN SatisKasasi SK  WITH(NOLOCK) ON H.Ind = SK.IslemInd
            WHERE  SK.Tarih <= @Tarih
				AND SK.IsYeniSatis = 1
				AND SK.Tablo = 'Hareketler'
				AND H.TipInd = 504
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd,(SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0 
			AND Tarih <= @Tarih
		GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
    (
		select StokInd, Fiyat from FIFOAlisFiyati(0, @Tarih)
	)  
	SELECT NULL AS [Owner]
		 ,  SD.StokInd AS Ind
		 ,  S.StokKodu
		 ,  S.StokAdi
		 ,  (SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) AS Miktar 
		 ,  ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		 , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))))  AS  SatisMaliyetiKDVHaric
		 ,  ISNULL(AF.Fiyat, 0) AS AlisFiyatiKDVHaric
		 , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(AF.Fiyat, 0))  AS  AlisMaliyetiKDVHaric
		 ,  ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 +(KDVS.KDVOrani / 100)) AS SatisFiyati
		 , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 +(KDVS.KDVOrani / 100)))  AS  SatisMaliyeti 
		 ,  ISNULL(AF.Fiyat, 0) * (1 +(KDVA.KDVOrani / 100)) AS AlisFiyati
		 , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(AF.Fiyat, 0) * (1 +(KDVA.KDVOrani / 100)))  AS  AlisMaliyeti
	FROM StokDurumu SD  WITH(NOLOCK)
		LEFT JOIN AnlikStokDurumu ASD  WITH(NOLOCK) ON SD.StokInd=ASD.StokInd
		LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd 
		LEFT JOIN AlisFiyati AF  WITH(NOLOCK) On SD.StokInd = AF.StokInd
		INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
		LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)











GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeAnlikFIFOSube] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, MevcutMiktar) AS 
      (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE [EnvanterOwner] = @Owner AND
				 Tarih <= @Tarih
            GROUP BY StokInd
      ),
    AnlikStokDurumu(StokInd, KapanmamisKasaMiktar) AS
    (
			 SELECT StokInd
            , SUM(Miktar) AS StokMiktari
            FROM Hareketler H  WITH(NOLOCK)
            INNER JOIN SatisKasasi SK  WITH(NOLOCK) ON H.Ind = SK.IslemInd
            WHERE  SK.Owner = @Owner
				AND SK.Tarih <= @Tarih
				AND SK.IsYeniSatis = 1
				AND SK.Tablo = 'Hareketler'
				AND H.TipInd = 504
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE [Owner] = @Owner
			AND (Cikan > 0) 
			AND Tarih <= @Tarih
		GROUP BY StokInd
	),
	 AlisFiyati(StokInd, Fiyat) AS
    (
		select StokInd, Fiyat from FIFOAlisFiyati(@Owner, @Tarih)
	)  

	SELECT  @Owner AS [Owner]
	      , SD.StokInd AS Ind
	      , S.StokKodu
		  , S.StokAdi
		  ,  (SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) AS Miktar 
		  ,  ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))))  AS  SatisMaliyetiKDVHaric
		  ,  ISNULL(AF.Fiyat, 0) AS AlisFiyatiKDVHaric
		  , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(AF.Fiyat, 0))  AS  AlisMaliyetiKDVHaric
		  ,  ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 +(KDVS.KDVOrani / 100)) AS SatisFiyati
		  , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 +(KDVS.KDVOrani / 100)))  AS  SatisMaliyeti 
		  ,  ISNULL(AF.Fiyat, 0) * (1 +(KDVA.KDVOrani / 100)) AS AlisFiyati
		  , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(AF.Fiyat, 0) * (1 +(KDVA.KDVOrani / 100)))  AS  AlisMaliyeti	
	FROM StokDurumu SD  WITH(NOLOCK)
		LEFT JOIN AnlikStokDurumu ASD  WITH(NOLOCK) ON SD.StokInd=ASD.StokInd
		LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
        LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)



GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeAnlikGOSube] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, MevcutMiktar) AS 
      (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE [EnvanterOwner] = @Owner AND
				 Tarih <= @Tarih
            GROUP BY StokInd
      ),
    AnlikStokDurumu(StokInd, KapanmamisKasaMiktar) AS
    (
			 SELECT StokInd
            , SUM(Miktar) AS StokMiktari
            FROM Hareketler H  WITH(NOLOCK)
            INNER JOIN SatisKasasi SK  WITH(NOLOCK) ON H.Ind = SK.IslemInd
            WHERE  SK.Owner = @Owner
				AND SK.Tarih <= @Tarih
				AND SK.IsYeniSatis = 1
				AND SK.Tablo = 'Hareketler'
				AND H.TipInd = 504
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Cikan > 0 
				AND owner = @Owner
				AND Tarih <= @Tarih
			GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
	(		
		SELECT StokInd, CASE @IskontoEtkilesin 
			WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)
			ELSE  ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Giren > 0
				AND owner = @Owner
				AND Tarih <= @Tarih
			GROUP BY StokInd
	)  

	SELECT  @Owner AS [Owner]
	      , SD.StokInd AS Ind
	      , S.StokKodu
		  , S.StokAdi
		  ,  (SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) AS Miktar 
		  ,  ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))))  AS  SatisMaliyetiKDVHaric
		  ,  ISNULL(AF.Fiyat, 0) AS AlisFiyatiKDVHaric
		  , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(AF.Fiyat, 0))  AS  AlisMaliyetiKDVHaric
		  ,  ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 +(KDVS.KDVOrani / 100)) AS SatisFiyati
		  , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 +(KDVS.KDVOrani / 100)))  AS  SatisMaliyeti 
		  ,  ISNULL(AF.Fiyat, 0) * (1 +(KDVA.KDVOrani / 100)) AS AlisFiyati
		  , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(AF.Fiyat, 0) * (1 +(KDVA.KDVOrani / 100)))  AS  AlisMaliyeti	
	FROM StokDurumu SD  WITH(NOLOCK)
		LEFT JOIN AnlikStokDurumu ASD  WITH(NOLOCK) ON SD.StokInd=ASD.StokInd
		LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
        LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)



GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeAnlikMerkez] 
(
	@Owner INT,
	@Tarih DATETIME,
    @IskontoEtkilesin INT 
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, MevcutMiktar) AS 
      (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE Tarih <= @Tarih
            GROUP BY StokInd
      ),
    AnlikStokDurumu(StokInd, KapanmamisKasaMiktar) AS
    (
			 SELECT StokInd
            , SUM(Miktar) AS StokMiktari
            FROM Hareketler H  WITH(NOLOCK)
            INNER JOIN SatisKasasi SK  WITH(NOLOCK) ON H.Ind = SK.IslemInd
            WHERE  SK.Tarih <= @Tarih
				AND SK.IsYeniSatis = 1
				AND SK.Tablo = 'Hareketler'
				AND H.TipInd = 504
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd,(SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0 
			AND Tarih <= @Tarih
			AND TipInd <> 112
		GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
	(		
		SELECT StokInd, (SELECT TOP 1 CASE @IskontoEtkilesin 
		WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0) 
		ELSE Fiyat END 
		FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE (Giren > 0) 
			AND Tarih <= @Tarih
		GROUP BY StokInd
	)

	SELECT NULL AS [Owner]
		 ,  SD.StokInd AS Ind
		 ,  S.StokKodu
		 ,  S.StokAdi
		 ,  (SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) AS Miktar 
		 ,  ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		 , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))))  AS  SatisMaliyetiKDVHaric
		 ,  ISNULL(AF.Fiyat, 0) AS AlisFiyatiKDVHaric
		 , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(AF.Fiyat, 0))  AS  AlisMaliyetiKDVHaric
		 ,  ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 +(KDVS.KDVOrani / 100)) AS SatisFiyati
		 , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 +(KDVS.KDVOrani / 100)))  AS  SatisMaliyeti 
		 ,  ISNULL(AF.Fiyat, 0) * (1 +(KDVA.KDVOrani / 100)) AS AlisFiyati
		 , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(AF.Fiyat, 0) * (1 +(KDVA.KDVOrani / 100)))  AS  AlisMaliyeti
	FROM StokDurumu SD  WITH(NOLOCK)
		LEFT JOIN AnlikStokDurumu ASD  WITH(NOLOCK) ON SD.StokInd=ASD.StokInd
		LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		LEFT JOIN AlisFiyati AF  WITH(NOLOCK) On SD.StokInd = AF.StokInd
		INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
		LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		LEFT JOIN KDVGruplari KDVA ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)










GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeAnlikSube] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, MevcutMiktar) AS 
      (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE [EnvanterOwner] = @Owner AND
				 Tarih <= @Tarih
            GROUP BY StokInd
      ),
    AnlikStokDurumu(StokInd, KapanmamisKasaMiktar) AS
    (
			 SELECT StokInd
            , SUM(Miktar) AS StokMiktari
            FROM Hareketler H  WITH(NOLOCK)
            INNER JOIN SatisKasasi SK  WITH(NOLOCK) ON H.Ind = SK.IslemInd
            WHERE  SK.Owner = @Owner
				AND SK.Tarih <= @Tarih
				AND SK.IsYeniSatis = 1
				AND SK.Tablo = 'Hareketler'
				AND H.TipInd = 504
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE [Owner] = @Owner
			AND (Cikan > 0) 
			AND Tarih <= @Tarih
			AND TipInd <> 112
		GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
	(		
		SELECT StokInd, (SELECT TOP 1 CASE @IskontoEtkilesin 
		WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0) 
		ELSE Fiyat END 
		FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE [Owner] = @Owner
			AND (Giren > 0) 
			AND Tarih <= @Tarih
		GROUP BY StokInd
	)  

	SELECT  @Owner AS [Owner]
	      , SD.StokInd AS Ind
	      , S.StokKodu
		  , S.StokAdi
		  ,  (SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) AS Miktar 
		  ,  ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))))  AS  SatisMaliyetiKDVHaric
		  ,  ISNULL(AF.Fiyat, 0) AS AlisFiyatiKDVHaric
		  , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(AF.Fiyat, 0))  AS  AlisMaliyetiKDVHaric
		  ,  ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 +(KDVS.KDVOrani / 100)) AS SatisFiyati
		  , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 +(KDVS.KDVOrani / 100)))  AS  SatisMaliyeti 
		  ,  ISNULL(AF.Fiyat, 0) * (1 +(KDVA.KDVOrani / 100)) AS AlisFiyati
		  , ((SD.MevcutMiktar - ISNULL(ASD.KapanmamisKasaMiktar,0)) * ISNULL(AF.Fiyat, 0) * (1 +(KDVA.KDVOrani / 100)))  AS  AlisMaliyeti	
	FROM StokDurumu SD  WITH(NOLOCK)
		LEFT JOIN AnlikStokDurumu ASD  WITH(NOLOCK) ON SD.StokInd=ASD.StokInd
		LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
        LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)


GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeFIFOMerkez] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
    (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE Tarih <= @Tarih
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			AND Tarih <= @Tarih
		GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
    (
		select StokInd, Fiyat from FIFOAlisFiyati(0, @Tarih)
	)  
	SELECT  
			NULL AS [Owner]
		  , SD.StokInd AS Ind, S.StokKodu
		  , S.StokAdi, SD.StokMiktari AS Miktar 
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) ELSE 0 END AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) ELSE 0 END AS  AlisMaliyeti
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		 LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)










GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeFIFOSube] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
      (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE [EnvanterOwner] = @Owner AND 
				Tarih <= @Tarih
            GROUP BY StokInd
      ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE [Owner] = @Owner
				AND (Cikan > 0)
				AND Tarih <= @Tarih
		GROUP BY StokInd
	),  
	 AlisFiyati(StokInd, Fiyat) AS
    (
		select StokInd, Fiyat from FIFOAlisFiyati(@Owner, @Tarih)
	)  

	SELECT  
			@Owner AS [Owner]
		  , SD.StokInd AS Ind, S.StokKodu
		  , S.StokAdi, SD.StokMiktari AS Miktar 
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) ELSE 0 END AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100)) AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) ELSE 0 END AS  AlisMaliyeti 			  
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		 LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)








GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeGOMerkez] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
    (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE Tarih <= @Tarih
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			AND Tarih <= @Tarih
		GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
	(
		SELECT StokInd, CASE @IskontoEtkilesin 
		WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)  
		ELSE ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Giren > 0
			AND  Tarih <= @Tarih
		GROUP BY StokInd
	)
	SELECT  
			NULL AS [Owner]
		  , SD.StokInd AS Ind, S.StokKodu
		  , S.StokAdi, SD.StokMiktari AS Miktar 
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		 LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)










GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeGOSube] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
      (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE [EnvanterOwner] = @Owner AND 
				Tarih <= @Tarih
            GROUP BY StokInd
      ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Cikan > 0 
				AND owner = @Owner
				AND Tarih <= @Tarih
			GROUP BY StokInd
	),  
	AlisFiyati(StokInd, Fiyat) AS
	(
		SELECT StokInd, CASE @IskontoEtkilesin 
			WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)
			ELSE  ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Giren > 0
				AND owner = @Owner
				AND Tarih <= @Tarih
			GROUP BY StokInd
	)

	SELECT  
			@Owner AS [Owner]
		  , SD.StokInd AS Ind, S.StokKodu
		  , S.StokAdi, SD.StokMiktari AS Miktar 
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100)) AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti 			  
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		 LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)








GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeKDVOranliFIFOMerkez] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
    (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE Tarih <= @Tarih
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd,(SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			AND Tarih <= @Tarih
		GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
    (
		select StokInd, Fiyat from FIFOAlisFiyati(0, @Tarih)
	)  
	SELECT  
			NULL AS [Owner]
		  , SD.StokInd AS Ind
		  , S.StokKodu
		  , S.StokAdi
		  , SD.StokMiktari AS Miktar
		  , KDVA.KDVOrani as AlisKDVOrani
		  , KDVS.KDVOrani as SatisKDVOrani
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) ELSE 0 END AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) ELSE 0 END AS  AlisMaliyeti
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		 LEFT OUTER JOIN dbo.Hesaplar AS h ON h.StokInd = s.Ind
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)











GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeKDVOranliFIFOSube] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
    (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE [EnvanterOwner] = @Owner AND
				 Tarih <= @Tarih
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE [Owner] = @Owner
				AND (Cikan > 0)
				AND Tarih <= @Tarih
		GROUP BY StokInd
	),    
	AlisFiyati(StokInd, Fiyat) AS
    (
		select StokInd, Fiyat from FIFOAlisFiyati(@Owner, @Tarih)
	)  
	SELECT  
			@Owner AS [Owner]
		  , SD.StokInd AS Ind
		  , S.StokKodu
		  , S.StokAdi
		  , SD.StokMiktari AS Miktar 
		  , KDVA.KDVOrani as AlisKDVOrani
		  , KDVS.KDVOrani as SatisKDVOrani
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) ELSE 0 END AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , CASE WHEN SD.StokMiktari > 0 THEN (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) ELSE 0 END AS  AlisMaliyeti	
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		 LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)











GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeKDVOranliGOMerkez] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
    (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE Tarih <= @Tarih
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			AND Tarih <= @Tarih
		GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
	(
		SELECT StokInd, CASE @IskontoEtkilesin 
		WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)  
		ELSE ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Giren > 0
			AND  Tarih <= @Tarih
		GROUP BY StokInd
	)   
	SELECT  
			NULL AS [Owner]
		  , SD.StokInd AS Ind
		  , S.StokKodu
		  , S.StokAdi
		  , SD.StokMiktari AS Miktar
		  , KDVA.KDVOrani as AlisKDVOrani
		  , KDVS.KDVOrani as SatisKDVOrani
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		 LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)











GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeKDVOranliGOSube] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
    (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE [EnvanterOwner] = @Owner AND
				 Tarih <= @Tarih
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Cikan > 0 
				AND owner = @Owner
				AND Tarih <= @Tarih
			GROUP BY StokInd
	),    
	AlisFiyati(StokInd, Fiyat) AS
	(
		SELECT StokInd, CASE @IskontoEtkilesin 
			WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)
			ELSE  ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Giren > 0
				AND owner = @Owner
				AND Tarih <= @Tarih
			GROUP BY StokInd
	)
	SELECT  
			@Owner AS [Owner]
		  , SD.StokInd AS Ind
		  , S.StokKodu
		  , S.StokAdi
		  , SD.StokMiktari AS Miktar 
		  , KDVA.KDVOrani as AlisKDVOrani
		  , KDVS.KDVOrani as SatisKDVOrani
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti	
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		 LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)











GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeKDVOranliMerkez] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
    (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE Tarih <= @Tarih
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd,(SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			AND Tarih <= @Tarih
		GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
	(
		SELECT StokInd, (SELECT TOP 1 
		CASE @IskontoEtkilesin
		WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0) 
		ELSE Fiyat END 
		FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE (Giren > 0)
			  AND Tarih <= @Tarih
		GROUP BY StokInd
	)   
	SELECT  
			NULL AS [Owner]
		  , SD.StokInd AS Ind
		  , S.StokKodu
		  , S.StokAdi
		  , SD.StokMiktari AS Miktar
		  , KDVA.KDVOrani as AlisKDVOrani
		  , KDVS.KDVOrani as SatisKDVOrani
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		 LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)










GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeKDVOranliSube] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
    (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE [EnvanterOwner] = @Owner AND
				 Tarih <= @Tarih
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
		FROM dbo.GirisCikisHareketleriEnvanter GCH 
		WHERE [Owner] = @Owner
				AND (Cikan > 0)
				AND Tarih <= @Tarih
		GROUP BY StokInd
	),    
	AlisFiyati(StokInd, Fiyat) AS
	(
		SELECT StokInd, (SELECT TOP 1 
		CASE @IskontoEtkilesin
		WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0) 
		ELSE Fiyat END 
		FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE [Owner] = @Owner
				AND (Giren > 0)
				AND Tarih <= @Tarih
		GROUP BY StokInd
	)
	SELECT  
			@Owner AS [Owner]
		  , SD.StokInd AS Ind
		  , S.StokKodu
		  , S.StokAdi
		  , SD.StokMiktari AS Miktar 
		  , KDVA.KDVOrani as AlisKDVOrani
		  , KDVS.KDVOrani as SatisKDVOrani
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti	
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		 LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)










GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeMerkez] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
    (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE Tarih <= @Tarih
            GROUP BY StokInd
    ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			AND Tarih <= @Tarih
			AND TipInd <> 112
		GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
	(
		SELECT StokInd, (SELECT TOP 1 CASE @IskontoEtkilesin 
		WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0) 
		ELSE Fiyat END 
		FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE (Giren > 0)
			AND Tarih <= @Tarih
		GROUP BY StokInd
	)
	SELECT  
			NULL AS [Owner]
		  , SD.StokInd AS Ind, S.StokKodu
		  , S.StokAdi, SD.StokMiktari AS Miktar 
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		 LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)









GO
CREATE FUNCTION [dbo].[EnvanterRaporuPerakendeSube] 
(
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
      (
            SELECT StokInd
            , SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK)
            WHERE [EnvanterOwner] = @Owner AND 
				Tarih <= @Tarih
            GROUP BY StokInd
      ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE [Owner] = @Owner
				AND (Cikan > 0)
				AND Tarih <= @Tarih
				AND TipInd <> 112
		GROUP BY StokInd
	),  
	AlisFiyati(StokInd, Fiyat) AS
	(
		SELECT StokInd, (SELECT TOP 1 CASE @IskontoEtkilesin 
		WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0) 
		ELSE Fiyat END 
		FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE [Owner] = @Owner
				AND (Giren > 0)
				AND Tarih <= @Tarih
		GROUP BY StokInd
	)

	SELECT  
			@Owner AS [Owner]
		  , SD.StokInd AS Ind, S.StokKodu
		  , S.StokAdi, SD.StokMiktari AS Miktar 
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100)))) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100)) AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVS.KDVOrani /100))) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti 			  
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		 LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = s.Ind
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
	WHERE h.StokInd IS NULL
)







GO
CREATE FUNCTION [dbo].[EnvanterRaporuSatisKDVGruplarinaGoreFIFOMerkez]
(	
	@Tarih DATETIME,
	@IskontoEtkilesin int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari, SatisKDVGrupInd) AS 
	(
		SELECT GCH.StokInd
		      ,SUM(Giren) - SUM(Cikan) AS  StokMiktari, S.SatisKDVGrupInd
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK) INNER JOIN dbo.Stoklar S ON S.Ind = GCH.StokInd
		LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = S.Ind
		WHERE Tarih <= @Tarih
		AND h.StokInd IS NULL
		GROUP BY GCH.StokInd, S.SatisKDVGrupInd
	),
    KDVGrupMiktar(SatisKDVGrupInd, KDVOraniMiktar, KDVOrani)AS 
	(
		SELECT SatisKDVGrupInd, SUM(StokMiktari) AS KDVOraniMiktar, KDVG.KDVOrani
		FROM StokDurumu AS SD INNER JOIN KDVGruplari AS KDVG ON SD.SatisKDVGrupInd = KDVG.Ind
		GROUP BY SatisKDVGrupInd, KDVOrani
	),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd 
    	      ,(SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			  AND Tarih <= @Tarih
		GROUP BY StokInd
	),
	 AlisFiyati(StokInd, Fiyat) AS
    (
	   select StokInd, Fiyat from FIFOAlisFiyati(0, @Tarih)
	)    

	SELECT
			0 as Owner
		  , KDVG.KDVOrani
		  , KDVG.KDVOraniMiktar	as StokMiktari
		  , SUM(SD.StokMiktari * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVG.KDVOrani /100)))) AS SatisMaliyetiKDVHaric
		  , SUM(SD.StokMiktari * (ISNULL(SF.Fiyat, dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVG.KDVOrani /100)))) * (1+(KDVG.KDVOrani/100))) AS SatisMaliyeti
		  , SUM(CASE WHEN SD.StokMiktari > 0 THEN SD.StokMiktari * ISNULL(AF.Fiyat, 0) ELSE 0 END) AS AlisMaliyetiKDVHaric
		  , SUM(CASE WHEN SD.StokMiktari > 0 THEN SD.StokMiktari * (ISNULL(AF.Fiyat, 0)) * (1+(KDVG.KDVOrani/100)) ELSE 0 END) AS AlisMaliyeti
	FROM	StokDurumu SD  WITH(NOLOCK)
			LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
			LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
			INNER JOIN KDVGrupMiktar AS  KDVG  WITH(NOLOCK) ON SD.SatisKDVGrupInd = KDVG.SatisKDVGrupInd
	GROUP BY KDVG.KDVOrani, KDVG.KDVOraniMiktar 
)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuSatisKDVGruplarinaGoreFIFOSube]
(	
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
AS
RETURN
(
		WITH 
		StokDurumu(StokInd, StokMiktari, SatisKDVGrupInd) AS 
		(
			SELECT GCH.StokInd
					,SUM(Giren) - SUM(Cikan) AS  StokMiktari, S.SatisKDVGrupInd
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK) INNER JOIN dbo.Stoklar S ON S.Ind = GCH.StokInd
			LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = S.Ind
			WHERE Tarih <= @Tarih
					AND h.StokInd IS NULL
					AND (@Owner = 0 OR @Owner = GCH.[Owner])
			GROUP BY GCH.StokInd, S.SatisKDVGrupInd
		),
		KDVGrupMiktar(SatisKDVGrupInd, KDVOraniMiktar, KDVOrani)AS 
		(
			SELECT SatisKDVGrupInd, SUM(StokMiktari) AS KDVOraniMiktar, KDVG.KDVOrani
			FROM StokDurumu AS SD  WITH(NOLOCK) INNER JOIN KDVGruplari AS KDVG  WITH(NOLOCK) ON SD.SatisKDVGrupInd = KDVG.Ind
			GROUP BY SatisKDVGrupInd, KDVOrani
		),
		SatisFiyati(StokInd, Fiyat) AS
		(
    		SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE	GCH.Owner = @Owner
					AND Cikan > 0
					AND Tarih <= @Tarih
			GROUP BY StokInd
		),

		 AlisFiyati(StokInd, Fiyat) AS
    (
		select StokInd, Fiyat from FIFOAlisFiyati(@Owner, @Tarih)
	)  
		SELECT
				0 as Owner
				, KDVG.KDVOrani
				, KDVG.KDVOraniMiktar	as StokMiktari
				, SUM(SD.StokMiktari * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVG.KDVOrani /100)))) AS SatisMaliyetiKDVHaric
				, SUM(SD.StokMiktari * (ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVG.KDVOrani /100)))) * (1+(KDVG.KDVOrani/100))) AS SatisMaliyeti
				, SUM(CASE WHEN SD.StokMiktari > 0 THEN SD.StokMiktari * ISNULL(AF.Fiyat, 0) ELSE 0 END) AS AlisMaliyetiKDVHaric
				, SUM(CASE WHEN SD.StokMiktari > 0 THEN SD.StokMiktari * (ISNULL(AF.Fiyat, 0)) * (1+(KDVG.KDVOrani/100)) ELSE 0 END) AS AlisMaliyeti
		FROM	StokDurumu SD  WITH(NOLOCK)
				LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
				LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
				INNER JOIN KDVGrupMiktar AS  KDVG  WITH(NOLOCK) ON SD.SatisKDVGrupInd = KDVG.SatisKDVGrupInd
		GROUP BY KDVG.KDVOrani, KDVG.KDVOraniMiktar 
)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuSatisKDVGruplarinaGoreGOMerkez]
(	
	@Tarih DATETIME,
	@IskontoEtkilesin int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari, SatisKDVGrupInd) AS 
	(
		SELECT GCH.StokInd
		      ,SUM(Giren) - SUM(Cikan) AS  StokMiktari, S.SatisKDVGrupInd
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK) INNER JOIN dbo.Stoklar S ON S.Ind = GCH.StokInd
		LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = S.Ind
		WHERE Tarih <= @Tarih
		AND h.StokInd IS NULL
		GROUP BY GCH.StokInd, S.SatisKDVGrupInd
	),
    KDVGrupMiktar(SatisKDVGrupInd, KDVOraniMiktar, KDVOrani)AS 
	(
		SELECT SatisKDVGrupInd, SUM(StokMiktari) AS KDVOraniMiktar, KDVG.KDVOrani
		FROM StokDurumu AS SD  WITH(NOLOCK) INNER JOIN KDVGruplari AS KDVG  WITH(NOLOCK) ON SD.SatisKDVGrupInd = KDVG.Ind
		GROUP BY SatisKDVGrupInd, KDVOrani
	),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			AND Tarih <= @Tarih
		GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
	(
		SELECT StokInd, (SELECT TOP 1 
		CASE @IskontoEtkilesin 
		WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0)
		ELSE Fiyat END 
		FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Giren > 0
			AND Tarih <= @Tarih
		GROUP BY StokInd
	)  

	SELECT
			0 as Owner
		  , KDVG.KDVOrani
		  , KDVG.KDVOraniMiktar	as StokMiktari
		  , SUM(SD.StokMiktari * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVG.KDVOrani /100)))) AS SatisMaliyetiKDVHaric
		  , SUM(SD.StokMiktari * (ISNULL(SF.Fiyat, dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVG.KDVOrani /100)))) * (1+(KDVG.KDVOrani/100))) AS SatisMaliyeti
		  , SUM(SD.StokMiktari * ISNULL(AF.Fiyat, 0)) AS AlisMaliyetiKDVHaric
		  , SUM(SD.StokMiktari * (ISNULL(AF.Fiyat, 0)) * (1+(KDVG.KDVOrani/100))) AS AlisMaliyeti
	FROM	StokDurumu SD  WITH(NOLOCK)
			LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
			LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
			INNER JOIN KDVGrupMiktar AS  KDVG  WITH(NOLOCK) ON SD.SatisKDVGrupInd = KDVG.SatisKDVGrupInd
	GROUP BY KDVG.KDVOrani, KDVG.KDVOraniMiktar 
)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuSatisKDVGruplarinaGoreGOSube]
(	
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
AS
RETURN
(
		WITH 
		StokDurumu(StokInd, StokMiktari, SatisKDVGrupInd) AS 
		(
			SELECT GCH.StokInd
					,SUM(Giren) - SUM(Cikan) AS  StokMiktari, S.SatisKDVGrupInd
			FROM dbo.GirisCikisHareketleriEnvanter GCH INNER JOIN dbo.Stoklar S  WITH(NOLOCK) ON S.Ind = GCH.StokInd
			LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = S.Ind
			WHERE Tarih <= @Tarih
					AND h.StokInd IS NULL
					AND (@Owner = 0 OR @Owner = GCH.[Owner])
			GROUP BY GCH.StokInd, S.SatisKDVGrupInd
		),
		KDVGrupMiktar(SatisKDVGrupInd, KDVOraniMiktar, KDVOrani)AS 
		(
			SELECT SatisKDVGrupInd, SUM(StokMiktari) AS KDVOraniMiktar, KDVG.KDVOrani
			FROM StokDurumu AS SD  WITH(NOLOCK) INNER JOIN KDVGruplari AS KDVG  WITH(NOLOCK) ON SD.SatisKDVGrupInd = KDVG.Ind
			GROUP BY SatisKDVGrupInd, KDVOrani
		),
		SatisFiyati(StokInd, Fiyat) AS
		(
    		SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Cikan > 0 
				AND owner = @Owner
				AND Tarih <= @Tarih
			GROUP BY StokInd
		),
		AlisFiyati(StokInd, Fiyat) AS
		(
			SELECT StokInd, CASE @IskontoEtkilesin 
			WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)
			ELSE  ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Giren > 0
				AND owner = @Owner
				AND Tarih <= @Tarih
			GROUP BY StokInd
		)
		SELECT
				0 as Owner
				, KDVG.KDVOrani
				, KDVG.KDVOraniMiktar	as StokMiktari
				, SUM(SD.StokMiktari * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVG.KDVOrani /100)))) AS SatisMaliyetiKDVHaric
				, SUM(SD.StokMiktari * (ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVG.KDVOrani /100)))) * (1+(KDVG.KDVOrani/100))) AS SatisMaliyeti
				, SUM(SD.StokMiktari * ISNULL(AF.Fiyat, 0)) AS AlisMaliyetiKDVHaric
				, SUM(SD.StokMiktari * (ISNULL(AF.Fiyat, 0)) * (1+(KDVG.KDVOrani/100))) AS AlisMaliyeti
		FROM	StokDurumu SD  WITH(NOLOCK)
				LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
				LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
				INNER JOIN KDVGrupMiktar AS  KDVG  WITH(NOLOCK) ON SD.SatisKDVGrupInd = KDVG.SatisKDVGrupInd
		GROUP BY KDVG.KDVOrani, KDVG.KDVOraniMiktar 
)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuSatisKDVGruplarinaGoreMerkez]
(	
	@Tarih DATETIME,
	@IskontoEtkilesin int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari, SatisKDVGrupInd) AS 
	(
		SELECT GCH.StokInd
		      ,SUM(Giren) - SUM(Cikan) AS  StokMiktari, S.SatisKDVGrupInd
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK) INNER JOIN dbo.Stoklar S  WITH(NOLOCK) ON S.Ind = GCH.StokInd
		LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = S.Ind
		WHERE Tarih <= @Tarih
		AND h.StokInd IS NULL
		GROUP BY GCH.StokInd, S.SatisKDVGrupInd
	),
    KDVGrupMiktar(SatisKDVGrupInd, KDVOraniMiktar, KDVOrani)AS 
	(
		SELECT SatisKDVGrupInd, SUM(StokMiktari) AS KDVOraniMiktar, KDVG.KDVOrani
		FROM StokDurumu AS SD  WITH(NOLOCK) INNER JOIN KDVGruplari AS KDVG ON SD.SatisKDVGrupInd = KDVG.Ind
		GROUP BY SatisKDVGrupInd, KDVOrani
	),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd 
    	      ,(SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			  AND Tarih <= @Tarih
		GROUP BY StokInd
	),
	AlisFiyati(StokInd, Fiyat) AS
	(
		SELECT StokInd, (SELECT TOP 1 CASE @IskontoEtkilesin 
		WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0) 
		ELSE Fiyat END
		FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE (Giren > 0)
			  AND Tarih <= @Tarih
		GROUP BY StokInd
	)  

	SELECT
			0 as Owner
		  , KDVG.KDVOrani
		  , KDVG.KDVOraniMiktar	as StokMiktari
		  , SUM(SD.StokMiktari * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVG.KDVOrani /100)))) AS SatisMaliyetiKDVHaric
		  , SUM(SD.StokMiktari * (ISNULL(SF.Fiyat, dbo.StokSatisFiyati(NULL, SD.StokInd) * (1 / (1 + KDVG.KDVOrani /100)))) * (1+(KDVG.KDVOrani/100))) AS SatisMaliyeti
		  , SUM(SD.StokMiktari * ISNULL(AF.Fiyat, 0)) AS AlisMaliyetiKDVHaric
		  , SUM(SD.StokMiktari * (ISNULL(AF.Fiyat, 0)) * (1+(KDVG.KDVOrani/100))) AS AlisMaliyeti
	FROM	StokDurumu SD  WITH(NOLOCK)
			LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
			LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
			INNER JOIN KDVGrupMiktar AS  KDVG  WITH(NOLOCK) ON SD.SatisKDVGrupInd = KDVG.SatisKDVGrupInd
	GROUP BY KDVG.KDVOrani, KDVG.KDVOraniMiktar 
)





GO
CREATE FUNCTION [dbo].[EnvanterRaporuSatisKDVGruplarinaGoreSube]
(	
	@Owner INT,
	@Tarih DATETIME,
	@IskontoEtkilesin INT
)
RETURNS TABLE
AS
RETURN
(
		WITH 
		StokDurumu(StokInd, StokMiktari, SatisKDVGrupInd) AS 
		(
			SELECT GCH.StokInd
					,SUM(Giren) - SUM(Cikan) AS  StokMiktari, S.SatisKDVGrupInd
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK) INNER JOIN dbo.Stoklar S  WITH(NOLOCK) ON S.Ind = GCH.StokInd
			LEFT OUTER JOIN dbo.Hesaplar AS h  WITH(NOLOCK) ON h.StokInd = S.Ind
			WHERE Tarih <= @Tarih
					AND h.StokInd IS NULL
					AND (@Owner = 0 OR @Owner = GCH.[Owner])
			GROUP BY GCH.StokInd, S.SatisKDVGrupInd
		),
		KDVGrupMiktar(SatisKDVGrupInd, KDVOraniMiktar, KDVOrani)AS 
		(
			SELECT SatisKDVGrupInd, SUM(StokMiktari) AS KDVOraniMiktar, KDVG.KDVOrani
			FROM StokDurumu AS SD  WITH(NOLOCK) INNER JOIN KDVGruplari AS KDVG  WITH(NOLOCK) ON SD.SatisKDVGrupInd = KDVG.Ind
			GROUP BY SatisKDVGrupInd, KDVOrani
		),
		SatisFiyati(StokInd, Fiyat) AS
		(
    		SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE	GCH.Owner = @Owner
					AND Cikan > 0
					AND Tarih <= @Tarih
			GROUP BY StokInd
		),
		AlisFiyati(StokInd, Fiyat) AS
		(
			SELECT StokInd, (SELECT TOP 1 CASE @IskontoEtkilesin 
			WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0) 
			ELSE Fiyat END
			FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE GCH.Owner = @Owner
					AND (Giren > 0)
					AND Tarih <= @Tarih
			GROUP BY StokInd
		)
		SELECT
				0 as Owner
				, KDVG.KDVOrani
				, KDVG.KDVOraniMiktar	as StokMiktari
				, SUM(SD.StokMiktari * ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVG.KDVOrani /100)))) AS SatisMaliyetiKDVHaric
				, SUM(SD.StokMiktari * (ISNULL(SF.Fiyat, dbo.StokSatisFiyati(@Owner, SD.StokInd) * (1 / (1 + KDVG.KDVOrani /100)))) * (1+(KDVG.KDVOrani/100))) AS SatisMaliyeti
				, SUM(SD.StokMiktari * ISNULL(AF.Fiyat, 0)) AS AlisMaliyetiKDVHaric
				, SUM(SD.StokMiktari * (ISNULL(AF.Fiyat, 0)) * (1+(KDVG.KDVOrani/100))) AS AlisMaliyeti
		FROM	StokDurumu SD  WITH(NOLOCK)
				LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
				LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
				INNER JOIN KDVGrupMiktar AS  KDVG  WITH(NOLOCK) ON SD.SatisKDVGrupInd = KDVG.SatisKDVGrupInd
		GROUP BY KDVG.KDVOrani, KDVG.KDVOraniMiktar 
)





GO
CREATE FUNCTION [dbo].[EnvanterRaporuStokGruplarinaGore] 
(
	@Owner int,
	@stokGrubuInd INT,
	@Tarih DATETIME,
	@IskontoEtkilesin int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
      (
			SELECT GCH.StokInd
            ,SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK) INNER JOIN dbo.Stoklar S  WITH(NOLOCK) ON S.Ind = GCH.StokInd 
			INNER JOIN dbo.Hesaplar Hsp  WITH(NOLOCK) ON GCH.DepoInd = Hsp.Ind
            WHERE  (@Owner = 0 OR @Owner = GCH.[Owner])
            AND (Hsp.StokInd = S.Ind OR Hsp.StokInd IS NULL)
                AND S.GrupInd IN (select Ind from AlisSatis_Gruplar(@stokGrubuInd))
                AND Tarih <= @Tarih
            GROUP BY GCH.StokInd
      ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Cikan > 0
			AND ([Owner] = @Owner  OR @Owner = 0)
			AND Tarih <= @Tarih
			AND TipInd <> 112
		GROUP BY StokInd
	),  
	AlisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd,  (SELECT TOP 1 CASE @IskontoEtkilesin 
		WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0)  
		ELSE Fiyat END 
		FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat    		
        FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
		WHERE Giren > 0
			AND ([Owner] = @Owner  OR @Owner = 0)
			AND Tarih <= @Tarih
		GROUP BY StokInd
	) 
	SELECT  
			DISTINCT CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner]
		  , SD.StokInd AS Ind
		  , S.StokKodu
		  , S.StokAdi
		  , SD.StokMiktari AS Miktar 
		  , ISNULL(SF.Fiyat , 0) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , 0)) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , 0) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , 0) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti  	
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) On SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)




GO
CREATE FUNCTION [dbo].[EnvanterRaporuStokGruplarinaGoreFIFO] 
(
	@Owner int,
	@stokGrubuInd INT,
	@Tarih DATETIME,
	@IskontoEtkilesin int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
      (
           SELECT GCH.StokInd
            ,SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK) INNER JOIN dbo.Stoklar S ON S.Ind = GCH.StokInd INNER JOIN dbo.Hesaplar Hsp  WITH(NOLOCK) ON GCH.DepoInd = Hsp.Ind
            WHERE  (@Owner = 0 OR @Owner = GCH.[Owner])
            AND (Hsp.StokInd = S.Ind OR Hsp.StokInd IS NULL)
                AND S.GrupInd IN (select Ind from AlisSatis_Gruplar(@stokGrubuInd))
                AND Tarih <= @Tarih
            GROUP BY GCH.StokInd
      ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, (SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleriEnvanter  WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleri GCH  WITH(NOLOCK)
		WHERE Cikan > 0 
			AND ([Owner] = @Owner  OR @Owner = 0)
			AND TipIndAltHareket IN (6, 39, 504)
			AND Tarih <= @Tarih
		GROUP BY StokInd
	)  ,
    AlisFiyati(StokInd, Fiyat) AS
    (
	select StokInd, Fiyat from FIFOAlisFiyati(@Owner, @Tarih)
	)  
	     
	SELECT  DISTINCT CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner],  SD.StokInd AS Ind, S.StokKodu
		, S.StokAdi, SD.StokMiktari AS Miktar 
		, ISNULL(SF.Fiyat,  dbo.SuAnkiStokSatisFiyati(@Owner, SD.StokInd)) * (1 / (1 + KDVS.KDVOrani /100)) AS SatisFiyatiKDVHaric
		, (SD.StokMiktari * ISNULL(SF.Fiyat, dbo.SuAnkiStokSatisFiyati(@Owner, SD.StokInd)) * (1 / (1 + KDVS.KDVOrani /100))) AS  SatisMaliyetiKDVHaric 
		, (ISNULL(AF.Fiyat, 0)) AS AlisFiyatiKDVHaric
		, (CASE WHEN SD.StokMiktari > 0 THEN SD.StokMiktari *ISNULL(AF.Fiyat, 0) ELSE 0 END) AS  AlisMaliyetiKDVHaric
		, ISNULL(SF.Fiyat,  dbo.SuAnkiStokSatisFiyati(@Owner, SD.StokInd)) AS SatisFiyati
		, (SD.StokMiktari * ISNULL(SF.Fiyat, dbo.SuAnkiStokSatisFiyati(@Owner, SD.StokInd))) AS  SatisMaliyeti 
		, (ISNULL(AF.Fiyat, 0) * (1 + (KDVA.KDVOrani/100))) AS AlisFiyati
		, (CASE WHEN SD.StokMiktari > 0 THEN SD.StokMiktari *ISNULL(AF.Fiyat, 0)* (1 + (KDVA.KDVOrani/100)) ELSE 0 END) AS  AlisMaliyeti
	FROM StokDurumu SD  WITH(NOLOCK)
	     LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) ON SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)






GO
CREATE FUNCTION [dbo].[EnvanterRaporuStokGruplarinaGoreGO] 
(
	@Owner int,
	@stokGrubuInd INT,
	@Tarih DATETIME,
	@IskontoEtkilesin int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH 
	StokDurumu(StokInd, StokMiktari) AS 
      (
			SELECT GCH.StokInd
            ,SUM(Giren) - SUM(Cikan) AS  StokMiktari
            FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK) INNER JOIN dbo.Stoklar S  WITH(NOLOCK) ON S.Ind = GCH.StokInd INNER JOIN dbo.Hesaplar Hsp  WITH(NOLOCK) ON GCH.DepoInd = Hsp.Ind
            WHERE  (@Owner = 0 OR @Owner = GCH.[Owner])
            AND (Hsp.StokInd = S.Ind OR Hsp.StokInd IS NULL)
                AND S.GrupInd IN (select Ind from AlisSatis_Gruplar(@stokGrubuInd))
                AND Tarih <= @Tarih
            GROUP BY GCH.StokInd
      ),
    SatisFiyati(StokInd, Fiyat) AS
    (
    
		SELECT StokInd, ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Cikan > 0 
				AND ([Owner] = @Owner  OR @Owner = 0)
				AND Tarih <= @Tarih
			GROUP BY StokInd

	),  
	AlisFiyati(StokInd, Fiyat) AS
    (
    	SELECT StokInd, CASE @IskontoEtkilesin 
			WHEN 1 THEN ISNULL(SUM(Miktar*Fiyat - HareketBaslikIskonto*Miktar- HareketlerIskonto) / NULLIF(SUM(Miktar),0), 0)
			ELSE  ISNULL(SUM(Miktar*Fiyat) / NULLIF(SUM(Miktar),0), 0) END AS Fiyat
			FROM dbo.GirisCikisHareketleriEnvanter GCH  WITH(NOLOCK)
			WHERE Giren > 0
				AND ([Owner] = @Owner  OR @Owner = 0)
				AND Tarih <= @Tarih
			GROUP BY StokInd
	) 
	SELECT  
			DISTINCT CASE @Owner WHEN 0 THEN NULL ELSE @Owner END AS [Owner]
		  , SD.StokInd AS Ind
		  , S.StokKodu
		  , S.StokAdi
		  , SD.StokMiktari AS Miktar 
		  , ISNULL(SF.Fiyat , 0) AS SatisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , 0)) AS  SatisMaliyetiKDVHaric
		  , ISNULL(AF.Fiyat , 0) AS AlisFiyatiKDVHaric
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0)) AS  AlisMaliyetiKDVHaric  
		  , ISNULL(SF.Fiyat , 0) * (1 + (KDVS.KDVOrani/100))AS SatisFiyati
		  , (SD.StokMiktari * ISNULL(SF.Fiyat , 0) * (1 + (KDVS.KDVOrani/100))) AS  SatisMaliyeti
		  , ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100)) AS AlisFiyati
		  , (SD.StokMiktari * ISNULL(AF.Fiyat , 0) * (1 + (KDVA.KDVOrani/100))) AS  AlisMaliyeti  	
	FROM StokDurumu SD  WITH(NOLOCK)
		 LEFT JOIN SatisFiyati SF  WITH(NOLOCK) ON SD.StokInd = SF.StokInd
		 LEFT JOIN AlisFiyati AF  WITH(NOLOCK) On SD.StokInd = AF.StokInd
		 INNER JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SD.StokInd 
		 LEFT JOIN KDVGruplari KDVS  WITH(NOLOCK) ON KDVS.Ind = S.SatisKDVGrupInd
		 LEFT JOIN KDVGruplari KDVA  WITH(NOLOCK) ON KDVA.Ind = S.AlisKDVGrupInd
)





GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[EnvanterSonAlisFiyatlari] 
(	
	@StokInd int,
    @Tarih datetime,
	@DepoInds nvarchar(max)

)
RETURNS TABLE
AS
RETURN
(
	SELECT 
		g.Fiyat,
		brm.BirimAdi,
		g.Owner,
		(g.Miktar * g.Carpan) as Miktar,
		g.Tarih
	FROM
		GirisCikisHareketleri as g  WITH(NOLOCK) LEFT OUTER JOIN
		dbo.Stoklar AS s  WITH(NOLOCK) ON s.Ind = g.StokInd LEFT OUTER JOIN
		Birimler as brm  WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
	WHERE 
		g.TipIndAltHareket = 3
		AND g.StokInd = @StokInd AND Tarih<=@Tarih
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[EnvanterStokMiktarlari] 
(	
	@StokInd int,
	@Tarih datetime,
	@DepoInds nvarchar(max)
)
RETURNS @Dokum TABLE 
(
	Owner int,
	StokInd int,
	GirilenMiktar decimal(28,8),
	CikilanMiktar decimal(28,8)
)
AS
BEGIN
	WITH HareketDokumu(Owner, StokInd, GirilenMiktar, CikilanMiktar, Tarih)	
	AS
	(
		SELECT 
			Hesaplar.Owner as Owner,
			h.StokInd,
			SUM(Hareketler.Miktar * Hareketler.Carpan) as GirilenMiktar,
			0 as CikilanMiktar,
			b.Tarih
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Hareketler  WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON b.Ind  = h.BaslikInd
		LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd 
		WHERE 
		b.Aktif != 0	
		AND h.TipInd = 3
		AND Hareketler.TipInd = 29	
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))  
		AND Hareketler.StokInd = @StokInd
		AND h.StokInd = @StokInd			
		AND b.Tarih <= @Tarih
		AND b.TipInd = 101
		GROUP BY 
			Hesaplar.Owner,
			h.StokInd,
			b.Tarih

		UNION ALL

		SELECT 
			Hesaplar.Owner as Owner,
			h.StokInd,
			0 as GirilenMiktar,
			SUM(Hareketler.Miktar * Hareketler.Carpan) as CikilanMiktar,
			b.Tarih
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Hareketler  WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd 
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON b.Ind = h.BaslikInd 
		LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd 
		WHERE 
		b.TipInd = 102
		AND b.Aktif != 0
		AND h.TipInd = 6
		AND h.StokInd = @StokInd	 
		AND Hareketler.TipInd = 30 
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND Hareketler.StokInd = @StokInd
		AND b.Tarih <= @Tarih
		GROUP BY 
			Hesaplar.Owner,
			h.StokInd,
			b.Tarih
		
		UNION ALL
		SELECT 
			Hesaplar.Owner as Owner,
			h.StokInd,
			SUM(Hareketler.Miktar * Hareketler.Carpan) as GirilenMiktar,
			0 as CikilanMiktar,
			b.Tarih
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 103
		LEFT JOIN Hareketler  WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd
		LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd 
		WHERE h.TipInd = 2 
		AND h.StokInd = @StokInd
		AND Hareketler.TipInd = 29
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))	
		AND Hareketler.StokInd = @StokInd
		AND b.Tarih <= @Tarih
		AND b.TipInd = 103
		GROUP BY 
			Hesaplar.Owner,
			h.StokInd,
			b.Tarih

		UNION ALL
		SELECT 
			Hesaplar.Owner as Owner,
			h.StokInd,
			0 as GirilenMiktar,
			SUM(Hareketler.Miktar * Hareketler.Carpan) as CikilanMiktar,
			b.Tarih
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 104
		LEFT JOIN Hareketler  WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd
		LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd 
		WHERE h.TipInd = 5 
		AND h.StokInd = @StokInd
		AND Hareketler.TipInd = 30
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND Hareketler.StokInd = @StokInd
		AND b.Tarih <= @Tarih
		AND b.TipInd = 104
		GROUP BY 
			Hesaplar.Owner,
			h.StokInd,
			b.Tarih

		UNION ALL

		SELECT 
			h.Owner as Owner,
			h.StokInd,
			CASE WHEN(h.SayimMiktari > h.Miktar)
				THEN (h.SayimMiktari - h.Miktar) 
				ELSE 0
				END as GirilenMiktar,
			CASE WHEN(h.SayimMiktari < h.Miktar)
				THEN (h.Miktar - h.SayimMiktari) 
				ELSE 0
				END as CikilanMiktar,
			b.Tarih
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 113
		WHERE h.TipInd = 112 
		AND h.StokInd = @StokInd
		AND b.Tarih <= @Tarih
		AND h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.TipInd = 113

		UNION ALL
		
		SELECT
		h.Owner as Owner,
		h.StokInd,
		0 as GirilenMiktar,
		h.Fark as CikilanMiktar,
		h.Tarih
		FROM EskiVardiyaSayacHareketleri as h  WITH(NOLOCK)
		WHERE h.TipInd = 39
		AND h.StokInd = @StokInd
		AND h.Tarih <= @Tarih 

		UNION ALL

		SELECT
		h.Owner as Owner,
		h.StokInd as StokInd,
		0 as GirilenMiktar,
		(h.Miktar * h.Carpan) as CikilanMiktar,
		b.Tarih
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Basliklar as b  WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd AND b.TipInd = 108
		WHERE h.TipInd = 40
		AND h.StokInd = @StokInd
		AND b.Tarih <= @Tarih

		UNION ALL
		
		SELECT
		h.Owner as Owner,
		h.StokInd as StokInd,
		0 as GirilenMiktar,
		(h.Miktar * h.Carpan) as CikilanMiktar,
		h.GirisTarihi as Tarih
		FROM Hareketler as h  WITH(NOLOCK)
		LEFT JOIN Hareketler  WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind
		WHERE h.TipInd = 504
		AND Hareketler.StokInd = @StokInd
		AND h.StokInd = @StokInd
		AND h.GirisTarihi <= @Tarih 
	) 	
	INSERT INTO @Dokum
		SELECT 
			h1.Owner, h1.StokInd, h1.GirilenMiktar, h1.CikilanMiktar
		FROM HareketDokumu as h1  WITH(NOLOCK)
		
	

		DECLARE @x int
		SELECT @x=COUNT(*) FROM @Dokum

		IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
		NULL as Owner,
		@StokInd as StokInd,
		0 as GirilenMiktar,
		0 as CikilanMiktar
		

		
RETURN
END
GO
CREATE FUNCTION [dbo].[EnvanterStokSatisFiyati] 
(	
	@Owner int,
	@StokKodu nvarchar(max)
)


RETURNS TABLE 
AS
RETURN 
(
	select tutar as Fiyat, Owner, null as StokKodu 
	from stokDetaylari 
	where tipInd = 501 
		and stokInd = (select Ind from stoklar  WITH(NOLOCK) where stokkodu = @StokKodu)

	Union all
	
	select tutar as Fiyat, Owner, null as StokKodu 
	from stokDetaylari  WITH(NOLOCK)
	where tipInd = 501 and Owner = @Owner
		and stokInd = (select Ind from stoklar where stokkodu = @StokKodu)
)


GO

CREATE FUNCTION [dbo].[EnvanterStokSatisFiyati2] 
(	
	@Owner int,
	@StokKodu nvarchar(max)
)


RETURNS TABLE 
AS
RETURN 
(
	select top 1 Fiyat, null as StokKodu ,null as Owner
	from satisHareketleri  WITH(NOLOCK)
	where stokInd = (select Ind from stoklar  WITH(NOLOCK) where stokKodu = @StokKodu and Owner = @Owner)

	Union all

	select top 1 Fiyat, null as StokKodu, null as Owner
	from satisHareketleri  WITH(NOLOCK)
	where stokInd = (select Ind from stoklar  WITH(NOLOCK) where stokKodu = @StokKodu)

)


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[EnvStokMiktarlariButun] 
(	
	@Tarih datetime,
	@DepoInds nvarchar(max)
)
RETURNS @Dokum TABLE 
(
	Owner int,
	--Ind int,
	StokInd int,
	GirilenMiktar decimal(28,8),
	CikilanMiktar decimal(28,8),
	Tarih datetime,
	Fiyat decimal(28,8),
	TipInd int
)
AS
BEGIN
	INSERT INTO @Dokum


		SELECT
			g.Owner,
			g.StokInd,
			SUM(g.Giren) as GirilenMiktar,
			SUM(g.Cikan) as CikilanMiktar,
			g.Tarih,
			g.Fiyat,
			CASE WHEN (g.TipIndAltHareket IN (3, 6, 2, 5))
				THEN g.TipIndAltHareket 
				ELSE g.TipInd END 
				 as TipInd

		FROM
			GirisCikisHareketleri as g  WITH(NOLOCK)
		WHERE
			g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))  			
			AND g.Tarih <= @Tarih
			--AND g.TipIndAltHareket IN (3, 6, 2, 5)
		GROUP BY 
				g.Owner,
				g.StokInd,
				g.Tarih,
				g.Fiyat,
				g.TipIndAltHareket,g.TipInd
-- eski hali aşağıda

--	SELECT * FROM(
--		SELECT
--			g.Owner,
--			g.StokInd,
--			SUM(g.Giren) as GirilenMiktar,
--			SUM(g.Cikan) as CikilanMiktar,
--			g.Tarih,
--			g.Fiyat,
--			g.TipIndAltHareket as TipInd
--		FROM
--			GirisCikisHareketleri as g
--		WHERE
--			g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))  			
--			AND g.Tarih <= @Tarih
--			AND g.TipIndAltHareket IN (3, 6, 2, 5)
--		GROUP BY 
--				g.Owner,
--				g.StokInd,
--				g.Tarih,
--				g.Fiyat,
--				g.TipIndAltHareket
--
--		UNION ALL
--		
--		SELECT
--			g.Owner,
--			g.StokInd,
--			SUM(g.Giren) as GirilenMiktar,
--			SUM(g.Cikan) as CikilanMiktar,
--			g.Tarih,
--			g.Fiyat,
--			g.TipInd
--		FROM
--			GirisCikisHareketleri as g
--		WHERE
--			g.Tarih <= @Tarih
--			AND g.TipInd IN (39, 40, 504)
--		GROUP BY 
--				g.Owner,
--				g.StokInd,
--				g.Tarih,
--				g.Fiyat,
--				g.TipInd) as d ORDER BY d.Tarih DESC
	DECLARE @x int
	SELECT @x=COUNT(*) FROM @Dokum

	IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
		NULL as Owner,
		--0 as Ind,
		0 as StokInd,
		--NULL as AnaBirimAdi,
		0 as GirilenMiktar,
		0 as CikilanMiktar,
		NULL as Tarih,
		0 as Fiyat,
		-1 as TipInd
	RETURN
END




GO
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[EnvStokMiktarlariButunSonFiyat] 
(	
	@Tarih datetime,
	@DepoInds nvarchar(max)
)
RETURNS @Dokum TABLE 
(
	Owner int,
	HareketInd int,
	--Ind int,
	StokInd int,
	GirilenMiktar decimal(28,8),
	CikilanMiktar decimal(28,8),
	Tarih datetime,
	Fiyat decimal(28,8),
	TipInd int
)
AS
BEGIN
	INSERT INTO @Dokum


		SELECT
			g.Owner,
			g.HareketInd,
			g.StokInd,
			SUM(g.Giren) as GirilenMiktar,
			SUM(g.Cikan) as CikilanMiktar,
			g.Tarih,
			g.Fiyat,
			CASE WHEN (g.TipIndAltHareket IN (3, 6, 2, 5))
				THEN g.TipIndAltHareket 
				ELSE g.TipInd END 
				 as TipInd

		FROM
			GirisCikisHareketleriSonFiyat as g  WITH(NOLOCK)
		WHERE
			g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))  			
			AND g.Tarih <= @Tarih
			--AND g.TipIndAltHareket IN (3, 6, 2, 5)
		GROUP BY 
				g.Owner,
				g.HareketInd,
				g.StokInd,
				g.Tarih,
				g.Fiyat,
				g.TipIndAltHareket,g.TipInd
-- eski hali aşağıda

--	SELECT * FROM(
--		SELECT
--			g.Owner,
--			g.StokInd,
--			SUM(g.Giren) as GirilenMiktar,
--			SUM(g.Cikan) as CikilanMiktar,
--			g.Tarih,
--			g.Fiyat,
--			g.TipIndAltHareket as TipInd
--		FROM
--			GirisCikisHareketleri as g
--		WHERE
--			g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))  			
--			AND g.Tarih <= @Tarih
--			AND g.TipIndAltHareket IN (3, 6, 2, 5)
--		GROUP BY 
--				g.Owner,
--				g.StokInd,
--				g.Tarih,
--				g.Fiyat,
--				g.TipIndAltHareket
--
--		UNION ALL
--		
--		SELECT
--			g.Owner,
--			g.StokInd,
--			SUM(g.Giren) as GirilenMiktar,
--			SUM(g.Cikan) as CikilanMiktar,
--			g.Tarih,
--			g.Fiyat,
--			g.TipInd
--		FROM
--			GirisCikisHareketleri as g
--		WHERE
--			g.Tarih <= @Tarih
--			AND g.TipInd IN (39, 40, 504)
--		GROUP BY 
--				g.Owner,
--				g.StokInd,
--				g.Tarih,
--				g.Fiyat,
--				g.TipInd) as d ORDER BY d.Tarih DESC
	DECLARE @x int
	SELECT @x=COUNT(*) FROM @Dokum

	IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
		NULL as Owner,
		0 as HareketInd,
		--0 as Ind,
		0 as StokInd,
		--NULL as AnaBirimAdi,
		0 as GirilenMiktar,
		0 as CikilanMiktar,
		NULL as Tarih,
		0 as Fiyat,
		-1 as TipInd
	RETURN
END



GO


Create FUNCTION [dbo].[EnvStokMiktarlariCariBtn] 
(	
	@CariInd int,
	@TarihBaslangic datetime,
	@TarihBitis datetime,
	@Owner int 
)
RETURNS @dokum TABLE
(
    StokInd int,
	Owner int, 
	TipInd int, 
	Fiyat decimal(28,8),
	GirilenMiktar decimal(28,8), 
	CikilanMiktar decimal(28,8)
) 
AS
BEGIN 
If ( @Owner = 0)
	BEGIN
	INSERT INTO @dokum
		SELECT g.StokInd
			   ,g.Owner as Owner
			   ,g.TipInd as TipInd
			   ,g.Fiyat as Fiyat
			   ,SUM(CASE WHEN g.Giren IS NULL THEN 0
						ELSE g.Giren END) AS GirilenMiktar
			   ,SUM(CASE WHEN g.Cikan IS NULL THEN 0
						ELSE g.Cikan END) AS CikilanMiktar
						
		FROM GirisCikisHareketleri g  WITH(NOLOCK)
			 LEFT JOIN Stoklar s ON g.StokInd = s.Ind
		WHERE 
			  g.Tarih >= @TarihBaslangic AND g.Tarih <= @TarihBitis AND 
			 (g.TipInd IN (5,6,39,40,504) OR TipIndAltHareket IN (2,3)) AND 
			  g.StokInd IN (SELECT DISTINCT StokInd FROM GirisCikisHareketleri  WITH(NOLOCK) WHERE TipIndAltHareket IN (2,3) AND BaslikInd IN (
																												   SELECT Ind FROM Basliklar  WITH(NOLOCK) WHERE HesapInd = @CariInd))
		GROUP BY g.StokInd, g.Owner, g.TipInd, g.Fiyat
	END
ELSE
	BEGIN
	INSERT INTO @dokum
     		SELECT g.StokInd
			   ,g.Owner as Owner
			   ,g.TipInd as TipInd
			   ,g.Fiyat as Fiyat
			   ,SUM(CASE WHEN g.Giren IS NULL THEN 0
						ELSE g.Giren END) AS GirilenMiktar
			   ,SUM(CASE WHEN g.Cikan IS NULL THEN 0
						ELSE g.Cikan END) AS CikilanMiktar
		FROM GirisCikisHareketleri g  WITH(NOLOCK)
			 LEFT JOIN Stoklar s  WITH(NOLOCK) ON g.StokInd = s.Ind
		WHERE 
			  g.Owner = @Owner AND 
			  g.Tarih >= @TarihBaslangic AND g.Tarih <= @TarihBitis AND 
			 (g.TipInd IN (5,6,39,40,504) OR TipIndAltHareket IN (2,3)) AND 
			  g.StokInd IN (SELECT DISTINCT StokInd    FROM GirisCikisHareketleri  WITH(NOLOCK) WHERE TipIndAltHareket IN (2,3) AND BaslikInd IN (
																												   SELECT Ind FROM Basliklar  WITH(NOLOCK) WHERE HesapInd = @CariInd))
		GROUP BY g.StokInd, g.Owner, g.TipInd, g.Fiyat
	END 

return


end




GO



GO
CREATE FUNCTION [dbo].[EskiSatisKasasiSatilanIrsaliyeUrunler] 
(	
	@BaslikInd int
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT 
		TOP 100 PERCENT
		Owner,
		StokInd,
		StokKodu,
		StokAdi,
		GrupInd,
		GrupAdi,
		Miktar,
		Carpan,
		Fiyat,
		Miktar*Carpan*Fiyat AS Tutar
	FROM EskiSatisKasalariSatilanUrunlerListesi  WITH(NOLOCK)
	WHERE EskiSatisKasalariSatilanUrunlerListesi.BaslikInd = @BaslikInd AND EskiSatisKasalariSatilanUrunlerListesi.TipInd = 5
	GROUP BY
		Owner,
		StokInd,
		StokKodu,
		StokAdi,
		GrupInd,
		GrupAdi,
		Miktar,
		Carpan,
		Fiyat
	ORDER BY
		GrupInd
)

GO
CREATE FUNCTION [dbo].[EskiSatisKasasiSatilanUrunler] 
(	
	@BaslikInd int
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT 
		TOP 100 PERCENT
		Owner,
		StokInd,
		StokKodu,
		StokAdi,
		GrupInd,
		GrupAdi,
		SUM(Miktar) AS Miktar,
		Carpan,
		Fiyat,
		SUM(Miktar*Carpan*Fiyat) AS Tutar,
		KDVOrani,
		Tarih
	FROM EskiSatisKasalariSatilanUrunlerListesi  WITH(NOLOCK)
	WHERE EskiSatisKasalariSatilanUrunlerListesi.BaslikInd = @BaslikInd
	GROUP BY
		Owner,
		StokInd,
		StokKodu,
		StokAdi,
		GrupInd,
		GrupAdi,
		KDVOrani,
		Tarih,
		--Miktar,
		Carpan,
		Fiyat
	ORDER BY
		GrupInd
)


GO
CREATE FUNCTION [dbo].[EskiSatisKasasiSGGSatilanUrunler] 
(	
	@BaslikInd int
)
RETURNS 
TABLE 
AS
RETURN 
(	
	SELECT 
		EskiSatisKasalariSatilanUrunlerListesi.Owner,
		EskiSatisKasalariSatilanUrunlerListesi.StokInd,
		EskiSatisKasalariSatilanUrunlerListesi.StokKodu,	
		EskiSatisKasalariSatilanUrunlerListesi.StokAdi,	
		EskiSatisKasalariSatilanUrunlerListesi.GrupInd,
		EskiSatisKasalariSatilanUrunlerListesi.GrupAdi,
		SUM(EskiSatisKasalariSatilanUrunlerListesi.Miktar) AS Miktar,
		EskiSatisKasalariSatilanUrunlerListesi.Fiyat,
		SUM(Miktar*Carpan*Fiyat) AS Tutar
	FROM EskiSatisKasalariSatilanUrunlerListesi  WITH(NOLOCK)
	WHERE EskiSatisKasalariSatilanUrunlerListesi.BaslikInd = @BaslikInd
	GROUP BY
		EskiSatisKasalariSatilanUrunlerListesi.Owner,
		EskiSatisKasalariSatilanUrunlerListesi.StokInd,
		EskiSatisKasalariSatilanUrunlerListesi.StokKodu,	
		EskiSatisKasalariSatilanUrunlerListesi.StokAdi,	
		EskiSatisKasalariSatilanUrunlerListesi.GrupInd,
		EskiSatisKasalariSatilanUrunlerListesi.GrupAdi,
		EskiSatisKasalariSatilanUrunlerListesi.Miktar,
		--EskiSatisKasalariSatilanUrunlerListesi.Carpan,
		EskiSatisKasalariSatilanUrunlerListesi.Fiyat

)



GO
CREATE FUNCTION [dbo].[EskiSatisKasasiSGGSatilanUrunOrani] 
(	
	@BaslikInd int
)
RETURNS 
TABLE 
AS
RETURN 
(
	WITH StokDokumu(Owner,Miktar,Tutar)
	AS
	(
		SELECT 
			Owner,
			SUM(Miktar) AS Miktar,
			SUM(Miktar*Fiyat) AS Tutar
		FROM EskiSatisKasalariSatilanUrunlerListesi  WITH(NOLOCK)
		WHERE EskiSatisKasalariSatilanUrunlerListesi.BaslikInd = @BaslikInd
		GROUP BY
			Owner
	)

	SELECT 
		EskiSatisKasalariSatilanUrunlerListesi.Owner,
		EskiSatisKasalariSatilanUrunlerListesi.GrupInd,
		EskiSatisKasalariSatilanUrunlerListesi.GrupAdi,
		SUM(EskiSatisKasalariSatilanUrunlerListesi.Miktar) AS Miktar,
		SUM((EskiSatisKasalariSatilanUrunlerListesi.Miktar/StokDokumu.Miktar))*100 AS MiktarYuzde,
		SUM(EskiSatisKasalariSatilanUrunlerListesi.Miktar*EskiSatisKasalariSatilanUrunlerListesi.Carpan*EskiSatisKasalariSatilanUrunlerListesi.Fiyat) AS Tutar,
		SUM((EskiSatisKasalariSatilanUrunlerListesi.Miktar*EskiSatisKasalariSatilanUrunlerListesi.Carpan*EskiSatisKasalariSatilanUrunlerListesi.Fiyat/StokDokumu.Tutar))*100 AS TutarYuzde
	FROM EskiSatisKasalariSatilanUrunlerListesi  WITH(NOLOCK),StokDokumu  WITH(NOLOCK)
	WHERE EskiSatisKasalariSatilanUrunlerListesi.BaslikInd = @BaslikInd
	GROUP BY
		EskiSatisKasalariSatilanUrunlerListesi.Owner,
		EskiSatisKasalariSatilanUrunlerListesi.GrupInd,
		EskiSatisKasalariSatilanUrunlerListesi.GrupAdi,
		--EskiSatisKasalariSatilanUrunlerListesi.Miktar,
		--EskiSatisKasalariSatilanUrunlerListesi.Carpan,
		--EskiSatisKasalariSatilanUrunlerListesi.Fiyat,
		StokDokumu.Miktar,
		StokDokumu.Tutar

)



GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[EskiVardiyaAkaryakitMiktari] 
(	
	@vardiyaKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Dokum(StokInd,Owner,StokKodu,StokAdi,SatisFiyati,Cikan,CikanTutar)
	AS
	(
		SELECT 
			DISTINCT e.StokInd,
			null as Owner,
			s.StokKodu,
			s.StokAdi,
			e.Fiyat as SatisFiyati,
			SUM(e.Fark) as Cikan,
			SUM(CASE WHEN(e.Tutar >0)
				THEN e.Tutar
				ELSE e.Fiyat * e.Fark
			END) as CikanTutar
		FROM EskiVardiyaSayacHareketleri as e  WITH(NOLOCK)
		LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = e.StokInd
		LEFT JOIN StokDetaylari as sd  WITH(NOLOCK) ON sd.StokInd = s.Ind AND sd.IsAnaFiyat ='True'
		WHERE e.VardiyaKartInd IN (SELECT * FROM fnSplit(@vardiyaKartInds,','))
		GROUP BY
			e.StokInd,
			s.StokKodu,
			s.StokAdi,
			e.Fiyat
	)

	SELECT * 
	FROM Dokum as d
	WHERE d.Cikan > 0
)




GO
CREATE FUNCTION [dbo].[EskiVardiyaDigerCikisKayit] 
(	
	@vKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(

SELECT
		Owner,
		TipInd,
		(CASE WHEN(TipInd = 13) THEN CariHesapKodu
			WHEN (TipInd = 17) THEN BankaHesapKodu
			WHEN TipInd = 18 THEN PersonelHesapKodu
			WHEN TipInd = 26 THEN GiderKodu
			ELSE GiderKodu END) AS GiderKodu,
		(CASE WHEN(TipInd = 13) THEN CariHesapAdi
			WHEN TipInd = 17 THEN BankaHesapAdi
			WHEN TipInd = 18 THEN PersonelHesapAdi
			WHEN TipInd = 26 THEN GiderAdi
			ELSE GiderAdi END) AS GiderAdi,
		Aciklama,
		SUM(ISNULL(Kur, 1) * Tutar) AS Tutar
	FROM Hareketler  WITH(NOLOCK)
	WHERE TipInd IN (13,17,18,26) AND VardiyaKartInd IN (SELECT * FROM fnSplit(@vKartInds,','))
	GROUP BY 
		Owner,
		TipInd,
		GiderKodu,
		GiderAdi,
		CariHesapKodu,
		CariHesapAdi,
		PersonelHesapKodu,
		PersonelHesapAdi,
		BankaHesapKodu,
		BankaHesapAdi,
		Aciklama
		
)

GO



GO
CREATE FUNCTION [dbo].[EskiVardiyaDigerGirisKayit] 
(	
	@vKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(

SELECT
		Owner,
		TipInd,
		(CASE WHEN(TipInd = 9) THEN CariHesapKodu
		    WHEN (TipInd = 533) THEN CariHesapKodu
			WHEN (TipInd = 11) THEN CariHesapKodu
			WHEN TipInd = 19 THEN BankaHesapKodu
			WHEN TipInd = 20 THEN PersonelHesapKodu
			WHEN TipInd = 25 THEN GelirKodu
			ELSE GelirKodu END) AS GelirKodu,
		(CASE WHEN(TipInd = 9) THEN CariHesapAdi
		    WHEN TipInd = 533 THEN CariHesapAdi
			WHEN TipInd = 11 THEN CariHesapAdi
			WHEN TipInd = 19 THEN BankaHesapAdi
			WHEN TipInd = 20 THEN PersonelHesapAdi
			WHEN TipInd = 25 THEN GelirAdi
			ELSE GelirAdi END) AS GelirAdi,
		Aciklama,
		SUM(ISNULL(Kur, 1) * Tutar) AS Tutar
	FROM Hareketler  WITH(NOLOCK)
	WHERE TipInd IN (9,533,11,19,20,25) AND VardiyaKartInd IN (SELECT * FROM fnSplit(@vKartInds,','))
	GROUP BY 
		Owner,
		TipInd,
		GelirKodu,
		GelirAdi,
		CariHesapKodu,
		CariHesapAdi,
		PersonelHesapKodu,
		PersonelHesapAdi,
		BankaHesapKodu,
		BankaHesapAdi,
		Aciklama
		
)

GO
CREATE FUNCTION [dbo].[FaturaBaslikBilgisindenStokSayimKontrol]
(
	@BaslikInd int,
	@Tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	select top 1 Ind, Owner
	from Basliklar  WITH(NOLOCK)
	where Ind in
	(
		select BaslikInd
		from Hareketler  WITH(NOLOCK)
		where StokInd in
		(
			select StokInd from Hareketler  WITH(NOLOCK) where BaslikInd = @BaslikInd
		)
	)
	and TipInd = 113 and Tarih >= @Tarih
)

GO
CREATE FUNCTION [dbo].[FaturaBaslikToplamTutarKDVsiz] 
(
	@BaslikInd int
)
RETURNS DECIMAL(28,13)
AS
BEGIN

	DECLARE @BaslikToplam DECIMAL(28,13)		 

	select @BaslikToplam =
	(
		select
			sum(
				case
					when Miktar is null then coalesce(Tutar/(1+KDVOrani/100),0)
					when Miktar is not null then coalesce(Miktar*Fiyat,0)
				end
			)
		from Hareketler  WITH(NOLOCK)
		where BaslikInd = @BaslikInd
	)
	
	RETURN ISNULL(@BaslikToplam, 0)
END


GO
CREATE FUNCTION [dbo].[FaturaDengeRaporuMerkez] 
(
	@Owner int,
	@BaslangicTarih DATETIME,
	@BitisTarih DATETIME
)
RETURNS TABLE 
AS
RETURN 
(

WITH 
	SatilanStoklar(Owner,StokInd, StokKodu, StokAdi, SatisMiktar, SatisTutar) AS
	(
		SELECT H.Owner,S.Ind, S.StokKodu, S.StokAdi	, SUM(H.YeniEndeks - H.EskiEndeks) AS SatisMiktar, SUM(H.Tutar) AS SatisTutar
		FROM Hareketler H  WITH(NOLOCK)
			LEFT JOIN SayacaAitDepoStok SA  WITH(NOLOCK) ON SA.Ind = H.SayacInd
			LEFT JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SA.StokInd
		WHERE 
			H.Tutar <> 0 AND
			H.TeslimTarihi BETWEEN @BaslangicTarih AND @BitisTarih
		GROUP BY H.Owner, S.Ind,  S.StokKodu, S.StokAdi
	), 
	Irsaliyeler(StokInd, IrsaliyeMiktar, IrsaliyeTutar) AS
	(
		SELECT SS.StokInd, Sum(Miktar) AS IrsaliyeMiktar, Sum(Tutar) AS IrsaliyeTutar
		FROM Hareketler H  WITH(NOLOCK) INNER JOIN Basliklar B  WITH(NOLOCK) ON B.Ind = H.BaslikInd
			LEFT JOIN SatilanStoklar SS  WITH(NOLOCK) ON SS.StokInd = H.StokInd
		WHERE B.TipInd = 111 
			AND B.Tarih BETWEEN @BaslangicTarih AND @BitisTarih
		GROUP BY SS.StokInd
	)
	--,
	--Faturalar(StokInd, FaturaMiktar, FaturaTutar) AS
	--(
	--	SELECT SS.StokInd, Sum(Miktar) AS FaturaMiktar, Sum(Tutar) AS FaturaTutar
	--	FROM Hareketler H INNER JOIN Basliklar B ON B.Ind = H.BaslikInd
	--		INNER JOIN SatilanStoklar SS ON SS.StokInd = H.StokInd
	--	WHERE B.TipInd = 102 
	--		AND B.Tarih BETWEEN @BaslangicTarih AND @BitisTarih
	--	GROUP BY SS.StokInd
	--)

SELECT SS.Owner,
		CASE WHEN (SS.Owner IS NULL OR SS.Owner = 0) THEN 'Merkez' ELSE Sb.SubeAdi END AS SubeAdi,
		SS.StokKodu, SS.StokAdi, SS.SatisMiktar, SS.SatisTutar
		, ISNULL(I.IrsaliyeMiktar, 0) AS IrsaliyeMiktar
		, ISNULL(I.IrsaliyeTutar, 0) AS IrsaliyeTutar
		--, ISNULL(F.FaturaMiktar, 0) AS FaturaMiktar
		--, ISNULL(F.FaturaTutar, 0) AS FaturaTutar
		, SS.SatisMiktar - ISNULL(I.IrsaliyeMiktar, 0)  AS FarkMiktar
		, SS.SatisTutar - ISNULL(I.IrsaliyeTutar, 0)  AS FarkTutar
		FROM SatilanStoklar SS  WITH(NOLOCK)
		LEFT JOIN Irsaliyeler I ON SS.StokInd = I.StokInd
		--LEFT JOIN Faturalar F ON SS.StokInd = F.StokInd
		LEFT JOIN Subeler Sb  WITH(NOLOCK) ON SS.Owner = Sb.Ind
)












GO
CREATE FUNCTION [dbo].[FaturaDengeRaporuSube] 
(
	@Owner int,
	@BaslangicTarih DATETIME,
	@BitisTarih DATETIME
)
RETURNS TABLE 
AS
RETURN 
(

WITH 
	SatilanStoklar(Owner,StokInd, StokKodu, StokAdi, SatisMiktar, SatisTutar) AS
	(
		SELECT H.Owner,S.Ind, S.StokKodu, S.StokAdi	, SUM(H.YeniEndeks - H.EskiEndeks) AS SatisMiktar, SUM(H.Tutar) AS SatisTutar
		FROM Hareketler H  WITH(NOLOCK)
			LEFT JOIN SayacaAitDepoStok SA  WITH(NOLOCK) ON SA.Ind = H.SayacInd
			LEFT JOIN Stoklar S  WITH(NOLOCK) ON S.Ind = SA.StokInd
		WHERE 
			H.Tutar <> 0 AND
			H.TeslimTarihi BETWEEN @BaslangicTarih AND @BitisTarih
			AND H.Owner = @Owner
		GROUP BY H.Owner, S.Ind,  S.StokKodu, S.StokAdi
	), 
	Irsaliyeler(StokInd, IrsaliyeMiktar, IrsaliyeTutar) AS
	(
		SELECT SS.StokInd, Sum(Miktar) AS IrsaliyeMiktar, Sum(Tutar) AS IrsaliyeTutar
		FROM Hareketler H  WITH(NOLOCK) INNER JOIN Basliklar B  WITH(NOLOCK) ON B.Ind = H.BaslikInd
			LEFT JOIN SatilanStoklar SS  WITH(NOLOCK) ON SS.StokInd = H.StokInd
		WHERE B.TipInd = 111 
			AND B.Tarih BETWEEN @BaslangicTarih AND @BitisTarih
			AND B.Owner = @Owner
		GROUP BY SS.StokInd
	)
	--,
	--Faturalar(StokInd, FaturaMiktar, FaturaTutar) AS
	--(
	--	SELECT SS.StokInd, Sum(Miktar) AS FaturaMiktar, Sum(Tutar) AS FaturaTutar
	--	FROM Hareketler H INNER JOIN Basliklar B ON B.Ind = H.BaslikInd
	--		INNER JOIN SatilanStoklar SS ON SS.StokInd = H.StokInd
	--	WHERE B.TipInd = 102 
	--		AND B.Tarih BETWEEN @BaslangicTarih AND @BitisTarih
	--	GROUP BY SS.StokInd
	--)

SELECT SS.Owner, Sb.SubeAdi, SS.StokKodu, SS.StokAdi, SS.SatisMiktar, SS.SatisTutar
		, ISNULL(I.IrsaliyeMiktar, 0) AS IrsaliyeMiktar
		, ISNULL(I.IrsaliyeTutar, 0) AS IrsaliyeTutar
		--, ISNULL(F.FaturaMiktar, 0) AS FaturaMiktar
		--, ISNULL(F.FaturaTutar, 0) AS FaturaTutar
		, SS.SatisMiktar - ISNULL(I.IrsaliyeMiktar, 0)  AS FarkMiktar
		, SS.SatisTutar - ISNULL(I.IrsaliyeTutar, 0)  AS FarkTutar
		, SS.StokInd 
		FROM SatilanStoklar SS  WITH(NOLOCK)
		LEFT JOIN Irsaliyeler I  WITH(NOLOCK) ON SS.StokInd = I.StokInd
		--LEFT JOIN Faturalar F  WITH(NOLOCK) ON SS.StokInd = F.StokInd
		LEFT JOIN Subeler Sb  WITH(NOLOCK) ON SS.Owner = Sb.Ind
)












GO
CREATE FUNCTION FinansalOngoruRaporu
(	
		 @IslemTipi         INT 
		,@BaslangicTarihi	SMALLDATETIME
		,@BitisTarihi		SMALLDATETIME
		,@CariInd_af		INT  
		,@CariIndsf_d		INT  
		,@CariIndvf_d		INT  
		,@KKIndkk_d			INT  
		,@CariIndcek_d		INT  
		,@af_d				BIT  
		,@sf_d				BIT  
		,@vf_d				BIT  
		,@kk_d				BIT	 
		,@cek_d				BIT	 
)
RETURNS 
@Sonuc TABLE 
(
	 Owner int
	,Ind int
	,HesapInd int
	,HesapKodu NVARCHAR(50)
	,HesapAdi NVARCHAR(100)
	,Tipi NVARCHAR(50)
	,Alacak DECIMAL (28,8)		
	,Borc DECIMAL (28,8)
	,Bakiye DECIMAL (28,8)
	,VadeTarihi DATETIME  
	,Iskonto	DECIMAL (28,8)
)
AS
BEGIN
	DECLARE @_BitisTarihi DATETIME
	SET @_BitisTarihi = DATEADD(day, 1, @BitisTarihi)
	
	

	DECLARE @_Sonuc TABLE
	(
		 Owner int
		,Ind int
		,HesapInd int
		,HesapKodu NVARCHAR(50)
		,HesapAdi NVARCHAR(100)
		,Tipi NVARCHAR(50)
		,Alacak DECIMAL (28,8)		
		,Borc DECIMAL (28,8)
		,Bakiye DECIMAL (28,8)
		,VadeTarihi DATETIME 
		,Iskonto	DECIMAL (28,8)		 
	)
	

	--Burada fatura bazlı getiriyorum ikinci gridde gösterilecekleri cariye göre gruplamalıyım.
	IF(@af_d = 1)
	BEGIN
		INSERT INTO @_Sonuc
		SELECT 
			 hsp.Owner		AS [Owner]
			,alf.Ind		AS Ind
			,alf.HesapInd	AS HesapInd
			,hsp.HesapKodu	AS HesapKodu
			,hsp.HesapAdi	AS HesapAdi
			,'AF'			AS Tipi
			,0				AS Alacak
			,alf.Tutar		AS Borc
			,(0 - Tutar)	AS Bakiye
			,ISNULL(alf.OdemeTarihi,alf.Tarih) AS VadeTarihi 
			,alf.Iskonto		AS Iskonto
		FROM 
			AktifAlisFaturalari alf  WITH(NOLOCK),hesaplar hsp  WITH(NOLOCK)
		WHERE 
			alf.HesapInd = hsp.Ind
			AND alf.OdemeTarihi BETWEEN @BaslangicTarihi AND @BitisTarihi	
			AND (@CariInd_af = -1 OR alf.HesapInd = @CariInd_af)
	END
	
	IF(@sf_d = 1)
	BEGIN
		INSERT INTO @_Sonuc
		SELECT 
			 hsp.Owner		AS [Owner]
			,asf.Ind		AS Ind 
			,asf.HesapInd	AS HesapInd
			,hsp.HesapKodu	AS HesapKodu
			,hsp.HesapAdi	AS HesapAdi  
			,'SF'			AS Tipi
			,asf.Tutar		AS Alacak
			,0				AS Borc
			,(Tutar - 0)	AS Bakiye
			,ISNULL(asf.OdemeTarihi,asf.Tarih) AS VadeTarihi   
			,asf.ToplamIskonto	AS Iskonto			
		FROM 
			AktifSatisFaturalari asf  WITH(NOLOCK),hesaplar hsp  WITH(NOLOCK)
		WHERE 
			asf.HesapInd = hsp.Ind
			AND asf.OdemeTarihi BETWEEN @BaslangicTarihi AND @BitisTarihi
			AND (@CariIndsf_d = -1 OR asf.HesapInd = @CariIndsf_d)			
	END


	IF(@vf_d = 1)
	BEGIN
		INSERT INTO @_Sonuc
		SELECT 
			 hsp.Owner
			,vrs.BaslikInd Ind
			,vrs.CariInd HesapInd
			,hsp.HesapKodu HesapKodu
			,hsp.HesapAdi HesapAdi
			,'V' AS Tipi
			,vrs.Tutar AS Alacak
			,0 AS Borc
			,(Tutar - 0) Bakiye
			,vrs.Tarih VadeTarihi
			,0	AS Iskonto						  
		FROM 
			VeresiyelerFaturalandirilmamis vrs  WITH(NOLOCK) ,hesaplar hsp  WITH(NOLOCK)
		WHERE
			vrs.CariInd = hsp.Ind
			AND vrs.Tarih BETWEEN @BaslangicTarihi AND @BitisTarihi
			AND (@CariIndvf_d = -1 OR vrs.CariInd = @CariIndvf_d)
	END

	IF(@kk_d = 1)
	BEGIN
		INSERT INTO @_Sonuc
	    SELECT 	
			 hsp.Owner
			,H.Ind
			,Hsp.Ind HesapInd
			,Hsp.HesapKodu
			,hsp.HesapAdi
			,'KK' AS Tipi
			,H.Tutar as ALACAK
			,0 AS Borc
			,(H.Tutar) as Bakiye
			,H.VadeTarihi
			,0	AS Iskonto							
		FROM 
			Hareketler AS H  WITH(NOLOCK)
			LEFT JOIN Basliklar AS B  WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind
			LEFT JOIN Subeler AS S  WITH(NOLOCK) ON H.Owner=S.Ind
			LEFT JOIN Hesaplar AS Hsp  WITH(NOLOCK) ON Hsp.Ind = H.KKHesapInd
		WHERE  
			H.VadeTarihi BETWEEN  @BaslangicTarihi AND @BitisTarihi
			AND (h.Tutar != 0) AND H.TipInd =10
			AND (@KKIndkk_d = -1 OR H.KKHesapInd = @KKIndkk_d)
	END


	IF(@cek_d = 1)
	BEGIN
		INSERT INTO @_Sonuc
		SELECT 
			 hsp.Owner
			,h.Ind
			,h.CariHesapInd HesapInd
			,hsp.HesapKodu HesapKodu
			,hsp.HesapAdi HesapAdi
			,'Cek' AS Tipi
			,(CASE WHEN h.TipInd = 11 THEN  h.Tutar  ELSE 0.00 END  ) AS Alacak
			,(CASE WHEN h.TipInd = 11 THEN  0.00  ELSE h.Tutar END ) AS Borc
			,(CASE WHEN h.TipInd = 11 THEN  (h.Tutar - 0.00) ELSE (0.00 - h.Tutar) END ) AS Bakiye
			,h.VadeTarihi VadeTarihi
			,0	AS Iskonto
		FROM 
			dbo.Hareketler h  WITH(NOLOCK), hesaplar hsp  WITH(NOLOCK)
		WHERE 
			h.CariHesapInd = hsp.Ind
			AND h.TipInd IN (11,14) AND DurumInd = 4
			AND h.VadeTarihi BETWEEN @BaslangicTarihi AND @BitisTarihi
			AND (@CariIndcek_d = -1 OR h.CariHesapInd = @CariIndcek_d)	

	END

	IF(@IslemTipi=0)
	BEGIN
		INSERT INTO @Sonuc
		SELECT * FROM @_Sonuc		
	END
	ELSE IF(@IslemTipi=1)
	BEGIN
		INSERT INTO @Sonuc
		SELECT 
			 (SELECT [Owner] FROM dbo.Hesaplar  WITH(NOLOCK) WHERE Ind = HesapInd) HesapKodu
			,0 Ind
			,HesapInd 
			,(SELECT HesapKodu FROM dbo.Hesaplar  WITH(NOLOCK) WHERE Ind = HesapInd) HesapKodu 
			,(SELECT HesapAdi FROM dbo.Hesaplar  WITH(NOLOCK) WHERE Ind = HesapInd) HesapAdi 
			,Tipi 
			,SUM(Alacak) Alacak
			,SUM(Borc)  Borc
			,SUM(Bakiye) Bakiye
			,NULL VadeTarihi
			,SUM(Iskonto) Iskonto
		FROM 
			@_Sonuc
		--WHERE ([owner] IS NULL ) OR (@Owner = 0  OR [owner] = @Owner)		
		GROUP BY Tipi,HesapInd

	END


	RETURN 
END


--SELECT 
--	* 
--FROM 
--	FinansalOngoruRaporu(1,'1960/01/01','2010/10/10',1867,-1,-1,-1,-1,0,0,1,0,0)


--	SELECT 
--		 Tipi 
--		,HesapInd int
--		,HesapKodu 
--		,HesapAdi 
--		,SUM(Alacak) Alacak
--		,SUM(Borc)  Borc
--		,SUM(Bakiye) Bakiye
--	FROM 
--		FinansalOngoruRaporuAyrinti(@BaslangicTarihi,@BitisTarihi,@CariInd_af,@CariIndsf_d,@CariIndvf_d,@KKIndkk_d,@CariIndcek_d,@af_d,@sf_d,@vf_d,@kk_d,@cek_d)
--	GROUP BY Tipi,HesapInd,HesapKodu,HesapAdi


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO


CREATE FUNCTION [dbo].[FiyatBazindaIrsaliyeListesi] 
(
	@cariInd int,
	@baslangic datetime,
	@bitis datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Dokum(StokInd,Durum,FaturalandirilmaDurumu,Miktar,Fiyat,Tutar)
	AS
	(
		SELECT
		h.StokInd,
		h.Durum,
		h.FaturalandirilmaDurumu,
		SUM(h.Miktar * h.Carpan) as Miktar,
		h.Fiyat,
		(SUM(h.Miktar * h.Carpan) * h.Fiyat) as Tutar
	FROM IrsaliyeVeVeresiyeFisHareketleri as h  WITH(NOLOCK)
	WHERE 
		h.HesapInd = @cariInd
		AND h.IslemTarihi >= @baslangic
		AND h.IslemTarihi <= @bitis 
	GROUP BY 
		h.StokInd,
		h.Fiyat,
		h.FaturalandirilmaDurumu,
		h.Durum
	)

	SELECT 
		null as Owner,
		d.StokInd,
		s.StokKodu,
		s.StokAdi,				
		d.Miktar,
		d.Fiyat,
		d.Tutar,
		d.Durum,
		CAST(d.FaturalandirilmaDurumu as bit) as FaturalandirilmaDurumu
	FROM Dokum as d  WITH(NOLOCK)
	LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = d.StokInd
	WHERE 0=0
)

GO
CREATE FUNCTION [dbo].[GelirGrubuToplamTutarKDVsiz] 
(
	@GelirGrubuInd int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS DECIMAL(28,13)
AS
BEGIN

	DECLARE @GelirlerToplami DECIMAL(28,13)		 

	;WITH CTE(Ind, ParentInd, Level)
	AS
	(
		SELECT g1.Ind, g1.ParentInd, 0 AS Level
		FROM GelirGruplari AS g1  WITH(NOLOCK)
		WHERE g1.Ind=@GelirGrubuInd

		UNION ALL

		SELECT g1.Ind, g1.ParentInd, Level + 1
		FROM GelirGruplari as g1  WITH(NOLOCK)
		INNER JOIN CTE AS d 
			ON g1.ParentInd = d.Ind
	)

	select @GelirlerToplami =
	(
		select
			sum(
				case
					when Miktar is null then coalesce(Tutar/(1+KDVOrani/100),0)
					when Miktar is not null then coalesce(Miktar*Fiyat,0)
				end
			)
		from Hareketler  WITH(NOLOCK)
		where BaslikInd in
		(
			select Ind 
			from Basliklar  WITH(NOLOCK)
			where TipInd = 102 and (Tarih>=@BaslangicTarihi and Tarih<@BitisTarihi) and GelirInd in
			(
				select Ind from Hesaplar  WITH(NOLOCK) where GrupInd in
				(
					select Ind
					from CTE  WITH(NOLOCK)
				)
			)
		)
	)
	
	RETURN ISNULL(@GelirlerToplami, 0)
END


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GelirHareketDevir] 
(	
	@GelirInd int,
	@Tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH BaslikMatrah(BaslikInd, Matrah)
	AS
	(
		SELECT 
			Basliklar.Ind as BaslikInd, 
			SUM(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto) as Matrah
		FROM Hareketler  WITH(NOLOCK)
		LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind 
		LEFT JOIN Tipler  WITH(NOLOCK) ON Basliklar.TipInd=Tipler.Ind
		WHERE Basliklar.GelirInd=@GelirInd AND Hareketler.TipInd IN (6)
		GROUP BY
			Basliklar.Ind
	)

	SELECT
		Basliklar.Owner as Owner,
		Basliklar.TipInd,
		Basliklar.Tarih as GirisTarihi,
		Tipler.TipAdi  as Yer,
		Basliklar.Aciklama as Aciklama,
		SUM(
				(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto-(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto)*Basliklar.Iskonto/BaslikMatrah.Matrah)*(1+Hareketler.KDVOrani/100)
			) AS Tutar
	FROM Hareketler  WITH(NOLOCK)
	LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
	LEFT JOIN BaslikMatrah  WITH(NOLOCK) ON BaslikMatrah.BaslikInd=Basliklar.Ind
	LEFT JOIN Tipler  WITH(NOLOCK) ON Basliklar.TipInd=Tipler.Ind
	WHERE Basliklar.GelirInd = @GelirInd 
	AND Basliklar.Tarih < @Tarih
	GROUP BY
			Basliklar.Owner,
			Basliklar.TipInd,
			Basliklar.Tarih,
			Tipler.TipAdi,
			Basliklar.Aciklama,
			Basliklar.Iskonto	

	UNION ALL	

	SELECT 
		Hareketler.Owner,
		Hareketler.TipInd,
		Hareketler.GirisTarihi,
		Tipler.TipAdi as Yer,
		Hareketler.Aciklama,
		Hareketler.Tutar
		FROM Hareketler  WITH(NOLOCK)
		LEFT JOIN Tipler  WITH(NOLOCK) ON Hareketler.TipInd=Tipler.Ind
		WHERE Hareketler.GelirInd=@GelirInd  
		AND Hareketler.GirisTarihi < @Tarih
)
GO
CREATE FUNCTION [dbo].[GelirHareketDokumu] 
(
	@GelirInd int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(
		WITH BaslikMatrah(BaslikInd, Matrah)
		AS
		(
			SELECT 
				Basliklar.Ind as BaslikInd, 
				SUM(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto) as Matrah
			FROM Hareketler  WITH(NOLOCK)
			LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind 
			LEFT JOIN Tipler  WITH(NOLOCK) ON Basliklar.TipInd=Tipler.Ind
			WHERE Basliklar.GelirInd=@GelirInd AND Hareketler.TipInd = 6
			GROUP BY
				Basliklar.Ind
		)
		
		SELECT 
			Basliklar.Owner,
			Basliklar.TipInd,
			Basliklar.Tarih As GirisTarihi,
			Tipler.TipAdi as Yer,
			Basliklar.Aciklama,
			SUM(
				(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto-(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto)*Basliklar.Iskonto/BaslikMatrah.Matrah)*(1+Hareketler.KDVOrani/100)
			) AS Tutar,
        Hareketler.CariHesapAdi
		FROM Hareketler  WITH(NOLOCK)
		LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
		LEFT JOIN BaslikMatrah  WITH(NOLOCK) ON BaslikMatrah.BaslikInd=Basliklar.Ind
		LEFT JOIN Tipler  WITH(NOLOCK) ON Basliklar.TipInd=Tipler.Ind
		WHERE Basliklar.GelirInd=@GelirInd 
						AND Basliklar.Tarih >= @BaslangicTarihi
						AND Basliklar.Tarih < @BitisTarihi
		GROUP BY
			Basliklar.Owner,
			Basliklar.TipInd,
			Basliklar.Tarih,
			Tipler.TipAdi,
			Basliklar.Aciklama,
			Basliklar.Iskonto,
            Hareketler.CariHesapAdi

		UNION ALL

		SELECT 
		Hareketler.Owner,
		Hareketler.TipInd,
		Hareketler.GirisTarihi,
		Tipler.TipAdi as Yer,
		Hareketler.Aciklama,
		Hareketler.Tutar,
        Hareketler.CariHesapAdi
		FROM Hareketler  WITH(NOLOCK)
		LEFT JOIN Tipler  WITH(NOLOCK) ON Hareketler.TipInd=Tipler.Ind
		WHERE Hareketler.GelirInd=@GelirInd  AND Hareketler.TipInd != 511
						AND Hareketler.GirisTarihi >= @BaslangicTarihi
						AND Hareketler.GirisTarihi < @BitisTarihi



		UNION ALL

				SELECT 
				Hareketler.Owner,
				Hareketler.TipInd,
				b.Tarih As GirisTarihi,
				Tipler.TipAdi as Yer,
				Hareketler.Aciklama,
				CASE WHEN ( b.Iskonto in (0, NULL))
				THEN Hareketler.Tutar
				ELSE			
				(Hareketler.Tutar/((Hareketler.KDVOrani+100)/100) - ((Hareketler.Tutar/((Hareketler.KDVOrani+100)/100))/(f.Matrah/f.FaturaIskonto)))*((Hareketler.KDVOrani+100)/100)
				END,
                Hareketler.CariHesapAdi
				FROM Hareketler  WITH(NOLOCK)
				LEFT JOIN Tipler  WITH(NOLOCK) ON Hareketler.TipInd=Tipler.Ind
				LEFT JOIN Basliklar as b  WITH(NOLOCK) on b.Ind = Hareketler.BaslikInd
				LEFT JOIN FaturaOzet2 as f  WITH(NOLOCK) ON f.Ind = Hareketler.BaslikInd
				WHERE Hareketler.GelirInd=@GelirInd  And Hareketler.TipInd = 511
								AND b.Tarih >= @BaslangicTarihi
								AND b.Tarih < @BitisTarihi
		)



GO
CREATE FUNCTION [dbo].[GelirHareketleriToplam] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(

	SELECT GelirHareketleri.* 
		FROM GelirHareketleri  WITH(NOLOCK)
		LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = GelirHareketleri.GelirInd
		LEFT JOIN GelirGruplari  WITH(NOLOCK) ON GelirGruplari.Ind = Hesaplar.GrupInd
		WHERE 
			GelirHareketleri.GirisTarihi >= @BaslangicTarihi
			AND GelirHareketleri.GirisTarihi <= @BitisTarihi
)



GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go

CREATE FUNCTION [dbo].[GelirIcmalDetayRapor] 
(
	@GrupInd nvarchar(MAX),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
SELECT 
GelirHareketleri.Owner,
GelirHareketleri.GelirKodu,
GelirHareketleri.GelirAdi,
GelirHareketleri.Aciklama,
GelirHareketleri.GirisTarihi,
GelirHareketleri.Tutar as Tutar
   
FROM GelirHareketleri  WITH(NOLOCK)
INNER JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = GelirHareketleri.GelirInd
INNER JOIN GelirGruplari  WITH(NOLOCK) ON GelirGruplari.Ind = Hesaplar.GrupInd
WHERE GelirGruplari.Ind  IN (SELECT * FROM fnSplit(@GrupInd,','))
	 AND GelirHareketleri.GirisTarihi >= @BaslangicTarihi
	 AND GelirHareketleri.GirisTarihi < @BitisTarihi
GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go

CREATE FUNCTION [dbo].[GelirIcmalDetayRaporKDVHaric] 
(
	@GrupInd nvarchar(MAX),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
SELECT
GelirHareketleriKDVHaric.Owner,
GelirHareketleriKDVHaric.GelirKodu,
GelirHareketleriKDVHaric.GelirAdi,
GelirHareketleriKDVHaric.Aciklama,
GelirHareketleriKDVHaric.GirisTarihi,
GelirHareketleriKDVHaric.Tutar as Tutar
   
FROM GelirHareketleriKDVHaric  WITH(NOLOCK)
INNER JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = GelirHareketleriKDVHaric.GelirInd
INNER JOIN GelirGruplari  WITH(NOLOCK) ON GelirGruplari.Ind = Hesaplar.GrupInd
WHERE GelirGruplari.Ind  IN (SELECT * FROM fnSplit(@GrupInd,','))
	 AND GelirHareketleriKDVHaric.GirisTarihi >= @BaslangicTarihi
	 AND GelirHareketleriKDVHaric.GirisTarihi < @BitisTarihi
GO
CREATE FUNCTION [dbo].[GelirIcmalRapor] 
(
	@GrupInd nvarchar(max),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(
SELECT 
	Hareketler.Owner,
	Hareketler.Ind AS GrupInd,
	Hareketler.GrupAdi,
	Hareketler.SiraNo AS GrupSiraNo,
	Hareketler.ParentInd AS ParentGrupInd,
	GelirGruplariParent.SiraNo AS ParentGrupSiraNo,
	SUM(Hareketler.Tutar) AS Tutar,
	CAST(0 as bit) AS IsAltToplam
FROM 
	(
		SELECT 
			GelirHareketleri.Owner,
			GelirGruplari.Ind,
			GelirGruplari.GrupAdi,
			GelirGruplari.SiraNo,
			GelirGruplari.ParentInd,
			CAST(0 as bit) as IsAltToplam,
			GelirHareketleri.Tutar as Tutar
		FROM GelirHareketleri  WITH(NOLOCK)
		INNER JOIN Hesaplar  WITH(NOLOCK) ON (Hesaplar.Ind = GelirHareketleri.GelirInd)
		INNER JOIN GelirGruplari  WITH(NOLOCK) ON (GelirGruplari.Ind = Hesaplar.GrupInd)
		WHERE 
			GelirGruplari.Ind IN (SELECT * FROM fnSplit(@GrupInd,',')) AND 
			GelirHareketleri.GirisTarihi >= @BaslangicTarihi AND 
			GelirHareketleri.GirisTarihi < @BitisTarihi
	) AS Hareketler
LEFT JOIN GelirGruplari GelirGruplariParent  WITH(NOLOCK) ON (GelirGruplariParent.Ind = Hareketler.ParentInd)
GROUP BY 
	Hareketler.Owner,
	Hareketler.Ind,
	Hareketler.GrupAdi,
	Hareketler.SiraNo,
	Hareketler.ParentInd,
	GelirGruplariParent.SiraNo
)
GO
CREATE FUNCTION [dbo].[GelirIcmalRaporKDVHaric] 
(
	@GrupInd nvarchar(max),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(
SELECT 
	Hareketler.Owner,
	Hareketler.Ind AS GrupInd,
	Hareketler.GrupAdi,
	Hareketler.SiraNo AS GrupSiraNo,
	Hareketler.ParentInd AS ParentGrupInd,
	GelirGruplariParent.SiraNo AS ParentGrupSiraNo,
	SUM(Hareketler.Tutar) AS Tutar,
	CAST(0 as bit) AS IsAltToplam
FROM 
	(
		SELECT 
			GelirHareketleriKDVHaric.Owner,
			GelirGruplari.Ind,
			GelirGruplari.GrupAdi,
			GelirGruplari.SiraNo,
			GelirGruplari.ParentInd,
			CAST(0 as bit) as IsAltToplam,
			GelirHareketleriKDVHaric.Tutar as Tutar
		FROM GelirHareketleriKDVHaric  WITH(NOLOCK)
		INNER JOIN Hesaplar  WITH(NOLOCK) ON (Hesaplar.Ind = GelirHareketleriKDVHaric.GelirInd)
		INNER JOIN GelirGruplari  WITH(NOLOCK) ON (GelirGruplari.Ind = Hesaplar.GrupInd)
		WHERE 
			GelirGruplari.Ind IN (SELECT * FROM fnSplit(@GrupInd,',')) AND 
			GelirHareketleriKDVHaric.GirisTarihi >= @BaslangicTarihi AND 
			GelirHareketleriKDVHaric.GirisTarihi < @BitisTarihi
	) AS Hareketler
LEFT JOIN GelirGruplari GelirGruplariParent  WITH(NOLOCK) ON (GelirGruplariParent.Ind = Hareketler.ParentInd)
GROUP BY 
	Hareketler.Owner,
	Hareketler.Ind,
	Hareketler.GrupAdi,
	Hareketler.SiraNo,
	Hareketler.ParentInd,
	GelirGruplariParent.SiraNo
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GelirKartIcmalHareket] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(
	select 
		Owner ,
		GelirInd,
		GelirKodu,
		GelirAdi,
		sum(Tutar) as Tutar
	from GelirHareketleri  WITH(NOLOCK)
	where GirisTarihi >= @BaslangicTarihi and GirisTarihi < @BitisTarihi
	GROUP BY  GelirInd, GelirKodu, GelirAdi,Owner

 
)




GO
CREATE FUNCTION [dbo].[GenelCekRaporu] 
(
	@baslangicTarihi datetime,
	@bitisTarihi datetime,
	@bugununTarihi datetime,
	@cekIslemTipi nvarchar(100),
	@cekDurumlari nvarchar(100),
	@listelemeTipi int,
	@vadeDurumSecenekleri int,
	@enAzTutar decimal,
	@enCokTutar decimal,
	@ciroCariInd int,
	@ciroBankaInd int
)
RETURNS @Dokum TABLE
(
	Owner int,
	CekNo nvarchar(50),
	TipInd int,
	GirisTarihi datetime,
	VadeTarihi datetime,
	CariHesapInd int,
	CariHesapKodu nvarchar(50),
	CariHesapAdi nvarchar(100),
	BankaHesapInd int,
	BankaHesapKodu nvarchar(50),
	BankaHesapAdi nvarchar(100),
	CiroCariInd int,
	CiroCariKodu nvarchar(50),
	CiroCariAdi nvarchar(100),
	CiroBankaInd int,
	CiroBankaKodu nvarchar(50),
	CiroBankaAdi nvarchar(100),
	Alinan decimal(18,2),
	Verilen decimal(18,2),
	Aciklama nvarchar(100),
	BankaAciklama nvarchar(100),
	CekSahibi nvarchar(100),
	Durum nvarchar(50),
	IslemTarihi DATETIME
)
AS
BEGIN

IF(@ciroCariInd = 0 AND @ciroBankaInd = 0)
	BEGIN
	IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE Hareketler.TipInd    IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.DurumInd = 4))
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi < @bugununTarihi
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar<0)
   		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		END
    ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
      	BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE 
			Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND  Hareketler.IslemTarihi  >=  @bitisTarihi		
			AND Hareketler.VadeTarihi = @bugununTarihi
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN		
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE 
			 Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			 AND Hareketler.Senet = 0
			AND  ( ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null) or  Hareketler.IslemTarihi is null)		
			AND Hareketler.VadeTarihi > @bugununTarihi
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi < @bitisTarihi
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN		
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd
		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.DurumInd = 4))
			AND Hareketler.Senet = 0
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN		
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE  Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND Hareketler.IslemTarihi < @bitisTarihi
			AND Hareketler.VadeTarihi < @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler		 WITH(NOLOCK) 
			WHERE  Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)
			AND Hareketler.VadeTarihi = @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND Hareketler.IslemTarihi < @bitisTarihi
			AND Hareketler.VadeTarihi > @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler		  WITH(NOLOCK) 
			WHERE Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar
			END
		END
	END
ELSE IF(@ciroCariInd > 0 AND @ciroBankaInd = 0)
	BEGIN
	IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd
		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler		 WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)
			AND Hareketler.VadeTarihi < @bugununTarihi)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)		
			--AND Hareketler.VadeTarihi < @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi < @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi
			--AND Hareketler.VadeTarihi < @bugununTarihi
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
			'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler		 WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)	
			AND Hareketler.VadeTarihi = @bugununTarihi)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)	
			--AND Hareketler.VadeTarihi = @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR(Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi = @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi		
			--AND Hareketler.VadeTarihi = @bugununTarihi
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)
			AND Hareketler.VadeTarihi > @bugununTarihi)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)		
			--AND Hareketler.VadeTarihi > @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi > @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi
			--AND Hareketler.VadeTarihi > @bugununTarihi
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE
				(Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
				AND Hareketler.Senet = 0
				AND ((Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
				OR  (Hareketler.Senet = 0
				AND Hareketler.DurumInd = 4))
				AND Hareketler.GirisTarihi  <  @bitisTarihi
			)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi
			--)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	END
ELSE IF (@ciroCariInd = 0 AND @ciroBankaInd > 0)
	BEGIN
	IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd
		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi < @bugununTarihi)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi
			--AND Hareketler.VadeTarihi < @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
   		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi < @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi
			--AND Hareketler.VadeTarihi < @bugununTarihi
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d   WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler		 WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi = @bugununTarihi)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi	
			--AND Hareketler.VadeTarihi = @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR(Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi = @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi	
			--AND Hareketler.VadeTarihi = @bugununTarihi
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi > @bugununTarihi)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi	
			--AND Hareketler.VadeTarihi > @bugununTarihi)
			END
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi > @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi	
			--AND Hareketler.VadeTarihi > @bugununTarihi
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN	
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi)   
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)
			--)  
			END
		END          
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
			'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	END
ELSE IF(@ciroCariInd > 0 AND @ciroBankaInd > 0)
	BEGIN
	IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd
		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi		
			AND Hareketler.VadeTarihi < @bugununTarihi)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi < @bugununTarihi)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi < @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler	  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi = @bugununTarihi)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi = @bugununTarihi)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi = @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi > @bugununTarihi)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi > @bugununTarihi)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi > @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 0
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 0
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
		)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.Senet = 0 
		AND (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.Senet = 0
		AND (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 0
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.IslemTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.IslemTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE (Hareketler.Senet = 0
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi		
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi < @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 0
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR(Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR(Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 0
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 0
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE (Hareketler.Senet = 0
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi = @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi = @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi = @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 0
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 0
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 0
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE (Hareketler.Senet = 0
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi > @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)
			
			AND Hareketler.VadeTarihi > @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)		
			AND Hareketler.VadeTarihi > @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 0
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 0
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 0
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 0
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				d.Adi as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd
	
			WHERE (Hareketler.Senet = 0
			AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND ( ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null) or  Hareketler.IslemTarihi is null)	
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND  ( ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null) or  Hareketler.IslemTarihi is null)
		
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 0
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND  ( ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null) or  Hareketler.IslemTarihi is null)	
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	END
	DECLARE @isPortfoyExistInDurum INT
	SET @isPortfoyExistInDurum =(SELECT COUNT(item) FROM fnSplit(@cekDurumlari,',') WHERE  item=4)
	IF(@isPortfoyExistInDurum=0)
		DELETE FROM @Dokum WHERE IslemTarihi>=@bitisTarihi
	RETURN 	
END

GO
CREATE FUNCTION [dbo].[GenelSenetRaporu] 
(
	@baslangicTarihi datetime,
	@bitisTarihi datetime,
	@bugununTarihi datetime,
	@cekIslemTipi nvarchar(100),
	@cekDurumlari nvarchar(100),
	@listelemeTipi int,
	@vadeDurumSecenekleri int,
	@enAzTutar decimal,
	@enCokTutar decimal,
	@ciroCariInd int,
	@ciroBankaInd int
)
RETURNS @Dokum TABLE
(
	Owner int,
	CekNo nvarchar(50),
	TipInd int,
	GirisTarihi datetime,
	VadeTarihi datetime,
	CariHesapInd int,
	CariHesapKodu nvarchar(50),
	CariHesapAdi nvarchar(100),
	BankaHesapInd int,
	BankaHesapKodu nvarchar(50),
	BankaHesapAdi nvarchar(100),
	CiroCariInd int,
	CiroCariKodu nvarchar(50),
	CiroCariAdi nvarchar(100),
	CiroBankaInd int,
	CiroBankaKodu nvarchar(50),
	CiroBankaAdi nvarchar(100),
	Alinan decimal(18,2),
	Verilen decimal(18,2),
	Aciklama nvarchar(100),
	BankaAciklama nvarchar(100),
	CekSahibi nvarchar(100),
	Durum nvarchar(50),
	IslemTarihi DATETIME
)
AS
BEGIN

IF(@ciroCariInd = 0 AND @ciroBankaInd = 0)
	BEGIN
	IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.DurumInd = 4))
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi < @bugununTarihi
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar<0)
   		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		END
    ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
      	BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE 
			Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND  Hareketler.IslemTarihi  >=  @bitisTarihi		
			AND Hareketler.VadeTarihi = @bugununTarihi
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN		
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE 
			 Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			 AND Hareketler.Senet = 1
			AND  ( ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null) or  Hareketler.IslemTarihi is null)		
			AND Hareketler.VadeTarihi > @bugununTarihi
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi < @bitisTarihi
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN		
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd
		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE Hareketler.TipInd    IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.DurumInd = 4))
			AND Hareketler.Senet = 1
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN		
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE  Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND Hareketler.IslemTarihi < @bitisTarihi
			AND Hareketler.VadeTarihi < @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler		 WITH(NOLOCK) 
			WHERE  Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)
			AND Hareketler.VadeTarihi = @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND Hareketler.IslemTarihi < @bitisTarihi
			AND Hareketler.VadeTarihi > @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi < @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi < @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler		 WITH(NOLOCK) 
			WHERE Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar
			END
		END
	END
ELSE IF(@ciroCariInd > 0 AND @ciroBankaInd = 0)
	BEGIN
	IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd
		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler		 WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)
			AND Hareketler.VadeTarihi < @bugununTarihi)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)		
			--AND Hareketler.VadeTarihi < @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi < @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi
			--AND Hareketler.VadeTarihi < @bugununTarihi
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
			'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler		 WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)	
			AND Hareketler.VadeTarihi = @bugununTarihi)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)	
			--AND Hareketler.VadeTarihi = @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR(Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi = @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi		
			--AND Hareketler.VadeTarihi = @bugununTarihi
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)
			AND Hareketler.VadeTarihi > @bugununTarihi)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)		
			--AND Hareketler.VadeTarihi > @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi > @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi
			--AND Hareketler.VadeTarihi > @bugununTarihi
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE
				(Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
				AND Hareketler.Senet = 1
				AND ((Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
				OR  (Hareketler.Senet = 1
				AND Hareketler.DurumInd = 4))
				AND Hareketler.GirisTarihi  <  @bitisTarihi
			)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi
			--)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	END
ELSE IF (@ciroCariInd = 0 AND @ciroBankaInd > 0)
	BEGIN
	IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd
		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi < @bugununTarihi)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi
			--AND Hareketler.VadeTarihi < @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
   		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi < @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi < @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi
			--AND Hareketler.VadeTarihi < @bugununTarihi
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler		  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi = @bugununTarihi)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi	
			--AND Hareketler.VadeTarihi = @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR(Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi = @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi = @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi	
			--AND Hareketler.VadeTarihi = @bugununTarihi
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi > @bugununTarihi)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi	
			--AND Hareketler.VadeTarihi > @bugununTarihi)
			END
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.VadeTarihi > @bugununTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi > @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			--OR  (Hareketler.DurumInd = 4) )
			--AND Hareketler.GirisTarihi  <  @bitisTarihi	
			--AND Hareketler.VadeTarihi > @bugununTarihi
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN	
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi)   
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)
			--)  
			END
		END          
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.GirisTarihi >= @baslangicTarihi
		--AND Hareketler.GirisTarihi <  @bitisTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.VadeTarihi >= @baslangicTarihi
		--AND Hareketler.VadeTarihi <  @bitisTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		--OR (Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		--AND Hareketler.IslemTarihi >= @baslangicTarihi
		--AND Hareketler.IslemTarihi <  @bitisTarihi
		--AND Hareketler.Tutar >= @enAzTutar
		--AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
			'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			--OR (Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			--AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			--AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)
			--AND Hareketler.Tutar >= @enAzTutar
			--AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	END
ELSE IF(@ciroCariInd > 0 AND @ciroBankaInd > 0)
	BEGIN
	IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd
		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi		
			AND Hareketler.VadeTarihi < @bugununTarihi)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi < @bugununTarihi)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi < @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar <0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler	  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi = @bugununTarihi)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi = @bugununTarihi)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi = @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi > @bugununTarihi)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi > @bugununTarihi)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi > @bugununTarihi)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar<0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.Senet = 1
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE ( Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND Hareketler.Senet = 1
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
		)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.Senet = 1 
		AND (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE Hareketler.Senet = 1
		AND (Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 1
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.IslemTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.IslemTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi < @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE (Hareketler.Senet = 1
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi		
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi < @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 1
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR(Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR(Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 1
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 1
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi = @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE (Hareketler.Senet = 1
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi = @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi	
			AND Hareketler.VadeTarihi = @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi = @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 1
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 1
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 1
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.VadeTarihi > @bugununTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				'Portföyde' as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			WHERE (Hareketler.Senet = 1
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND   ( ( Hareketler.IslemTarihi  >=  @bitisTarihi AND Hareketler.DurumInd != 4)
			OR  (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 4) )
			AND Hareketler.GirisTarihi  <  @bitisTarihi
			AND Hareketler.VadeTarihi > @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)
			
			AND Hareketler.VadeTarihi > @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND  ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null)		
			AND Hareketler.VadeTarihi > @bugununTarihi
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	ELSE IF (@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 1
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.GirisTarihi >= @baslangicTarihi
		AND Hareketler.GirisTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 1
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.VadeTarihi >= @baslangicTarihi
		AND Hareketler.VadeTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		END
	ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3 AND @enAzTutar>=0)
		BEGIN
		INSERT INTO @Dokum
		SELECT 
			Hareketler.Owner as Owner,
			CekNo,
			TipInd,
			GirisTarihi,
			VadeTarihi,
			CariHesapInd,
			CariHesapKodu,
			CariHesapAdi,
			BankaHesapInd,
			BankaHesapKodu,
			BankaHesapAdi,
			CiroCariInd,
			CiroCariKodu,
			CiroCariAdi,
			CiroBankaInd,
			CiroBankaKodu,
			CiroBankaAdi, 
			CASE WHEN (TipInd = 11)
				THEN Tutar
				ELSE 0
				END as Alinan,
			CASE WHEN (TipInd = 14)
				THEN Tutar
				ELSE 0
				END as Verilen,
			Aciklama,
			BankaAciklama,
			CekSahibi,
			d.Adi as Durum,
			Hareketler.IslemTarihi
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Durumlar AS d  WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd

		WHERE (Hareketler.Senet = 1
		AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,',') where item != 4)
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 7
		AND Hareketler.CiroBankaInd = @ciroBankaInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		OR (Hareketler.Senet = 1
		AND Hareketler.DurumInd = 6
		AND Hareketler.CiroCariInd = @ciroCariInd
		AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
		AND Hareketler.IslemTarihi >= @baslangicTarihi
		AND Hareketler.IslemTarihi <  @bitisTarihi
		AND Hareketler.Tutar >= @enAzTutar
		AND Hareketler.Tutar <= @enCokTutar)
		IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari,',') WHERE item = 4)
			BEGIN
			INSERT INTO @Dokum
			SELECT 
				Hareketler.Owner as Owner,
				CekNo,
				TipInd,
				GirisTarihi,
				VadeTarihi,
				CariHesapInd,
				CariHesapKodu,
				CariHesapAdi,
				BankaHesapInd,
				BankaHesapKodu,
				BankaHesapAdi,
				CiroCariInd,
				CiroCariKodu,
				CiroCariAdi,
				CiroBankaInd,
				CiroBankaKodu,
				CiroBankaAdi, 
				CASE WHEN (TipInd = 11)
					THEN Tutar
					ELSE 0
					END as Alinan,
				CASE WHEN (TipInd = 14)
					THEN Tutar
					ELSE 0
					END as Verilen,
				Aciklama,
				BankaAciklama,
				CekSahibi,
				d.Adi as Durum,
				Hareketler.IslemTarihi
			FROM Hareketler  WITH(NOLOCK) 
			LEFT JOIN Durumlar AS d  WITH(NOLOCK)  ON d.Ind = Hareketler.DurumInd
	
			WHERE (Hareketler.Senet = 1
			AND Hareketler.DurumInd IN (SELECT * FROM fnSplit(@cekDurumlari,','))
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND ( ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null) or  Hareketler.IslemTarihi is null)	
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 7
			AND Hareketler.CiroBankaInd = @ciroBankaInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND  ( ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null) or  Hareketler.IslemTarihi is null)
		
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			OR (Hareketler.Senet = 1
			AND Hareketler.DurumInd = 6
			AND Hareketler.CiroCariInd = @ciroCariInd
			AND Hareketler.TipInd IN (SELECT * FROM fnSplit(@cekIslemTipi,','))
			AND  ( ( Hareketler.IslemTarihi  >=  @bitisTarihi or  Hareketler.IslemTarihi is null) or  Hareketler.IslemTarihi is null)	
			AND Hareketler.Tutar >= @enAzTutar
			AND Hareketler.Tutar <= @enCokTutar)
			END
		END
	END
	DECLARE @isPortfoyExistInDurum INT
	SET @isPortfoyExistInDurum =(SELECT COUNT(item) FROM fnSplit(@cekDurumlari,',') WHERE  item=4)
	IF(@isPortfoyExistInDurum=0)
		DELETE FROM @Dokum WHERE IslemTarihi>=@bitisTarihi
	RETURN 	
END

GO
CREATE FUNCTION [dbo].[GetRtLogSales]
(	
	@Bas AS datetime,
	@Son AS datetime
)
RETURNS TABLE 
AS
RETURN 
(
	
SELECT GC.Owner,SUM(GC.Cikan) AS Miktar,GC.Tarih,GC.StokInd,S.StokKodu,S.StokAdi,S.MuhasebeKodu, GC.DepoInd, S.AnaBirimInd FROM GirisCikisHareketleri GC
INNER JOIN Stoklar S   WITH(NOLOCK) ON GC.StokInd = S.Ind
LEFT OUTER JOIN Hesaplar H  WITH(NOLOCK)  ON GC.StokInd = H.StokInd
WHERE GC.TipIndBaslik IN (102,104,504) AND
H.StokInd IS NULL AND
GC.Cikan > 0 AND
GC.Tarih BETWEEN @Bas AND @Son
--AND GC.Owner = 2
GROUP BY GC.Owner,GC.Tarih,GC.StokInd,S.StokKodu,S.StokAdi,S.MuhasebeKodu, GC.DepoInd, S.AnaBirimInd 

)

GO
GO
CREATE FUNCTION [dbo].[GetSatisKasasiVardiyaNo] 
(	
	@Tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH HareketDokumu(Owner, VardiyaNo)	
	AS
	(
		SELECT
			TOP 1
			B.Owner,
			(B.VardiyaNo+1) AS VardiyaNo
		FROM Basliklar AS B  WITH(NOLOCK) 
		WHERE B.TipInd = 505 AND B.Tarih = @Tarih
		GROUP BY
			B.Owner,VardiyaNo
		ORDER BY B.VardiyaNo DESC

	) 	
	SELECT 
		H.Owner, H.VardiyaNo
	FROM HareketDokumu AS H  WITH(NOLOCK) 
)

GO

	
		
GO
CREATE FUNCTION [dbo].[GiderGrubuToplamTutarKDVsiz] 
(
	@GiderGrubuInd int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS DECIMAL(28,13)
AS
BEGIN

	DECLARE @GiderlerToplami DECIMAL(28,13)		 

	;WITH CTE(Ind, ParentInd, Level)
	AS
	(
		SELECT g1.Ind, g1.ParentInd, 0 AS Level
		FROM GiderGruplari AS g1  WITH(NOLOCK) 
		WHERE g1.Ind=@GiderGrubuInd

		UNION ALL

		SELECT g1.Ind, g1.ParentInd, Level + 1
		FROM GiderGruplari as g1
		INNER JOIN CTE AS d
			ON g1.ParentInd = d.Ind
	)

	select @GiderlerToplami =
	(
		select sum(Tutar*100/(100+KDVOrani)) from Hareketler
		where (GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi) and GiderInd in
		(
			select Ind 
			from Hesaplar  WITH(NOLOCK) 
			where TipInd = 207 and GrupInd in
			(
				select Ind
				from CTE
			)
		)
	)
	
	RETURN ISNULL(@GiderlerToplami, 0)
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GiderHareketDevir] 
(
	@GiderInd int,
	@BaslangicTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(
		WITH BaslikMatrah(BaslikInd, Matrah)
		AS
		(
			SELECT 
				Basliklar.Ind as BaslikInd, 
				SUM(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto) as Matrah
			FROM Hareketler  WITH(NOLOCK) 
			LEFT JOIN Basliklar  WITH(NOLOCK)  ON Hareketler.BaslikInd=Basliklar.Ind 
			LEFT JOIN Tipler  WITH(NOLOCK)  ON Basliklar.TipInd=Tipler.Ind
			WHERE Basliklar.GiderInd=@GiderInd AND Hareketler.TipInd IN (3)
			GROUP BY
				Basliklar.Ind
		)
		
		SELECT 
			Basliklar.Owner,
			Basliklar.TipInd,
			Basliklar.Tarih As GirisTarihi,
			Tipler.TipAdi as Yer,
			Basliklar.Aciklama,
			SUM(
				(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto-(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto)*Basliklar.Iskonto/BaslikMatrah.Matrah)*(1+Hareketler.KDVOrani/100)
			) AS Tutar
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
		LEFT JOIN BaslikMatrah  WITH(NOLOCK) ON BaslikMatrah.BaslikInd=Basliklar.Ind
		LEFT JOIN Tipler  WITH(NOLOCK) ON Basliklar.TipInd=Tipler.Ind
		WHERE Basliklar.GiderInd=@GiderInd 
						AND Basliklar.Tarih < @BaslangicTarihi
		GROUP BY
			Basliklar.Owner,
			Basliklar.TipInd,
			Basliklar.Tarih,
			Tipler.TipAdi,
			Basliklar.Aciklama,
			Basliklar.Iskonto

		UNION ALL

		SELECT 
			Hareketler.Owner,
			Hareketler.TipInd,
			Hareketler.GirisTarihi,
			Tipler.TipAdi as Yer,
			Hareketler.Aciklama,
			Hareketler.Tutar
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Tipler  WITH(NOLOCK) ON Hareketler.TipInd=Tipler.Ind
		WHERE Hareketler.GiderInd=@GiderInd  
						AND Hareketler.GirisTarihi < @BaslangicTarihi
)
GO
CREATE FUNCTION [dbo].[GiderHareketDokumu] 
(
	@GiderInd int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH BaslikMatrah(BaslikInd, Matrah)
	AS
	(
		SELECT 
			Basliklar.Ind as BaslikInd, 
			SUM(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto) as Matrah
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind 
		LEFT JOIN Tipler  WITH(NOLOCK) ON Basliklar.TipInd=Tipler.Ind
		WHERE Basliklar.GiderInd=@GiderInd AND Hareketler.TipInd IN (3)
		GROUP BY
			Basliklar.Ind
	)
	
	SELECT 
		Basliklar.Owner,
		Basliklar.TipInd,
		Basliklar.Tarih As GirisTarihi,
		Tipler.TipAdi as Yer,
		Basliklar.Aciklama,
		SUM(
			(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto-(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto)*Basliklar.Iskonto/BaslikMatrah.Matrah)*(1+Hareketler.KDVOrani/100)
		) AS Tutar
	FROM Hareketler  WITH(NOLOCK) 
	LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
	LEFT JOIN BaslikMatrah  WITH(NOLOCK) ON BaslikMatrah.BaslikInd=Basliklar.Ind
	LEFT JOIN Tipler  WITH(NOLOCK) ON Basliklar.TipInd=Tipler.Ind
	WHERE Basliklar.GiderInd=@GiderInd 
					AND Basliklar.Tarih >= @BaslangicTarihi
					AND Basliklar.Tarih <= @BitisTarihi
	GROUP BY
		Basliklar.Owner,
		Basliklar.TipInd,
		Basliklar.Tarih,
		Tipler.TipAdi,
		Basliklar.Aciklama,
		Basliklar.Iskonto

	UNION ALL

	SELECT 
	Hareketler.Owner,
	Hareketler.TipInd,
	Hareketler.GirisTarihi,
	Tipler.TipAdi as Yer,
	Hareketler.Aciklama,
	Hareketler.Tutar
	FROM Hareketler  WITH(NOLOCK) 
	LEFT JOIN Tipler  WITH(NOLOCK) ON Hareketler.TipInd=Tipler.Ind
	WHERE Hareketler.GiderInd=@GiderInd  
					AND Hareketler.GirisTarihi >= @BaslangicTarihi
					AND Hareketler.GirisTarihi <= @BitisTarihi
)
GO
CREATE FUNCTION [dbo].[GiderHareketleriToplam] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(

	SELECT GiderHareketleri.* 
		FROM GiderHareketleri  WITH(NOLOCK) 
		LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = GiderHareketleri.GiderInd
		LEFT JOIN GiderGruplari  WITH(NOLOCK) ON GiderGruplari.Ind = Hesaplar.GrupInd
		WHERE 
			GiderHareketleri.GirisTarihi >= @BaslangicTarihi
			AND GiderHareketleri.GirisTarihi <= @BitisTarihi
)



GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go


CREATE FUNCTION [dbo].[GiderIcmalDetayRapor] 
(
	@GrupInd nvarchar(MAX),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
SELECT 
GiderHareketleriForGiderIcmal.Owner,
GiderHareketleriForGiderIcmal.GiderKodu,
GiderHareketleriForGiderIcmal.GiderAdi,
GiderHareketleriForGiderIcmal.Aciklama,
GiderHareketleriForGiderIcmal.GirisTarihi,
GiderHareketleriForGiderIcmal.Matrah,
GiderHareketleriForGiderIcmal.Tutar as Tutar
   
FROM GiderHareketleriForGiderIcmal  WITH(NOLOCK) 
INNER JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = GiderHareketleriForGiderIcmal.GiderInd
INNER JOIN GiderGruplari  WITH(NOLOCK) ON GiderGruplari.Ind = Hesaplar.GrupInd
WHERE GiderGruplari.Ind  IN (SELECT * FROM fnSplit(@GrupInd,','))
	 AND GiderHareketleriForGiderIcmal.GirisTarihi >= @BaslangicTarihi
	 AND GiderHareketleriForGiderIcmal.GirisTarihi < @BitisTarihi

GO
CREATE FUNCTION [dbo].[GiderIcmalRapor] 
(
	@GrupInd nvarchar(max),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(
SELECT 
	Hareketler.Owner,
	Hareketler.Ind AS GrupInd,
	Hareketler.GrupAdi,
	Hareketler.SiraNo AS GrupSiraNo,
	Hareketler.ParentInd AS ParentGrupInd,
	GiderGruplariParent.SiraNo AS ParentGrupSiraNo,
	SUM(Hareketler.Matrah) AS Matrah,
	SUM(Hareketler.KDV) AS KDV,
	SUM(Hareketler.Tutar) AS Tutar,
	CAST(0 as bit) AS IsAltToplam
FROM 
	(
		SELECT 
			GiderHareketleriForGiderIcmal.Owner,
			GiderGruplari.Ind,
			GiderGruplari.GrupAdi,
			GiderGruplari.SiraNo,
			GiderGruplari.ParentInd,
			CAST(0 as bit) as IsAltToplam,
			GiderHareketleriForGiderIcmal.Matrah AS Matrah,
			GiderHareketleriForGiderIcmal.KDV AS KDV,
			GiderHareketleriForGiderIcmal.Tutar as Tutar
		FROM GiderHareketleriForGiderIcmal  WITH(NOLOCK) 
		INNER JOIN Hesaplar  WITH(NOLOCK) ON (Hesaplar.Ind = GiderHareketleriForGiderIcmal.GiderInd)
		INNER JOIN GiderGruplari  WITH(NOLOCK) ON (GiderGruplari.Ind = Hesaplar.GrupInd)
		WHERE 
			GiderGruplari.Ind IN (SELECT * FROM fnSplit(@GrupInd,',')) AND 
			GiderHareketleriForGiderIcmal.GirisTarihi >= @BaslangicTarihi AND 
			GiderHareketleriForGiderIcmal.GirisTarihi < @BitisTarihi
	) AS Hareketler
LEFT JOIN GiderGruplari GiderGruplariParent ON (GiderGruplariParent.Ind = Hareketler.ParentInd)
GROUP BY 
	Hareketler.Owner,
	Hareketler.Ind,
	Hareketler.GrupAdi,
	Hareketler.SiraNo,
	Hareketler.ParentInd,
	GiderGruplariParent.SiraNo
)
GO
CREATE FUNCTION [dbo].[GiderKartIcmalHareket] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(
	select 
		Owner,
		GiderInd,
		GiderKodu,
		GiderAdi,
	CASE TipInd WHEN 107 THEN SUM(Matrah) ELSE SUM(Matrah) END AS Matrah,
	SUM(KDV) AS KDV,
	CASE TipInd WHEN 107 THEN SUM(Tutar) ELSE SUM(Tutar) END AS Tutar
	from GiderHareketleri  WITH(NOLOCK) 
	where GirisTarihi >= @BaslangicTarihi and GirisTarihi < @BitisTarihi
	GROUP BY  TipInd, GiderInd, GiderKodu, GiderAdi,Owner

 
)

GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go

CREATE FUNCTION [dbo].[GirisCikisHareketleriToplamlari]
(
	@baslangicTarihi DATETIME,@bitisTarihi DATETIME,@stokInd INT, @depoInds VARCHAR(MAX)
)


RETURNS @tblHareketler TABLE
(Giren DECIMAL(28,8), Cikan DECIMAL(28,8),Owner INT)
AS
BEGIN 
	IF(@stokInd>0)
		INSERT INTO @tblHareketler
			SELECT SUM(Giren) Giren,SUM(Cikan) Cikan,Owner 
				FROM GirisCikisHareketleri  WITH(NOLOCK) 
				WHERE Tarih>= @baslangicTarihi AND Tarih<=@bitisTarihi AND StokInd=@stokInd
				GROUP BY Owner
	ELSE
		INSERT INTO @tblHareketler
			SELECT SUM(Giren) Giren,SUM(Cikan) Cikan,Owner 
				FROM GirisCikisHareketleri  WITH(NOLOCK) 
				WHERE Tarih>= @baslangicTarihi AND Tarih<=@bitisTarihi AND 
					DepoInd IN (SELECT item as StokInd  FROM fnSplit(@depoInds,','))
				GROUP BY Owner

	RETURN
END

GO
CREATE FUNCTION GirisCikisHareketleriToplamlariDepoDevir
(@DepoInd INT, @baslangicTarihi DATETIME, @bitisTarihi DATETIME, @TipInds VARCHAR(MAX))

RETURNS @tblHareketler TABLE
(Owner INT, Devir DECIMAL(28,8))
AS
BEGIN 
	IF(@TipInds IS NULL) 
		IF(@baslangicTarihi IS NULL)
			INSERT INTO @tblHareketler
				SELECT Owner, SUM(Giren - Cikan) 
					FROM GirisCikisHareketleri  WITH(NOLOCK) 
					WHERE  Tarih<=@bitisTarihi AND DepoInd = @DepoInd
					GROUP BY Owner
		ELSE
			INSERT INTO @tblHareketler
				SELECT Owner, SUM(Giren - Cikan) 
					FROM GirisCikisHareketleri  WITH(NOLOCK) 
					WHERE  Tarih>=@baslangicTarihi AND Tarih<=@bitisTarihi AND DepoInd = @DepoInd
					GROUP BY Owner
	ELSE
		IF(@baslangicTarihi IS NULL)
			INSERT INTO @tblHareketler
				SELECT Owner, SUM(Giren - Cikan) 
					FROM GirisCikisHareketleri  WITH(NOLOCK) 
					WHERE  Tarih<=@bitisTarihi AND DepoInd = @DepoInd
						AND TipInd IN (SELECT item FROM fnSplit(@TipInds,','))
					GROUP BY Owner
		ELSE
			INSERT INTO @tblHareketler
				SELECT Owner, SUM(Giren - Cikan) 
					FROM GirisCikisHareketleri  WITH(NOLOCK) 
					WHERE  Tarih>=@baslangicTarihi AND Tarih<=@bitisTarihi AND DepoInd = @DepoInd
						AND TipInd IN (SELECT item FROM fnSplit(@TipInds,','))
					GROUP BY Owner
	RETURN
END




GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GrubaAitYetkiler] 
(	
	@GrupAdi nvarchar(255)
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT Ind,Yetkiler.YetkiAdi, NULL as Owner FROM Yetkiler 
	WHERE Yetkiler.GrupAdi = @GrupAdi
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GrubunGelirKartinaUygunlugu] 
(
	@GelirKartInd int,
	@GrupInd int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Durumu(GelirKartInd,Owner,Durum)
	AS
	(	
		SELECT 
			Hesaplar.Ind as GelirKartInd,
			NULL as Owner,
			(CASE WHEN ((Hesaplar.Owner IS NULL AND GelirGruplari.Owner IS NULL) OR (Hesaplar.Owner IS NOT NULL AND (GelirGruplari.Owner IS NULL OR GelirGruplari.Owner = Hesaplar.Owner)))
			THEN CAST(1 as bit)
			ELSE CAST(0 as bit)
			END) as Durum
		FROM Hesaplar  WITH(NOLOCK) 
		LEFT JOIN GelirGruplari  WITH(NOLOCK)  ON GelirGruplari.Ind = @GrupInd
		WHERE Hesaplar.Ind = @GelirKartInd
	)

	SELECT
		*
	FROM Durumu
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GrubunGelirKartinaUygunluguForInsert] 
(
	@Owner int,
	@GrupInd int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Durumu(Owner,Durum)
	AS
	(	
		SELECT 
			NULL as Owner,
			(CASE WHEN ((@Owner=0 AND GelirGruplari.Owner IS NULL) OR (@Owner>0 AND (GelirGruplari.Owner IS NULL OR GelirGruplari.Owner = @Owner)))
			THEN CAST(1 as bit)
			ELSE CAST(0 as bit)
			END) as Durum
		FROM GelirGruplari
		WHERE GelirGruplari.Ind = @GrupInd 
	)
	SELECT
		*
	FROM Durumu
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GrubunGiderKartinaUygunlugu] 
(
	@GiderKartInd int,
	@GrupInd int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Durumu(GiderKartInd,Owner,Durum)
	AS
	(	
		SELECT 
			Hesaplar.Ind as GiderKartInd,
			NULL as Owner,
			(CASE WHEN ((Hesaplar.Owner IS NULL AND GiderGruplari.Owner IS NULL) OR (Hesaplar.Owner IS NOT NULL AND (GiderGruplari.Owner IS NULL OR GiderGruplari.Owner = Hesaplar.Owner)))
			THEN CAST(1 as bit)
			ELSE CAST(0 as bit)
			END) as Durum
		FROM Hesaplar  WITH(NOLOCK) 
		LEFT JOIN GiderGruplari  WITH(NOLOCK) ON GiderGruplari.Ind = @GrupInd
		WHERE Hesaplar.Ind = @GiderKartInd
	)
	SELECT
		d.*
	FROM Durumu as d
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GrubunGiderKartinaUygunluguForInsert] 
(
	@Owner int,
	@GrupInd int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Durumu(Owner,Durum)
	AS
	(	
		SELECT 
			NULL as Owner,
			(CASE WHEN ((@Owner=0 AND GiderGruplari.Owner IS NULL) OR (@Owner>0 AND (GiderGruplari.Owner IS NULL OR GiderGruplari.Owner = @Owner)))
			THEN CAST(1 as bit)
			ELSE CAST(0 as bit)
			END) as Durum
		FROM GiderGruplari
		WHERE GiderGruplari.Ind = @GrupInd 
	)
	SELECT
		d.*
	FROM Durumu as d
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GrubunPersoneleUygunlugu] 
(
	@PersonelHesapInd int,
	@GrupInd int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Durumu(PersonelHesapInd,Owner,Durum)
	AS
	(	
		SELECT 
			Hesaplar.Ind as PersonelHesapInd,
			NULL as Owner,
			(CASE WHEN ((Hesaplar.Owner IS NULL AND PersonelGruplari.Owner IS NULL) OR (Hesaplar.Owner IS NOT NULL AND (PersonelGruplari.Owner IS NULL OR PersonelGruplari.Owner = Hesaplar.Owner)))
			THEN CAST(1 as bit)
			ELSE CAST(0 as bit)
			END) as Durum
		FROM Hesaplar  WITH(NOLOCK) 
		LEFT JOIN PersonelGruplari  WITH(NOLOCK) ON PersonelGruplari.Ind = @GrupInd
		WHERE Hesaplar.Ind = @PersonelHesapInd 
	)
	SELECT
		*
	FROM Durumu
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GrubunPersoneleUygunluguForInsert] 
(
	@Owner int,
	@GrupInd int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Durumu(Owner,Durum)
	AS
	(	
		SELECT 
			NULL as Owner,
			(CASE WHEN ((@Owner=0 AND PersonelGruplari.Owner IS NULL) OR (@Owner>0 AND (PersonelGruplari.Owner IS NULL OR PersonelGruplari.Owner = @Owner)))
			THEN CAST(1 as bit)
			ELSE CAST(0 as bit)
			END) as Durum
		FROM PersonelGruplari  WITH(NOLOCK) 
		WHERE PersonelGruplari.Ind = @GrupInd 
	)
	SELECT
		*
	FROM Durumu
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GrubunStogaUygunlugu] 
(
	@StokInd int,
	@GrupInd int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH StokDurumu(StokInd,Owner,Durum)
	AS
	(	
		SELECT 
			Stoklar.Ind as StokInd,
			NULL as Owner,
			(CASE WHEN ((Stoklar.Owner IS NULL AND StokGruplari.Owner IS NULL) OR (Stoklar.Owner IS NOT NULL AND (StokGruplari.Owner IS NULL OR StokGruplari.Owner = Stoklar.Owner)))
			THEN CAST(1 as bit)
			ELSE CAST(0 as bit)
			END) as Durum
		FROM Stoklar  WITH(NOLOCK) 
		LEFT JOIN StokGruplari  WITH(NOLOCK) ON StokGruplari.Ind = @GrupInd
		WHERE Stoklar.Ind = @StokInd 
	)
	SELECT
		s.*
	FROM StokDurumu as s
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GrubunStogunUygunluguForInsert] 
(
	@Owner int,
	@GrupInd int
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Durumu(Owner,Durum)
	AS
	(	
		SELECT 
			NULL as Owner,
			(CASE WHEN ((@Owner=0 AND StokGruplari.Owner IS NULL) OR (@Owner>0 AND (StokGruplari.Owner IS NULL OR StokGruplari.Owner = @Owner)))
			THEN CAST(1 as bit)
			ELSE CAST(0 as bit)
			END) as Durum
		FROM StokGruplari  WITH(NOLOCK) 
		WHERE StokGruplari.Ind = @GrupInd 
	)
	SELECT
		d.*
	FROM Durumu as d
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GunlukKur] 
(
	@tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT
		KurBilgileri.Owner,
		ISNULL(Kur.Ind, 0) AS Ind,
		KurBilgileri.Ind AS KurInd,
		KurBilgileri.ParaBirimi,
		Kur.Kur,
		ISNULL(Kur.Tarih, @tarih) AS Tarih
	FROM KurBilgileri  WITH(NOLOCK) 
	LEFT JOIN Kur  WITH(NOLOCK) ON KurBilgileri.Ind = Kur.KurInd AND Kur.Tarih = @tarih
)

GO
CREATE FUNCTION [dbo].[GunSonuListesi]
(
	 @KKHesapInd int
	,@VardiyaKartInds nvarchar(max)
)
RETURNS nvarchar(max)
AS
BEGIN

	DECLARE @_Sonuc	nvarchar(max)

	select @_Sonuc = replace(replace(substring((select(' ' + coalesce(Gunsonu, '')) from Hareketler
		where KKHesapInd=@KKHesapInd and VardiyaKartInd in (SELECT * FROM fnSplit(@VardiyaKartInds,','))
		for xml path('')), 3, 1000), 'x20;', ''), '&#', '')

	RETURN ISNULL(@_Sonuc,0)
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[GunVardiyalar] 
(	
	@Tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT DISTINCT
		0 as Ind, 
		VardiyaNo,
		Tarih,
		Owner 
	FROM Basliklar   WITH(NOLOCK) 
	WHERE Tarih = @Tarih
	AND TipInd = 108
)
GO
CREATE FUNCTION [dbo].[HareketToplamTutarKDVsiz] 
(
	@HareketInd int
)
RETURNS DECIMAL(28,13)
AS
BEGIN

	DECLARE @HareketToplam DECIMAL(28,13)		 

	select @HareketToplam =
	(
		select
			sum(
				case
					when Miktar is null then coalesce(Tutar/(1+KDVOrani/100),0)
					when Miktar is not null then coalesce(Miktar*Fiyat/(1+KDVOrani/100),0)
				end
			)
		from Hareketler  WITH(NOLOCK) 
		where Ind = @HareketInd
	)
	
	RETURN ISNULL(@HareketToplam, 0)
END


GO
CREATE FUNCTION [dbo].[IcmalRaporuCari] 
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@stokInds nvarchar(max),
	@baslikOwner nvarchar(max),
	@merkezdemisin int
)
RETURNS @Icmal TABLE 
(
	Owner int,
	CariHesapInd int,
	CariHesapKodu nvarchar(max),
	CariHesapAdi nvarchar(max),
	TipInd int,
	Miktar decimal(28,8),
	Matrah decimal(28,8),
	Iskonto decimal(28,8),
	KDVtutari decimal(28,8),
	ToplamTutar decimal(28,8)
)
AS
BEGIN

	IF(@merkezdemisin > 0)
		INSERT INTO @Icmal
			SELECT 
				Hesaplar.Owner,
				Basliklar.HesapInd as CariHesapInd,
				Basliklar.HesapKodu as CariHesapKodu,
				Basliklar.HesapAdi + '' as CariHesapAdi,
				Basliklar.TipInd,
				CASE WHEN SUM(Hareketler.NetMiktar) != 0
				THEN SUM((ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1)))
				ELSE SUM(((ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1))) END AS Miktar,
				SUM(
					(
						(
							CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
							THEN ISNULL(Hareketler.Miktar, 1) 
							ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
							END
						) 
						*
						ISNULL(Hareketler.Carpan, 1)
						*
						ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100) ) ELSE 1 END))))
						-
						--ISNULL(Hareketler.Iskonto, 0)
						---
						(
							ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1))
							*
							ISNULL(Hareketler.Carpan, 1)
							*
							ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
							---
							--ISNULL(Hareketler.Iskonto, 0)
						)
						*
						ISNULL(Basliklar.Iskonto, CASE WHEN Basliklar.Iskonto > 0 THEN  Basliklar.Iskonto ELSE 0 END)
						/ 
						(
							CASE WHEN (BaslikMatrah.Matrah != 0) 
							THEN BaslikMatrah.Matrah 
							ELSE 1 END
						)
					)
				   ) AS Matrah,
				SUM(((
						CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
						THEN ISNULL(Hareketler.Miktar, 1)
						ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
						END
					*
					ISNULL(Hareketler.Carpan, 1)
					*
					ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
					-
					ISNULL(Hareketler.Iskonto, 0)
					)
					*
					ISNULL(Basliklar.Iskonto, CASE WHEN Basliklar.Iskonto > 0 THEN Basliklar.Iskonto ELSE 0 END)
					/
					CASE WHEN BaslikMatrah.Matrah > 0 THEN BaslikMatrah.Matrah ELSE 1 END) + ISNULL(Hareketler.Iskonto, 0)) 
					AS Iskonto,
				SUM(
					(
						(
							CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
							THEN ISNULL(Hareketler.Miktar, 1) 
							ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
							END
							*
							ISNULL(Hareketler.Carpan, 1)
							*
							ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
							-
							ISNULL(Hareketler.Iskonto, 0)
						)
						-
						(
							(
								CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
								THEN ISNULL(Hareketler.Miktar, 1) 
								ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
								END
							*
							ISNULL(Hareketler.Carpan, 1)
							*
							ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
							-
							ISNULL(Hareketler.Iskonto, 0)
							)
							*
							ISNULL(Basliklar.Iskonto, CASE WHEN Basliklar.Iskonto > 0 THEN Basliklar.Iskonto ELSE 0 END)
							/
							CASE WHEN BaslikMatrah.Matrah > 0 THEN BaslikMatrah.Matrah ELSE 1 END
						)
					)
					*
					((CASE WHEN Hareketler.KDVOrani > 0 THEN Hareketler.KDVOrani/100 ELSE 0  END))
				) AS KDVtutari,
				SUM
				(
					((
						(
							CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
							THEN ISNULL(Hareketler.Miktar, 1) 
							ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
							END
						) 
						*
						ISNULL(Hareketler.Carpan, 1)
						*
						ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
						-
						ISNULL(Hareketler.Iskonto, 0)
						-
						(
							ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1))
							*
							ISNULL(Hareketler.Carpan, 1)
							*
							ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
							-
							ISNULL(Hareketler.Iskonto, 0)
						)
						*
						ISNULL(Basliklar.Iskonto , CASE WHEN Basliklar.Iskonto > 0 THEN Basliklar.Iskonto ELSE 0 END)
						/ 
						(
							CASE WHEN (BaslikMatrah.Matrah != 0) 
							THEN BaslikMatrah.Matrah 
							ELSE 1 END
						)
					)
				--)
				)
				)
				-
				SUM(((
						CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
						THEN ISNULL(Hareketler.Miktar, 1)
						ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
						END
					*
					ISNULL(Hareketler.Carpan, 1)
					*
					ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
					-
					ISNULL(Hareketler.Iskonto, 0)
					)
					*
					ISNULL(Basliklar.Iskonto , CASE WHEN Basliklar.Iskonto > 0 THEN Basliklar.Iskonto ELSE 0 END)
					/
					CASE WHEN BaslikMatrah.Matrah > 0 THEN BaslikMatrah.Matrah ELSE 1 END) + ISNULL(Hareketler.Iskonto, 0))
				+
				SUM(
					(
						(
							CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
							THEN ISNULL(Hareketler.Miktar, 1) 
							ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
							END
							*
							ISNULL(Hareketler.Carpan, 1)
							*
							ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
							-
							ISNULL(Hareketler.Iskonto, 0)
						)
						-
						(
							(
								CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
								THEN ISNULL(Hareketler.Miktar, 1) 
								ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
								END
							*
							ISNULL(Hareketler.Carpan, 1)
							*
							ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
							 -
							ISNULL(Hareketler.Iskonto, 0)
							)
							*
							ISNULL(Basliklar.Iskonto , CASE WHEN Basliklar.Iskonto > 0 THEN Basliklar.Iskonto ELSE 0 END)
							/
							CASE WHEN BaslikMatrah.Matrah > 0 THEN BaslikMatrah.Matrah ELSE 1 END
						)
					)
					*
					((Hareketler.KDVOrani/100))
				)
				AS ToplamTutar
			FROM Hareketler  WITH(NOLOCK) 
			LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
			LEFT JOIN BaslikMatrahForIcmalFnc(@BaslangicTarihi, @BitisTarihi) AS BaslikMatrah ON BaslikMatrah.BaslikInd=Basliklar.Ind
			LEFT JOIN Hesaplar  WITH(NOLOCK) ON Basliklar.HesapInd=Hesaplar.Ind
			WHERE Basliklar.Tarih >= @BaslangicTarihi
				  AND Basliklar.Tarih < @BitisTarihi
				  AND (Hareketler.TipInd = 3 OR Hareketler.TipInd = 6 OR Hareketler.TipInd = 511 OR Hareketler.TipInd = 57)
				  AND (Hareketler.StokInd IN (SELECT * FROM fnSplit(@stokInds,',')) OR Hareketler.GelirInd IN (SELECT * FROM fnSplit(@stokInds,',')))
				  AND (Basliklar.Owner IN (SELECT * FROM fnSplit(@baslikOwner,',')) OR  Basliklar.Owner IS NULL)
				  --AND BaslikMatrah.Tarih >= @BaslangicTarihi AND BaslikMatrah.Tarih < @BitisTarihi
			GROUP BY
				Basliklar.HesapInd,
				Basliklar.HesapKodu,
				Basliklar.HesapAdi,
				Basliklar.TipInd,
				Hesaplar.Owner
			UNION ALL
			SELECT 
				Hesaplar.Owner,
				Basliklar.HesapInd as CariHesapInd,
				Basliklar.HesapKodu as CariHesapKodu,
				Basliklar.HesapAdi as CariHesapAdi,
				Basliklar.TipInd,
				CASE WHEN SUM(Hareketler.NetMiktar) != 0
				THEN SUM((ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1)))
				ELSE SUM(((ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1))) END AS Miktar,
				SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS Matrah,
				0 AS Iskonto,
				0 AS KDVtutari,
				SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS ToplamTutar
			FROM Hareketler  WITH(NOLOCK) 
			LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
			LEFT JOIN Hesaplar  WITH(NOLOCK)  ON Basliklar.HesapInd=Hesaplar.Ind
			WHERE Basliklar.Tarih >= @BaslangicTarihi
				  AND Basliklar.Tarih < @BitisTarihi
				  AND (Hareketler.TipInd = 2 OR Hareketler.TipInd = 5)
				  AND Hareketler.DurumInd IS NULL
				  AND Hareketler.StokInd IN (SELECT * FROM fnSplit(@stokInds,','))
				  AND (Basliklar.Owner IN (SELECT * FROM fnSplit(@baslikOwner,',')) OR  Basliklar.Owner IS NULL)
			GROUP BY
				Basliklar.HesapInd,
				Basliklar.HesapKodu,
				Basliklar.HesapAdi,
				Basliklar.TipInd,
				Hesaplar.Owner
			UNION ALL
			SELECT 
				Hesaplar.Owner,
				Basliklar.HesapInd as CariHesapInd,
				Basliklar.HesapKodu as CariHesapKodu,
				Basliklar.HesapAdi as CariHesapAdi,
				Basliklar.TipInd,
				SUM((Hareketler.Miktar*Hareketler.Carpan)) AS Miktar,
				SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS Matrah,
				0 AS Iskonto,
				0 AS KDVtutari,
				SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS ToplamTutar
			FROM Hareketler  WITH(NOLOCK) 
			LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
			LEFT JOIN Hesaplar  WITH(NOLOCK) ON Basliklar.HesapInd=Hesaplar.Ind
			WHERE Basliklar.Tarih >= @BaslangicTarihi
				  AND Basliklar.Tarih < @BitisTarihi
				  AND Hareketler.TipInd = 37
				  AND Hareketler.DurumInd IS NULL
				  AND Hareketler.StokInd IN (SELECT * FROM fnSplit(@stokInds,','))
				  AND (Basliklar.Owner IN (SELECT * FROM fnSplit(@baslikOwner,',')) OR  Basliklar.Owner IS NULL)
			GROUP BY
				Basliklar.HesapInd,
				Basliklar.HesapKodu,
				Basliklar.HesapAdi,
				Basliklar.TipInd,
				Hesaplar.Owner
	ELSE
		INSERT INTO @Icmal
			SELECT 
				Hesaplar.Owner,
				Basliklar.HesapInd as CariHesapInd,
				Basliklar.HesapKodu as CariHesapKodu,
				Basliklar.HesapAdi + '' as CariHesapAdi,
				Basliklar.TipInd,
				CASE WHEN SUM(Hareketler.NetMiktar) != 0
				THEN SUM((ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1)))
				ELSE SUM(((ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1))) END AS Miktar,
				SUM(
					(
						(
							CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
							THEN ISNULL(Hareketler.Miktar, 1) 
							ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
							END
						) 
						*
						ISNULL(Hareketler.Carpan, 1)
						*
						ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
						-
						--ISNULL(Hareketler.Iskonto, 0)
						---
						(
							ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1))
							*
							ISNULL(Hareketler.Carpan, 1)
							*
							ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN  Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
							---
							--ISNULL(Hareketler.Iskonto, 0)
						)
						*
						ISNULL(Basliklar.Iskonto , CASE WHEN Basliklar.Iskonto > 0 THEN Basliklar.Iskonto ELSE 0 END)
						/ 
						(
							CASE WHEN (BaslikMatrah.Matrah != 0) 
							THEN BaslikMatrah.Matrah 
							ELSE 1 END
						)
					)
				   ) AS Matrah,
				SUM(((
						CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
						THEN ISNULL(Hareketler.Miktar, 1)
						ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
						END
					*
					ISNULL(Hareketler.Carpan, 1)
					*
					ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN  Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
					-
					ISNULL(Hareketler.Iskonto, 0)
					)
					*
					ISNULL(Basliklar.Iskonto , CASE WHEN Basliklar.Iskonto > 0 THEN Basliklar.Iskonto ELSE 0 END)
					/
					CASE WHEN BaslikMatrah.Matrah > 0 THEN BaslikMatrah.Matrah ELSE 1 END) + ISNULL(Hareketler.Iskonto, 0)) AS Iskonto,
				SUM(
					(
						(
							CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
							THEN ISNULL(Hareketler.Miktar, 1) 
							ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
							END
							*
							ISNULL(Hareketler.Carpan, 1)
							*
							ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
							-
							ISNULL(Hareketler.Iskonto, 0)
						)
						-
						(
							(
								CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
								THEN ISNULL(Hareketler.Miktar, 1) 
								ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
								END
							*
							ISNULL(Hareketler.Carpan, 1)
							*
							ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
							-
							ISNULL(Hareketler.Iskonto, 0)
							)
							*
							ISNULL(Basliklar.Iskonto , CASE WHEN Basliklar.Iskonto > 0 THEN Basliklar.Iskonto ELSE 0 END)
							/
							CASE WHEN BaslikMatrah.Matrah > 0 THEN BaslikMatrah.Matrah ELSE 1 END
						)
					)
					*
					((CASE WHEN Hareketler.KDVOrani > 0 THEN Hareketler.KDVOrani/100 ELSE 0 END))
				) AS KDVtutari,
				SUM
				(
					((
						(
							CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
							THEN ISNULL(Hareketler.Miktar, 1) 
							ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
							END
						) 
						*
						ISNULL(Hareketler.Carpan, 1)
						*
						ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
						-
						ISNULL(Hareketler.Iskonto, 0)
						-
						(
							ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1))
							*
							ISNULL(Hareketler.Carpan, 1)
							*
							ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
							-
							ISNULL(Hareketler.Iskonto, 0)
						)
						*
						ISNULL(Basliklar.Iskonto , CASE WHEN Basliklar.Iskonto > 0 THEN Basliklar.Iskonto ELSE 0 END)
						/ 
						(
							CASE WHEN (BaslikMatrah.Matrah != 0) 
							THEN BaslikMatrah.Matrah 
							ELSE 1 END
						)
					)
				--)
				)
				)
				-
				SUM(((
						CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
						THEN ISNULL(Hareketler.Miktar, 1)
						ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
						END
					*
					ISNULL(Hareketler.Carpan, 1)
					*
					ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
					-
					ISNULL(Hareketler.Iskonto, 0)
					)
					*
					ISNULL(Basliklar.Iskonto , CASE WHEN Basliklar.Iskonto > 0 THEN Basliklar.Iskonto ELSE 0 END)
					/
					CASE WHEN BaslikMatrah.Matrah > 0 THEN BaslikMatrah.Matrah ELSE 1 END) + ISNULL(Hareketler.Iskonto, 0))
				+
				SUM(
					(
						(
							CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
							THEN ISNULL(Hareketler.Miktar, 1) 
							ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
							END
							*
							ISNULL(Hareketler.Carpan, 1)
							*
							ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
							-
							ISNULL(Hareketler.Iskonto, 0)
						)
						-
						(
							(
								CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
								THEN ISNULL(Hareketler.Miktar, 1) 
								ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
								END
							*
							ISNULL(Hareketler.Carpan, 1)
							*
							ISNULL(Hareketler.Fiyat, (((CASE WHEN Hareketler.Tutar > 0 THEN Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100)) ELSE 1 END))))
							-
							ISNULL(Hareketler.Iskonto, 0)
							)
							*
							ISNULL(Basliklar.Iskonto , CASE WHEN Basliklar.Iskonto > 0 THEN Basliklar.Iskonto ELSE 0 END)
							/
							CASE WHEN BaslikMatrah.Matrah > 0 THEN BaslikMatrah.Matrah ELSE 1 END
						)
					)
					*
					((CASE WHEN Hareketler.KDVOrani > 0 THEN Hareketler.KDVOrani/100 ELSE 0 END))
				)
				AS ToplamTutar
			FROM Hareketler  WITH(NOLOCK) 
			LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
			LEFT JOIN BaslikMatrahForIcmalFnc(@BaslangicTarihi, @BitisTarihi) AS BaslikMatrah ON BaslikMatrah.BaslikInd=Basliklar.Ind
			LEFT JOIN Hesaplar  WITH(NOLOCK) ON Basliklar.HesapInd=Hesaplar.Ind
			WHERE Basliklar.Tarih >= @BaslangicTarihi
				  AND Basliklar.Tarih < @BitisTarihi
				  AND (Hareketler.TipInd = 3 OR Hareketler.TipInd = 6 OR Hareketler.TipInd = 511 OR Hareketler.TipInd = 57)
				  AND (Hareketler.StokInd IN (SELECT * FROM fnSplit(@stokInds,',')) OR Hareketler.GelirInd IN (SELECT * FROM fnSplit(@stokInds,',')))
				  AND (Basliklar.Owner IN (SELECT * FROM fnSplit(@baslikOwner,',')))-- OR  Basliklar.Owner IS NULL)
				  --AND BaslikMatrah.Tarih >= @BaslangicTarihi AND BaslikMatrah.Tarih < @BitisTarihi
			GROUP BY
				Basliklar.HesapInd,
				Basliklar.HesapKodu,
				Basliklar.HesapAdi,
				Basliklar.TipInd,
				Hesaplar.Owner
			UNION ALL
			SELECT 
				Hesaplar.Owner,
				Basliklar.HesapInd as CariHesapInd,
				Basliklar.HesapKodu as CariHesapKodu,
				Basliklar.HesapAdi as CariHesapAdi,
				Basliklar.TipInd,
				CASE WHEN SUM(Hareketler.NetMiktar) != 0
				THEN SUM((ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1)))
				ELSE SUM(((ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1))) END AS Miktar,
				SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS Matrah,
				0 AS Iskonto,
				0 AS KDVtutari,
				SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS ToplamTutar
			FROM Hareketler  WITH(NOLOCK) 
			LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
			LEFT JOIN Hesaplar  WITH(NOLOCK) ON Basliklar.HesapInd=Hesaplar.Ind
			WHERE Basliklar.Tarih >= @BaslangicTarihi
				  AND Basliklar.Tarih < @BitisTarihi
				  AND (Hareketler.TipInd = 2 OR Hareketler.TipInd = 5)
				  AND Hareketler.DurumInd IS NULL
				  AND Hareketler.StokInd IN (SELECT * FROM fnSplit(@stokInds,','))
				  AND (Basliklar.Owner IN (SELECT * FROM fnSplit(@baslikOwner,',')))-- OR  Basliklar.Owner IS NULL)
			GROUP BY
				Basliklar.HesapInd,
				Basliklar.HesapKodu,
				Basliklar.HesapAdi,
				Basliklar.TipInd,
				Hesaplar.Owner
			UNION ALL
			SELECT 
				Hesaplar.Owner,
				Basliklar.HesapInd as CariHesapInd,
				Basliklar.HesapKodu as CariHesapKodu,
				Basliklar.HesapAdi as CariHesapAdi,
				Basliklar.TipInd,
				SUM((Hareketler.Miktar*Hareketler.Carpan)) AS Miktar,
				SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS Matrah,
				0 AS Iskonto,
				0 AS KDVtutari,
				SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS ToplamTutar
			FROM Hareketler  WITH(NOLOCK) 
			LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
			LEFT JOIN Hesaplar  WITH(NOLOCK) ON Basliklar.HesapInd=Hesaplar.Ind
			WHERE Basliklar.Tarih >= @BaslangicTarihi
				  AND Basliklar.Tarih < @BitisTarihi
				  AND Hareketler.TipInd = 37
				  AND Hareketler.DurumInd IS NULL
				  AND Hareketler.StokInd IN (SELECT * FROM fnSplit(@stokInds,','))
				  AND (Basliklar.Owner IN (SELECT * FROM fnSplit(@baslikOwner,',')))-- OR  Basliklar.Owner IS NULL)
			GROUP BY
				Basliklar.HesapInd,
				Basliklar.HesapKodu,
				Basliklar.HesapAdi,
				Basliklar.TipInd,
				Hesaplar.Owner

RETURN
END





GO
CREATE FUNCTION [dbo].[IcmalRaporuStok] 
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@cariInds nvarchar(max),
	@baslikOwner nvarchar(max),
	@merkezdemisin int
)
RETURNS @Icmal TABLE 
(
	Owner int,
	StokInd int,
	StokKodu nvarchar(max),
	StokAdi nvarchar(max),
	TipInd int,
	Miktar decimal(28,8),
	Matrah decimal(28,8),
	Iskonto decimal(28,8),
	KDVtutari decimal(28,8),
	ToplamTutar decimal(28,8)
	
)
AS
BEGIN

	IF(@merkezdemisin > 0)
		--BEGIN
			INSERT INTO @Icmal
				SELECT 
						Stoklar.Owner,
						ISNULL(Hareketler.StokInd, Hareketler.GelirInd) AS StokInd,
						ISNULL(Hareketler.StokKodu, Hareketler.GelirKodu) AS StokKodu,
						ISNULL(Hareketler.StokAdi, Hareketler.GelirAdi) AS StokAdi,
						Basliklar.TipInd,
						CASE WHEN SUM(Hareketler.NetMiktar) != 0
						THEN SUM((ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1)))
						ELSE SUM(((ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1))) END AS Miktar,
						SUM(
							(
								(
									CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
									THEN ISNULL(Hareketler.Miktar, 1) 
									ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
									END
								) 
								*
								ISNULL(Hareketler.Carpan, 1)
								*
								ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
								-
								ISNULL(Hareketler.Iskonto, 0)
								-
								(
									ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1))
									*
									ISNULL(Hareketler.Carpan, 1)
									*
									ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
									-
									ISNULL(Hareketler.Iskonto, 0)
								)
								*
								Basliklar.Iskonto 
								/ 
								(
									CASE WHEN (BaslikMatrah.Matrah != 0) 
									THEN BaslikMatrah.Matrah 
									ELSE 1 END
								)
							)
						   ) AS Matrah,
						SUM(((
								CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
								THEN ISNULL(Hareketler.Miktar, 1)
								ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
								END
							*
							ISNULL(Hareketler.Carpan, 1)
							*
							ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
							-
							ISNULL(Hareketler.Iskonto, 0)
							)
							*
							Basliklar.Iskonto
							/
							CASE WHEN BaslikMatrah.Matrah > 0 THEN  BaslikMatrah.Matrah ELSE 1 END) + ISNULL(Hareketler.Iskonto, 0)) AS Iskonto,
						SUM(
							(
								(
									CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
									THEN ISNULL(Hareketler.Miktar, 1) 
									ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
									END
									*
									ISNULL(Hareketler.Carpan, 1)
									*
									ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
									-
									ISNULL(Hareketler.Iskonto, 0)
								)
								-
								(
									(
										CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
										THEN ISNULL(Hareketler.Miktar, 1) 
										ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
										END
									*
									ISNULL(Hareketler.Carpan, 1)
									*
									ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
									-
									ISNULL(Hareketler.Iskonto, 0)
									)
									*
									Basliklar.Iskonto
									/
									CASE WHEN BaslikMatrah.Matrah > 0 THEN  BaslikMatrah.Matrah ELSE 1 END
								)
							)
							*
							((Hareketler.KDVOrani/100))
						) AS KDVtutari,
						SUM(
							(
								(
									CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
									THEN ISNULL(Hareketler.Miktar, 1) 
									ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
									END
									*
									ISNULL(Hareketler.Carpan, 1)
									*
									ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
									-
									ISNULL(Hareketler.Iskonto, 0)
								)
								-
								(
									(
										CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
										THEN ISNULL(Hareketler.Miktar, 1) 
										ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
										END
									*
									ISNULL(Hareketler.Carpan, 1)
									*
									ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
									-
									ISNULL(Hareketler.Iskonto, 0)
									)
									*
									Basliklar.Iskonto
									/
									CASE WHEN BaslikMatrah.Matrah > 0 THEN BaslikMatrah.Matrah ELSE 1 END
								)
							)
							*
							(1+(Hareketler.KDVOrani/100))
							+
							(
								(
									CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
									THEN ISNULL(Hareketler.Miktar, 1) 
									ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
									END
								*
								ISNULL(Hareketler.Carpan, 1)
								*
								ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
								-
								ISNULL(Hareketler.Iskonto, 0)
								)
								*
								Basliklar.Yuvarlama
								/
								CASE WHEN BaslikMatrah.Matrah > 0 THEN BaslikMatrah.Matrah ELSE 1 END
							)
						) AS ToplamTutar
					FROM Hareketler  WITH(NOLOCK) 
					LEFT JOIN Basliklar  WITH(NOLOCK)  ON Hareketler.BaslikInd=Basliklar.Ind
					LEFT JOIN BaslikMatrahForIcmalFnc(@BaslangicTarihi, @BitisTarihi) AS BaslikMatrah ON BaslikMatrah.BaslikInd=Basliklar.Ind
					LEFT JOIN Stoklar  WITH(NOLOCK) ON Stoklar.Ind=Hareketler.StokInd
					WHERE Basliklar.Tarih >= @BaslangicTarihi
						  AND Basliklar.Tarih < @BitisTarihi
						  AND (Hareketler.TipInd = 3 OR Hareketler.TipInd = 6 OR Hareketler.TipInd = 511)
						  AND Basliklar.HesapInd IN (SELECT * FROM fnSplit(@cariInds,','))
						  AND (Basliklar.Owner IN (SELECT * FROM fnSplit(@baslikOwner,',')) OR  Basliklar.Owner IS NULL)
						  --AND BaslikMatrah.Tarih >= @BaslangicTarihi AND BaslikMatrah.Tarih < @BitisTarihi
					GROUP BY
						Hareketler.StokInd,
						Hareketler.StokKodu,
						Hareketler.StokAdi,
						Hareketler.GelirInd,
						Hareketler.GelirKodu,
						Hareketler.GelirAdi,
						Basliklar.TipInd,
						Stoklar.Owner
					UNION ALL
					SELECT 
						Stoklar.Owner,
						Hareketler.StokInd,
						Hareketler.StokKodu,
						Hareketler.StokAdi,
						Basliklar.TipInd,
						CASE WHEN SUM(Hareketler.NetMiktar) != 0
						THEN SUM((ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1)))
						ELSE SUM(((ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1))) END AS Miktar,
						SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS Matrah,
						0 AS Isonto,
						0 AS KDVtutari,
						SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS ToplamTutar
					FROM Hareketler  WITH(NOLOCK) 
					LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
					LEFT JOIN Stoklar  WITH(NOLOCK) ON Stoklar.Ind=Hareketler.StokInd
					WHERE Basliklar.Tarih >= @BaslangicTarihi
						  AND Basliklar.Tarih < @BitisTarihi
						  AND Hareketler.TipInd IN (2,5)
						  AND Hareketler.DurumInd IS NULL
						  AND Basliklar.HesapInd IN (SELECT * FROM fnSplit(@cariInds,','))
						  AND (Basliklar.Owner IN (SELECT * FROM fnSplit(@baslikOwner,',')) OR  Basliklar.Owner IS NULL)
					GROUP BY
						Hareketler.StokInd,
						Hareketler.StokKodu,
						Hareketler.StokAdi,
						Basliklar.TipInd,
						Stoklar.Owner
					UNION ALL
					SELECT 
						Stoklar.Owner,
						Hareketler.StokInd,
						Hareketler.StokKodu,
						Hareketler.StokAdi,
						Basliklar.TipInd,
						SUM((Hareketler.Miktar*Hareketler.Carpan)) AS Miktar,
						SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS Matrah,
						0 AS Isonto,
						0 AS KDVtutari,
						SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS ToplamTutar
					FROM Hareketler  WITH(NOLOCK) 
					LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
					LEFT JOIN Stoklar  WITH(NOLOCK) ON Stoklar.Ind=Hareketler.StokInd
					WHERE Basliklar.Tarih >= @BaslangicTarihi
						  AND Basliklar.Tarih < @BitisTarihi
						  AND Hareketler.TipInd IN (37)
						  AND Hareketler.DurumInd IS NULL
						  AND Basliklar.HesapInd IN (SELECT * FROM fnSplit(@cariInds,','))
						  AND (Basliklar.Owner IN (SELECT * FROM fnSplit(@baslikOwner,',')) OR  Basliklar.Owner IS NULL)
					GROUP BY
						Hareketler.StokInd,
						Hareketler.StokKodu,
						Hareketler.StokAdi,
						Basliklar.TipInd,
						Stoklar.Owner
		--END
	ELSE
		--BEGIN
			INSERT INTO @Icmal
				SELECT 
						Stoklar.Owner,
						ISNULL(Hareketler.StokInd, Hareketler.GelirInd) AS StokInd,
						ISNULL(Hareketler.StokKodu, Hareketler.GelirKodu) AS StokKodu,
						ISNULL(Hareketler.StokAdi, Hareketler.GelirAdi) AS StokAdi,
						Basliklar.TipInd,
						CASE WHEN SUM(Hareketler.NetMiktar) != 0
						THEN SUM((ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1)))
						ELSE SUM(((ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1))) END AS Miktar,
						SUM(
							(
								(
									CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
									THEN ISNULL(Hareketler.Miktar, 1) 
									ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
									END
								) 
								*
								ISNULL(Hareketler.Carpan, 1)
								*
								ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
								-
								ISNULL(Hareketler.Iskonto, 0)
								-
								(
									ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1))
									*
									ISNULL(Hareketler.Carpan, 1)
									*
									ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
									-
									ISNULL(Hareketler.Iskonto, 0)
								)
								*
								Basliklar.Iskonto 
								/ 
								(
									CASE WHEN (BaslikMatrah.Matrah != 0) 
									THEN BaslikMatrah.Matrah 
									ELSE 1 END
								)
							)
						   ) AS Matrah,
						SUM(((
								CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
								THEN ISNULL(Hareketler.Miktar, 1)
								ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
								END
							*
							ISNULL(Hareketler.Carpan, 1)
							*
							ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
							-
							ISNULL(Hareketler.Iskonto, 0)
							)
							*
							Basliklar.Iskonto
							/
							CASE WHEN BaslikMatrah.Matrah > 0 THEN BaslikMatrah.Matrah ELSE 1 END) + ISNULL(Hareketler.Iskonto, 0)) AS Iskonto,
						SUM(
							(
								(
									CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
									THEN ISNULL(Hareketler.Miktar, 1) 
									ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
									END
									*
									ISNULL(Hareketler.Carpan, 1)
									*
									ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
									-
									ISNULL(Hareketler.Iskonto, 0)
								)
								-
								(
									(
										CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
										THEN ISNULL(Hareketler.Miktar, 1) 
										ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
										END
									*
									ISNULL(Hareketler.Carpan, 1)
									*
									ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
									-
									ISNULL(Hareketler.Iskonto, 0)
									)
									*
									Basliklar.Iskonto
									/
									CASE WHEN BaslikMatrah.Matrah > 0 THEN BaslikMatrah.Matrah ELSE 1 END
								)
							)
							*
							((Hareketler.KDVOrani/100))
						) AS KDVtutari,
						SUM(
							(
								(
									CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
									THEN ISNULL(Hareketler.Miktar, 1) 
									ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
									END
									*
									ISNULL(Hareketler.Carpan, 1)
									*
									ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
									-
									ISNULL(Hareketler.Iskonto, 0)
								)
								-
								(
									(
										CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
										THEN ISNULL(Hareketler.Miktar, 1) 
										ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
										END
									*
									ISNULL(Hareketler.Carpan, 1)
									*
									ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
									-
									ISNULL(Hareketler.Iskonto, 0)
									)
									*
									Basliklar.Iskonto
									/
									CASE WHEN BaslikMatrah.Matrah > 0 THEN BaslikMatrah.Matrah ELSE 1 END
								)
							)
							*
							(1+(Hareketler.KDVOrani/100))
							+
							(
								(
									CASE WHEN ISNULL(Hareketler.NetMiktar, 1) = 0 
									THEN ISNULL(Hareketler.Miktar, 1) 
									ELSE ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) 
									END
								*
								ISNULL(Hareketler.Carpan, 1)
								*
								ISNULL(Hareketler.Fiyat, (((Hareketler.Tutar / (1+(Hareketler.KDVOrani / 100))))))
								-
								ISNULL(Hareketler.Iskonto, 0)
								)
								*
								Basliklar.Yuvarlama
								/
								CASE WHEN BaslikMatrah.Matrah > 0 THEN BaslikMatrah.Matrah ELSE 1 END
							)
						) AS ToplamTutar
					FROM Hareketler  WITH(NOLOCK) 
					LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
					LEFT JOIN BaslikMatrahForIcmalFnc(@BaslangicTarihi, @BitisTarihi) AS BaslikMatrah ON BaslikMatrah.BaslikInd=Basliklar.Ind
					LEFT JOIN Stoklar  WITH(NOLOCK)  ON Stoklar.Ind=Hareketler.StokInd
					WHERE Basliklar.Tarih >= @BaslangicTarihi
						  AND Basliklar.Tarih < @BitisTarihi
						  AND (Hareketler.TipInd = 3 OR Hareketler.TipInd = 6 OR Hareketler.TipInd = 511)
						  AND Basliklar.HesapInd IN (SELECT * FROM fnSplit(@cariInds,','))
						  AND (Basliklar.Owner IN (SELECT * FROM fnSplit(@baslikOwner,',')))-- OR  Basliklar.Owner IS NULL)
						  --AND BaslikMatrah.Tarih >= @BaslangicTarihi AND BaslikMatrah.Tarih < @BitisTarihi
					GROUP BY
						Hareketler.StokInd,
						Hareketler.StokKodu,
						Hareketler.StokAdi,
						Hareketler.GelirInd,
						Hareketler.GelirKodu,
						Hareketler.GelirAdi,
						Basliklar.TipInd,
						Stoklar.Owner
					UNION ALL
					SELECT 
						Stoklar.Owner,
						Hareketler.StokInd,
						Hareketler.StokKodu,
						Hareketler.StokAdi,
						Basliklar.TipInd,
						CASE WHEN SUM(Hareketler.NetMiktar) != 0
						THEN SUM((ISNULL(Hareketler.NetMiktar, ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1)))
						ELSE SUM(((ISNULL(Hareketler.Miktar, 1)) * ISNULL(Hareketler.Carpan, 1))) END AS Miktar,
						SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS Matrah,
						0 AS Isonto,
						0 AS KDVtutari,
						SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS ToplamTutar
					FROM Hareketler  WITH(NOLOCK) 
					LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
					LEFT JOIN Stoklar  WITH(NOLOCK) ON Stoklar.Ind=Hareketler.StokInd
					WHERE Basliklar.Tarih >= @BaslangicTarihi
						  AND Basliklar.Tarih < @BitisTarihi
						  AND Hareketler.TipInd IN (2,5)
						  AND Hareketler.DurumInd IS NULL
						  AND Basliklar.HesapInd IN (SELECT * FROM fnSplit(@cariInds,','))
						  AND (Basliklar.Owner IN (SELECT * FROM fnSplit(@baslikOwner,',')))-- OR  Basliklar.Owner IS NULL)
					GROUP BY
						Hareketler.StokInd,
						Hareketler.StokKodu,
						Hareketler.StokAdi,
						Basliklar.TipInd,
						Stoklar.Owner
					UNION ALL
					SELECT 
						Stoklar.Owner,
						Hareketler.StokInd,
						Hareketler.StokKodu,
						Hareketler.StokAdi,
						Basliklar.TipInd,
						SUM((Hareketler.Miktar*Hareketler.Carpan)) AS Miktar,
						SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS Matrah,
						0 AS Isonto,
						0 AS KDVtutari,
						SUM((Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat)) AS ToplamTutar
					FROM Hareketler  WITH(NOLOCK) 
					LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
					LEFT JOIN Stoklar  WITH(NOLOCK) ON Stoklar.Ind=Hareketler.StokInd
					WHERE Basliklar.Tarih >= @BaslangicTarihi
						  AND Basliklar.Tarih < @BitisTarihi
						  AND Hareketler.TipInd IN (37)
						  AND Hareketler.DurumInd IS NULL
						  AND Basliklar.HesapInd IN (SELECT * FROM fnSplit(@cariInds,','))
						  AND (Basliklar.Owner IN (SELECT * FROM fnSplit(@baslikOwner,',')))-- OR  Basliklar.Owner IS NULL)
					GROUP BY
						Hareketler.StokInd,
						Hareketler.StokKodu,
						Hareketler.StokAdi,
						Basliklar.TipInd,
						Stoklar.Owner
		--END


RETURN
END





GO



GO
CREATE FUNCTION [dbo].[IrsaliyeDokumuPlakali]
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@HesapInd int
)
RETURNS TABLE 
AS 
RETURN 
(
		SELECT 
			Basliklar.Owner,
			Basliklar.TipInd,
			CASE WHEN Hareketler.TipInd = 37 
			THEN Hareketler.Tutar
			ELSE Hareketler.Miktar * Hareketler.Fiyat * Hareketler.Carpan END AS NetTutar,
			Hareketler.Miktar * Hareketler.Carpan AS Miktar,
			Hareketler.Fiyat AS Fiyat,
			Basliklar.Tarih As Tarih,
			Hareketler.DurumInd,
			Basliklar.HesapInd,
			Basliklar.BelgeNo,
			Basliklar.PlakaNo,
			Hareketler.StokInd,
			0 as FisAdedi,
			(Hareketler.StokKodu + ' - ' + Hareketler.StokAdi) AS StokKodu,
			CASE WHEN (Hareketler.DurumInd In (3))
			THEN 'Eski'
			WHEN (Hareketler.DurumInd In (-1))
			THEN ''
			ELSE 'Yeni' END AS Durum,
			CASE WHEN (Hareketler.TipInd IN (37))
			THEN 'V.Fişi'
			WHEN (Hareketler.TipInd IN (2))
			THEN 'Alış İrs.'
			WHEN (Hareketler.TipInd IN (-1))
			THEN 'Toplam'
			ELSE 'Satış İrs.' END AS Aciklama,
			Hareketler.YazarKasaFisNo as YazarKasaFisNo
		FROM Hareketler  WITH(NOLOCK) 
		INNER JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
		WHERE Basliklar.Tarih >= @BaslangicTarihi
			  AND Basliklar.Tarih < @BitisTarihi
			  AND Hareketler.TipInd IN (2,5,37)
			  AND Basliklar.HesapInd = @HesapInd
			AND (Basliklar.DurumInd != 11 OR Basliklar.DurumInd IS NULL) 
)






GO
CREATE FUNCTION [dbo].[IrsaliyelereAitFatura] 
(	
	@irsaliyeInd nvarchar(MAX),
	@isSatis tinyint
)
RETURNS
@Fatura TABLE 
(
	HesapInd	int,
	HesapKodu	nvarchar(max),
	HesapAdi	nvarchar(max),
	StokInd int,
	StokKodu nvarchar(30),
	StokAdi nvarchar(60),--GTIP KODU'ndan dolayı length 40'tan 60'a çıkartıldı S.Z.Y.
	BirimAdi nvarchar(15),
	Carpan decimal(28,8),
	AnaBirimAdi nvarchar(15),
	Miktar decimal(28,8),
	Fiyat decimal(28,14),
	KDVOrani decimal(28,8),
	Tutar decimal(28,14),
	Iskonto decimal(28,14),
	Owner int,
	BelgeNo nvarchar(max)
)
AS
BEGIN
	INSERT INTO @Fatura
	SELECT	
		Basliklar.HesapInd,
		Basliklar.HesapKodu,
		Basliklar.HesapAdi,
		Hareketler.StokInd,
		Hareketler.StokKodu,
		Hareketler.StokAdi,
		Hareketler.BirimAdi,
		Hareketler.Carpan,
		Hareketler.AnaBirimAdi,
		Sum(Hareketler.Miktar) AS Miktar,
		Hareketler.Fiyat,
		0.00 AS KDVOrani,
		Sum(Hareketler.Tutar) AS Tutar,
		0.00 AS Iskonto,
		NULL AS Owner, 
		stuff((
			SELECT ', ' + BelgeNo
			FROM   Basliklar
			WHERE  Ind in (SELECT * FROM fnSplit(@irsaliyeInd,','))
			FOR XML PATH('')), 1, 2, '') as BelgeNo		--İrsaliye numarasına göre gruplama kaldırıldı	Basliklar.BelgeNo
		
	FROM Hareketler  WITH(NOLOCK) LEFT JOIN Basliklar  WITH(NOLOCK) 
		ON Hareketler.BaslikInd=Basliklar.Ind
	WHERE BaslikInd in (SELECT * FROM fnSplit(@irsaliyeInd,',') )
		AND 
		(Basliklar.TipInd=111 AND Hareketler.TipInd=37)
		
	GROUP BY
			Basliklar.HesapInd,
			Basliklar.HesapKodu,
			Basliklar.HesapAdi,
			Hareketler.StokInd,
			Hareketler.StokKodu,
			Hareketler.StokAdi,
			Hareketler.BirimAdi,
			Hareketler.Carpan,
			Hareketler.AnaBirimAdi,
			Hareketler.Fiyat--,
			--BelgeNo

	INSERT INTO @Fatura
	SELECT	
		Basliklar.HesapInd,
		Basliklar.HesapKodu,
		Basliklar.HesapAdi,
		Hareketler.StokInd,
		Hareketler.StokKodu,
		Hareketler.StokAdi,
		Hareketler.BirimAdi,
		Hareketler.Carpan,
		Hareketler.AnaBirimAdi,
		Sum(Hareketler.Miktar) AS Miktar,
		Hareketler.Fiyat,
		0.00 AS KDVOrani,
		Sum(Hareketler.Miktar*Hareketler.Fiyat) AS Tutar,
	    0.00 AS Iskonto,
		NULL AS Owner,
		stuff((
			SELECT ', ' + BelgeNo
			FROM   Basliklar
			WHERE  Ind in (SELECT * FROM fnSplit(@irsaliyeInd,','))
			FOR XML PATH('')), 1, 2, '') as BelgeNo		--İrsaliye numarasına göre gruplama kaldırıldı	Basliklar.BelgeNo
		
	FROM Hareketler  WITH(NOLOCK) LEFT JOIN Basliklar  WITH(NOLOCK) 
		ON Hareketler.BaslikInd=Basliklar.Ind
	WHERE BaslikInd in (SELECT * FROM fnSplit(@irsaliyeInd,',') )
		AND 
		((Basliklar.TipInd=103 AND Hareketler.TipInd=2)
			OR (Basliklar.TipInd=104 AND Hareketler.TipInd=5))
		
	GROUP BY
			Basliklar.HesapInd,
			Basliklar.HesapKodu,
			Basliklar.HesapAdi,
			Hareketler.StokInd,
			Hareketler.StokKodu,
			Hareketler.StokAdi,
			Hareketler.BirimAdi,
			Hareketler.Carpan,
			Hareketler.AnaBirimAdi,
			Hareketler.Fiyat--,
			--BelgeNo

	IF(@isSatis=1)
	BEGIN
	UPDATE @Fatura SET KDVOrani=
	(SELECT KDVGruplari.KDVOrani FROM KDVGruplari WHERE KDVGruplari.Ind=(SELECT SatisKDVGrupInd FROM Stoklar WHERE Stoklar.Ind=StokInd) )
	END
	ELSE IF(@isSatis=0)
	BEGIN
	UPDATE @Fatura SET KDVOrani=
	(SELECT KDVGruplari.KDVOrani FROM KDVGruplari WHERE KDVGruplari.Ind=(SELECT AlisKDVGrupInd FROM Stoklar WHERE Stoklar.Ind=StokInd) )
	END

	UPDATE @Fatura SET Fiyat=( Fiyat/(1+(KDVOrani/100)) )

	RETURN
END

GO
CREATE FUNCTION [dbo].[IrsaliyelereAitFaturaOrtFyt] 
(	
	@irsaliyeInd nvarchar(MAX),
	@isSatis tinyint
)
RETURNS @Fatura TABLE 
(
	HesapInd	int,
	HesapKodu	nvarchar(max),
	HesapAdi	nvarchar(max),
	StokInd int,
	StokKodu nvarchar(30),
	StokAdi nvarchar(60),--GTIP KODU'ndan dolayı length 40'tan 60'a çıkartıldı S.Z.Y.
	BirimAdi nvarchar(15),
	Carpan decimal(28,8),
	AnaBirimAdi nvarchar(15),
	Miktar decimal(28,8),
	Fiyat decimal(28,14),
	KDVOrani decimal(28,8),
	Tutar decimal(28,14),
	Iskonto decimal(28,14),
	Owner int,
	BelgeNo nvarchar(max)
)
AS
BEGIN
	WITH HareketDokumu(HesapInd, HesapKodu, HesapAdi, StokInd, StokKodu, StokAdi, BirimAdi, Carpan, AnaBirimAdi, Miktar, Fiyat, KDVOrani, Tutar, Iskonto, Owner, BelgeNo)
	AS
	(
		SELECT	
			Basliklar.HesapInd,
			Basliklar.HesapKodu,
			Basliklar.HesapAdi,
			Hareketler.StokInd,
			Hareketler.StokKodu,
			Hareketler.StokAdi,
			Hareketler.BirimAdi,
			Hareketler.Carpan,
			Hareketler.AnaBirimAdi,
			Sum(Hareketler.Miktar) AS Miktar,
			Hareketler.Fiyat,
			0.00 AS KDVOrani,
			Sum(Hareketler.Tutar) AS Tutar,
		    0.00 AS Iskonto,
			Hareketler.Owner,
			Basliklar.BelgeNo
		FROM Hareketler  WITH(NOLOCK)  LEFT JOIN Basliklar  WITH(NOLOCK) 
			ON Hareketler.BaslikInd=Basliklar.Ind
		WHERE BaslikInd in (SELECT * FROM fnSplit(@irsaliyeInd,',') )
			AND 
			(Basliklar.TipInd=111 AND Hareketler.TipInd=37)
		GROUP BY
			Basliklar.HesapInd,
			Basliklar.HesapKodu,
			Basliklar.HesapAdi,
			Hareketler.StokInd,
			Hareketler.StokKodu,
			Hareketler.StokAdi,
			Hareketler.BirimAdi,
			Hareketler.Carpan,
			Hareketler.AnaBirimAdi,
			Hareketler.Fiyat,
			Hareketler.Owner,
			Basliklar.BelgeNo
		UNION ALL
		SELECT	
			Basliklar.HesapInd,
			Basliklar.HesapKodu,
			Basliklar.HesapAdi,
			Hareketler.StokInd,
			Hareketler.StokKodu,
			Hareketler.StokAdi,
			Hareketler.BirimAdi,
			Hareketler.Carpan,
			Hareketler.AnaBirimAdi,
			Sum(Hareketler.Miktar) AS Miktar,
			Hareketler.Fiyat,
			0.00 AS KDVOrani,
			Sum(Hareketler.Miktar*Hareketler.Fiyat) AS Tutar,
		    0.00 AS Iskonto,
			Hareketler.Owner,
			Basliklar.BelgeNo
		FROM Hareketler  WITH(NOLOCK)  LEFT JOIN Basliklar  WITH(NOLOCK) 
			ON Hareketler.BaslikInd=Basliklar.Ind
		WHERE BaslikInd in (SELECT * FROM fnSplit(@irsaliyeInd,',') )
			AND 
			((Basliklar.TipInd=103 AND Hareketler.TipInd=2)
				OR (Basliklar.TipInd=104 AND Hareketler.TipInd=5))
		GROUP BY
			Basliklar.HesapInd,
			Basliklar.HesapKodu,
			Basliklar.HesapAdi,
			Hareketler.StokInd,
			Hareketler.StokKodu,
			Hareketler.StokAdi,
			Hareketler.BirimAdi,
			Hareketler.Carpan,
			Hareketler.AnaBirimAdi,
			Hareketler.Fiyat,
			Hareketler.Owner,
			Basliklar.BelgeNo
	)
	INSERT INTO @Fatura
	SELECT
		HesapInd,
		HesapKodu,
		HesapAdi,
		StokInd,
		StokKodu,
		StokAdi,
		BirimAdi,
		Carpan,
		AnaBirimAdi,
		Sum(Miktar) AS Miktar,
		CASE WHEN (SUM(Miktar) > 0)
		THEN SUM(Fiyat*Miktar) / SUM(Miktar)
		ELSE SUM(Fiyat*Miktar) / 1
		END AS Fiyat,
		0.00 AS KDVOrani,
		Sum(Tutar) AS Tutar,
		0.00 AS Iskonto,
		NULL AS Owner,
		stuff((
			SELECT ', ' + BelgeNo
			FROM   Basliklar
			WHERE  Ind in (SELECT * FROM fnSplit(@irsaliyeInd,','))
			FOR XML PATH('')), 1, 2, '') as BelgeNo		--min(BelgeNo) ifadesi kaldırıldı

	FROM
		HareketDokumu  WITH(NOLOCK) 
	GROUP BY
		HesapInd,
		HesapKodu,
		HesapAdi,
		StokInd,
		StokKodu,
		StokAdi,
		BirimAdi,
		Carpan,
		AnaBirimAdi
	IF(@isSatis=1)
	BEGIN
		UPDATE @Fatura SET KDVOrani=
		(SELECT KDVGruplari.KDVOrani FROM KDVGruplari WHERE KDVGruplari.Ind=(SELECT SatisKDVGrupInd FROM Stoklar WHERE Stoklar.Ind=StokInd) )
	END
	ELSE IF(@isSatis=0)
	BEGIN
		UPDATE @Fatura SET KDVOrani=
		(SELECT KDVGruplari.KDVOrani FROM KDVGruplari WHERE KDVGruplari.Ind=(SELECT AlisKDVGrupInd FROM Stoklar WHERE Stoklar.Ind=StokInd) )
	END
	UPDATE @Fatura SET Fiyat=( Fiyat/(1+(KDVOrani/100)) )
	RETURN
END






GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[IrsaliyelereAitFaturaWBelgeNo] 
(	
	@irsaliyeInd nvarchar(MAX),
	@isSatis tinyint
)
RETURNS
@Fatura TABLE 
(
	BelgeNo  nvarchar(max),
	HesapInd	int,
	HesapKodu	nvarchar(max),
	HesapAdi	nvarchar(max),
	StokInd int,
	StokKodu nvarchar(30),
	StokAdi nvarchar(40),
	BirimAdi nvarchar(15),
	Carpan decimal(28,8),
	AnaBirimAdi nvarchar(15),
	Miktar decimal(28,8),
	Fiyat decimal(28,14),
	KDVOrani decimal(28,8),
	Tutar decimal(28,14),
	Owner int
	, Tarih datetime
	,PlakaNo nvarchar(30)
)
AS
BEGIN
	INSERT INTO @Fatura
	SELECT	
		Basliklar.BelgeNo,
		Basliklar.HesapInd,
		Basliklar.HesapKodu,
		Basliklar.HesapAdi,
		Hareketler.StokInd,
		Hareketler.StokKodu,
		Hareketler.StokAdi,
		Hareketler.BirimAdi,
		Hareketler.Carpan,
		Hareketler.AnaBirimAdi,
		Sum(Hareketler.Miktar) AS Miktar,
		Hareketler.Fiyat,
		0.00 AS KDVOrani,
		Sum(Hareketler.Tutar) AS Tutar,
		Hareketler.Owner
		, Basliklar.Tarih
		, Basliklar.PlakaNo
	FROM Hareketler  WITH(NOLOCK)  LEFT JOIN Basliklar  WITH(NOLOCK) 
		ON Hareketler.BaslikInd=Basliklar.Ind
	WHERE BaslikInd in (SELECT * FROM fnSplit(@irsaliyeInd,',') )
		AND 
		(Basliklar.TipInd=111 AND Hareketler.TipInd=37)
		
	GROUP BY
			Basliklar.BelgeNo,
			Basliklar.HesapInd,
			Basliklar.HesapKodu,
			Basliklar.HesapAdi,
			Hareketler.StokInd,
			Hareketler.StokKodu,
			Hareketler.StokAdi,
			Hareketler.BirimAdi,
			Hareketler.Carpan,
			Hareketler.AnaBirimAdi,
			Hareketler.Fiyat,
			Hareketler.Owner
			, Basliklar.Tarih
			, Basliklar.PlakaNo
	INSERT INTO @Fatura
	SELECT	
		Basliklar.BelgeNo,
		Basliklar.HesapInd,
		Basliklar.HesapKodu,
		Basliklar.HesapAdi,
		Hareketler.StokInd,
		Hareketler.StokKodu,
		Hareketler.StokAdi,
		Hareketler.BirimAdi,
		Hareketler.Carpan,
		Hareketler.AnaBirimAdi,
		Sum(Hareketler.Miktar) AS Miktar,
		Hareketler.Fiyat,
		0.00 AS KDVOrani,
		Sum(Hareketler.Miktar*Hareketler.Fiyat) AS Tutar,
		Hareketler.Owner
		, Basliklar.Tarih
		, Basliklar.PlakaNo
	FROM Hareketler  WITH(NOLOCK)  LEFT JOIN Basliklar  WITH(NOLOCK) 
		ON Hareketler.BaslikInd=Basliklar.Ind
	WHERE BaslikInd in (SELECT * FROM fnSplit(@irsaliyeInd,',') )
		AND 
		((Basliklar.TipInd=103 AND Hareketler.TipInd=2)
			OR (Basliklar.TipInd=104 AND Hareketler.TipInd=5))
		
	GROUP BY
			Basliklar.BelgeNo,
			Basliklar.HesapInd,
			Basliklar.HesapKodu,
			Basliklar.HesapAdi,
			Hareketler.StokInd,
			Hareketler.StokKodu,
			Hareketler.StokAdi,
			Hareketler.BirimAdi,
			Hareketler.Carpan,
			Hareketler.AnaBirimAdi,
			Hareketler.Fiyat,
			Hareketler.Owner
			, Basliklar.Tarih
			, Basliklar.PlakaNo
	IF(@isSatis=1)
	BEGIN
	UPDATE @Fatura SET KDVOrani=
	(SELECT KDVGruplari.KDVOrani FROM KDVGruplari WHERE KDVGruplari.Ind=(SELECT SatisKDVGrupInd FROM Stoklar WHERE Stoklar.Ind=StokInd) )
	END
	ELSE IF(@isSatis=0)
	BEGIN
	UPDATE @Fatura SET KDVOrani=
	(SELECT KDVGruplari.KDVOrani FROM KDVGruplari WHERE KDVGruplari.Ind=(SELECT AlisKDVGrupInd FROM Stoklar WHERE Stoklar.Ind=StokInd) )
	END

	UPDATE @Fatura SET Fiyat=( Fiyat/(1+(KDVOrani/100)) )

	RETURN
END



GO


CREATE FUNCTION [dbo].[IrsaliyeSatisBilgileriGetir]
(
	@Owner int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@BaslangicFaturaTarihi datetime,
	@BitisFaturaTarihi datetime
)

RETURNS TABLE 
AS


RETURN 
(




-- Verilen Tarih Aralığında Düzenlenen Vardiya içi İrsaliyeler (111) alınıyor (Eski vardiya veresiye fişi)
SELECT
	V.Owner,
	S.SubeAdi,
	V.Tarih AS IrsaliyeTarihi,
	B.BelgeNo AS IrsaliyeNo,
	B.HesapInd,
	B.HesapKodu,
	B.HesapAdi,
	H.StokInd,
	H.StokKodu,
	NULL AS StokMuhasebeKodu,
	H.StokAdi,
	SUM(Miktar) AS Miktar,
	H.Fiyat AS Fiyat,
	--SUM(Tutar) / SUM(Miktar) AS Fiyat,
	SUM(Tutar) AS Tutar,
	NULL AS CariMuhasebeKodu,
	F.BelgeNo AS FaturaNo,
	F.Ind AS BaslikInd,
	HS.DekontCarisi
FROM Hareketler H  WITH(NOLOCK) 
INNER JOIN Basliklar B  WITH(NOLOCK) ON H.BaslikInd = B.Ind
LEFT JOIN Basliklar F  WITH(NOLOCK) ON B.FaturaInd = F.Ind
INNER JOIN Basliklar V  WITH(NOLOCK) ON B.VardiyaKartInd = V.Ind
INNER JOIN Subeler S  WITH(NOLOCK) ON B.Owner = S.Ind
LEFT JOIN Hesaplar HS  WITH(NOLOCK) ON B.HesapInd = HS.Ind
LEFT JOIN Stoklar STK  WITH(NOLOCK) ON H.StokInd = STK.Ind
WHERE 
	B.TipInd = 111 AND
	B.Owner = @Owner AND
	
	 F.Tarih >= @BaslangicFaturaTarihi AND F.Tarih < @BitisFaturaTarihi
	
	AND B.Tarih >= CASE WHEN DATEDIFF(day, @BaslangicTarihi, @BitisTarihi) > 2 THEN 
		CAST('19900101' AS DATETIME)
	 ELSE
		@BaslangicTarihi
	END
	AND B.Tarih < @BitisTarihi 
	
	AND V.Tarih >= CASE WHEN DATEDIFF(day, @BaslangicTarihi, @BitisTarihi) > 2 THEN 
		CAST('19900101' AS DATETIME)
	 ELSE
		@BaslangicTarihi
	END
	
	
	AND V.Tarih < @BitisTarihi 
	AND B.DurumInd != 11
	AND B.HesapInd NOT IN (2108,4389,4390) -- G012 Çekilen Akaryakıt, TEST Yakıt Carisi, Hatalı Yakıt Dolumları
	
	--AND S.Ind NOT in  -- Bazı şubeler kapsam dışında tutuluyor--KAPATILDI Semih Zafer YILMAZ : ERP-10 - Logo Aktarım - Veresiye Detaylı Arama Rapor Hatası
	--(
	--	1,10,11,12,18,19,20
	--) 
	AND B.Owner IS NOT NULL
--AND Hs.DekontCarisi != 1 -- Dekont Carisi Dışındakiler
GROUP BY
	V.Owner,
	S.SubeAdi,
	V.Tarih,
	B.BelgeNo,
	B.HesapInd,
	B.HesapKodu,
	B.HesapAdi,
 	H.StokInd,
	H.StokKodu,
	H.StokAdi,
	F.BelgeNo,
	F.Ind,
	HS.DekontCarisi,
	H.Fiyat
	
	-- Verilen tarihler arasındaki satış irsaliyeleri alınıyor. Bazı Şubeler Hariç tutuluyor.
	-- Bu şubeler hesapçı özelinde dikkate alınmıyor
	-- Yağ stokları dikkate alınmıyor.
	UNION ALL
	SELECT
	B.Owner,
	S.SubeAdi,
	B.Tarih AS IrsaliyeTarihi,
	B.BelgeNo AS IrsaliyeNo,
	B.HesapInd,
	B.HesapKodu,
	B.HesapAdi,
	H.StokInd,
	H.StokKodu,
	NULL AS StokMuhasebeKodu,
	H.StokAdi,
	SUM(Miktar) AS Miktar,
	H.Fiyat AS Fiyat,
	--SUM(Tutar) / SUM(Miktar) AS Fiyat,
	SUM(Miktar * Fiyat) AS Tutar,
	NULL AS CariMuhasebeKodu,
	F.BelgeNo AS FaturaNo,
	F.Ind AS BaslikInd,
	HS.DekontCarisi
FROM Hareketler H  WITH(NOLOCK) 
INNER JOIN Basliklar B  WITH(NOLOCK) ON H.BaslikInd = B.Ind
LEFT JOIN Basliklar F  WITH(NOLOCK) ON B.FaturaInd = F.Ind
INNER JOIN Subeler S  WITH(NOLOCK) ON B.Owner = S.Ind
LEFT JOIN Hesaplar HS  WITH(NOLOCK) ON B.HesapInd = HS.Ind
LEFT JOIN Stoklar STK  WITH(NOLOCK) ON H.StokInd = STK.Ind
WHERE 
	B.TipInd = 104 
	AND B.Owner = @Owner AND
		
	 F.Tarih >= @BaslangicFaturaTarihi AND F.Tarih < @BitisFaturaTarihi
		AND B.Tarih >= CASE WHEN DATEDIFF(day, @BaslangicTarihi, @BitisTarihi) > 2 THEN 
		CAST('19900101' AS DATETIME)
	 ELSE
		@BaslangicTarihi
	END
	AND B.Tarih < @BitisTarihi 
		--AND B.Tarih >= @BaslangicTarihi  AND B.Tarih < @BitisTarihi 
	AND S.Ind NOT in  -- Bazı şubeler kapsam dışında tutuluyor
	(
		1,10,11,12,18,19,20
	) 
	AND B.HesapInd NOT IN (2108,4389,4390) -- G012 Çekilen Akaryakıt, TEST Yakıt Carisi, Hatalı Yakıt Dolumları
	AND H.StokKodu NOT IN 
	(
		'8691494913390',
		'8692920118105',
		'8692920300456',
		'8692920301118',
		'8692920301163',
		'8692920301200',
		'8692920301255',
		'8697404400233',
		'8697404411277'
	)
	AND B.Owner IS NOT NULL
	--AND Hs.DekontCarisi != 1 -- Dekont Carisi Dışındakiler
GROUP BY
	B.Owner,
	S.SubeAdi,
	B.Tarih,
	B.BelgeNo,
	B.HesapInd,
	B.HesapKodu,
	B.HesapAdi,
 	H.StokInd,
	H.StokKodu,
	H.StokAdi,
	F.BelgeNo,
	F.Ind,
	HS.DekontCarisi,
	H.Fiyat
	
	
)








GO


CREATE FUNCTION [dbo].[IrsaliyeSatisBilgileriGetirZRaporu]
(
	@Owner int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@FaturaBaslangicTarihi datetime,
	@FaturaBitisTarihi datetime
)

RETURNS TABLE 
AS
RETURN 
(

-- Verilen Tarih Aralığında Düzenlenen Vardiya içi İrsaliyeler (111) alınıyor (Eski vardiya veresiye fişi)
SELECT
	V.Owner,
	S.SubeAdi,
	V.Tarih AS IrsaliyeTarihi,
	B.BelgeNo AS IrsaliyeNo,
	B.HesapInd,
	B.HesapKodu,
	B.HesapAdi,
	H.StokInd,
	H.StokKodu,
	NULL AS StokMuhasebeKodu,
	H.StokAdi,
	SUM(Miktar) AS Miktar,
	H.Fiyat AS Fiyat,
	--SUM(Tutar) / SUM(Miktar) AS Fiyat,
	SUM(Tutar) AS Tutar,
	NULL AS CariMuhasebeKodu,
	F.BelgeNo AS FaturaNo,
	F.Ind AS BaslikInd,
	HS.DekontCarisi
FROM Hareketler H  WITH(NOLOCK) 
INNER JOIN Basliklar B  WITH(NOLOCK) ON H.BaslikInd = B.Ind
LEFT JOIN Basliklar F  WITH(NOLOCK) ON B.FaturaInd = F.Ind
INNER JOIN Basliklar V  WITH(NOLOCK) ON B.VardiyaKartInd = V.Ind
INNER JOIN Subeler S  WITH(NOLOCK) ON B.Owner = S.Ind
LEFT JOIN Hesaplar HS  WITH(NOLOCK) ON B.HesapInd = HS.Ind
LEFT JOIN Stoklar STK  WITH(NOLOCK) ON H.StokInd = STK.Ind
WHERE 
	B.TipInd = 111 AND
	V.Owner = @Owner AND
	F.Tarih BETWEEN @FaturaBaslangicTarihi AND @FaturaBitisTarihi
	AND B.Tarih BETWEEN @BaslangicTarihi AND @BitisTarihi
	AND B.DurumInd != 11
	AND B.HesapInd NOT IN (2108,4389,4390) -- G012 Çekilen Akaryakıt, TEST Yakıt Carisi, Hatalı Yakıt Dolumları
	AND Hs.DekontCarisi != 1 -- Dekont Carisi Dışındakiler
	AND S.Ind NOT in  -- Bazı şubeler kapsam dışında tutuluyor
	(
		1,10,11,12,18,19,20
	) 
	AND B.Owner IS NOT NULL
GROUP BY
	V.Owner,
	S.SubeAdi,
	V.Tarih,
	B.BelgeNo,
	B.HesapInd,
	B.HesapKodu,
	B.HesapAdi,
 	H.StokInd,
	H.StokKodu,
	H.StokAdi,
	F.BelgeNo,
	F.Ind,
	HS.DekontCarisi,
	H.Fiyat
	
	-- Verilen tarihler arasındaki satış irsaliyeleri alınıyor. Bazı Şubeler Hariç tutuluyor.
	-- Bu şubeler hesapçı özelinde dikkate alınmıyor
	-- Yağ stokları dikkate alınmıyor.
	UNION ALL
	SELECT
	B.Owner,
	S.SubeAdi,
	B.Tarih AS IrsaliyeTarihi,
	B.BelgeNo AS IrsaliyeNo,
	B.HesapInd,
	B.HesapKodu,
	B.HesapAdi,
	H.StokInd,
	H.StokKodu,
	NULL AS StokMuhasebeKodu,
	H.StokAdi,
	SUM(Miktar) AS Miktar,
	H.Fiyat AS Fiyat,
	--SUM(Tutar) / SUM(Miktar) AS Fiyat,
	SUM(Miktar * Fiyat) AS Tutar,
	NULL AS CariMuhasebeKodu,
	F.BelgeNo AS FaturaNo,
	F.Ind AS BaslikInd,
	HS.DekontCarisi

FROM Hareketler H  WITH(NOLOCK) 
INNER JOIN Basliklar B  WITH(NOLOCK) ON H.BaslikInd = B.Ind
LEFT JOIN Basliklar F  WITH(NOLOCK) ON B.FaturaInd = F.Ind
INNER JOIN Subeler S  WITH(NOLOCK) ON B.Owner = S.Ind
LEFT JOIN Hesaplar HS  WITH(NOLOCK) ON B.HesapInd = HS.Ind
LEFT JOIN Stoklar STK  WITH(NOLOCK) ON H.StokInd = STK.Ind
WHERE 
	B.TipInd = 104 AND
	B.Owner = @Owner AND
	F.Tarih BETWEEN @FaturaBaslangicTarihi AND @FaturaBitisTarihi
	AND B.Tarih BETWEEN @BaslangicTarihi AND @BitisTarihi
	AND Hs.DekontCarisi != 1 -- Dekont Carisi Hariç Tutuluyor
	AND S.Ind NOT in  -- Bazı şubeler kapsam dışında tutuluyor
	(
		1,10,11,12,18,19,20
	) 
	AND B.HesapInd NOT IN (2108,4389,4390) -- G012 Çekilen Akaryakıt, TEST Yakıt Carisi, Hatalı Yakıt Dolumları
	AND H.StokKodu NOT IN 
	(
		'8691494913390',
		'8692920118105',
		'8692920300456',
		'8692920301118',
		'8692920301163',
		'8692920301200',
		'8692920301255',
		'8697404400233',
		'8697404411277'
	)
	AND B.Owner IS NOT NULL
GROUP BY
	B.Owner,
	S.SubeAdi,
	B.Tarih,
	B.BelgeNo,
	B.HesapInd,
	B.HesapKodu,
	B.HesapAdi,
 	H.StokInd,
	H.StokKodu,
	H.StokAdi,
	F.BelgeNo,
	F.Ind,
	HS.DekontCarisi,
	H.Fiyat
	
	
)



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[IskontoAlisHesapButun] 
(	
    @Baslangic datetime,
	@Bitis datetime,
	@DepoInds nvarchar(4000)
)
RETURNS @Dokum TABLE
(
	Tutar decimal(28,8),
	Owner int,
	Miktar decimal(28,8),
	ToplamTutar decimal(28,8),
	IlkIskonto decimal(28,8),
	SonIskonto decimal(28,8),
	StokInd int,
	HesapInd int,
	BaslikInd int
)
AS
BEGIN
--	WITH BaslikMatrah(BaslikInd, Matrah)
--	AS
--	(
--		SELECT 
--			Basliklar.Ind as BaslikInd, 
--			SUM(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto) as Matrah
--		FROM Hareketler
--		LEFT JOIN Basliklar ON Hareketler.BaslikInd=Basliklar.Ind 
--		WHERE Hareketler.TipInd IN (3)
--		GROUP BY
--			Basliklar.Ind
--	)
	INSERT INTO @Dokum
	SELECT
		--
		(gi.Miktar * gi.Carpan * gi.Fiyat - ((gi.Miktar * gi.Carpan * gi.HareketIskonto) / (gi.Miktar * gi.Carpan))) as Tutar,
		gi.Owner,		
		(gi.Miktar * gi.Carpan) as Miktar,
	    h2.Matrah as ToplamTutar,
		((gi.Miktar * gi.Carpan * gi.HareketIskonto) / (gi.Miktar * gi.Carpan)) as IlkIskonto,
		(gi.BaslikIskonto) as SonIskonto,
		gi.StokInd--,
		--s.StokAdi,
		--s.StokKodu,
		--k.KdvOrani,
		--0 as Satis
		,gi.HesapInd,
		gi.BaslikInd
	FROM
		GirisCikisHareketleriIskontolu as gi  WITH(NOLOCK)  LEFT OUTER JOIN
		Stoklar as s  WITH(NOLOCK) ON gi.StokInd = s.Ind LEFT OUTER JOIN
		--dbo.KDVGruplari AS k ON k.Ind = s.SatisKDVGrupInd LEFT OUTER JOIN
		BaslikMatrahForIskontoAlisHesapButun as h2  WITH(NOLOCK) on h2.BaslikInd = gi.BaslikInd
	WHERE
		gi.TipIndAltHareket = 3
		AND @Baslangic <= gi.Tarih
		AND gi.Tarih <= @Bitis AND
		gi.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
	UNION ALL
	SELECT
		distinct
		--b1.durumInd,
		--b1.TipInd,
		(h3.Miktar * h.Fiyat) as Tutar,
		h3.Owner,
				
		(h3.Miktar * ISNULL(h3.Carpan,1)) AS Miktar,
	    --(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto)
		(SELECT TOP 1 Matrah FROM BaslikMatrahForIskontoAlisHesapButun WHERE BaslikInd = h.BaslikInd) as ToplamTutar,
		0.00 as IlkIskonto,
		(b.Iskonto) as SonIskonto,
		h.StokInd,
        --h.StokAdi,
		--h.StokKodu,
		--h.KdvOrani,
		--0 as Satis,
		--b.Tarih,
		--NULL AS DepoInd
		b1.HesapInd,
		b1.Ind AS BaslikInd
	FROM 
		Hareketler as h  WITH(NOLOCK) 
		--LEFT JOIN BaslikMatrahForIskontoAlisHesapButun as h2 on h2.BaslikInd = h.BaslikInd
		LEFT JOIN Basliklar as b  WITH(NOLOCK) on h.BaslikInd = b.Ind 
		LEFT JOIN Basliklar as b1  WITH(NOLOCK) on b1.FaturaInd = h.BaslikInd
		LEFT JOIN GirisCikisHareketleri as h3  WITH(NOLOCK) ON h.StokInd = h3.StokInd
		--LEFT JOIN Hesaplar ON Hesaplar.Ind = h3.DepoInd
	WHERE
		h3.BaslikInd IN (b1.Ind) AND 
		h.TipInd = 3 AND
		h3.TipIndAltHareket = 2
		AND (b1.DurumInd = 3 and b1.TipInd = 103) AND
		h3.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND @Baslangic <= b1.Tarih
		AND b1.Tarih <= @Bitis
--	DECLARE @x int
--	SELECT @x=COUNT(*) FROM @Dokum
--	IF(@x=0)
--		INSERT INTO @Dokum 
--		SELECT
--            
--			0 as Tutar,
--			NULL as Owner,
--			0 as Miktar,
--			0 as ToplamTutar,
--			0 as IlkIskonto,
--			0 as SonIskonto,
--			0 as StokInd--,
--			--null as StokAdi,
--			--null as StokKodu,
--			--0 as KdvOrani,
--			--0 as Satis
--			,0 HesapInd
	RETURN
END
GO
CREATE FUNCTION [dbo].[IskontoSatisHesapButun] 
(	
    @Baslangic datetime,
	@Bitis datetime,
	@DepoInds nvarchar(MAX)
)
RETURNS @Dokum TABLE
(
	Owner int,
	Tutar decimal(28,8),
	Miktar decimal(28,8),
	ToplamTutar decimal(28,8),
	IlkIskonto decimal(28,8),
	SonIskonto decimal(28,8),
	StokInd int,
	StokAdi nvarchar(100),
    StokKodu nvarchar(50),
	KdvOrani decimal(28,8),
	Satis int,  -- .cs kodun içinde kullanılacak, ıskontolu stklarn satıs raporunda olup olmadıgını test etmk için
	HesapInd int,
	BaslikInd int,
	Fiyat decimal(28,8)	--Ulaş
)
AS
BEGIN
	WITH BaslikMatrah(BaslikInd, Matrah)
	AS
	(
		SELECT 
			b.Ind as BaslikInd, 
			SUM(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto)
			+
			ISNULL((SELECT SUM(Tutar / (1 + KDVOrani / 100)) FROM Hareketler WHERE BaslikInd = b.Ind AND TipInd = 511), 0)
			as Matrah
		FROM Hareketler AS h  WITH(NOLOCK) 
		LEFT JOIN Basliklar AS b  WITH(NOLOCK) ON h.BaslikInd = b.Ind 
		WHERE h.TipInd = 6
		GROUP BY
			b.Ind
	)
	INSERT INTO @Dokum
	SELECT
		gi.Owner,
        (gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) as Tutar,		
		(gi.Miktar * gi.Carpan) as Miktar,
	    h2.Matrah as ToplamTutar,
		gi.HareketIskonto as IlkIskonto,
		(gi.BaslikIskonto) as SonIskonto,
		gi.StokInd,
		s.StokAdi,
		s.StokKodu,
		(ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.BaslikInd=gi.BaslikInd AND h.TipInd=gi.TipIndAltHareket AND h.StokInd=gi.StokInd), 0.00)) as KdvOrani,
		0 as Satis,
		gi.HesapInd,
		gi.BaslikInd,
		gi.Fiyat
	FROM
		GirisCikisHareketleriIskontolu as gi  WITH(NOLOCK) LEFT OUTER JOIN
		Stoklar as s  WITH(NOLOCK) ON gi.StokInd = s.Ind LEFT OUTER JOIN
		--dbo.KDVGruplari AS k ON k.Ind = s.SatisKDVGrupInd LEFT OUTER JOIN
		BaslikMatrah as h2  WITH(NOLOCK) on h2.BaslikInd = gi.BaslikInd
	WHERE
		gi.TipIndAltHareket = 6
		AND @Baslangic <= gi.Tarih
		AND gi.Tarih <= @Bitis AND
		gi.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
	UNION ALL
	SELECT
		h.Owner,
		(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto) as Tutar,		
		(h.Miktar * h.Carpan) as Miktar,
	    Matrah as ToplamTutar,
		((h.Miktar * h.Carpan * h.Iskonto) / (h.Miktar * h.Carpan)) as IlkIskonto,
		(b.Iskonto) as SonIskonto,
		h.StokInd,
        h.StokAdi,
		h.StokKodu,
		h.KdvOrani,
		0 as Satis,
		b.HesapInd,
		b.Ind AS BaslikInd,
		h.Fiyat
	FROM Hareketler as h  WITH(NOLOCK) 
		LEFT JOIN BaslikMatrah as h2  WITH(NOLOCK) on h2.BaslikInd = h.BaslikInd
		LEFT JOIN Basliklar as b  WITH(NOLOCK) on h.BaslikInd = b.Ind 
	WHERE h.TipInd=6 AND @Baslangic <= b.Tarih AND b.Tarih <= @Bitis 
	AND b.DurumInd=12 and (select count(Ind) from Basliklar as b1 where b1.FaturaInd = h.BaslikInd) = 0
	UNION ALL
--	SELECT
--    distinct
--		h.Owner,
--		(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto) as Tutar,		
--		(h.Miktar * h.Carpan) as Miktar,
--	    Matrah as ToplamTutar,
--		((h.Miktar * h.Carpan * h.Iskonto) / (h.Miktar * h.Carpan)) as IlkIskonto,
--		(b.Iskonto) as SonIskonto,
--		h.StokInd,
--        h.StokAdi,
--		h.StokKodu,
--		h.KdvOrani,
--		0 as Satis
--	FROM Hareketler as h
--	LEFT JOIN BaslikMatrah as h2 on h2.BaslikInd = h.BaslikInd
--	LEFT JOIN Basliklar as b on h.BaslikInd = b.Ind 
--    LEFT JOIN Basliklar as b1 on b1.FaturaInd = h.BaslikInd
--	WHERE h.TipInd=6 AND @Baslangic <= b.Tarih AND b.Tarih <= @Bitis 
--	AND (b.DurumInd=12 and b1.TipInd = 104)
	SELECT
		distinct
		h3.Owner,
		(h3.Miktar * h.Fiyat) as Tutar,
		(h3.Miktar * ISNULL(h3.Carpan,1)) AS Miktar,
	    (SELECT TOP 1 Matrah FROM BaslikMatrah  WITH(NOLOCK)  WHERE BaslikInd = h.BaslikInd) as ToplamTutar,
		0.00 as IlkIskonto,
		(b.Iskonto) as SonIskonto,
		h.StokInd,
        h.StokAdi,
		h.StokKodu,
		h.KdvOrani,
		0 as Satis,
		b1.HesapInd,
		b1.Ind AS BaslikInd,
		h3.Fiyat
	FROM 
		Hareketler as h  WITH(NOLOCK) 
		--LEFT JOIN BaslikMatrahForIskontoAlisHesapButun as h2 on h2.BaslikInd = h.BaslikInd
		LEFT JOIN Basliklar as b  WITH(NOLOCK) on h.BaslikInd = b.Ind 
		LEFT JOIN Basliklar as b1  WITH(NOLOCK) on b1.FaturaInd = h.BaslikInd
		LEFT JOIN GirisCikisHareketleri as h3  WITH(NOLOCK) ON h.StokInd = h3.StokInd
		--LEFT JOIN Hesaplar ON Hesaplar.Ind = h3.DepoInd
	WHERE
		h3.BaslikInd IN (b1.Ind) AND 
		h.TipInd = 6 AND
		h3.TipIndAltHareket = 5 
		AND (b1.DurumInd = 3 and b1.TipInd = 104) AND
		h3.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND @Baslangic <= b1.Tarih
		AND b1.Tarih <= @Bitis
	UNION ALL
	SELECT
		h.Owner,
		(h.Miktar * h.Carpan *  (h.Fiyat /(1+(k.KdvOrani/100)))) as Tutar,		        
		(h.Miktar * h.Carpan) as Miktar,
		bm.Matrah as ToplamTutar,
		h.Miktar * h.Carpan *  (h.Fiyat /(1+(k.KdvOrani/100)))*(b.Iskonto/bm.Matrah) as IlkIskonto,
		0.00 as SonIskonto,
		h.StokInd,
		h.StokAdi,
		h.StokKodu,
		k.KdvOrani,
		0 as Satis,
		b.HesapInd,
		b.Ind AS BaslikInd,
		h.Fiyat
	FROM Hareketler as h
		LEFT JOIN Basliklar as b1  WITH(NOLOCK) on  b1.Ind = h.BaslikInd and b1.TipInd = 111
		LEFT JOIN Basliklar as b  WITH(NOLOCK) on b.Ind = b1.FaturaInd AND @Baslangic<= b.Tarih AND b.Tarih <=@Bitis
		LEFT JOIN BaslikMatrah as bm  WITH(NOLOCK) on bm.BaslikInd = b.Ind 
		LEFT JOIN Stoklar as s  WITH(NOLOCK) on s.Ind = h.StokInd
		LEFT JOIN KDVGruplari as k  WITH(NOLOCK) on k.Ind = s.SatisKDVGrupInd
    WHERE 
    bm.Matrah != 0 AND h.TipInd=37 AND  b.DurumInd=12
--	DECLARE @x int
--	SELECT @x=COUNT(*) FROM @Dokum
--	IF(@x=0)
--		INSERT INTO @Dokum 
--		SELECT
--            NULL as Owner,
--			0 as Tutar,
--			0 as Miktar,
--			0 as ToplamTutar,
--			0 as IlkIskonto,
--			0 as SonIskonto,
--			0 as StokInd,
--			'nullkayit' as StokAdi,
--			null as StokKodu,
--			0 as KdvOrani,
--			0 as Satis
	RETURN
END

GO

CREATE FUNCTION [dbo].[IskontoSatisMuhteviyatli] 
(	
    @Baslangic datetime,
	@Bitis datetime
)
RETURNS @Dokum TABLE
(
	Owner int,
	Tutar decimal(28,8),
	ToplamTutar decimal(28,8),
	IlkIskonto decimal(28,8),
	SonIskonto decimal(28,8),
	StokInd int
)
AS
BEGIN
	WITH BaslikMatrah(BaslikInd, Matrah)
	AS
	(
		SELECT 
			b.Ind as BaslikInd, 
			SUM(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto)
			+
			ISNULL((SELECT SUM(Tutar / (1 + KDVOrani / 100)) FROM Hareketler WHERE BaslikInd = b.Ind AND TipInd = 511), 0)
			as Matrah
		FROM Hareketler AS h  WITH(NOLOCK) 
		LEFT JOIN Basliklar AS b  WITH(NOLOCK) ON h.BaslikInd = b.Ind 
		WHERE h.TipInd = 6
		GROUP BY
			b.Ind
	)
	
	INSERT INTO @Dokum
	SELECT
		h.Owner,
		ISNULL((h.Miktar * h.Carpan * h.Fiyat - h.Iskonto),0) as Tutar,
	    ISNULL(Matrah,0) as ToplamTutar,
		ISNULL(h.Iskonto,0) as IlkIskonto,
		ISNULL(b.Iskonto,0) as SonIskonto,
		h.StokInd
	FROM Hareketler as h  WITH(NOLOCK) 
		LEFT JOIN BaslikMatrah as h2  WITH(NOLOCK) on h2.BaslikInd = h.BaslikInd
		LEFT JOIN Basliklar as b  WITH(NOLOCK) on h.BaslikInd = b.Ind 
	WHERE h.TipInd=6 AND (b.Tarih between @Baslangic AND @Bitis)
	AND b.DurumInd=12 and (select count(Ind) from Basliklar as b1 where b1.FaturaInd = h.BaslikInd) = 0
	
	UNION ALL
	
	SELECT
		distinct
		h3.Owner,
		ISNULL((h3.Miktar * h.Fiyat),0) as Tutar,
	    ISNULL((SELECT TOP 1 Matrah FROM BaslikMatrah  WITH(NOLOCK) WHERE BaslikInd = h.BaslikInd),0) as ToplamTutar,
		0.00 as IlkIskonto,
		ISNULL(b.Iskonto,0) as SonIskonto,
		h.StokInd
	FROM 
		Hareketler as h  WITH(NOLOCK) 
		LEFT JOIN Basliklar as b  WITH(NOLOCK) on h.BaslikInd = b.Ind 
		LEFT JOIN Basliklar as b1  WITH(NOLOCK) on b1.FaturaInd = h.BaslikInd
		LEFT JOIN KarZararGirisCikis as h3  WITH(NOLOCK) ON h.StokInd = h3.StokInd
	WHERE
		h3.BaslikInd IN (b1.Ind) AND 
		h.TipInd = 6 AND
		h3.TipIndAltHareket = 5 
		AND (b1.DurumInd = 3 and b1.TipInd = 104) AND
		h3.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar  WITH(NOLOCK) LEFT JOIN Stoklar as s ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
		AND (b1.Tarih between @Baslangic AND @Bitis)
		
	UNION ALL
	
	SELECT
		h.Owner,
		ISNULL((h.Miktar * h.Carpan *  (h.Fiyat /(1+(k.KdvOrani/100)))),0) as Tutar,	
		ISNULL(bm.Matrah,0) as ToplamTutar,
		ISNULL(h.Miktar * h.Carpan *  (h.Fiyat /(1+(k.KdvOrani/100)))*(b.Iskonto/bm.Matrah),0) as IlkIskonto,
		0.00 as SonIskonto,
		h.StokInd
	FROM Hareketler as h  WITH(NOLOCK) 
		LEFT JOIN Basliklar as b1  WITH(NOLOCK) on  b1.Ind = h.BaslikInd and b1.TipInd = 111
		LEFT JOIN Basliklar as b  WITH(NOLOCK) on b.Ind = b1.FaturaInd AND (b.Tarih between @Baslangic AND @Bitis)
		LEFT JOIN BaslikMatrah as bm  WITH(NOLOCK) on bm.BaslikInd = b.Ind 
		LEFT JOIN Stoklar as s  WITH(NOLOCK) on s.Ind = h.StokInd
		LEFT JOIN KDVGruplari as k  WITH(NOLOCK) on k.Ind = s.SatisKDVGrupInd
    WHERE 
    h.TipInd=37 AND  b.DurumInd=12

	RETURN
END





GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[KartHareketDevir] 
(	
	@Ind int,
	@Tarih datetime
)
RETURNS 
TABLE 
AS
RETURN 
(

	SELECT	
		23 as TipInd,
		KrediKartiTahsil.Owner,
		0.00 AS Yatirilan,
		(CASE WHEN (KrediKartiTahsil.Aciklama != 'Komisyon')
		THEN
			CASE WHEN KrediKartiTahsil.Iskonto IS NOT NULL THEN --önceki tahsilatların banka komisyon oranlarını kaybetmemek üzere tahsil esnasındaki komisyon oranı başlığa eklendi
			(Tahsilat-Tahsilat*(KrediKartiTahsil.Iskonto/100)) ELSE
			(Tahsilat-Tahsilat*(Hesaplar.BankaKomisyon/100)) END
		ELSE Tahsilat
		END) as Tahsilat
	
	FROM KrediKartiTahsil  WITH(NOLOCK) 
	LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = KrediKartiTahsil.KKHesapInd
	LEFT JOIN Subeler  WITH(NOLOCK) ON KrediKartiTahsil.Owner=Subeler.Ind
	WHERE
		 KrediKartiTahsil.Tarih < @Tarih   AND KrediKartiTahsil.KKHesapInd=@Ind

UNION ALL 

SELECT 23 as TipInd,h.Owner,
	SUM 
	(
	CASE  WHEN h.TipInd IN (10,533)  AND (h.Aciklama IS NULL OR h.Aciklama != 'KK-TAHSILAT-SEVIMLI')
	THEN h.Tutar
	ELSE 0
	END
	) as Yatirilan,
	0 as Tahsilat

	FROM Hareketler AS h  WITH(NOLOCK) 
	LEFT JOIN Subeler  WITH(NOLOCK) ON h.Owner = Subeler.Ind
	LEFT JOIN Basliklar as b  WITH(NOLOCK) ON b.Ind = h.BaslikInd AND b.Tarih < @Tarih
	LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = h.KKHesapInd
	
	WHERE 
	h.GirisTarihi < @Tarih
	AND h.KKHesapInd = @Ind
	AND h.TipInd IN(10,533)

GROUP BY h.Owner,Hesaplar.BankaKomisyon

)



GO
CREATE FUNCTION [dbo].[KartHareketDokumu] 
(
	@Ind int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS 
@Dokum TABLE 
(
	Ind int,
	TipInd int,
    Owner int, 
    BelgeNo nvarchar(50),
    Yatirilan decimal(28,8),
    Tahsilat decimal(28,8),
    Aciklama nvarchar(100),
    GirisTarihi datetime,
    SubeAdi nvarchar(50),
	DurumInd int,
	Bakiye decimal(28,8),
	IslemTipi nvarchar(50),
    CariHesapAdi nvarchar(100)
)
AS
BEGIN
	INSERT INTO @Dokum
	SELECT 
		H.Ind, 
		H.TipInd,
		H.Owner,
		CASE WHEN H.VardiyaKartInd IS NOT NULL
			THEN CAST(B.VardiyaNo as nvarchar)+'.Vardiya' 
			ELSE ''
		END as BelgeNo ,
		CASE WHEN H.TipInd IN (10,533)
			THEN H.Tutar 
			ELSE 0
		END as Yatirilan,
		0 AS Tahsilat,
		H.Aciklama,
		H.GirisTarihi,
		S.SubeAdi,
		H.DurumInd,
		0 as Bakiye,
		'Kredi Kartı' as IslemTipi,
        H.CariHesapAdi
	FROM Hareketler AS H  WITH(NOLOCK) 
	LEFT JOIN Basliklar AS B  WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind
	LEFT JOIN Subeler AS S  WITH(NOLOCK) ON H.Owner=S.Ind
	WHERE H.KKHesapInd = @Ind 
		AND H.GirisTarihi >= @BaslangicTarihi AND H.GirisTarihi < @BitisTarihi
		AND H.TipInd IN (10,533)
	ORDER BY GirisTarihi
 
	INSERT INTO @Dokum
	SELECT	
		KrediKartiTahsil.BaslikInd,
		10,
		KrediKartiTahsil.Owner,
		BelgeNo,
		NULL,
		(CASE WHEN (KrediKartiTahsil.Aciklama != 'Komisyon')
			THEN 
				CASE WHEN KrediKartiTahsil.Iskonto IS NOT NULL THEN --önceki tahsilatların banka komisyon oranlarını kaybetmemek üzere tahsil esnasındaki komisyon oranı başlığa eklendi
				(Tahsilat-Tahsilat*(KrediKartiTahsil.Iskonto/100)) ELSE
				(Tahsilat-Tahsilat*(Hesaplar.BankaKomisyon/100)) END
			ELSE Tahsilat
			END) as Tahsilat,
		KrediKartiTahsil.Aciklama,
		Tarih,
		Subeler.SubeAdi,
		NULL ,
		0 as Bakiye,
		'Kredi Kartı' as IslemTipi,
        null as CariHesapAdi
	FROM KrediKartiTahsil  WITH(NOLOCK) 
	LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = KrediKartiTahsil.KKHesapInd
	LEFT JOIN Subeler  WITH(NOLOCK) ON KrediKartiTahsil.Owner=Subeler.Ind
	WHERE
		Tarih >= @BaslangicTarihi 
		AND Tarih < @BitisTarihi 
		AND KrediKartiTahsil.KKHesapInd=@Ind 
	ORDER BY Tarih
 RETURN
END



GO
CREATE FUNCTION [dbo].[KartHareketDokumuForVadeTarihi] 
(
	--@Ind int,
	--@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS 
@Dokum TABLE 
(
	Vade int,
	--TipInd int,
    Owner int, 
    --BelgeNo nvarchar(15),
    Yatirilan decimal(28,8),
    Tahsilat decimal(28,8),
    --Aciklama nvarchar(100),
    --GirisTarihi datetime,
    --SubeAdi nvarchar(50),
	--DurumInd int,
	Bakiye decimal(28,8),
	--IslemTipi nvarchar(50),
    --CariHesapAdi nvarchar(50)
	KKHesapInd int, 
	KKHesapKodu nvarchar(50),
	KKHesapAdi nvarchar(100),
	VadesiGelen decimal(28,8)
)
AS
BEGIN
	INSERT INTO @Dokum
	SELECT 
		0 as Vade
		, NULL as Owner
		, SUM(Yatirilan) AS Yatirilan
		, SUM(Tahsilat) AS Tahsilat
		, SUM(Bakiye) AS Bakiye
		, KKHesapInd
		, KKHesapKodu
		, KKHesapAdi
		, 0.00 AS VadesiGelen
	FROM 
	(
		SELECT 
			 DISTINCT TOP 100 PERCENT Owner, Yatirilan, Tahsilat, Bakiye, KKHesapInd, KKhesapKodu, KKhesapAdi
		FROM
			KartHareketDokumuForVadeTarihiForFunction
		WHERE 
			(Yatirilan > 0 OR Tahsilat > 0)
			AND
			VadeTarihi <= @BitisTarihi
	) AS gurupla
	GROUP BY
		KKHesapInd
		, KKHesapKodu
		, KKHesapAdi
		--, Owner
 RETURN
END



GO
CREATE FUNCTION [dbo].[KarZararDonemIciAlisButunBySube]
(	
    @Baslangic datetime,
	@Bitis datetime,
	@Owner int
)
RETURNS @Dokum TABLE
(
	Tutar decimal(28,8),
	GercekTutar decimal(28,8),
	BirimAdi nvarchar(15),
	Owner int,
	Miktar decimal(28,8),
	Tarih datetime,
	StokInd INT,
	TipInd INT,
	KDVOrani decimal(28,8)
)
AS
BEGIN
	INSERT INTO @Dokum
	SELECT
		(
		(CASE WHEN g.NetMiktar=0 THEN g.Miktar ELSE ISNULL(g.NetMiktar,g.Miktar) END) 
			* g.Carpan * g.Fiyat) as Tutar,
			((CASE WHEN g.NetMiktar=0 THEN g.Miktar ELSE ISNULL(g.NetMiktar,g.Miktar) END) 
			* g.Carpan * g.GercekFiyat) as GercekTutar,
		brm.BirimAdi,
		g.Owner,
		(g.Miktar * g.Carpan) as Miktar,
		g.Tarih,
		g.StokInd,
		g.TipIndAltHareket	 as TipInd,
		(
			SELECT
				TOP 1
				h.KDVOrani
			FROM
				Hareketler AS h
			WHERE
				g.BaslikInd = h.BaslikInd
				AND
				g.StokInd = h.StokInd
				AND
				h.TipInd = 3
		) AS KDVOrani
	FROM
		KarZararGirisCikis as g  WITH(NOLOCK) 
		LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm  WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
	WHERE
		g.TipIndAltHareket IN (3)
		AND (g.Tarih between @Baslangic AND @Bitis) AND g.Owner = @Owner
		
	UNION ALL
	
	SELECT
		case when g.TipIndAltHareket=2 then
				 (g.Miktar * g.Carpan * (g.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00)) / 100)))) 
             when (g.TipInd =503 AND g.TipIndAltHareket =29) then (g.Miktar*g.Carpan*g.Fiyat) end
             as Tutar	
,case when g.TipIndAltHareket=2 then
				 (g.Miktar * g.Carpan * (g.GercekFiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00)) / 100)))) 
             when (g.TipInd =503 AND g.TipIndAltHareket =29) then (g.Miktar*g.Carpan*g.GercekFiyat) end
             as GercekTutar					 
		,brm.BirimAdi
		,g.Owner
		,case when g.TipIndAltHareket=2 OR (g.TipInd=503 AND g.TipIndAltHareket =29) then (g.Miktar * g.Carpan) 
		      when (g.TipInd IN (503) AND g.TipIndAltHareket =29) then ISNULL(k.KDVOrani,18.00) end  
		      as Miktar
		,g.Tarih
		,g.StokInd
		,g.TipIndAltHareket as TipInd
		,k.KDVOrani
	FROM
		KarZararGirisCikis as g   WITH(NOLOCK) 
		LEFT OUTER JOIN dbo.Stoklar AS s  WITH(NOLOCK) ON s.Ind = g.StokInd 
		LEFT OUTER JOIN Birimler as brm  WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
		LEFT JOIN dbo.KDVGruplari AS k  WITH(NOLOCK) ON k.Ind = s.AlisKDVGrupInd
	WHERE 
		(                            
		   (g.TipIndAltHareket=2  or (g.TipInd=503 AND g.TipIndAltHareket =29)) 
		    and 
		   ( g.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar LEFT JOIN Stoklar as s ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205)) AND (g.Tarih between @Baslangic AND @Bitis) AND g.Owner = @Owner)
		)
		
	DECLARE @x int
	SELECT @x=COUNT(*) FROM @Dokum

	IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
			0 as Tutar,
			0 as GercekTutar,
			b.BirimAdi as BirimAdi,
			NULL as Owner,
			0 as Miktar,
			NULL as Tarih,	
			0 as StokInd,
			0,
			0
		FROM
		Stoklar as s  WITH(NOLOCK) 
		LEFT JOIN Birimler as b  WITH(NOLOCK) on b.Ind =s.AnaBirimInd
RETURN
END





GO
CREATE FUNCTION [dbo].[KarZararDonemIciIslemler] (@Owner int, @BaslangicTarihi datetime, @BitisTarihi datetime)
RETURNS @DonemIciValue TABLE (
  Owner int,
  StokInd int,
  DIMA decimal(28, 13),
  DIMAlis decimal(28, 13),
  DIMS decimal(28, 13),
  DIMSatis decimal(28, 13),
  MAI decimal(28, 13),
  MSI decimal(28, 13)
)
BEGIN

  DECLARE @StokInd int
  DECLARE @KDVliHesaplansin int
  DECLARE @DIMA decimal(28, 8)
  DECLARE @DIMAlis decimal(28, 8)
  DECLARE @DIMS decimal(28, 8)
  DECLARE @DIMSatis decimal(28, 8)
  DECLARE @MAI decimal(28, 8)
  DECLARE @MSI decimal(28, 8)

  SELECT
    @KDVliHesaplansin = GenelSayi
  FROM Ayarlar
  WHERE TipInd = 341

  DECLARE @KarZararDonemIciAlis TABLE (
    StokInd int,
    DIMA decimal(28, 8),
    DIMAlis decimal(28, 8)
  )
  IF (@Owner = 0)
  BEGIN
    IF (@KDVliHesaplansin = 0) -- DIMA MERKEZ ŞUBE KDVSİZ
      INSERT INTO @KarZararDonemIciAlis
        SELECT
          StokInd,
          SUM(Miktar) AS DIMA,
          SUM(CASE TipInd
            WHEN 3 THEN GercekTutar
            ELSE Tutar
          END) AS DIMAlis
        FROM KarZararDonemIciAlisButun(@BaslangicTarihi, @BitisTarihi)
        GROUP BY StokInd
    ELSE
    IF (@KDVliHesaplansin = 1) -- DIMA MERKEZ ŞUBE KDV'li
      INSERT INTO @KarZararDonemIciAlis
        SELECT
          StokInd,
          SUM(Miktar) AS DIMA,
          SUM(CASE TipInd
            WHEN 3 THEN GercekTutar * ((KDVOrani + 100) / 100)
            ELSE Tutar * ((KDVOrani + 100) / 100)
          END) AS DIMAlis
        FROM KarZararDonemIciAlisButun(@BaslangicTarihi, @BitisTarihi)
        GROUP BY StokInd
  END
  ELSE
  BEGIN
    IF (@KDVliHesaplansin = 0) -- DIMA ŞUBE KDV'SİZ 
      INSERT INTO @KarZararDonemIciAlis
        SELECT
          StokInd,
          SUM(Miktar) AS DIMA,
          SUM(CASE TipInd
            WHEN 3 THEN GercekTutar
            ELSE Tutar
          END) AS DIMAlis
        FROM KarZararDonemIciAlisButunBySube(@BaslangicTarihi, @BitisTarihi, @Owner)
        WHERE Owner = @Owner
        GROUP BY StokInd
    ELSE
    IF (@KDVliHesaplansin = 1) -- DIMA ŞUBE KDV'Lİ
      INSERT INTO @KarZararDonemIciAlis
        SELECT
          StokInd,
          SUM(Miktar) AS DIMA,
          SUM(CASE TipInd
            WHEN 3 THEN GercekTutar * ((KDVOrani + 100) / 100)
            ELSE Tutar * ((KDVOrani + 100) / 100)
          END) AS DIMAlis
        FROM KarZararDonemIciAlisButunBySube(@BaslangicTarihi, @BitisTarihi, @Owner)
        WHERE Owner = @Owner
        GROUP BY StokInd
  END

  DECLARE @KarZararDonemIciSatis TABLE (
    StokInd int,
    DIMS decimal(28, 8),
    DIMSatis decimal(28, 8)
  )
  IF (@Owner = 0)
  BEGIN
    IF (@KDVliHesaplansin = 1)-- DIMS MERKEZ ŞUBE KDVLİ
      INSERT INTO @KarZararDonemIciSatis
        SELECT
          StokInd AS StokInd1,
          SUM(Miktar) AS DIMS,
          SUM(Tutar * ((KDVOrani + 100) / 100)) AS DIMSatis
        FROM KarZararDonemIciSatisButun(@BaslangicTarihi, @BitisTarihi)
        GROUP BY StokInd
    ELSE
    IF (@KDVliHesaplansin = 0)-- DIMS MERKEZ ŞUBE KDVSİZ
      INSERT INTO @KarZararDonemIciSatis
        SELECT
          StokInd AS StokInd1,
          SUM(Miktar) AS DIMS,
          SUM(Tutar) AS DIMSatis
        FROM KarZararDonemIciSatisButun(@BaslangicTarihi, @BitisTarihi)
        GROUP BY StokInd
  END
  ELSE
  BEGIN
    IF (@KDVliHesaplansin = 1)-- DIMS ŞUBE KDV'Lİ
      INSERT INTO @KarZararDonemIciSatis
        SELECT
          StokInd AS StokInd1,
          SUM(Miktar) AS DIMS,
          SUM(Tutar * ((KDVOrani + 100) / 100)) AS DIMSatis
        FROM KarZararDonemIciSatisButunBySube(@BaslangicTarihi, @BitisTarihi, @Owner)
        WHERE Owner = @Owner
        GROUP BY StokInd
    ELSE
    IF (@KDVliHesaplansin = 0)-- DIMS ŞUBE KDV'SİZ
      INSERT INTO @KarZararDonemIciSatis
        SELECT
          StokInd AS StokInd1,
          SUM(Miktar) AS DIMS,
          SUM(Tutar) AS DIMSatis
        FROM KarZararDonemIciSatisButunBySube(@BaslangicTarihi, @BitisTarihi, @Owner)
        WHERE Owner = @Owner
        GROUP BY StokInd
  END

  DECLARE @MalAlisIskonto TABLE (
    StokInd int,
    MAI decimal(28, 8)
  )
  IF (@Owner = 0)
    INSERT INTO @MalAlisIskonto
      SELECT
        StokInd,
        SUM((IlkIskonto + (SonIskonto / ToplamTutar) * Tutar)) AS MAI
      FROM KarZararIskontoAlisHesapButun(@BaslangicTarihi, @BitisTarihi)
      WHERE ToplamTutar <> 0
      GROUP BY StokInd
  ELSE
    INSERT INTO @MalAlisIskonto
      SELECT
        StokInd,
        SUM((IlkIskonto + (SonIskonto / ToplamTutar) * Tutar)) AS MAI
      FROM KarZararIskontoAlisHesapButunBySube(@BaslangicTarihi, @BitisTarihi, @Owner)
      WHERE ToplamTutar <> 0
      GROUP BY StokInd


  DECLARE @MalSatisIskonto TABLE (
    StokInd int,
    MSI decimal(28, 8)
  )
  IF (@Owner = 0)
    INSERT INTO @MalSatisIskonto
      SELECT
        StokInd AS StokInd1,
        SUM((IlkIskonto + (SonIskonto / ToplamTutar) * Tutar)) AS MSI
      FROM KarZararIskontoSatisHesapButun(@BaslangicTarihi, @BitisTarihi)
      WHERE ToplamTutar <> 0
      GROUP BY StokInd
  ELSE
    INSERT INTO @MalSatisIskonto
      SELECT
        StokInd AS StokInd1,
        SUM((IlkIskonto + (SonIskonto / ToplamTutar) * Tutar)) AS MSI
      FROM KarZararIskontoSatisHesapButunBySube(@BaslangicTarihi, @BitisTarihi, @Owner)
      WHERE ToplamTutar <> 0
      GROUP BY StokInd


  DECLARE StokCursor CURSOR FOR
  SELECT
    Ind
  FROM Stoklar  WITH(NOLOCK) 
  OPEN StokCursor
  FETCH NEXT FROM StokCursor
  INTO @StokInd
  WHILE @@FETCH_STATUS = 0
  BEGIN

    SET @DIMA = 0
    SET @DIMAlis = 0
    SET @DIMS = 0
    SET @DIMSatis = 0
    SET @MAI = 0
    SET @MSI = 0

    SELECT
      @DIMA = DIMA,
      @DIMAlis = DIMAlis
    FROM @KarZararDonemIciAlis
    WHERE StokInd = @StokInd
    SELECT
      @DIMS = DIMS,
      @DIMSatis = DIMSatis
    FROM @KarZararDonemIciSatis
    WHERE StokInd = @StokInd
    SELECT
      @MAI = MAI
    FROM @MalAlisIskonto
    WHERE StokInd = @StokInd
    SELECT
      @MSI = MSI
    FROM @MalSatisIskonto
    WHERE StokInd = @StokInd

    INSERT INTO @DonemIciValue
      VALUES (NULL, @StokInd, @DIMA, @DIMAlis, @DIMS, @DIMSatis, @MAI, @MSI)

    FETCH NEXT FROM StokCursor
    INTO @StokInd
  END

  CLOSE StokCursor
  DEALLOCATE StokCursor

  RETURN

END
GO
--Semih Zafer YILMAZ
--KarZarar raporu performans şube bazlı değerler

CREATE FUNCTION [dbo].[KarZararDonemIciSatisButunBySube]
(	
    @Baslangic datetime,
	@Bitis datetime,
	@Owner int
)
RETURNS @Dokum TABLE
(
	Tutar decimal(28,8),
	BirimAdi nvarchar(15),
	Owner int,
	Miktar decimal(28,8),
	StokInd int,
	TipInd int,
	KDVOrani decimal(28,8)
)
AS
BEGIN
	INSERT INTO @Dokum
	SELECT
	    ISNULL((g.Miktar * g.Carpan * g.Fiyat),0) as Tutar,
		brm.BirimAdi,
		g.Owner,
		ISNULL((ABS(g.Miktar * g.Carpan)),0) as Miktar,
		g.StokInd
		, g.TipIndAltHareket as TipInd,
		
		CASE WHEN g.TipIndAltHareket=30 THEN ISNULL(ks.KdvOrani, 18)
		     ELSE
				(
					SELECT
						TOP 1
						h.KDVOrani
					FROM
						Hareketler AS h
					WHERE
						g.BaslikInd = h.BaslikInd
						AND
						g.StokInd = h.StokInd
						AND
						h.TipInd = 6
				)
			END AS KDVOrani
	FROM
		KarZararGirisCikis as g  WITH(NOLOCK) 
		LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm  WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
		LEFT JOIN dbo.KDVGruplari AS ks  WITH(NOLOCK) ON ks.Ind = s.SatisKDVGrupInd
	WHERE
		( g.TipIndAltHareket = 6  OR (g.TipInd =503 AND g.TipIndAltHareket=30))
		AND (g.Tarih between @Baslangic AND @Bitis) AND g.Owner = @Owner
		AND g.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar LEFT JOIN Stoklar as s ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
		
	UNION ALL
	
	SELECT
		ABS((h.Fiyat /(1+(h.KdvOrani/100))) * (h.Fark)) as Tutar,
		NULL as BirimAdi,
		h.Owner as Owner,
		ABS(h.Fark) as Miktar,
		h.StokInd
		,h.TipInd,
		18.00 AS KDVOrani
	FROM
		EskiVardiyaSayacHareketleri as h  WITH(NOLOCK) 
	WHERE h.TipInd = 39
		AND (h.Tarih between @Baslangic AND @Bitis) AND h.Owner = @Owner
		
	UNION ALL
	
	SELECT
		(g.Miktar * g.Carpan * ABS(g.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00)) / 100)))) as Tutar,
		brm.BirimAdi,
		g.Owner,
		ABS(g.Miktar * g.Carpan) as Miktar,
		g.StokInd 
		,g.TipIndAltHareket,
		(
			SELECT
				TOP 1
				h.KDVOrani
			FROM
				Hareketler AS h
			WHERE
				g.BaslikInd = h.BaslikInd
				AND
				g.StokInd = h.StokInd
				AND
				h.TipInd = 5
		) AS KDVOrani
	FROM
		KarZararGirisCikis as g   WITH(NOLOCK) LEFT OUTER JOIN
		dbo.Stoklar AS s  WITH(NOLOCK) ON s.Ind = g.StokInd LEFT OUTER JOIN
		Birimler as brm  WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
	WHERE 
		g.TipIndAltHareket = 5 
		AND g.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar  WITH(NOLOCK) LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
		AND (g.Tarih between @Baslangic AND @Bitis) AND g.Owner = @Owner
		
	UNION ALL
	
	SELECT
		((g.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.Ind=g.Ind), 0.00)) / 100))) * g.Miktar * g.Carpan) as Tutar,
		NULL as BirimAdi,
		g.Owner as Owner,
		ABS(g.Miktar * g.Carpan) as Miktar,
		g.StokInd
		,g.TipIndAltHareket as TipInd,
		ks.KDVOrani
	FROM
		KarZararGirisCikis as g  WITH(NOLOCK)  LEFT OUTER JOIN
		dbo.Stoklar AS s  WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN dbo.KDVGruplari AS ks  WITH(NOLOCK) ON ks.Ind = s.SatisKDVGrupInd
	WHERE
		g.TipIndAltHareket = 40
		AND (g.Tarih between @Baslangic AND @Bitis) AND g.Owner = @Owner
		
	UNION ALL
	
	SELECT
		(h.Miktar * h.Carpan * (h.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h2 WHERE h2.Ind = h.Ind), 0.00)) / 100)))) as Tutar,
		NULL as BirimAdi,
		h.Owner,
		ABS(h.Miktar * h.Carpan) as Miktar,
		h.StokInd
		,h.TipInd,
		 h.KDVOrani
	FROM
		SatisKasasi as sk  WITH(NOLOCK) 
		LEFT JOIN Hareketler h  WITH(NOLOCK) ON h.Ind=sk.IslemInd 
		LEFT JOIN Hareketler  WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
		LEFT JOIN Basliklar b  WITH(NOLOCK) ON b.Ind = sk.BaslikInd
	WHERE
		h.TipInd = 504
		AND (b.Tarih between @Baslangic AND @Bitis) AND b.Owner = @Owner

	DECLARE @x int
	SELECT @x=COUNT(*) FROM @Dokum
	IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
			0 as Tutar,
			b.BirimAdi as BirimAdi,
			NULL as Owner,
			0 as Miktar,
			0 as StokInd
			,0 TipInd
			,0 KDVOrani
		FROM
		Stoklar as s  WITH(NOLOCK) 
		LEFT JOIN Birimler as b  WITH(NOLOCK) on b.Ind =s.AnaBirimInd
RETURN
END






GO
CREATE FUNCTION [dbo].[KarZararFIFOAlisFiyati] (@Owner int, @BitisTarihi datetime, @durum bit)
RETURNS @SonAlisFiyati TABLE (
  Owner int,
  StokInd int,
  DSMMiktari decimal(28, 13),
  DSMMaliyeti decimal(28, 13)
)
BEGIN

  DECLARE @StokInd int
  DECLARE @KDVliHesaplansin int
  DECLARE @KDVOrani decimal(4, 2)
  DECLARE @Tarih datetime
  DECLARE @ToplamBaslikIskonto decimal(28, 8)
  DECLARE @NetGiren decimal(28, 8)
  DECLARE @NetGiren2 decimal(28, 8)
  DECLARE @temp decimal(28, 8)
  DECLARE @NetProcessGiren decimal(28, 8)
  DECLARE @ToplamDBMMGirenTutar decimal(28, 8)
  DECLARE @ToplamNetTutar decimal(28, 8)
  DECLARE @HareketBaslikIskonto float
  DECLARE @ToplamGirenTutar decimal(28, 8)
  DECLARE @Giren decimal(28, 8)
  DECLARE @Fiyat decimal(28, 8)
  DECLARE @HareketIskonto decimal(28, 8)
  DECLARE @BaslikIskonto decimal(28, 8)
  DECLARE @OrtFifoFiyat decimal(28, 8)
  DECLARE @SonFiyat decimal(28, 8)

  SELECT
    @KDVliHesaplansin = GenelSayi
  FROM Ayarlar
  WHERE TipInd = 341

  DECLARE @KarZararEnvanterStokMiktarlari TABLE (
    Ind int,
    Owner int,
    StokInd int,
    Tarih datetime,
    Giren decimal(28, 8),
    Cikan decimal(28, 8),
    Fiyat decimal(28, 8),
    HareketIskonto decimal(28, 8),
    BaslikIskonto decimal(28, 8),
    ToplamTutar decimal(28, 8),
    KDVOrani decimal(4, 2)
  )

  DECLARE @StokNetMiktarlar TABLE (
    StokInd int,
    NetMiktar decimal(18, 8)
  )

  IF (@KDVliHesaplansin = 0)
  BEGIN
    INSERT INTO @KarZararEnvanterStokMiktarlari
      SELECT
        Ind,
        Owner,
        StokInd,
        Tarih,
        Giren,
        Cikan,
        (CASE TipIndAltHareket
          WHEN 3 THEN GercekFiyat
          ELSE Fiyat
        END) AS Fiyat,
        HareketIskonto,
        BaslikIskonto,
        (CASE TipIndAltHareket
          WHEN 3 THEN ToplamGercekTutar
          ELSE ToplamTutar
        END) AS ToplamTutar,
        0.00 AS KDVOrani
      FROM KarZararEnvanterStokMiktarlariButunKdvsiz  WITH(NOLOCK) 
      WHERE Tarih <=
                    CASE @durum
                      WHEN 1 THEN @BitisTarihi
                      ELSE DATEADD(DAY, -1, @BitisTarihi)
                    END
      AND Giren > 0
      AND (Owner = @Owner
      OR @Owner = 0)

    INSERT INTO @StokNetMiktarlar
      SELECT
        StokInd,
        SUM(Giren - Cikan) AS NetMiktar
      FROM KarZararEnvanterStokMiktarlariButunKdvsiz  WITH(NOLOCK) 
      WHERE --StokInd = @StokInd
      Tarih <=
              CASE @durum
                WHEN 1 THEN @BitisTarihi
                ELSE DATEADD(DAY, -1, @BitisTarihi)
              END
      AND (Owner = @Owner
      OR @Owner = 0)
      GROUP BY StokInd
  END

  ELSE
  IF (@KDVliHesaplansin = 1)
  BEGIN
    INSERT INTO @KarZararEnvanterStokMiktarlari
      SELECT
        Ind,
        Owner,
        StokInd,
        Tarih,
        Giren,
        Cikan,
        (CASE TipIndAltHareket
          WHEN 3 THEN GercekFiyat
          ELSE Fiyat
        END) AS Fiyat,
        HareketIskonto,
        BaslikIskonto,
        (CASE TipIndAltHareket
          WHEN 3 THEN ToplamGercekTutar
          ELSE ToplamTutar
        END) AS ToplamTutar,
        KDVOrani
      FROM KarZararEnvanterStokMiktarlariButunKdvli  WITH(NOLOCK) 
      WHERE Tarih <=
                    CASE @durum
                      WHEN 1 THEN @BitisTarihi
                      ELSE DATEADD(DAY, -1, @BitisTarihi)
                    END
      AND Giren > 0
      AND (Owner = @Owner
      OR @Owner = 0)

    INSERT INTO @StokNetMiktarlar
      SELECT
        StokInd,
        SUM(Giren - Cikan) AS NetMiktar
      FROM KarZararEnvanterStokMiktarlariButunKdvli  WITH(NOLOCK) 
      WHERE 
      Tarih <=
              CASE @durum
                WHEN 1 THEN @BitisTarihi
                ELSE DATEADD(DAY, -1, @BitisTarihi)
              END
      AND (Owner = @Owner
      OR @Owner = 0)
      GROUP BY StokInd
  END



  DECLARE StokCursor CURSOR FOR
  SELECT
    Ind
  FROM Stoklar  WITH(NOLOCK) 
  OPEN StokCursor
  FETCH NEXT FROM StokCursor
  INTO @StokInd
  WHILE @@FETCH_STATUS = 0
  BEGIN

    SET @ToplamGirenTutar = 0
    SET @ToplamDBMMGirenTutar = 0

    SELECT
      @NetProcessGiren = NetMiktar
    FROM @StokNetMiktarlar
    WHERE StokInd = @StokInd
    IF @@ROWCOUNT = 0
      SET @NetProcessGiren = 0
    SET @NetGiren = @NetProcessGiren

    IF (@NetProcessGiren > 0)
    BEGIN
      DECLARE KarZararEnvanterCursor CURSOR FOR
      SELECT
        Tarih,
        Giren,
        ISNULL(Fiyat, 0),
        HareketIskonto,
        BaslikIskonto,
        ToplamTutar,
        KDVOrani
      FROM @KarZararEnvanterStokMiktarlari
      WHERE StokInd = @StokInd
      ORDER BY Tarih DESC, Ind DESC
      OPEN KarZararEnvanterCursor
      FETCH NEXT FROM KarZararEnvanterCursor
      INTO @Tarih, @Giren, @Fiyat, @HareketIskonto, @BaslikIskonto, @ToplamNetTutar, @KDVOrani
      WHILE @@FETCH_STATUS = 0
      BEGIN

        IF (@Fiyat = 0)
        BEGIN
          FETCH NEXT FROM KarZararEnvanterCursor
          INTO @Tarih, @Giren, @Fiyat, @HareketIskonto, @BaslikIskonto, @ToplamNetTutar, @KDVOrani
          CONTINUE
        END

        IF (@ToplamNetTutar > 0)
        BEGIN
          SET @HareketBaslikIskonto = (((@Giren * @Fiyat - @HareketIskonto) * @BaslikIskonto) / @ToplamNetTutar)
        END
        ELSE
        BEGIN
          SET @HareketBaslikIskonto = 0
        END

        IF (@NetProcessGiren > 0)
        BEGIN
          IF (@NetProcessGiren > @Giren)
          BEGIN
            SET @NetProcessGiren = @NetProcessGiren - @Giren
            SET @ToplamGirenTutar += @Giren * ((@Fiyat * @Giren - @HareketIskonto - @HareketBaslikIskonto) / @Giren) * ((100 + @KDVOrani) / 100)
          END
          ELSE
          BEGIN
            SET @ToplamGirenTutar += @NetProcessGiren * ((@Fiyat * @Giren - @HareketIskonto - @HareketBaslikIskonto) / @Giren) * ((100 + @KDVOrani) / 100)
            SET @NetProcessGiren = 0
          END
        END
        ELSE
          BREAK

        FETCH NEXT FROM KarZararEnvanterCursor
        INTO @Tarih, @Giren, @Fiyat, @HareketIskonto, @BaslikIskonto, @ToplamNetTutar, @KDVOrani
      END -- WHILE @@FETCH_STATUS <KarZararEnvanterCursor> CLOSE

      CLOSE KarZararEnvanterCursor
      DEALLOCATE KarZararEnvanterCursor


    END -- IF(@NetProcessGiren > 0) CLOSE


    INSERT INTO @SonAlisFiyati
      VALUES (NULL, @StokInd, @NetGiren, @ToplamGirenTutar)

    FETCH NEXT FROM StokCursor
    INTO @StokInd

  END -- WHILE @@FETCH_STATUS = 0 <StokCursor> CLOSE

  CLOSE StokCursor
  DEALLOCATE StokCursor

  RETURN
END



GO
--Semih Zafer YILMAZ
--KarZarar raporu performans şube bazlı rapor

CREATE FUNCTION [dbo].[KarZararIskontoAlisHesapButunBySube] 
(	
    @Baslangic datetime,
	@Bitis datetime,
	@Owner int
)
RETURNS @Dokum TABLE
(
	Tutar decimal(28,8),
	Owner int,
	Miktar decimal(28,8),
	ToplamTutar decimal(28,8),
	IlkIskonto decimal(28,8),
	SonIskonto decimal(28,8),
	StokInd int,
	HesapInd int,
	BaslikInd int
)
AS
BEGIN
	INSERT INTO @Dokum
	SELECT
		--
		(gi.Miktar * gi.Carpan * gi.Fiyat -gi.HareketIskonto) as Tutar,
		gi.Owner,		
		(gi.Miktar * gi.Carpan) as Miktar,
	    h2.Matrah as ToplamTutar,
		gi.HareketIskonto as IlkIskonto,
		gi.BaslikIskonto as SonIskonto,
		gi.StokInd
		,gi.HesapInd,
		gi.BaslikInd
	FROM
		KarZararGirisCikisIskontolu as gi  WITH(NOLOCK)  LEFT OUTER JOIN
		Stoklar as s WITH(NOLOCK)ON gi.StokInd = s.Ind   LEFT OUTER JOIN
		BaslikMatrahForIskontoAlisHesapButun as h2  WITH(NOLOCK) on h2.BaslikInd = gi.BaslikInd
	WHERE
		gi.TipIndAltHareket = 3
		AND (gi.Tarih between @Baslangic AND @Bitis) AND gi.Owner = @Owner
		AND gi.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar  WITH(NOLOCK) LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
		
	UNION ALL
	
	SELECT
		distinct
		(h3.Miktar * h.Fiyat) as Tutar,
		h3.Owner,
		(h3.Miktar * ISNULL(h3.Carpan,1)) AS Miktar,
		(SELECT TOP 1 Matrah FROM BaslikMatrahForIskontoAlisHesapButun WHERE BaslikInd = h.BaslikInd) as ToplamTutar,
		0.00 as IlkIskonto,
		(b.Iskonto) as SonIskonto,
		h.StokInd,
		b1.HesapInd,
		b1.Ind AS BaslikInd
	FROM 
		Hareketler as h  WITH(NOLOCK) 
		LEFT JOIN Basliklar as b  WITH(NOLOCK) on h.BaslikInd = b.Ind 
		LEFT JOIN Basliklar as b1  WITH(NOLOCK) on b1.FaturaInd = h.BaslikInd
		LEFT JOIN KarZararGirisCikis as h3  WITH(NOLOCK) ON h.StokInd = h3.StokInd
	WHERE
		h3.BaslikInd IN (b1.Ind) AND 
		h.TipInd = 3 AND
		h3.TipIndAltHareket = 2
		AND (b1.DurumInd = 3 and b1.TipInd = 103) AND
		h3.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar  WITH(NOLOCK) LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
		AND (b1.Tarih between @Baslangic AND @Bitis) AND b1.Owner = @Owner
		
	RETURN
END



GO



GO
CREATE FUNCTION [dbo].[KarZararIskontoSatisHesapButun_SatisRaporu] 
(	
	@StokInd int,
    @Baslangic datetime,
	@Bitis datetime
)
RETURNS @Dokum TABLE
(
	Owner int,
	Tutar decimal(28,8),
	Miktar decimal(28,8),
	ToplamTutar decimal(28,8),
	IlkIskonto decimal(28,8),
	SonIskonto decimal(28,8),
	StokInd int,
	StokAdi nvarchar(100),
    StokKodu nvarchar(50),
	KdvOrani decimal(28,8),
	Satis int,  -- .cs kodun içinde kullanılacak, ıskontolu stklarn satıs raporunda olup olmadıgını test etmk için
	HesapInd int,
	BaslikInd int,
	Fiyat decimal(28,8)
)
AS
BEGIN
	WITH BaslikMatrah(BaslikInd, Matrah)
	AS
	(
		SELECT 
			b.Ind as BaslikInd,
			SUM(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto)
			+
			ISNULL((SELECT SUM(Tutar / (1 + KDVOrani / 100)) FROM Hareketler WHERE BaslikInd = b.Ind AND TipInd = 511), 0)
			as Matrah
		FROM Hareketler AS h  WITH(NOLOCK) 
		LEFT JOIN Basliklar AS b  WITH(NOLOCK) ON h.BaslikInd = b.Ind 
		WHERE h.TipInd = 6
		GROUP BY
			b.Ind
	)
	INSERT INTO @Dokum
	SELECT
		gi.Owner,
        (gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) as Tutar,		
		(gi.Miktar * gi.Carpan) as Miktar,
	    h2.Matrah as ToplamTutar,
		gi.HareketIskonto as IlkIskonto,
		gi.BaslikIskonto as SonIskonto,
		gi.StokInd,
		s.StokAdi,
		s.StokKodu,
		(ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h  WITH(NOLOCK) WHERE h.BaslikInd=gi.BaslikInd AND h.TipInd=gi.TipIndAltHareket AND h.StokInd=gi.StokInd), 0.00)) as KdvOrani,
		0 as Satis,
		gi.HesapInd,
		gi.BaslikInd,
		gi.Fiyat
	FROM
		KarZararGirisCikisIskontolu as gi  WITH(NOLOCK) LEFT OUTER JOIN
		Stoklar as s  WITH(NOLOCK) ON gi.StokInd = s.Ind LEFT OUTER JOIN
		BaslikMatrah as h2  WITH(NOLOCK) on h2.BaslikInd = gi.BaslikInd
	WHERE
		gi.TipIndAltHareket = 6
		AND (gi.Tarih between @Baslangic AND @Bitis)
	    AND gi.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
	    AND gi.StokInd = @StokInd
		
	UNION ALL
	
	SELECT
		h.Owner,
		(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto) as Tutar,		
		(h.Miktar * h.Carpan) as Miktar,
		Matrah as ToplamTutar,
		h.Iskonto as IlkIskonto,
		b.Iskonto as SonIskonto,
		h.StokInd,
        h.StokAdi,
		h.StokKodu,
		h.KdvOrani,
		0 as Satis,
		b.HesapInd,
		b.Ind AS BaslikInd,
		h.Fiyat
	FROM Hareketler as h  WITH(NOLOCK) 
		LEFT JOIN BaslikMatrah as h2  WITH(NOLOCK) on h2.BaslikInd = h.BaslikInd
		LEFT JOIN Basliklar as b  WITH(NOLOCK) on h.BaslikInd = b.Ind 
	WHERE h.TipInd=6 AND (b.Tarih between @Baslangic AND @Bitis)
	AND b.DurumInd=12 and (select count(Ind) from Basliklar as b1  WITH(NOLOCK) where b1.FaturaInd = h.BaslikInd) = 0
	AND h.StokInd = @StokInd
	
	UNION ALL
	
	SELECT
		distinct
		h3.Owner,
		(h3.Miktar * h.Fiyat) as Tutar,
		(h3.Miktar * ISNULL(h3.Carpan,1)) AS Miktar,
	    (SELECT TOP 1 Matrah FROM BaslikMatrah  WITH(NOLOCK) WHERE BaslikInd = h.BaslikInd) as ToplamTutar,
		0.00 as IlkIskonto,
		b.Iskonto as SonIskonto,
		h.StokInd,
        h.StokAdi,
		h.StokKodu,
		h.KdvOrani,
		0 as Satis,
		b1.HesapInd,
		b1.Ind AS BaslikInd,
		h3.Fiyat
	FROM 
		Hareketler as h  WITH(NOLOCK) 
		LEFT JOIN Basliklar as b  WITH(NOLOCK) on h.BaslikInd = b.Ind 
		LEFT JOIN Basliklar as b1  WITH(NOLOCK) on b1.FaturaInd = h.BaslikInd
		LEFT JOIN KarZararGirisCikis as h3  WITH(NOLOCK)  ON h.StokInd = h3.StokInd
	WHERE
		h3.BaslikInd IN (b1.Ind) AND 
		h.TipInd = 6 AND
		h3.TipIndAltHareket = 5 
		AND (b1.DurumInd = 3 and b1.TipInd = 104) AND
		h3.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar  WITH(NOLOCK) LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
		AND (b1.Tarih between @Baslangic AND @Bitis)
		AND h.StokInd = @StokInd
		
	UNION ALL
	
	SELECT
		h.Owner,
		(h.Miktar * h.Carpan *  (h.Fiyat /(1+(k.KdvOrani/100)))) as Tutar,		        
		(h.Miktar * h.Carpan) as Miktar,
		bm.Matrah as ToplamTutar,
		h.Miktar * h.Carpan *  (h.Fiyat /(1+(k.KdvOrani/100)))*(b.Iskonto/bm.Matrah) as IlkIskonto,
		0.00 as SonIskonto,
		h.StokInd,
		h.StokAdi,
		h.StokKodu,
		k.KdvOrani,
		0 as Satis,
		b.HesapInd,
		b.Ind AS BaslikInd,
		h.Fiyat
	FROM Hareketler as h  WITH(NOLOCK) 
		LEFT JOIN Basliklar as b1  WITH(NOLOCK) on  b1.Ind = h.BaslikInd and b1.TipInd = 111
		LEFT JOIN Basliklar as b  WITH(NOLOCK) on b.Ind = b1.FaturaInd AND (b.Tarih between @Baslangic AND @Bitis)
		LEFT JOIN BaslikMatrah as bm  WITH(NOLOCK) on bm.BaslikInd = b.Ind 
		LEFT JOIN Stoklar as s  WITH(NOLOCK) on s.Ind = h.StokInd
		LEFT JOIN KDVGruplari as k  WITH(NOLOCK) on k.Ind = s.SatisKDVGrupInd
    WHERE 
    h.TipInd=37 AND  b.DurumInd=12
    AND h.StokInd = @StokInd

	RETURN
END
GO
--Semih Zafer YILMAZ
--KarZarar raporu performans raporunda şube bazlı değer alabilmek için oluşturuldu

CREATE FUNCTION [dbo].[KarZararIskontoSatisHesapButunBySube] 
(	
    @Baslangic datetime,
	@Bitis datetime,
	@Owner int
)
RETURNS @Dokum TABLE
(
	Owner int,
	Tutar decimal(28,8),
	Miktar decimal(28,8),
	ToplamTutar decimal(28,8),
	IlkIskonto decimal(28,8),
	SonIskonto decimal(28,8),
	StokInd int,
	StokAdi nvarchar(100),
    StokKodu nvarchar(50),
	KdvOrani decimal(28,8),
	Satis int,  -- .cs kodun içinde kullanılacak, ıskontolu stklarn satıs raporunda olup olmadıgını test etmk için
	HesapInd int,
	BaslikInd int,
	Fiyat decimal(28,8)	--Ulaş
)
AS
BEGIN
	WITH BaslikMatrah(BaslikInd, Matrah)
	AS
	(
		SELECT 
			b.Ind as BaslikInd, 
			SUM(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto)
			+
			ISNULL((SELECT SUM(Tutar / (1 + KDVOrani / 100)) FROM Hareketler WHERE BaslikInd = b.Ind AND TipInd = 511), 0)
			as Matrah
		FROM Hareketler AS h  WITH(NOLOCK) 
		LEFT JOIN Basliklar AS b  WITH(NOLOCK) ON h.BaslikInd = b.Ind 
		WHERE h.TipInd = 6
		GROUP BY
			b.Ind
	)
	INSERT INTO @Dokum
	SELECT
		gi.Owner,
        (gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) as Tutar,		
		(gi.Miktar * gi.Carpan) as Miktar,
	    h2.Matrah as ToplamTutar,
		gi.HareketIskonto as IlkIskonto,
		gi.BaslikIskonto as SonIskonto,
		gi.StokInd,
		s.StokAdi,
		s.StokKodu,
		(ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.BaslikInd=gi.BaslikInd AND h.TipInd=gi.TipIndAltHareket AND h.StokInd=gi.StokInd), 0.00)) as KdvOrani,
		0 as Satis,
		gi.HesapInd,
		gi.BaslikInd,
		gi.Fiyat
	FROM
		KarZararGirisCikisIskontolu as gi  WITH(NOLOCK) LEFT OUTER JOIN
		Stoklar as s WITH(NOLOCK)ON gi.StokInd = s.Ind   LEFT OUTER JOIN
		BaslikMatrah as h2  WITH(NOLOCK) on h2.BaslikInd = gi.BaslikInd
	WHERE
		gi.TipIndAltHareket = 6
		AND (gi.Tarih between @Baslangic AND @Bitis) AND gi.Owner = @Owner
	    AND gi.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar  WITH(NOLOCK) LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
		
	UNION ALL
	
	SELECT
		h.Owner,
		(h.Miktar * h.Carpan * h.Fiyat - h.Iskonto) as Tutar,		
		(h.Miktar * h.Carpan) as Miktar,
	    Matrah as ToplamTutar,
		h.Iskonto as IlkIskonto,
		b.Iskonto as SonIskonto,
		h.StokInd,
        h.StokAdi,
		h.StokKodu,
		h.KdvOrani,
		0 as Satis,
		b.HesapInd,
		b.Ind AS BaslikInd,
		h.Fiyat
	FROM Hareketler as h  WITH(NOLOCK) 
		LEFT JOIN BaslikMatrah as h2  WITH(NOLOCK) on h2.BaslikInd = h.BaslikInd
		LEFT JOIN Basliklar as b  WITH(NOLOCK) on h.BaslikInd = b.Ind 
	WHERE h.TipInd=6 AND (b.Tarih between @Baslangic AND @Bitis) AND b.Owner = @Owner
	AND b.DurumInd=12 and (select count(Ind) from Basliklar as b1  WITH(NOLOCK) where b1.FaturaInd = h.BaslikInd) = 0
	
	UNION ALL
	
	SELECT
		distinct
		h3.Owner,
		(h3.Miktar * h.Fiyat) as Tutar,
		(h3.Miktar * ISNULL(h3.Carpan,1)) AS Miktar,
	    (SELECT TOP 1 Matrah FROM BaslikMatrah WHERE BaslikInd = h.BaslikInd) as ToplamTutar,
		0.00 as IlkIskonto,
		b.Iskonto as SonIskonto,
		h.StokInd,
        h.StokAdi,
		h.StokKodu,
		h.KdvOrani,
		0 as Satis,
		b1.HesapInd,
		b1.Ind AS BaslikInd,
		h3.Fiyat
	FROM 
		Hareketler as h  WITH(NOLOCK) 
		LEFT JOIN Basliklar as b  WITH(NOLOCK) on h.BaslikInd = b.Ind 
		LEFT JOIN Basliklar as b1  WITH(NOLOCK) on b1.FaturaInd = h.BaslikInd
		LEFT JOIN KarZararGirisCikis as h3  WITH(NOLOCK) ON h.StokInd = h3.StokInd
	WHERE
		h3.BaslikInd IN (b1.Ind) AND 
		h.TipInd = 6 AND
		h3.TipIndAltHareket = 5 
		AND (b1.DurumInd = 3 and b1.TipInd = 104) AND
		h3.DepoInd IN (SELECT Hesaplar.Ind FROM Hesaplar  WITH(NOLOCK)  LEFT JOIN Stoklar as s  WITH(NOLOCK) ON s.Ind = Hesaplar.StokInd WHERE (TipInd = 205))
		AND (b1.Tarih between @Baslangic AND @Bitis) AND b1.Owner = @Owner
		
	UNION ALL
	
	SELECT
		h.Owner,
		(h.Miktar * h.Carpan *  (h.Fiyat /(1+(k.KdvOrani/100)))) as Tutar,		        
		(h.Miktar * h.Carpan) as Miktar,
		bm.Matrah as ToplamTutar,
		h.Miktar * h.Carpan *  (h.Fiyat /(1+(k.KdvOrani/100)))*(b.Iskonto/bm.Matrah) as IlkIskonto,
		0.00 as SonIskonto,
		h.StokInd,
		h.StokAdi,
		h.StokKodu,
		k.KdvOrani,
		0 as Satis,
		b.HesapInd,
		b.Ind AS BaslikInd,
		h.Fiyat
	FROM Hareketler as h  WITH(NOLOCK) 
		LEFT JOIN Basliklar as b1  WITH(NOLOCK) on  b1.Ind = h.BaslikInd and b1.TipInd = 111
		LEFT JOIN Basliklar as b  WITH(NOLOCK) on b.Ind = b1.FaturaInd AND (b.Tarih between @Baslangic AND @Bitis) AND b.Owner = @Owner
		LEFT JOIN BaslikMatrah as bm  WITH(NOLOCK) on bm.BaslikInd = b.Ind 
		LEFT JOIN Stoklar as s  WITH(NOLOCK) on s.Ind = h.StokInd
		LEFT JOIN KDVGruplari as k  WITH(NOLOCK) on k.Ind = s.SatisKDVGrupInd
    WHERE 
    h.TipInd=37 AND  b.DurumInd=12

	RETURN
END




GO



GO
CREATE FUNCTION [dbo].[KarZararLIFOAlisFiyati] (@Owner int, @BitisTarihi datetime, @durum bit)
RETURNS @SonAlisFiyati TABLE (
  Owner int,
  StokInd int,
  DSMMiktari decimal(28, 13),
  DSMMaliyeti decimal(28, 13)
)
BEGIN

  DECLARE @StokInd int
  DECLARE @KDVliHesaplansin int
  DECLARE @KDVOrani decimal(4, 2)
  DECLARE @Tarih datetime
  DECLARE @ToplamBaslikIskonto decimal(28, 8)
  DECLARE @NetGiren decimal(28, 8)
  DECLARE @NetGiren2 decimal(28, 8)
  DECLARE @temp decimal(28, 8)
  DECLARE @NetProcessGiren decimal(28, 8)
  DECLARE @ToplamDBMMGirenTutar decimal(28, 8)
  DECLARE @ToplamNetTutar decimal(28, 8)
  DECLARE @HareketBaslikIskonto float
  DECLARE @ToplamGirenTutar decimal(28, 8)
  DECLARE @Giren decimal(28, 8)
  DECLARE @Fiyat decimal(28, 8)
  DECLARE @HareketIskonto decimal(28, 8)
  DECLARE @BaslikIskonto decimal(28, 8)
  DECLARE @OrtFifoFiyat decimal(28, 8)
  DECLARE @SonFiyat decimal(28, 8)

  SELECT
    @KDVliHesaplansin = GenelSayi
  FROM Ayarlar  WITH(NOLOCK) 
  WHERE TipInd = 341

  DECLARE @KarZararEnvanterStokMiktarlari TABLE (
    Ind int,
    Owner int,
    StokInd int,
    Tarih datetime,
    Giren decimal(28, 8),
    Cikan decimal(28, 8),
    Fiyat decimal(28, 8),
    HareketIskonto decimal(28, 8),
    BaslikIskonto decimal(28, 8),
    ToplamTutar decimal(28, 8),
    KDVOrani decimal(4, 2)
  )

  DECLARE @StokNetMiktarlar TABLE (
    StokInd int,
    NetMiktar decimal(18, 8)
  )

  IF (@KDVliHesaplansin = 0)
  BEGIN
    INSERT INTO @KarZararEnvanterStokMiktarlari
      SELECT
        Ind,
        Owner,
        StokInd,
        Tarih,
        Giren,
        Cikan,
        (CASE TipIndAltHareket
          WHEN 3 THEN GercekFiyat
          ELSE Fiyat
        END) AS Fiyat,
        HareketIskonto,
        BaslikIskonto,
        (CASE TipIndAltHareket
          WHEN 3 THEN ToplamGercekTutar
          ELSE ToplamTutar
        END) AS ToplamTutar,
        0.00 AS KDVOrani
      FROM KarZararEnvanterStokMiktarlariButunKdvsiz  WITH(NOLOCK) 
      WHERE Tarih <=
                    CASE @durum
                      WHEN 1 THEN @BitisTarihi
                      ELSE DATEADD(DAY, -1, @BitisTarihi)
                    END
      AND Giren > 0
      AND (Owner = @Owner
      OR @Owner = 0)

    INSERT INTO @StokNetMiktarlar
      SELECT
        StokInd,
        SUM(Giren - Cikan) AS NetMiktar
      FROM KarZararEnvanterStokMiktarlariButunKdvsiz  WITH(NOLOCK) 
      WHERE --StokInd = @StokInd
      Tarih <=
              CASE @durum
                WHEN 1 THEN @BitisTarihi
                ELSE DATEADD(DAY, -1, @BitisTarihi)
              END
      AND (Owner = @Owner
      OR @Owner = 0)
      GROUP BY StokInd
  END

  ELSE
  IF (@KDVliHesaplansin = 1)
  BEGIN
    INSERT INTO @KarZararEnvanterStokMiktarlari
      SELECT
        Ind,
        Owner,
        StokInd,
        Tarih,
        Giren,
        Cikan,
        (CASE TipIndAltHareket
          WHEN 3 THEN GercekFiyat
          ELSE Fiyat
        END) AS Fiyat,
        HareketIskonto,
        BaslikIskonto,
        (CASE TipIndAltHareket
          WHEN 3 THEN ToplamGercekTutar
          ELSE ToplamTutar
        END) AS ToplamTutar,
        KDVOrani
      FROM KarZararEnvanterStokMiktarlariButunKdvli  WITH(NOLOCK) 
      WHERE Tarih <=
                    CASE @durum
                      WHEN 1 THEN @BitisTarihi
                      ELSE DATEADD(DAY, -1, @BitisTarihi)
                    END
      AND Giren > 0
      AND (Owner = @Owner
      OR @Owner = 0)

    INSERT INTO @StokNetMiktarlar
      SELECT
        StokInd,
        SUM(Giren - Cikan) AS NetMiktar
      FROM KarZararEnvanterStokMiktarlariButunKdvli  WITH(NOLOCK) 
      WHERE 
      Tarih <=
              CASE @durum
                WHEN 1 THEN @BitisTarihi
                ELSE DATEADD(DAY, -1, @BitisTarihi)
              END
      AND (Owner = @Owner
      OR @Owner = 0)
      GROUP BY StokInd
  END



  DECLARE StokCursor CURSOR FOR
  SELECT
    Ind
  FROM Stoklar
  OPEN StokCursor
  FETCH NEXT FROM StokCursor
  INTO @StokInd
  WHILE @@FETCH_STATUS = 0
  BEGIN

    SET @ToplamGirenTutar = 0
    SET @ToplamDBMMGirenTutar = 0

    SELECT
      @NetProcessGiren = NetMiktar
    FROM @StokNetMiktarlar
    WHERE StokInd = @StokInd
    IF @@ROWCOUNT = 0
      SET @NetProcessGiren = 0
    SET @NetGiren = @NetProcessGiren

    IF (@NetProcessGiren > 0)
    BEGIN
      DECLARE KarZararEnvanterCursor CURSOR FOR
      SELECT
        Tarih,
        Giren,
        ISNULL(Fiyat, 0),
        HareketIskonto,
        BaslikIskonto,
        ToplamTutar,
        KDVOrani
      FROM @KarZararEnvanterStokMiktarlari  
      WHERE StokInd = @StokInd
      ORDER BY Tarih, Ind
      OPEN KarZararEnvanterCursor
      FETCH NEXT FROM KarZararEnvanterCursor
      INTO @Tarih, @Giren, @Fiyat, @HareketIskonto, @BaslikIskonto, @ToplamNetTutar, @KDVOrani
      WHILE @@FETCH_STATUS = 0
      BEGIN

        IF (@Fiyat = 0)
        BEGIN
          FETCH NEXT FROM KarZararEnvanterCursor
          INTO @Tarih, @Giren, @Fiyat, @HareketIskonto, @BaslikIskonto, @ToplamNetTutar, @KDVOrani
          CONTINUE
        END

        IF (@ToplamNetTutar > 0)
        BEGIN
          SET @HareketBaslikIskonto = (((@Giren * @Fiyat - @HareketIskonto) * @BaslikIskonto) / @ToplamNetTutar)
        END
        ELSE
        BEGIN
          SET @HareketBaslikIskonto = 0
        END

        IF (@NetProcessGiren > 0)
        BEGIN
          IF (@NetProcessGiren > @Giren)
          BEGIN
            SET @NetProcessGiren = @NetProcessGiren - @Giren
            SET @ToplamGirenTutar += @Giren * ((@Fiyat * @Giren - @HareketIskonto - @HareketBaslikIskonto) / @Giren) * ((100 + @KDVOrani) / 100)
          END
          ELSE
          BEGIN
            SET @ToplamGirenTutar += @NetProcessGiren * ((@Fiyat * @Giren - @HareketIskonto - @HareketBaslikIskonto) / @Giren) * ((100 + @KDVOrani) / 100)
            SET @NetProcessGiren = 0
          END
        END
        ELSE
          BREAK

        FETCH NEXT FROM KarZararEnvanterCursor
        INTO @Tarih, @Giren, @Fiyat, @HareketIskonto, @BaslikIskonto, @ToplamNetTutar, @KDVOrani
      END -- WHILE @@FETCH_STATUS <KarZararEnvanterCursor> CLOSE

      CLOSE KarZararEnvanterCursor
      DEALLOCATE KarZararEnvanterCursor


    END -- IF(@NetProcessGiren > 0) CLOSE


    INSERT INTO @SonAlisFiyati
      VALUES (NULL, @StokInd, @NetGiren, @ToplamGirenTutar)

    FETCH NEXT FROM StokCursor
    INTO @StokInd

  END -- WHILE @@FETCH_STATUS = 0 <StokCursor> CLOSE

  CLOSE StokCursor
  DEALLOCATE StokCursor

  RETURN
END



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[KasaHareketDevir]  
(
	@ParaBirimi NVARCHAR(5),		
	@Tipler NVARCHAR(100),
	@Tarih DATETIME,
	@SubeGrupInds NVARCHAR(max)
)
RETURNS @Liste TABLE
(TipInd int, Owner int, OwnerSG int, Giren decimal(28, 8), Cikan decimal(28, 8))
AS
BEGIN 
	IF(@SubeGrupInds = 'yok')
		BEGIN
			INSERT INTO @Liste
			SELECT
				23 AS TipInd,
				k.Owner,
				(CASE WHEN (k.Owner IS NULL)
				 THEN 0
				 ELSE NULL
				 END) AS OwnerSG,
				SUM(k.Giren) AS Giren, 
				SUM(k.Cikan) AS Cikan
			FROM KasaHareketleriForDevir as k  WITH(NOLOCK) 
			WHERE k.TipInd In (select * from fnSplit(@Tipler,','))  
				AND k.ParaBirimi = @ParaBirimi
				AND k.GirisTarihi < @Tarih
			GROUP BY
				k.Owner
		END
	ELSE
		BEGIN
			INSERT INTO @Liste
			SELECT
				23 AS TipInd,
				k.Owner,
				(CASE WHEN (k.Owner IS NULL)
				 THEN 0
				 ELSE NULL
				 END) AS OwnerSG,
				SUM(k.Giren) AS Giren, 
				SUM(k.Cikan) AS Cikan
			FROM KasaHareketleriForDevir as k  WITH(NOLOCK) 
			WHERE k.TipInd In (select * from fnSplit(@Tipler,','))  
				AND k.ParaBirimi = @ParaBirimi
				AND k.GirisTarihi < @Tarih
				AND (k.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR k.Owner IS NULL OR k.Owner IN (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True'))
			GROUP BY
				k.Owner
		END
	BEGIN
		DECLARE @SubeInd BIGINT
		DECLARE subelerCur CURSOR FOR
		SELECT
			DISTINCT Ind
		FROM 
			Subeler
		OPEN subelerCur
		FETCH NEXT FROM subelerCur INTO @SubeInd
		DECLARE @x int
     
		WHILE @@FETCH_STATUS = 0
		BEGIN
			SELECT @x=COUNT(*) FROM @Liste WHERE Owner = @SubeInd
			IF @x <= 0
				BEGIN
					INSERT INTO @Liste VALUES (23, @SubeInd, NULL, 0.00, 0.00)
				END
			FETCH NEXT FROM subelerCur INTO @SubeInd
		END
		CLOSE subelerCur
		DEALLOCATE subelerCur
		SELECT @x=COUNT(*) FROM @Liste WHERE Owner IS NULL
		IF @x <= 0
			BEGIN
				INSERT INTO @Liste VALUES (23, NULL, 0, 0.00, 0.00)
			END
	END
	RETURN
END

GO
CREATE FUNCTION [dbo].[KasaHareketDevirDetayli]  
(
	@ParaBirimi NVARCHAR(5),		
	@Tipler NVARCHAR(100),
	@Tarih DATETIME,
	@SubeGrupInds NVARCHAR(max)
)
RETURNS @Liste TABLE
(TipInd int, Owner int, OwnerSG int, Giren decimal(28, 8), Cikan decimal(28, 8))
AS
BEGIN 
	IF(@SubeGrupInds = 'yok')
		BEGIN
			INSERT INTO @Liste
			SELECT
				23 AS TipInd,
				k.Owner,
				(CASE WHEN (k.Owner IS NULL)
				 THEN 0
				 ELSE NULL
				 END) AS OwnerSG,
				SUM(k.Giren) AS Giren, 
				SUM(k.Cikan) AS Cikan
			FROM KasaHareketleriDetayli as k  WITH(NOLOCK) 
			WHERE k.TipInd In (select * from fnSplit(@Tipler,','))  
				AND k.ParaBirimi = @ParaBirimi
				AND k.GirisTarihi < @Tarih
			GROUP BY
				k.Owner
		END
	ELSE
		BEGIN
			INSERT INTO @Liste
			SELECT
				23 AS TipInd,
				k.Owner,
				(CASE WHEN (k.Owner IS NULL)
				 THEN 0
				 ELSE NULL
				 END) AS OwnerSG,
				SUM(k.Giren) AS Giren, 
				SUM(k.Cikan) AS Cikan
			FROM KasaHareketleriDetayli as k  WITH(NOLOCK) 
			WHERE k.TipInd In (select * from fnSplit(@Tipler,','))  
				AND k.ParaBirimi = @ParaBirimi
				AND k.GirisTarihi < @Tarih
				AND (k.Owner IN (SELECT * FROM fnSplit(@SubeGrupInds,',')) OR k.Owner IS NULL OR k.Owner IN (SELECT TOP 1 Ind FROM Subeler WHERE IsMerkez = 'True'))
			GROUP BY
				k.Owner
		END
	BEGIN
		DECLARE @SubeInd BIGINT
		DECLARE subelerCur CURSOR FOR
		SELECT
			DISTINCT Ind
		FROM 
			Subeler
		OPEN subelerCur
		FETCH NEXT FROM subelerCur INTO @SubeInd
		DECLARE @x int
     
		WHILE @@FETCH_STATUS = 0
		BEGIN
			SELECT @x=COUNT(*) FROM @Liste WHERE Owner = @SubeInd
			IF @x <= 0
				BEGIN
					INSERT INTO @Liste VALUES (23, @SubeInd, NULL, 0.00, 0.00)
				END
			FETCH NEXT FROM subelerCur INTO @SubeInd
		END
		CLOSE subelerCur
		DEALLOCATE subelerCur
		SELECT @x=COUNT(*) FROM @Liste WHERE Owner IS NULL
		IF @x <= 0
			BEGIN
				INSERT INTO @Liste VALUES (23, NULL, 0, 0.00, 0.00)
			END
	END
	RETURN
END


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[KasaHareketDokumu] 
(	
	@ParaBirimi nvarchar(5),
	@Tipler nvarchar(100),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS 
TABLE 
AS
RETURN 
(
	WITH HareketDokumu(Ind, TipInd, Owner, Giren, Cikan,CariAdi,CariKodu, Aciklama, GirisTarihi,VadeTarihi,VardiyaKartInd)
	AS
	(
		SELECT
			Ind,
			TipInd,
			Owner,
			(
				CASE WHEN (TipInd In (7))
				THEN Tutar
				END
			) as Giren,
			(
				CASE WHEN (TipInd In (8))
				THEN Tutar
				END
			) as Cikan,
			null as HesapAdi, 
			null as HesapKodu, 
			Aciklama,
			GirisTarihi,
			null as VadeTarihi,
			VardiyaKartInd
			
		FROM Hareketler  WITH(NOLOCK) 
		WHERE
			Hareketler.ParaBirimi = @ParaBirimi AND
			GirisTarihi >= @BaslangicTarihi AND GirisTarihi < @BitisTarihi AND 
			TipInd in (7,8)

		UNION ALL

		SELECT
			k.Ind,
			k.TipInd,
			k.Owner,
			k.GirenTutar as Giren,
			0.00 as Cikan,
			null as HesapAdi, 
			null as HesapKodu, 
			'Virman Giriş' as Aciklama,
			k.GirisTarihi,
			null as VadeTarihi,
			null as VardiyaKartInd
			
		FROM KasaVirmanHareketleri as k  WITH(NOLOCK) 
		WHERE
			k.ParaBirimi = @ParaBirimi
			AND k.GirisTarihi >= @BaslangicTarihi 
			AND k.GirisTarihi < @BitisTarihi
			AND k.GirenTutar > 0

		UNION ALL

		SELECT
			k.Ind,
			k.TipInd,
			k.Owner,
			0.00 as Giren,
			k.CikanTutar as Cikan,
			null as HesapAdi, 
			null as HesapKodu, 
			'Virman Çıkış' as Aciklama,
			k.GirisTarihi,
			null as VadeTarihi,
			null as VardiyaKartInd
			
		FROM KasaVirmanHareketleri as k  WITH(NOLOCK) 
		WHERE
			k.ParaBirimi = @ParaBirimi
			AND k.GirisTarihi >= @BaslangicTarihi 
			AND k.GirisTarihi < @BitisTarihi
			AND k.CikanTutar > 0

		UNION ALL

		SELECT
			Ind,
			TipInd,
			Owner,
			(
				CASE WHEN (TipInd In (9))
				THEN Tutar
				END
			) as Giren,
			(
				CASE WHEN (TipInd In (13))
				THEN Tutar
				END
			) as Cikan,
			CariHesapAdi as HesapAdi, 
			CariHesapKodu as HesapKodu, 
			Aciklama,
			GirisTarihi,
			Hareketler.VadeTarihi as VadeTarihi,
			VardiyaKartInd
			
		FROM Hareketler  WITH(NOLOCK) 
		WHERE
			Hareketler.ParaBirimi = @ParaBirimi AND
			GirisTarihi >= @BaslangicTarihi AND GirisTarihi < @BitisTarihi AND 
			(TipInd IN (9,13) AND Hareketler.VardiyaKartInd IS NULL) 

		UNION ALL

		SELECT
			Ind,
			TipInd,
			Owner,
			Tutar as Giren,
			0 as Cikan,
			CariHesapAdi as HesapAdi, 
			CariHesapKodu as HesapKodu, 
			Aciklama,
			Hareketler.IslemTarihi as GirisTarihi,
			Hareketler.VadeTarihi as VadeTarihi,
			VardiyaKartInd
			
		FROM Hareketler  WITH(NOLOCK) 
		WHERE
			Hareketler.ParaBirimi = @ParaBirimi AND
			Hareketler.IslemTarihi >= @BaslangicTarihi AND Hareketler.IslemTarihi <@BitisTarihi AND 
			 (TipInd = 11 AND Hareketler.DurumInd=5 AND Hareketler.VardiyaKartInd IS NULL) 

		UNION ALL

		SELECT
			Hareketler.Ind,
			Hareketler.TipInd,
			Hareketler.Owner,
			(
				CASE WHEN (Hareketler.TipInd In (19))
				THEN Tutar
				END
			) as Giren,
			(
				CASE WHEN (Hareketler.TipInd In (17))
				THEN Tutar
				END
			) as Cikan,
			Hareketler.BankaHesapAdi as HesapAdi, 
			Hareketler.BankaHesapKodu as HesapKodu, 
			Hareketler.Aciklama,
			Hareketler.GirisTarihi,
			null as VadeTarihi,
			Hareketler.VardiyaKartInd			
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Hesaplar  WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.BankaHesapInd
		WHERE
			Hareketler.GirisTarihi >= @BaslangicTarihi 
			AND Hareketler.GirisTarihi < @BitisTarihi 
			AND Hareketler.TipInd in (17,19) 
			AND Hareketler.VardiyaKartInd IS NULL
			AND Hesaplar.ParaBirimi = @ParaBirimi

		UNION ALL

		SELECT 
			Hareketler.Ind,
			Hareketler.TipInd,
			Hareketler.Owner,
			Hareketler.Tutar AS Giren,
			0 AS Cikan,
			Hareketler.GelirAdi AS HesapAdi,
			Hareketler.GelirKodu AS HesapKodu,
			Hareketler.Aciklama,
			Hareketler.GirisTarihi,
			null as VadeTarihi,
			Hareketler.VardiyaKartInd
			
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Ayarlar  WITH(NOLOCK) ON Ayarlar.TipInd = 301
	    WHERE 
            Hareketler.GirisTarihi >= @BaslangicTarihi 
			AND Hareketler.GirisTarihi < @BitisTarihi 
			AND Hareketler.TipInd = 25
			AND Hareketler.VardiyaKartInd IS NULL 
			AND Ayarlar.AnaParaBirimi = @ParaBirimi

		UNION ALL

		SELECT 
			Hareketler.Ind,
			Hareketler.TipInd,
			Hareketler.Owner,
			0 AS Giren,
			Hareketler.Tutar AS Cikan,
			Hareketler.GiderAdi AS HesapAdi,
			Hareketler.GiderKodu AS HesapKodu,
			Hareketler.Aciklama,
			Hareketler.GirisTarihi,
			null as VadeTarihi,
			Hareketler.VardiyaKartInd
			
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Ayarlar  WITH(NOLOCK) ON Ayarlar.TipInd = 301
		WHERE 
		    Hareketler.GirisTarihi >= @BaslangicTarihi 
			AND Hareketler.GirisTarihi < @BitisTarihi 
			AND Hareketler.TipInd = 26 
			AND Hareketler.VardiyaKartInd IS NULL
			AND Ayarlar.AnaParaBirimi = @ParaBirimi

		UNION ALL

		SELECT
			Hareketler.Ind,
			Hareketler.TipInd,
			Hareketler.Owner,
			(
				CASE WHEN (Hareketler.TipInd In (20))
				THEN Tutar
				END
			) as Giren,
			(
				CASE WHEN (Hareketler.TipInd In (18))
				THEN Tutar
				END
			) as Cikan,
			Hareketler.PersonelHesapAdi as HesapAdi, 
			Hareketler.PersonelHesapKodu as HesapKodu, 
			Hareketler.Aciklama,
			Hareketler.GirisTarihi,
			null as VadeTarihi,
			Hareketler.VardiyaKartInd
			
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Ayarlar  WITH(NOLOCK) ON Ayarlar.TipInd = 301
		WHERE
			Hareketler.GirisTarihi >= @BaslangicTarihi 
			AND Hareketler.GirisTarihi < @BitisTarihi 
			AND Hareketler.TipInd IN (18,20) 
			AND Hareketler.VardiyaKartInd IS NULL
			AND Ayarlar.AnaParaBirimi = @ParaBirimi

		UNION ALL

		SELECT 
			DISTINCT Basliklar.VardiyaNo AS Ind,
			38 as TipInd,		
			Basliklar.Owner,
			SUM(CASE WHEN(h.TipInd = 38)
				THEN h.Tutar
				ELSE 0
				END) as Giren,
			0 as Cikan,
			CAST(Basliklar.VardiyaNo AS varchar(50)) + '. Vardiya' as HesapAdi,
			NULL AS HesapKodu,
			'Vardiya kabul' AS Aciklama,
			TBL1.Tarih AS GirisTarihi,
			NULL AS VadeTarihi,
			NULL as VardiyaKartInd
		FROM Basliklar   WITH(NOLOCK) 
		LEFT JOIN Hareketler as h  WITH(NOLOCK) ON h.VardiyaKartInd = Basliklar.Ind AND h.TipInd = 38 
		CROSS JOIN (SELECT DISTINCT Tarih FROM Basliklar  WITH(NOLOCK)  WHERE TipInd = 108) as TBL1
		WHERE 
		Basliklar.TipInd = 108 
		AND Basliklar.VardiyaNo = Basliklar.VardiyaNo
		AND Basliklar.Tarih = TBL1.Tarih
		AND TBL1.Tarih >= @BaslangicTarihi 
		AND TBL1.Tarih < @BitisTarihi 
		AND h.ParaBirimi = @ParaBirimi
		GROUP BY 
		Basliklar.Owner,
		TBL1.Tarih,
		Basliklar.VardiyaNo,
		h.TipInd,
		Basliklar.Aciklama,
		Basliklar.Tarih

		UNION ALL

		SELECT
			Basliklar.Ind as Ind,
			Hareketler.TipInd as TipInd,
			Basliklar.Owner,
			(Hareketler.Tutar) as Giren,
			0 as Cikan,
			Hareketler.PersonelHesapAdi as HesapAdi, 
			Hareketler.PersonelHesapKodu as HesapKodu,  
			'Vardiya kabul' as Aciklama,
			Basliklar.Tarih as GirisTarihi,
			null as VadeTarihi,
			null as VardiyaKartInd	
		FROM Hareketler   WITH(NOLOCK) 
		LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd = Basliklar.Ind
		WHERE
			Basliklar.TipInd = 505
			AND Basliklar.Tarih >= @BaslangicTarihi 
			AND Basliklar.Tarih <= @BitisTarihi 
			AND Hareketler.TipInd = 38
			AND Hareketler.ParaBirimi = @ParaBirimi

		UNION ALL

		SELECT 
			BaslikInd AS Ind,
			Hareketler.TipInd AS TipInd,
			Hareketler.Owner AS Owner,
			0 AS Giren,
			Sum(Tutar) AS Cikan,
			PersonelHesapAdi AS HesapAdi,
			PersonelHesapKodu AS HesapKodu,
			Basliklar.Aciklama AS Aciklama,
			Hareketler.GirisTarihi AS GirisTarihi,
			null AS VadeTarihi, 
			Hareketler.VardiyaKartInd as VardiyaKartInd
		
		FROM Hareketler  WITH(NOLOCK) 
		LEFT JOIN Basliklar  WITH(NOLOCK) ON Hareketler.BaslikInd = Basliklar.Ind
		LEFT JOIN Ayarlar  WITH(NOLOCK) ON Ayarlar.TipInd = 301
		WHERE BaslikInd in(

		SELECT Ind  FROM Basliklar  WITH(NOLOCK) WHERE Ind in (select BaslikInd FROM Hareketler) AND TipInd=107
		AND HesapInd is null)
		AND GirisTarihi >=@BaslangicTarihi 
		AND GirisTarihi< @BitisTarihi
		AND Ayarlar.AnaParaBirimi = @ParaBirimi
		GROUP BY BaslikInd,Hareketler.Owner,PersonelHesapAdi,PersonelHesapKodu,BelgeNo,Basliklar.Aciklama,Hareketler.GirisTarihi,Hareketler.TipInd, Hareketler.VardiyaKartInd
	)

	SELECT
		TOP 100 PERCENT
		h.*,
		s.SubeAdi
	FROM HareketDokumu as h  WITH(NOLOCK) 
	LEFT JOIN Subeler as s  WITH(NOLOCK) ON h.Owner = s.Ind
	WHERE 	TipInd In (select * from fnSplit(@Tipler,','))
	AND GirisTarihi >= @BaslangicTarihi AND GirisTarihi < @BitisTarihi
	ORDER BY h.GirisTarihi,h.Ind
)

GO

CREATE FUNCTION KasaHareketDundenDevirYarinaDevir
(	
	@tarih datetime,
	@owner int
)
RETURNS TABLE 
AS
RETURN 
(
	with dundendevir(Owner, DundenDevreden)
	as
	(
		SELECT
			
			k.Owner,
			ISNULL(SUM(k.Giren)-SUM(k.Cikan),0) AS DundenDevreden
			
		FROM KasaHareketleri as k  WITH(NOLOCK) 
		WHERE k.TipInd In (select * from fnSplit('7,8,9,11,13,17,18,19,20,25,26,31,38,85',','))  
			AND k.ParaBirimi = 'TL'
			AND k.GirisTarihi < @tarih
			AND k.Owner=@owner
		GROUP BY
			k.Owner
	),
	girenCikanlar(GirenToplam, CikanToplam)
	as
	(	
		
		select	
				SUM(Giren) as GirenToplam,
				SUM(Cikan) as CikanToplam  
		from KasaHareketleri
		where GirisTarihi=@tarih
			  AND Owner=@owner
	)

	select d.Owner,
		   d.DundenDevreden as DundenDevreden,
		   d.DundenDevreden+g.GirenToplam-g.CikanToplam as YarinaDevreden 
	from dundendevir d, girenCikanlar g
)
GO

GO

CREATE FUNCTION KasaHareketDundenDevirYarinaDevirDetayli
(	
	@tarih datetime,
	@owner int
)
RETURNS TABLE 
AS
RETURN 
(
	with dundendevir(Owner, DundenDevreden)
	as
	(
		SELECT
			
			k.Owner,
			ISNULL(SUM(k.Giren)-SUM(k.Cikan),0) AS DundenDevreden
			
		FROM KasaHareketleriDetayli as k  WITH(NOLOCK) 
		WHERE k.TipInd In (select * from fnSplit('7,8,9,10,11,13,17,18,19,20,25,26,2600,31,37,38,39,55,56,85',','))  
			AND k.ParaBirimi = 'TL'
			AND k.GirisTarihi < @tarih
			AND k.Owner=@owner
		GROUP BY
			k.Owner
	),
	girenCikanlar(GirenToplam, CikanToplam)
	as
	(	
		
		select	
				SUM(Giren) as GirenToplam,
				SUM(Cikan) as CikanToplam  
		from KasaHareketleriDetayli
		where GirisTarihi=@tarih
			  AND Owner=@owner
	)

	select d.Owner,
		   d.DundenDevreden as DundenDevreden,
		   d.DundenDevreden+g.GirenToplam-g.CikanToplam as YarinaDevreden 
	from dundendevir d, girenCikanlar g
)
GO

GO
CREATE FUNCTION KasaHareketTahsilat
(	
	@tarih datetime,
	@owner int
)
RETURNS TABLE 
AS
RETURN 
(	
	select	
		Owner,
		HesapAdi,
		HesapKodu,
		Aciklama,
		Giren as Tutar 
	from KasaHareketleri  WITH(NOLOCK) 
	where GirisTarihi=@tarih
		  AND Cikan=0 --Tahsilat
		  AND Owner=@owner
)
GO
GO
CREATE FUNCTION KasaHareketTahsilatDetayli
(	
	@tarih datetime,
	@owner int
)
RETURNS TABLE 
AS
RETURN 
(	
	select	
		Owner,
		HesapAdi,
		HesapKodu,
		Aciklama,
		Giren as Tutar 
	from KasaHareketleriDetayli  WITH(NOLOCK) 
	where GirisTarihi=@tarih
		  AND Cikan=0 --Tahsilat
		  AND Owner=@owner
)
GO
GO

CREATE FUNCTION KasaHareketTediye
(	
	@tarih datetime,
	@owner int
)
RETURNS TABLE 
AS
RETURN 
(	
	select	
		Owner,
		HesapAdi,
		HesapKodu,
		Aciklama,
		Cikan as Tutar 
	from KasaHareketleri  WITH(NOLOCK) 
	where GirisTarihi=@tarih
		  AND Giren=0 --Tediye
		  AND Owner=@owner
)
GO




GO
CREATE FUNCTION [dbo].[KasaHareketTediyeDetayli]
(	
	@tarih datetime,
	@owner int
)
RETURNS TABLE 
AS
RETURN 
(	
	select	
		Owner,
		HesapAdi,
		HesapKodu,
		Aciklama,
		Cikan as Tutar 
	from KasaHareketleriDetayli  WITH(NOLOCK) 
	where GirisTarihi=@tarih
		  AND Giren=0 --Tediye
		  AND Owner=@owner
)

GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go


CREATE FUNCTION [dbo].[KasaToplamlari](
	@tarih DATETIME
)

RETURNS @tblKasaToplamlari TABLE
(ParaBirimi VARCHAR(50), Bakiye DECIMAL(28,8),Owner INT,Aciklama VARCHAR(100))
AS
BEGIN 

DECLARE @paraBirimi VARCHAR(30), @kur DECIMAL(28,8)

	DECLARE KasaCursor CURSOR FOR 
	SELECT ParaBirimi,Kur FROM KurBilgileri

	OPEN KasaCursor;
	FETCH NEXT FROM KasaCursor
	INTO @paraBirimi,@kur
	WHILE @@FETCH_STATUS = 0
	BEGIN
		INSERT INTO @tblKasaToplamlari
		SELECT
			@paraBirimi  AS ParaBirimi ,ISNULL((SUM(KH.Giren- KH.Cikan)*@kur),0) AS Bakiye, NULL Owner,'' Aciklama
		FROM KasaHareketleri as KH
		WHERE KH.TipInd In (7,8,9,11,13,17,18,19,20,25,26,31,38,85)  
			AND KH.ParaBirimi = @paraBirimi
			AND KH.GirisTarihi <= @tarih


		FETCH NEXT FROM KasaCursor
		INTO @paraBirimi,@kur
	END

	CLOSE KasaCursor
	DEALLOCATE KasaCursor
	RETURN
END


	



GO
CREATE FUNCTION [dbo].[KasiyerBazliSatisRaporu]
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@StokGrupId int
)
RETURNS @dokum TABLE
(
            Owner int,
            SubeAdi nvarchar(50),
  			StokInd int, 			 
			StokKodu nvarchar(50),
			StokAdi nvarchar(50), 
			GrupInd int,
			GrupAdi nvarchar(50),
			KasiyerAdi nvarchar(100),
			KasiyerKodu nvarchar(50),
			Fiyat decimal(28,8),
			KDVOrani decimal(28,8), 
			Miktar  decimal(28,8), 
			Tutar decimal(28,8), 
            KullaniciInd int
) 
AS
BEGIN

 if(@StokGrupId=0) --stokgrupid seçilmemiş
 begin
    insert into @dokum
    SELECT 
		h.Owner
	  , sb.subeAdi
	  , h.StokInd
	  , s.StokKodu
	  , s.StokAdi
	  , s.GrupInd	  	  
	  , sg.GrupAdi
	  , hes.hesapAdi AS KasiyerAdi
	  , h.KasiyerKodu	
	  , SUM(ISNULL(h.tutar,0))/ISNULL(SUM(h.Miktar * ISNULL(h.Carpan, 1)),0) as Fiyat
	  , h.KdvOrani AS KDVOrani
      , ISNULL(SUM(h.Miktar * ISNULL(h.Carpan, 1)),0) AS Miktar
      , SUM(ISNULL(h.tutar,0)) as tutar
	  , sk.KullaniciInd
	FROM  
		SatisKasasi AS sk  WITH(NOLOCK) left join
		Hareketler h  WITH(NOLOCK) ON h.Ind = sk.IslemInd left join
		Hareketler  WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind and Hareketler.StokInd = h.StokInd left join
		Stoklar AS s  WITH(NOLOCK) ON s.Ind = h.StokInd left join
		Basliklar b  WITH(NOLOCK) ON b.Ind = sk.BaslikInd and b.TipInd = 505 inner join 
		Kullanicilar k  WITH(NOLOCK) ON h.KasiyerKodu = k.KasiyerKodu and h.owner = k.owner inner join 
		Hesaplar hes  WITH(NOLOCK) ON hes.Ind = k.personelInd inner join 
		StokGruplari sg  WITH(NOLOCK) ON sg.Ind = s.GrupInd inner join
		Subeler sb  WITH(NOLOCK) ON sb.Ind = h.owner
	WHERE 
		h.TipInd = 504 
		and sk.Tablo = 'Hareketler' 
		and sk.IsYeniSatis = 0 
		and h.Miktar > 0 
		and h.KasiyerKodu > '0'
		and (b.Tarih between @BaslangicTarihi and @BitisTarihi)
	GROUP BY 
			h.Owner, h.StokInd, s.GrupInd, s.StokKodu, s.StokAdi
		  , h.KdvOrani,  sk.KullaniciInd, h.KasiyerKodu, hes.hesapAdi,sg.GrupAdi,  sb.subeAdi
 end
 else
 begin 
	insert into @dokum
	SELECT 
		h.Owner
	  , sb.subeAdi
	  , h.StokInd
	  , s.StokKodu
	  , s.StokAdi
	  , s.GrupInd	  	  
	  , sg.GrupAdi
	  , hes.hesapAdi AS KasiyerAdi
	  , h.KasiyerKodu	
	  , SUM(ISNULL(h.tutar,0))/ISNULL(SUM(h.Miktar * ISNULL(h.Carpan, 1)),0) as Fiyat
	  , h.KdvOrani AS KDVOrani
      , ISNULL(SUM(h.Miktar * ISNULL(h.Carpan, 1)),0) AS Miktar
      , SUM(ISNULL(h.tutar,0)) as tutar
	  , sk.KullaniciInd
	FROM  
		SatisKasasi AS sk  WITH(NOLOCK) left join
		Hareketler h  WITH(NOLOCK) ON h.Ind = sk.IslemInd left join
		Hareketler  WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind and Hareketler.StokInd = h.StokInd left join
		Stoklar AS s  WITH(NOLOCK) ON s.Ind = h.StokInd left join
		Basliklar b  WITH(NOLOCK) ON b.Ind = sk.BaslikInd and b.TipInd = 505 inner join 
		Kullanicilar k  WITH(NOLOCK) ON h.KasiyerKodu = k.KasiyerKodu and h.owner = k.owner inner join 
		Hesaplar hes  WITH(NOLOCK) ON hes.Ind = k.personelInd inner join 
		StokGrupRecursive(@StokGrupId) sg   ON sg.Ind=s.GrupInd inner join
		--StokGruplari sg ON sg.Ind = s.GrupInd inner join
		Subeler sb  WITH(NOLOCK) ON sb.Ind = h.owner
	WHERE 
		h.TipInd = 504 
		and sk.Tablo = 'Hareketler' 
		and sk.IsYeniSatis = 0 
		and h.Miktar > 0 
		and h.KasiyerKodu > '0'
		and (b.Tarih between @BaslangicTarihi and @BitisTarihi)
	GROUP BY 
			h.Owner, h.StokInd, s.GrupInd, s.StokKodu, s.StokAdi
		  , h.KdvOrani,  sk.KullaniciInd, h.KasiyerKodu, hes.hesapAdi,sg.GrupAdi,  sb.subeAdi	
  end		

return
end

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[KKartIcmalHareket] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Dokum 
	(
		   Owner,  
		   KKHesapInd,
		   KKHesapKodu,
		   KKHesapAdi,
		   Yatirilan ,
		   Tahsilat ,
		   Bakiye 	
	)
	AS
	(
	   SELECT 	
			null as Owner,
			H.KKHesapInd,
			Hsp.HesapKodu KKHesapKodu,
			Hsp.HesapAdi KKHesapAdi,			
			CASE WHEN H.TipInd IN (10,533) AND (h.Aciklama IS NULL OR h.Aciklama != 'KK-TAHSILAT-SEVIMLI')
			THEN H.Tutar 
			ELSE 0
			END as Yatirilan,
			0 AS Tahsilat,
			0 as Bakiye
			
		FROM Hareketler AS H  WITH(NOLOCK) 
		LEFT JOIN Basliklar AS B  WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind
		LEFT JOIN Subeler AS S  WITH(NOLOCK) ON H.Owner=S.Ind
		LEFT JOIN Hesaplar AS Hsp  WITH(NOLOCK) ON Hsp.Ind = H.KKHesapInd
		WHERE  
		H.GirisTarihi >= @BaslangicTarihi AND H.GirisTarihi < @BitisTarihi
		AND H.TipInd IN (10,533)
		
	 
		UNION ALL


		SELECT	

			null as Owner,
			KrediKartiTahsil.KKHesapInd,
			Hesaplar.HesapKodu as KKHesapKodu,
			Hesaplar.HesapAdi as KKHesapAdi,	
			0 AS Yatirilan,
			(CASE WHEN (KrediKartiTahsil.Aciklama != 'Komisyon')
			THEN 
				CASE WHEN KrediKartiTahsil.Iskonto IS NOT NULL THEN --önceki tahsilatların banka komisyon oranlarını kaybetmemek üzere tahsil esnasındaki komisyon oranı başlığa eklendi
				(Tahsilat-Tahsilat*(KrediKartiTahsil.Iskonto/100)) ELSE
				(Tahsilat-Tahsilat*(Hesaplar.BankaKomisyon/100)) END
			ELSE Tahsilat
			END) as Tahsilat,		
			0 as Bakiye		
		FROM KrediKartiTahsil  WITH(NOLOCK) 
		LEFT JOIN Hesaplar  WITH(NOLOCK)  ON Hesaplar.Ind = KrediKartiTahsil.KKHesapInd
		LEFT JOIN Subeler  WITH(NOLOCK) ON KrediKartiTahsil.Owner=Subeler.Ind
		WHERE
			Tarih >= @BaslangicTarihi 
			AND Tarih < @BitisTarihi 
			
		

	)
	SELECT 
		Owner, 
		KKHesapInd,
		KKHesapKodu,
		KKHesapAdi,
		sum(Yatirilan)as Yatirilan, 
		sum(Tahsilat) as Tahsilat, 
		(sum(Yatirilan) - sum(Tahsilat)) as Bakiye,
 0.00 as Devir

    FROM Dokum  WITH(NOLOCK) 
    group by 
		KKHesapInd, 
		KKHesapKodu,
		KKHesapAdi,
        Owner
 
	union all

	SELECT 
		null as Owner, 
        Ind as KKHesapInd,
		HesapKodu as KKHesapKodu,
		HesapAdi AS KKHesapAdi,
		0 as Yatirilan, 
		0 as Tahsilat, 
		0 as Bakiye,
        0.00 as Devir

    FROM KKartlariWithBakiye  WITH(NOLOCK) 
    where Ind not in ( select KKHesapInd from Dokum )





)


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[KKGenelList] 
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS @dokum TABLE
(
	Owner int,
	KKHesapKodu nvarchar(max),
	KKHesapAdi nvarchar(max),
	Tutar decimal(28,8)
) 
AS
BEGIN
	INSERT INTO @dokum
	SELECT 
		Hareketler.Owner,
		Hareketler.KKHesapKodu,
		Hareketler.KKHesapAdi,
		SUM(Hareketler.Tutar) AS Tutar
	FROM
		Hareketler  WITH(NOLOCK) 
	WHERE
		Hareketler.GirisTarihi >= @BaslangicTarihi AND 
		Hareketler.GirisTarihi <= @BitisTarihi AND
		(TipInd = 10 OR TipInd = 54)
	GROUP BY
		Hareketler.Owner,
		Hareketler.KKHesapInd,
		Hareketler.KKHesapKodu,
		Hareketler.KKHesapAdi
	ORDER BY
		Hareketler.KKHesapKodu,
		Hareketler.KKHesapAdi
	RETURN
END

GO
CREATE FUNCTION [dbo].[KKGunSonuGirisleriForYeniVardiyaRaporu]
(
	@VardiyaKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	select null as Owner, h.Tutar as HareketTutar, gs.Tutar as GunSonuTutar, gs.Tutar-h.Tutar as Fark,
		h.KKHesapInd, h.KKHesapKodu, h.KKHesapAdi, h.GunSonu
	from
	(
		select sum(Tutar) as Tutar, KKHesapInd, KKHesapKodu, KKHesapAdi,
			dbo.GunSonuListesi(KKHesapInd, @VardiyaKartInds) as GunSonu
		from Hareketler  WITH(NOLOCK) 
		where TipInd=54 and VardiyaKartInd in (SELECT * FROM fnSplit(@VardiyaKartInds,','))
		group by KKHesapInd, KKHesapKodu, KKHesapAdi
	) as h left join
	(
		select * from Hareketler  WITH(NOLOCK) where TipInd=60 and VardiyaKartInd in (SELECT * FROM fnSplit(@VardiyaKartInds,','))
	) as gs on (h.KKHesapInd=gs.KKHesapInd)
)

GO
CREATE FUNCTION [dbo].[KKIlkVardiyaKartInd] 
(	
	@Owner int
)
RETURNS 
TABLE 
AS
RETURN 
(
	select Top 1 Ind, Owner
	from Basliklar  WITH(NOLOCK) 
	where TipInd = 109 and Owner = @Owner and VardiyaNo = 1

)


GO
CREATE FUNCTION [dbo].[KKTahsilatYapilacakListesi] 
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@KKHesapInds nvarchar(max)
)
RETURNS 
@Dokum TABLE 
(
	   Owner int,
	   GirisTarihi DateTime,
	   Komisyon decimal(28,13),
	   Tutar decimal(28,13),
	   KomisyonTutar decimal(28,13),
	   KomisyonOran decimal(28,13),
	   NetTutar decimal(28,13),
	   SubeAdi nvarchar(100)
)
AS
BEGIN
	INSERT INTO @Dokum
	SELECT 	
		H.Owner AS Owner,
		H.VadeTarihi AS GirisTarihi,
		Hsp.BankaKomisyon AS Komisyon,
		SUM(H.Tutar) AS Tutar,
		CASE WHEN Hsp.BankaKomisyon > 0 THEN
		(SUM(H.Tutar)*Hsp.BankaKomisyon)/100
		ELSE 0 END AS KomisyonTutar,
		(SUM(H.Tutar)*Hsp.BankaKomisyon)/SUM(H.Tutar) AS KomisyonOran,
		CASE WHEN Hsp.BankaKomisyon > 0 THEN
		SUM(H.Tutar)-((SUM(H.Tutar)*Hsp.BankaKomisyon)/100)
		ELSE SUM(H.Tutar) END AS NetTutar,
		CASE WHEN H.Owner IS NULL THEN 'Merkez' ELSE
		S.SubeAdi END AS SubeAdi
		FROM Hareketler AS H  WITH(NOLOCK) 
		LEFT JOIN Basliklar AS B  WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind
		LEFT JOIN Subeler AS S  WITH(NOLOCK) ON H.Owner=S.Ind
		LEFT OUTER JOIN Hesaplar AS Hsp  WITH(NOLOCK) ON Hsp.Ind = H.KKHesapInd
		WHERE H.VadeTarihi >= @BaslangicTarihi AND H.VadeTarihi < @BitisTarihi
		AND H.TipInd = 10 AND (H.DurumInd = 4 OR H.DurumInd IS NULL)
		AND H.KKHesapInd IN (SELECT Ind FROM Hesaplar WHERE TipInd = 203 AND BankaInd = @KKHesapInds)
		GROUP BY H.Owner, Hsp.BankaKomisyon, S.SubeAdi, H.VadeTarihi

 RETURN
END





GO
CREATE FUNCTION [dbo].[KKTahsilatYapilanListesi] 
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@KKHesapInds int
)
RETURNS 
@Dokum TABLE 
(
	   Owner int,
	   GirisTarihi DateTime,
	   Tutar decimal(28,13),
	   KomisyonTutar decimal(28,13),
	   KomisyonOran decimal(28,13),
	   NetTutar decimal(28,13),
	   SubeAdi nvarchar(100)
)
AS
BEGIN
	INSERT INTO @Dokum
	SELECT 	
		B.Owner AS Owner,
		B.Tarih AS GirisTarihi,
		SUM(B.TahsilatTutari) AS Tutar,
		--CASE WHEN B.Iskonto > 0 THEN
		--(SUM(TahsilatTutari)*B.Iskonto)/100
		--ELSE 0 END AS KomisyonTutar,
		(SUM(TahsilatTutari)*B.Iskonto)/100 AS KomisyonTutar,
		(SUM(TahsilatTutari)*B.Iskonto)/SUM(B.TahsilatTutari) AS KomisyonOran,
		--CASE WHEN B.Iskonto > 0 THEN
		--SUM(B.TahsilatTutari)-((SUM(TahsilatTutari)*B.Iskonto)/100)
		--ELSE SUM(B.TahsilatTutari) END AS NetTutar,
		SUM(B.TahsilatTutari)-((SUM(TahsilatTutari)*B.Iskonto)/100) AS NetTutar,
		CASE WHEN B.Owner IS NULL THEN 'Merkez' ELSE
		S.SubeAdi END AS SubeAdi			
		FROM Basliklar AS B WITH(NOLOCK)
		LEFT JOIN Subeler AS S WITH(NOLOCK) ON B.Owner=S.Ind
		WHERE B.Tarih >= @BaslangicTarihi AND B.Tarih < @BitisTarihi
		AND B.TipInd = 105 AND B.HesapInd IN
		(SELECT Ind FROM Hesaplar WITH(NOLOCK) WHERE TipInd = 203 AND BankaInd IN (@KKHesapInds))
		GROUP BY B.Owner, B.Tarih, S.SubeAdi, B.Iskonto
 RETURN
END





GO
CREATE FUNCTION [dbo].[KKToplamlari](
	@tarih DATETIME
)

RETURNS @tblKKToplamlari TABLE
(HesapKodu VARCHAR(50), HesapAdi VARCHAR(100),BankaAdi VARCHAR(50),Bakiye DECIMAL(28,8),Owner INT,Aciklama VARCHAR(100))
AS
BEGIN 

DECLARE @kkInd DECIMAL,@hesapKodu VARCHAR(50), @hesapAdi VARCHAR(100),@bankaAdi VARCHAR(50)

--	DECLARE KKCursor CURSOR FOR 
--	SELECT KKHesapInd,KKHesapKodu,KKHesapAdi,BankaHesapAdi FROM PBKrediKartlari 
--
--
--	OPEN KKCursor;
--	FETCH NEXT FROM KKCursor
--	INTO @kkInd,@hesapKodu,@hesapAdi,@bankaAdi
--	WHILE @@FETCH_STATUS = 0
--	BEGIN
--		INSERT INTO @tblKKToplamlari
--		SELECT @hesapKodu HesapKodu,@hesapAdi hesapAdi,@bankaAdi BankaAdi,
--			SUM(Yatirilan-Tahsilat) AS Bakiye, NULL Owner,'' Aciklama
--			FROM KartHareketDevir(@kkInd,@tarih)
--		
--		FETCH NEXT FROM KKCursor
--		INTO @kkInd,@hesapKodu,@hesapAdi,@bankaAdi
--	END
--
--	CLOSE KKCursor
--	DEALLOCATE KKCursor

		INSERT INTO @tblKKToplamlari
		SELECT '','','',SUM(Bakiye), NULL Owner,'' Aciklama
			FROM KKartIcmalHareket('1/1/1900',@tarih)


	RETURN
END
GO
CREATE FUNCTION [dbo].[KKTumVardiyaTutarlari] 
(	
	@Owner int
)
RETURNS 
TABLE 
AS
RETURN 
(
	select Ind, KKHesapInd, KKHesapKodu, KKHesapAdi,Tutar, Owner, GunSonu
	from hareketler WITH(NOLOCK)
	where tipInd = 54 and vardiyaKartInd in 
		(
			select Ind from basliklar where tipInd = 109 and owner = @Owner
		)

)




GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[KKVardiyaTutarlari] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT 
		Hareketler.Ind,
		Hareketler.Owner,
		Hareketler.KKHesapInd,
		Hareketler.KKHesapKodu,
		Hareketler.KKHesapAdi,
		Hareketler.GirisTarihi,
		Hareketler.Tutar,
		Hareketler.GunSonu
	FROM Hareketler WITH(NOLOCK)
	WHERE Hareketler.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,',')) AND TipInd IN (10,54)
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[KKVardiyaTutarlariToplam] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT 
		Hareketler.Owner,
		Hareketler.KKHesapInd,
		Hareketler.KKHesapKodu,
		Hareketler.KKHesapAdi,
		SUM(Hareketler.Tutar) AS Tutar
	FROM Hareketler WITH(NOLOCK)
	WHERE Hareketler.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,',')) AND TipInd IN (10,54)
	GROUP BY Hareketler.Owner,Hareketler.KKHesapInd,Hareketler.KKHesapKodu,Hareketler.KKHesapAdi
)
GO

--stoğun her şubedeki (tarih aralığındaki) toplam satışını table olarak döndürür. (ürün ve şubeden oluşan liste)
CREATE FUNCTION [dbo].[KonsolideAlimSatimDetay]
(	
	@baslangic datetime,
	@bitis datetime
)
RETURNS @Dokum TABLE
(
	Owner int,
	SubeAdi nvarchar(40),
	StokInd int,
	StokAdi nvarchar(100),
	AlisMiktar decimal(28,13),
	AlisTutar decimal(28,13),
	SatisMiktar decimal(28,13),
	SatisTutar decimal(28,13)
)
AS
BEGIN
	with 
	Konsolide(SubeId, SubeAdi, StokInd, StokAdi, KDVOrani, AlisMiktar, AlisTutar, SatisMiktar, SatisTutar)
	as(
		SELECT  s.Ind as SubeId,
				s.SubeAdi, 
				k.StokInd,
				k.StokAdi, 
				k.KDVOrani,
				SUM(case when k.Tip='Alis' then k.AlisMiktar else 0 end) as AlisMiktar, 
				SUM(case when k.Tip='Alis' then k.AlisTutar else 0 end) as AlisTutar,
				SUM(case when k.Tip='Satis' then k.SatisMiktar else 0 end) as SatisMiktar, 
				SUM(case when k.Tip='Satis' then k.SatisTutar else 0 end) as SatisTutar
		FROM KonsolideAlimSatim k WITH(NOLOCK)
			 left join Subeler s on s.Ind=k.Owner
		where Tarih between @baslangic and @bitis
			  and k.Tip!='Diger'
		group by k.StokInd, k.StokAdi, s.SubeAdi, s.Ind, k.KDVOrani

	),
	AlisIskonto(StokInd, SubeId, AlisIskonto)
	as
	(
		select StokInd, 
			   Owner as SubeId,
			   SUM(ISNULL(IlkIskonto,0)+(ISNULL(SonIskonto,0)/(case when ToplamTutar>0 then ToplamTutar else 1 end))*ISNULL(Tutar,0)) as AlisIskonto 
		from KarZararIskontoAlisHesapButun(@baslangic,@bitis)
		group by StokInd, Owner
	),
	SatisIskonto(StokInd, SubeId, SatisIskonto)
	as
	(
		select StokInd, 
			   Owner as SubeId,
			   SUM(ISNULL(IlkIskonto,0)+(ISNULL(SonIskonto,0)/(case when ToplamTutar>0 then ToplamTutar else 1 end))*ISNULL(Tutar,0)) as SatisIskonto 
		from IskontoSatisMuhteviyatli(@baslangic,@bitis)
		group by StokInd, Owner
	)

	insert into @Dokum 
	select 
		   k.SubeId as Owner,
		   k.SubeAdi,
		   k.StokInd,
		   k.StokAdi,
		   k.AlisMiktar,
		   (ISNULL(k.AlisTutar,0)-ISNULL(a.AlisIskonto,0))*((ISNULL(k.KDVOrani,0)+100)/100) as AlisTutar,
		   k.SatisMiktar,
		   (ISNULL(k.SatisTutar,0)-ISNULL(s.SatisIskonto,0))*((ISNULL(k.KDVOrani,0)+100)/100) as SatisTutar
	from Konsolide k WITH(NOLOCK)
		 Left join AlisIskonto a on a.StokInd=k.StokInd and a.SubeId=k.SubeId
		 left join SatisIskonto s on s.StokInd=k.StokInd and s.SubeId=k.SubeId
	order by k.StokInd, k.StokAdi, k.SubeAdi, k.SubeId asc
return 

end

GO

--şubenin toplam satışlarını getirir.
CREATE FUNCTION [dbo].[KonsolideAlimSatimToplamlarSubeGruplu]
(	
	@baslangic datetime,
	@bitis datetime,
	@aktif int  --pasif stokların görüntülenmemesi seçeneği için eklenmiş bir parametredir. 0 pasif, 1 aktif, -1 hepsini getirir.
)
RETURNS @Dokum TABLE
(
	Owner int,
	SubeAdi varchar(100),
	StokInd int,
	AlisMiktarToplam decimal(28,13),
	AlisTutarToplam decimal(28,13),
	SatisMiktarToplam decimal(28,13),
	SatisTutarToplam decimal(28,13)
)
AS
BEGIN
	with 
	Konsolide(SubeId, SubeAdi, StokInd, StokAdi, KDVOrani, AlisMiktar, AlisTutar, SatisMiktar, SatisTutar)
	as(
		SELECT  s.Ind as SubeId,
				s.SubeAdi, 
				k.StokInd,
				k.StokAdi, 
				k.KDVOrani,
				SUM(case when k.Tip='Alis' then k.AlisMiktar else 0 end) as AlisMiktar, 
				SUM(case when k.Tip='Alis' then k.AlisTutar else 0 end) as AlisTutar,
				SUM(case when k.Tip='Satis' then k.SatisMiktar else 0 end) as SatisMiktar, 
				SUM(case when k.Tip='Satis' then k.SatisTutar else 0 end) as SatisTutar
		FROM KonsolideAlimSatim k WITH(NOLOCK)
			 left join Subeler s WITH(NOLOCK)on s.Ind=k.Owner
			 inner join Stoklar st WITH(NOLOCK)on st.Ind=k.StokInd
		where Tarih between @baslangic and @bitis
			  and k.Tip!='Diger'
			  and (st.Aktif=@aktif or @aktif=-1)
		group by k.StokInd, k.StokAdi, s.SubeAdi, s.Ind, k.KDVOrani

	),
	AlisIskonto(StokInd, SubeId, AlisIskonto)
	as
	(
		select k.StokInd, 
			   k.SubeId,
			   SUM(ISNULL(IlkIskonto,0)+(ISNULL(SonIskonto,0)/(case when ToplamTutar>0 then ToplamTutar else 1 end))*ISNULL(Tutar,0)) as AlisIskonto 
		from Konsolide k WITH(NOLOCK)
			 left join KarZararIskontoAlisHesapButun(@baslangic,@bitis) kz on k.StokInd=kz.StokInd and k.SubeId=kz.Owner
		group by k.StokInd, k.SubeId
	),
	SatisIskonto(StokInd, SubeId, SatisIskonto)
	as
	(
		select k.StokInd, 
			   k.SubeId,
			   SUM(ISNULL(kz.IlkIskonto,0)+(ISNULL(kz.SonIskonto,0)/(case when kz.ToplamTutar>0 then kz.ToplamTutar else 1 end))*ISNULL(kz.Tutar,0)) as SatisIskonto 
		from Konsolide k WITH(NOLOCK)
			 left join IskontoSatisMuhteviyatli(@baslangic,@bitis) kz on k.StokInd=kz.StokInd and k.SubeId=kz.Owner
		group by k.StokInd, k.SubeId
	)

	insert into @Dokum 
	select 
		   k.SubeId,
		   k.SubeAdi,	 
		   0 AS StokInd,
		   SUM(ISNULL(k.AlisMiktar,0)) as AlisMiktarToplam,
		   SUM((ISNULL(k.AlisTutar,0)-ISNULL(a.AlisIskonto,0))*((ISNULL(k.KDVOrani,0)+100)/100)) as AlisTutarToplam,
		   SUM(ISNULL(k.SatisMiktar,0)) as SatisMiktarToplam,
		   SUM((ISNULL(k.SatisTutar,0)-ISNULL(s.SatisIskonto,0))*((ISNULL(k.KDVOrani,0)+100)/100)) as SatisTutarToplam
	from Konsolide k WITH(NOLOCK)
		 Left join AlisIskonto a WITH(NOLOCK)on a.StokInd=k.StokInd and a.SubeId=k.SubeId
		 left join SatisIskonto s WITH(NOLOCK)on s.StokInd=k.StokInd and s.SubeId=k.SubeId
	Group by k.SubeId, k.SubeAdi
	order by k.SubeAdi, k.SubeId asc
return 

end

GO

--stoğun şubelerdeki toplam alış satış bilgisi
CREATE FUNCTION [dbo].[KonsolideAlimSatimToplamlarUrunGruplu]
(	
	@baslangic datetime,
	@bitis datetime
)
RETURNS @Dokum TABLE
(
	Owner int,
	StokInd int,
	AlisMiktarToplam decimal(28,13),
	AlisTutarToplam decimal(28,13),
	SatisMiktarToplam decimal(28,13),
	SatisTutarToplam decimal(28,13)
)
AS
BEGIN
	with 
	Konsolide(SubeId, SubeAdi, StokInd, StokAdi, KDVOrani, AlisMiktar, AlisTutar, SatisMiktar, SatisTutar)
	as(
		SELECT  s.Ind as SubeId,
				s.SubeAdi, 
				k.StokInd,
				k.StokAdi, 
				k.KDVOrani,
				SUM(case when k.Tip='Alis' then k.AlisMiktar else 0 end) as AlisMiktar, 
				SUM(case when k.Tip='Alis' then k.AlisTutar else 0 end) as AlisTutar,
				SUM(case when k.Tip='Satis' then k.SatisMiktar else 0 end) as SatisMiktar, 
				SUM(case when k.Tip='Satis' then k.SatisTutar else 0 end) as SatisTutar
		FROM KonsolideAlimSatim k 
			 left join Subeler s WITH(NOLOCK)on s.Ind=k.Owner
		where Tarih between @baslangic and @bitis
			  and k.Tip!='Diger'
		group by k.StokInd, k.StokAdi, s.SubeAdi, s.Ind, k.KDVOrani

	),
	AlisIskonto(StokInd, SubeId, AlisIskonto)
	as
	(
		select k.StokInd, 
			   k.SubeId,
			   SUM(ISNULL(IlkIskonto,0)+(ISNULL(SonIskonto,0)/(case when ToplamTutar>0 then ToplamTutar else 1 end))*ISNULL(Tutar,0)) as AlisIskonto 
		from Konsolide k WITH(NOLOCK)
			 left join KarZararIskontoAlisHesapButun(@baslangic,@bitis) kz on k.StokInd=kz.StokInd and k.SubeId=kz.Owner
		group by k.StokInd, k.SubeId
	),
	SatisIskonto(StokInd, SubeId, SatisIskonto)
	as
	(
		select k.StokInd, 
			   k.SubeId,
			   SUM(ISNULL(kz.IlkIskonto,0)+(ISNULL(kz.SonIskonto,0)/(case when kz.ToplamTutar>0 then kz.ToplamTutar else 1 end))*ISNULL(kz.Tutar,0)) as SatisIskonto 
		from Konsolide k WITH(NOLOCK)
			 left join IskontoSatisMuhteviyatli(@baslangic,@bitis) kz on k.StokInd=kz.StokInd and k.SubeId=kz.Owner
		group by k.StokInd, k.SubeId
	)

	insert into @Dokum 
	select 
		   0 as Owner,	 
		   k.StokInd,
		   SUM(ISNULL(k.AlisMiktar,0)) as AlisMiktarToplam,
		   SUM((ISNULL(k.AlisTutar,0)-ISNULL(a.AlisIskonto,0))*((ISNULL(k.KDVOrani,0)+100)/100)) as AlisTutarToplam,
		   SUM(ISNULL(k.SatisMiktar,0)) as SatisMiktarToplam,
		   SUM((ISNULL(k.SatisTutar,0)-ISNULL(s.SatisIskonto,0))*((ISNULL(k.KDVOrani,0)+100)/100)) as SatisTutarToplam
	from Konsolide k WITH(NOLOCK)
		 Left join AlisIskonto a on a.StokInd=k.StokInd and a.SubeId=k.SubeId
		 left join SatisIskonto s on s.StokInd=k.StokInd and s.SubeId=k.SubeId
	Group by k.StokInd
	order by k.StokInd asc
return 

end

GO

CREATE FUNCTION KrediKartliSatislarListesi
(	
	@tarih Datetime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		Hareketler.Ind,
		Hareketler.Owner,
		Hareketler.KKHesapInd,
		Hareketler.KKHesapKodu,
		Hareketler.KKHesapAdi,
		Hareketler.GirisTarihi,
		Hareketler.Tutar,
		Hareketler.GunSonu
		, Hareketler.VardiyaKartInd
	FROM Hareketler WITH(NOLOCK)
	WHERE
		(TipInd = 10 OR TipInd = 54 OR TipInd = 532 OR TipInd = 533)
		and VardiyaKartInd in (select Ind from Basliklar where TipInd=108 and Tarih=@tarih)
)
GO

GO
CREATE FUNCTION [dbo].[KrediliBankaHesabiRaporu]
(	
	@tarih Datetime
)
RETURNS TABLE
AS

RETURN
(
	WITH 
	CiroToplamBilgisi(CiroToplami, BankaHesapInd) 
	AS 
	(
		SELECT SUM(Tutar) AS CiroToplami, CiroBankaInd AS BankaHesapInd
		FROM dbo.Hareketler WITH(NOLOCK)
		WHERE (TipInd = 11) AND (DurumInd = 7) AND Senet = 0
		     AND (GirisTarihi <= @tarih)
		
		GROUP BY CiroBankaInd
	), 
	
	BakiyeBilgisi(BankaHesapInd, Bakiye) 
	AS
	(
		SELECT BankaHesapInd, SUM(Yatirilan - Cekilen) AS Bakiye
		FROM dbo.BankaHesapHareketleri
		WHERE (GirisTarihi <= @tarih)
		GROUP BY BankaHesapInd
	)
	
	SELECT  h.Owner
	      , h.Ind as BankaHesapInd
	      , h.HesapAdi AS BankaAdi
	      , hd.KefaletLimiti
	      , hd.CekLimiti
	      , hd.KefaletLimiti + hd.CekLimiti AS ToplamLimit
	      , ISNULL(ct.CiroToplami,0) AS CekDepo
	      , hd.CekCiroMarjOrani
	      , hd.KefaletLimiti + ((CASE WHEN ISNULL(ct.CiroToplami,0) > ISNULL(hd.CekLimiti,0) THEN ISNULL(hd.CekLimiti,0) ELSE ISNULL(ct.CiroToplami,0) END / hd.CekCiroMarjOrani))- ISNULL(hd.DigerKrediKullanimDegeri,0)- (-1 * ISNULL(bb.Bakiye,0)) AS KullanilabilirKrediDegeri
	      , (-1 * ISNULL(bb.Bakiye,0)) AS KalanNakitKrediDegeri
	      , hd.DigerKrediKullanimDegeri AS KalanDigerDeger
		  , ISNULL(hd.CekLimiti,0) -ISNULL(ct.CiroToplami,0) AS BOSLUK
		  
	From Hesaplar as h WITH(NOLOCK) inner join HesapDetaylari hd on h.Ind=hd.BankaInd AND hd.TipInd = 520
						left join CiroToplamBilgisi ct WITH(NOLOCK) on ct.BankaHesapInd=h.Ind
						left join BakiyeBilgisi bb WITH(NOLOCK) on bb.BankaHesapInd=h.Ind

)


GO
CREATE FUNCTION [dbo].[LO_ZIrsaliyeGunlukOzet] 
(	
	@TarihBas datetime,
	@TarihSon datetime	
)
RETURNS 
@Dokum TABLE 
(
	Tarih datetime,
	StokInd Int,
	StokKodu VARCHAR(max),
	StokAdi VARCHAR(50),
	Tutar DECIMAL(18,2),
	Owner Int
)
AS
BEGIN
		INSERT INTO @Dokum
		select B.Tarih, H.StokInd, H.StokKodu, H.StokAdi, SUM(H.Tutar), 0 as Owner
FROM Basliklar B WITH(NOLOCK)INNER JOIN Hareketler H ON H.BaslikInd = B.Ind 
INNER JOIN Basliklar V WITH(NOLOCK) ON B.VardiyaKartInd = V.Ind
INNER JOIN Hesaplar HS WITH(NOLOCK) ON B.HesapInd = HS.Ind
INNER JOIN Subeler AS S WITH(NOLOCK) ON V.Owner = S.Ind
WHERE (HS.DekontCarisi IS NULL OR HS.DekontCarisi = 0) 
AND B.TipInd = 111
AND V.TipInd = 108
AND V.Tarih BETWEEN @TarihBas AND @TarihSon
AND H.StokInd IN (324,334,333,330,5129,15346,325)
GROUP BY B.Tarih, H.StokInd, H.StokKodu, H.StokAdi


	RETURN
END

GO
CREATE FUNCTION [dbo].[LO_ZRaporuGunlukOzet] 
(	
	@TarihBas datetime,
	@TarihSon datetime	
)
RETURNS 
@Dokum TABLE 
(
	Tarih datetime,
	StokInd Int,
	StokKodu VARCHAR(max),
	StokAdi VARCHAR(50),
	Tutar DECIMAL(18,2),
	Owner Int
)
AS
BEGIN
		INSERT INTO @Dokum
		select ZFisTarihi, StokInd, StokKodu, StokAdi, SUM(Tutar), 0 as Owner
FROM LO_ZRaporuBilgileri WITH(NOLOCK)
WHERE 
ZFisTarihi BETWEEN @TarihBas AND @TarihSon
GROUP BY ZFisTarihi, StokInd, StokKodu, StokAdi



	RETURN
END
GO
CREATE FUNCTION [dbo].[MaasDagitimi]
(	
	@Tarih datetime
)
RETURNS @dokum TABLE 
(
	Ind int,
	Owner int,
	HesapKodu nvarchar(30),
	HesapAdi  nvarchar(40),
	AcikFazla decimal(28,8),	
	NetMaas decimal(28,8),
	Prim decimal(28,8),
	Agi decimal(28,13),
	GirisTarihi datetime
)
AS
BEGIN
	DECLARE @dokum2 table
	(
		Ind int,
		Odenen decimal(28,8),
		Cekilen decimal(28,8)
	)

	INSERT INTO @dokum2
	SELECT Hareketler.PersonelHesapInd,
		CASE WHEN Hareketler.TipInd IN (18,22,55)
		THEN Hareketler.Tutar
		END AS Odenen, 
		CASE WHEN Hareketler.TipInd IN (20,56) THEN
		Hareketler.Tutar
		WHEN Hareketler.TipInd IN (31) THEN 
		-(Hareketler.Tutar-(ISNULL(Hareketler.Hakedilen,0)+ISNULL(Hareketler.Prim, 0)+ISNULL(Hareketler.Agi, 0)))
		END AS Cekilen
	FROM Hareketler WITH(NOLOCK)
	LEFT JOIN Subeler WITH(NOLOCK) ON Hareketler.Owner=Subeler.Ind
	LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = Hareketler.VardiyaKartInd
	WHERE 
		(Hareketler.TipInd in (18,20,22,31,55,56) 
		AND Hareketler.GirisTarihi <= @Tarih)

	DECLARE @dokum3 table
	(
	Ind int,
	AcikFazla decimal(28,8)
	)
	INSERT INTO @dokum3 
	SELECT
		Hesaplar.Ind,
		(
			CASE WHEN sum(Odenen) is NULL THEN
			0
			ELSE sum(Odenen)
			END 
			-
			
			CASE WHEN sum(Cekilen) IS NULL THEN
			0
			ELSE Sum(Cekilen)
			END 
		) AS AcikFazla
	FROM @dokum2 AS dokum2
	INNER JOIN Hesaplar WITH(NOLOCK)ON Hesaplar.Ind = dokum2.Ind
	GROUP BY Hesaplar.Ind

	INSERT INTO @dokum
	SELECT Hesaplar.Ind,Hesaplar.Owner,HesapKodu,HesapAdi,
		CASE WHEN dokum3.AcikFazla IS NULL
			THEN 0
		ELSE
			dokum3.AcikFazla
		END AS AcikFazla,
		NetMaas,
		Prim,
		Agi,
		GirisTarihi
	FROM Hesaplar WITH(NOLOCK)
	LEFT JOIN @dokum3 AS dokum3 ON Hesaplar.Ind =dokum3.Ind
	WHERE TipInd = 204 AND (CikisTarihi > CAST(FLOOR(CAST(GETDATE() AS float)) AS datetime) OR CikisTarihi IS NULL)

RETURN 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MaasDagitimListesiAFHesaplama]
(	
	@Tarih datetime,
	@BaslikInd int
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT 
			(
				SUM(CASE WHEN Hareketler.TipInd IN (18,22,55)
				THEN Tutar
				ELSE 0
				END) 
				-
				SUM(CASE WHEN Hareketler.TipInd IN (20,56) 
				THEN
					Tutar
				WHEN Hareketler.TipInd IN (31) 
				THEN
					-(Tutar-(Hareketler.Hakedilen+Prim))
				ELSE 0
				END
				)
			) AS AcikFazla
	FROM Hareketler WITH(NOLOCK)
	LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = Hareketler.VardiyaKartInd
	WHERE (PersonelHesapInd IN
			(
				SELECT
					 PersonelHesapInd
				FROM Hareketler WITH(NOLOCK)
				LEFT JOIN Basliklar WITH(NOLOCK) ON Basliklar.Ind = Hareketler.BaslikInd
				WHERE BaslikInd = @BaslikInd 
			)
			AND ((Hareketler.GirisTarihi<=@Tarih
			AND BaslikInd != @BaslikInd)OR (b.Tarih<=@Tarih AND b.Ind !=@BaslikInd)))
)
GO

CREATE FUNCTION [dbo].[MaliHafizaBilgileriGetir]
(
	@OkcNo nvarchar(50),
	@ZBaslangicNo int,
	@ZBitisNo int,
	@ZBaslangicTarih datetime,
	@ZBitisTarih datetime

)

RETURNS TABLE 
AS
RETURN 
(
SELECT
	0 AS Owner,
	StokInd,
	StokKodu,
	StokAdi,
	SUM(Miktar) AS ToplamMiktar,
	SUM(Tutar) AS ToplamTutar,
	SUM(Tutar -(Tutar / CONVERT(DECIMAL(18,2),'1.18'))) AS KdvTutari
	
FROM LO_ZRaporuBilgileri WITH(NOLOCK)
WHERE 
ZFisNo >= @ZBaslangicNo AND 
ZFisNo <= @ZBitisNo AND
OkcNo = @OkcNo
AND ZFisTarihi BETWEEN @ZBaslangicTarih AND @ZBitisTarih
GROUP BY
	StokInd,
	StokKodu,
	StokAdi
)


GO
CREATE FUNCTION [dbo].[MarketMaliHafizaBilgileriGetir]
(
	@OkcNo nvarchar(50),
	@ZBaslangicNo int,
	@ZBitisNo int,
	@ZBaslangicTarih datetime,
	@ZBitisTarih datetime

)

RETURNS TABLE 
AS
RETURN 
(
SELECT
	0 AS Owner,
	StokInd,
	StokKodu,
	StokAdi,
	SUM(Miktar) AS ToplamMiktar,
	SUM(Tutar) AS ToplamTutar,
	SUM(Tutar - (Tutar / CONVERT(DECIMAL(18,2),'1' + '.' + REPLACE(STR(KdvOrani, 2), SPACE(1), '0') ))) AS KdvTutari
	
FROM Muh_ZRaporuMarket WITH(NOLOCK)
WHERE 
ZFisNo >= @ZBaslangicNo AND 
ZFisNo <= @ZBitisNo AND
OkcNo = @OkcNo
--AND ZFisTarihi BETWEEN @ZBaslangicTarih AND @ZBitisTarih
GROUP BY
	StokInd,
	StokKodu,
	StokAdi
)





GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[MarketNakitTahsilatListesi] 
(
	@baslikInds nvarchar(MAX)
)
RETURNS 
TABLE 
AS
RETURN 
(
	WITH Dokum(Owner,ParaBirimi,Kur,Tutar)
	AS
	(
		SELECT
			h.Owner,
			h.Parabirimi,
			h.Kur,
			SUM(h.Tutar * h.Kur) as Tutar
		FROM Hareketler as h WITH(NOLOCK)
		WHERE 
			h.TipInd = 38 AND h.BaslikInd IN (SELECT * FROM fnSplit(@baslikInds, ','))
			AND h.VardiyaKartInd = 0
		GROUP BY
			h.Owner,
			h.ParaBirimi,
			h.Kur
	)

	SELECT * 
	FROM Dokum WITH(NOLOCK)
	WHERE 0 = 0
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanAkaryakitMiktariDevirButun] 
(	
	@DepoInds nvarchar(max),
	@tarih datetime
)
RETURNS 
@Dokum TABLE 
(
	Owner int,
	StokInd int,
	StokKodu nvarchar(30),
	StokAdi nvarchar(40),
	Devir decimal(28,8),
	SatisFiyati decimal(28,8)
)
AS
BEGIN
		INSERT INTO @Dokum
		SELECT
			MizanStokHareketDevirButun.Owner,
			MizanStokHareketDevirButun.StokInd,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			SUM(MizanStokHareketDevirButun.Giren-MizanStokHareketDevirButun.Cikan) as Devir,
			StokDetaylari.Tutar as SatisFiyati
		FROM
		MizanStokHareketDevirButun(@DepoInds,@tarih)
		LEFT JOIN Stoklar WITH(NOLOCK) ON MizanStokHareketDevirButun.StokInd = Stoklar.Ind
		LEFT JOIN StokDetaylari WITH(NOLOCK) ON Stoklar.Ind = StokDetaylari.StokInd AND StokDetaylari.IsAnaFiyat ='True'
		GROUP BY
			MizanStokHareketDevirButun.Owner,
			MizanStokHareketDevirButun.StokInd,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			StokDetaylari.Tutar


		DECLARE @x int
		SELECT @x=COUNT(*) FROM
		MizanStokHareketDevirButun(@DepoInds,@tarih)
		LEFT JOIN Stoklar WITH(NOLOCK) ON MizanStokHareketDevirButun.StokInd = Stoklar.Ind
		LEFT JOIN StokDetaylari WITH(NOLOCK) ON Stoklar.Ind = StokDetaylari.StokInd AND StokDetaylari.IsAnaFiyat ='True'

		IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
			Stoklar.Owner,
			Stoklar.Ind as StokInd,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			0 as Devir,
			StokDetaylari.Tutar as SatisFiyati
		FROM Stoklar WITH(NOLOCK)
		LEFT JOIN StokDetaylari WITH(NOLOCK) ON Stoklar.Ind = StokDetaylari.StokInd AND StokDetaylari.IsAnaFiyat ='True'
		

	RETURN
END


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanAlinanCekTutar] 
(	
	@Tarih DateTime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
	Owner,
	CASE WHEN ((SELECT COUNT(*) FROM Hareketler as h3 WITH(NOLOCK) WHERE h3.TipInd = 11 AND h3.DurumInd IN (4,7)) > 0)
	THEN SUM(Tutar)
	ELSE 0 END as Tutar
	FROM
	Hareketler WITH(NOLOCK)
	WHERE TipInd=11 AND Senet = 0 AND DurumInd IN (4,7) AND GirisTarihi<=@Tarih
	GROUP BY
		Owner
)


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanAlinanCekTutarDetails] 
(	
	@HesapInd int,
	@Tarih DateTime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
	null as Owner,
	CASE WHEN ((SELECT COUNT(*) FROM Hareketler as h3 WITH(NOLOCK) WHERE h3.TipInd = 11 AND h3.DurumInd IN (4,7)) > 0)
	THEN Tutar
	ELSE 0 END as Tutar,
    CariHesapKodu,
	CariHesapAdi,
	CariHesapInd,
	GirisTarihi
	FROM
	Hareketler WITH(NOLOCK)
	WHERE TipInd=11 AND DurumInd IN (4,7) AND GirisTarihi<=@Tarih AND CariHesapInd = @HesapInd
)


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanAlinanCekTutarDokumu] 
(	
	@Tarih DateTime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		[Owner],
		CASE WHEN ((SELECT COUNT(*) FROM Hareketler as h3 WHERE h3.TipInd = 11 AND h3.DurumInd IN (4,7)) > 0)
		THEN SUM(Tutar)
		ELSE 0 END as Tutar,
		CariHesapKodu,
		CariHesapAdi,
		CariHesapInd
	FROM
		Hareketler WITH(NOLOCK)
	WHERE 
		TipInd=11 AND DurumInd IN (4,7) AND Senet = 0 AND GirisTarihi<=@Tarih
	GROUP BY 
		[Owner],
		Hareketler.CariHesapKodu, 
		Hareketler.CariHesapInd, 
		Hareketler.CariHesapAdi
)




GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanAlinanSenetTutar] 
(	
	@Tarih DateTime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
	Owner,
	CASE WHEN ((SELECT COUNT(*) FROM Hareketler as h3 WITH(NOLOCK) WHERE h3.TipInd = 11 AND h3.DurumInd IN (4,7)) > 0)
	THEN SUM(Tutar)
	ELSE 0 END as Tutar
	FROM
	Hareketler WITH(NOLOCK)
	WHERE TipInd=11 AND Senet = 1 AND DurumInd IN (4,7) AND GirisTarihi<=@Tarih
	GROUP BY
		Owner
)


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanAlinanSenetTutarDokumu] 
(	
	@Tarih DateTime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		[Owner],
		CASE WHEN ((SELECT COUNT(*) FROM Hareketler as h3 WITH(NOLOCK) WHERE h3.TipInd = 11 AND h3.DurumInd IN (4,7)) > 0)
		THEN SUM(Tutar)
		ELSE 0 END as Tutar,
		CariHesapKodu,
		CariHesapAdi,
		CariHesapInd
	FROM
		Hareketler
	WHERE 
		TipInd=11 AND DurumInd IN (4,7) AND Senet = 1 AND GirisTarihi<=@Tarih
	GROUP BY 
		[Owner],
		Hareketler.CariHesapKodu, 
		Hareketler.CariHesapInd, 
		Hareketler.CariHesapAdi
)




GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [MizanBankaAyrinti] 
(	
	@HesapInd int,	
	@HesapKodu nvarchar(250),
	@Tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	select 
		null as Owner, 
		hsp.HesapAdi as HesapAdi, 
		BankaHesapInd as HesapInd, 
		BankaHesapKodu as HesapKodu,
		bhh.TipInd as TipInd,
		bhh.GirisTarihi as Tarih,
		bhh.Aciklama as Aciklama,
		Yatirilan as Yatirilan,
		Cekilen as Cekilen
	from 
		BankaHesapHareketleri as bhh WITH(NOLOCK) LEFT JOIN Hesaplar hsp WITH(NOLOCK) ON hsp.Ind=bhh.BankaHesapInd
	where 
		(bhh.GirisTarihi between '1958-11-01' AND @Tarih )  AND 
		bhh.BankaHesapInd = @HesapInd AND 
		bhh.BankaHesapKodu=@HesapKodu 
)
GO




GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanBankaBorcAlacak] 
(	
	@Tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Devir(HesapInd, Owner, Yatirilan, Cekilen)
	AS
	(	
		SELECT 
			(CASE 
--            WHEN (h.TipInd = 10)
--			THEN Hesaplar.Ind
			WHEN (h.TipInd = 11)
			THEN h.CiroBankaInd
			ELSE
			h.BankaHesapInd END) as HesapInd,
			h.Owner,
			SUM(CASE
					WHEN
						h.TipInd IN (12, 17, 27)
						OR (h.TipInd = 11 AND h.DurumInd = 8)
						OR (h.TipInd = 21 AND h.HedefBankaInd IS NOT NULL)
--						OR (h.TipInd = 10) 
					THEN h.Tutar
					ELSE 0
					END) as Yatirilan,
			SUM(CASE
					WHEN
						h.TipInd IN (14,15,19,22,28)
						OR (h.TipInd = 21 AND h.BankaHesapInd IS NOT NULL)
						OR (h.TipInd = 31) 
					THEN h.Tutar 
--					WHEN (h.TipInd = 10)
--					THEN h.Tutar*Hesaplar.BankaKomisyon/100
					ELSE 0
					END) as Cekilen	
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.BaslikInd
--		LEFT JOIN Hesaplar ON h.KKHesapInd  = Hesaplar.Ind
		WHERE 
		((
			h.BankaHesapInd IS NOT NULL
			OR h.HedefBankaInd IS NOT NULL
			OR h.CiroBankaInd IS NOT NULL
		)
		AND
		(
			(h.TipInd IN (12,15,17,19,21,22,27,28) AND h.GirisTarihi <= @Tarih)
			OR (h.TipInd=11 AND h.DurumInd=8 AND h.IslemTarihi <= @Tarih ) 
			OR (h.TipInd=14 AND h.DurumInd=10 AND h.IslemTarihi <= @Tarih)
		)) 
--       OR (h.TipInd = 10 AND b.Tarih <= @Tarih AND Hesaplar.BankaInd IS NOT NULL)
		GROUP BY h.Owner, h.TipInd, 
--                 Hesaplar.Ind, 
                 h.CiroBankaInd, h.BankaHesapInd
	)

		SELECT
			null as Owner, Devir.HesapInd, SUM(Yatirilan) as Yatirilan, SUM(Cekilen) as Cekilen
			
		FROM Devir WITH(NOLOCK)
		
		GROUP BY  Devir.HesapInd
)





GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanBankaDetails] 
(
	@HesapInd int,	
	@Tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Devir(TipInd, Owner, HesapAdi, HesapInd, Tarih, Yatirilan, Cekilen)
	AS
	(	
		SELECT 
			h.TipInd,
			h.Owner,
			(CASE 
--            WHEN (h.TipInd = 10)
--			THEN Hesaplar.HesapAdi
			WHEN (h.TipInd = 11)
			THEN h.CiroBankaAdi
			ELSE
			h.BankaHesapAdi END) as HesapAdi,
			(CASE 
--            WHEN (h.TipInd = 10)
--			THEN Hesaplar.Ind
			WHEN (h.TipInd = 11)
			THEN h.CiroBankaInd
			ELSE
			h.BankaHesapInd END) as HesapInd,
			(CASE 
--            WHEN (h.TipInd = 10)
--			THEN b.Tarih
			WHEN (h.TipInd = 11 OR h.TipInd = 14)
			THEN h.IslemTarihi
			ELSE h.GirisTarihi END) as Tarih,
			(CASE
					WHEN
						h.TipInd IN (12, 17, 27)
						OR (h.TipInd = 11 AND h.DurumInd = 8)
						OR (h.TipInd = 21 AND h.HedefBankaInd IS NOT NULL)
--						OR (h.TipInd = 10) 
					THEN h.Tutar
					ELSE 0
					END) as Yatirilan,
			(CASE
					WHEN
						h.TipInd IN (14,15,19,22,28)
						OR (h.TipInd = 21 AND h.BankaHesapInd IS NOT NULL)
						OR (h.TipInd = 31) 
					THEN h.Tutar 
--					WHEN (h.TipInd = 10)
--					THEN h.Tutar*Hesaplar.BankaKomisyon/100
					ELSE 0
					END) as Cekilen	
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.BaslikInd
--		LEFT JOIN Hesaplar ON h.KKHesapInd  = Hesaplar.Ind
		WHERE 
		((
			h.BankaHesapInd = @HesapInd
			OR h.HedefBankaInd = @HesapInd
			OR h.CiroBankaInd = @HesapInd
		)
		AND
		(
			(h.TipInd IN (12,15,17,19,21,22,27,28,31) AND h.GirisTarihi <= @Tarih)
			OR (h.TipInd=11 AND h.DurumInd=8 AND h.IslemTarihi <= @Tarih ) 
			OR (h.TipInd=14 AND h.DurumInd=10 AND h.IslemTarihi <= @Tarih)
		)) 
--       OR (h.TipInd = 10 AND b.Tarih <= @Tarih AND Hesaplar.BankaInd = @HesapInd)
	)

		SELECT
			Devir.TipInd, null as Owner, Devir.HesapAdi,Devir.HesapInd, Devir.Tarih, Devir.Yatirilan, Devir.Cekilen,
			'Merkez' as SubeAdi
		FROM Devir WITH(NOLOCK)
)




GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanBankaHareket] 
(	
	@Tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Devir(TipInd, Owner, HesapAdi, HesapInd, Yatirilan, Cekilen)
	AS
	(	
		SELECT 
			23,
			h.Owner,
			(CASE 
--            WHEN (h.TipInd = 10)
--			THEN Hesaplar.HesapAdi
			WHEN (h.TipInd = 11)
			THEN h.CiroBankaAdi
			ELSE
			h.BankaHesapAdi END) as HesapAdi,
			(CASE 
--            WHEN (h.TipInd = 10)
--			THEN Hesaplar.Ind
			WHEN (h.TipInd = 11)
			THEN h.CiroBankaInd
			ELSE
			h.BankaHesapInd END) as HesapInd,
			SUM(CASE
					WHEN
						h.TipInd IN (12, 17, 27)
						OR (h.TipInd = 11 AND h.DurumInd = 8)
						OR (h.TipInd = 21 AND h.HedefBankaInd IS NOT NULL)
--						OR (h.TipInd = 10)
					THEN h.Tutar
					ELSE 0
					END) as Yatirilan,
			SUM(CASE
					WHEN
						h.TipInd IN (14,15,19,22,28)
						OR (h.TipInd = 21 AND h.BankaHesapInd IS NOT NULL)
						OR (h.TipInd = 31) 
					THEN h.Tutar 
--					WHEN (h.TipInd = 10)
--					THEN h.Tutar*Hesaplar.BankaKomisyon/100
					ELSE 0
					END) as Cekilen	
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b ON b.Ind = h.BaslikInd
--		LEFT JOIN Hesaplar ON h.KKHesapInd  = Hesaplar.Ind
		LEFT JOIN Hesaplar AS h2 ON h.HedefBankaInd  = h2.Ind
		WHERE 
		((
			h.BankaHesapInd IS NOT NULL
			OR h.HedefBankaInd IS NOT NULL
			OR h.CiroBankaInd IS NOT NULL
		)
		AND
		(
			(h.TipInd IN (12,15,17,19,21,22,27,28) AND h.GirisTarihi <= @Tarih)
			OR (h.TipInd=11 AND h.DurumInd=8 AND h.IslemTarihi <= @Tarih ) 
			OR (h.TipInd=14 AND h.DurumInd=10 AND h.IslemTarihi <= @Tarih)
		)) 
--       OR (h.TipInd = 10 AND b.Tarih <= @Tarih AND Hesaplar.BankaInd IS NOT NULL)
		GROUP BY h.Owner, 
--                 Hesaplar.HesapAdi, 
                 h.BankaHesapAdi, h.TipInd,
--		         Hesaplar.Ind, 
                 h.BankaHesapInd, h.CiroBankaInd, h.CiroBankaAdi, h2.HesapAdi, h.HedefBankaInd
	)

		SELECT
			TipInd, null as Owner, HesapAdi, HesapInd,
			SUM(Yatirilan) as Yatirilan, SUM(Cekilen) as Cekilen,
			'Merkez' as SubeAdi
		FROM Devir WITH(NOLOCK)
		
		GROUP BY TipInd, HesapAdi, HesapInd
		
)



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[MizanCariBorcAlacak] 
(	
	@Tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH HareketDokumu(Owner,CariHesapInd,Borc,Alacak,Irsaliye,AlinanCekMiktari,VerilenCekMiktari)
	AS
	(
			SELECT
				Hareketler.Owner,
				Hareketler.CariHesapInd,
				SUM(
				CASE WHEN (Hareketler.TipInd IN (13,14,15) OR (Hareketler.TipInd = 11 AND Hareketler.DurumInd = 12))
					THEN Tutar 
					ELSE 0
				END
				) as Borc,
				SUM(
				CASE WHEN (Hareketler.TipInd IN (9,10,11,12) OR (Hareketler.TipInd= 14 AND Hareketler.DurumInd = 12))
					THEN Tutar 
					ELSE 0
				END
				) as Alacak,
				0 as Irsaliye,
				0 as AlinanCekMiktari,
				0 as VerilenCekMiktari
			FROM Hareketler
			WHERE Hareketler.TipInd IN (9,10,11,12,13,14,15)
			AND (Hareketler.GirisTarihi <= @Tarih AND Hareketler.GirisTarihi >= '01.01.1980') AND Hareketler.CariHesapInd IS NOT NULL
			GROUP BY 
				Hareketler.Owner,
				Hareketler.CariHesapInd
			
			UNION ALL

			SELECT
				Basliklar.Owner,
				Basliklar.HesapInd as CariHesapInd,
				SUM(
				CASE WHEN (Hareketler.TipInd IN (6))
					THEN (Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto-(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto)*Basliklar.Iskonto/BaslikMatrahTutari.Matrah)*(1+Hareketler.KDVOrani/100) 
					ELSE 0
				END
				) as Borc,
				SUM(
				CASE WHEN (Hareketler.TipInd IN (3))
					THEN (Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto-(Hareketler.Miktar*Hareketler.Carpan*Hareketler.Fiyat-Hareketler.Iskonto)*Basliklar.Iskonto/BaslikMatrahTutari.Matrah)*(1+Hareketler.KDVOrani/100) 
					ELSE 0
				END
				) as Alacak,
				0 as Irsaliye,
				0 as AlinanCekMiktari,
				0 as VerilenCekMiktari
			FROM Hareketler WITH(NOLOCK)
			LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
			LEFT JOIN BaslikMatrahTutari WITH(NOLOCK) ON BaslikMatrahTutari.BaslikInd=Basliklar.Ind AND (Basliklar.Tarih <= @Tarih AND Basliklar.Tarih >= '01.01.1980')
			WHERE Hareketler.TipInd IN (3,6) AND Basliklar.HesapInd IS NOT NULL
			GROUP BY 
				Basliklar.Owner,
				Basliklar.HesapInd

		
		)

		
	SELECT 
		h.CariHesapInd as HesapInd, h.Owner, Sum(Borc) as Alacak, Sum(Alacak) as Borc
	FROM HareketDokumu as h WITH(NOLOCK) GROUP BY h.CariHesapInd, h.Owner
)


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanCariBorcAlacakDetail] 
(	
	@HesapInd int,
	@Tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH HareketDokumu(Owner,Tarih,CariHesapInd,TipInd,Aciklama,Borc,Alacak,Irsaliye)
	AS
	(
		SELECT 
			Owner,
			c.Tarih,
			CariHesapInd,
			c.TipInd,							
			c.Aciklama,
			Borc,
			Alacak,
			0.00 as Irsaliye
		FROM CariHesapHareketleri as c WITH(NOLOCK)
		WHERE c.Tarih <= @Tarih
		
		UNION ALL

		SELECT 
				Basliklar.Owner,
				Basliklar.Tarih,
				Basliklar.HesapInd as CariHesapInd,
				Basliklar.TipInd,							
				Basliklar.Aciklama,
				0.00 as Borc,
				0.00 as Alacak,
				SUM(
					CASE WHEN Hareketler.TipInd =5
					THEN Miktar*Fiyat
					ELSE 0.00
					END 
				)-SUM(
					CASE WHEN Hareketler.TipInd =2
					THEN Miktar*Fiyat
					ELSE 0.00
					END
				) AS Irsaliye
			FROM Hareketler WITH(NOLOCK)
			LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
			WHERE Hareketler.TipInd IN (2,5) AND Hareketler.DurumInd is NULL
			AND Basliklar.Tarih <= @Tarih
			GROUP BY 
				Basliklar.Owner,
				Basliklar.Tarih,
				Basliklar.HesapInd,
				Basliklar.TipInd,
				Basliklar.Aciklama


			UNION ALL

			SELECT  
				Basliklar.Owner, 
				Basliklar.Tarih,
				Basliklar.HesapInd as CariHesapInd, 	
				Basliklar.TipInd,							
				Basliklar.Aciklama,
				0.00 as Borc,
				0.00 as Alacak,		
				SUM(Hareketler.Miktar * dbo.Hareketler.Fiyat) AS Irsaliye
			FROM	dbo.Basliklar WITH(NOLOCK) INNER JOIN
						dbo.Hareketler WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
			WHERE	(dbo.Basliklar.TipInd = 111) AND (dbo.Hareketler.TipInd = 37) 
					AND (dbo.Basliklar.DurumInd IS NULL) AND (dbo.Basliklar.FisPortfoyu IS NULL OR dbo.Basliklar.FisPortfoyu = 0) AND  (dbo.Hareketler.DurumInd IS NULL)
					AND Basliklar.Tarih <= @Tarih			
			GROUP BY 
				Basliklar.Owner, 
				Basliklar.Tarih,
				Basliklar.HesapInd,
				Basliklar.TipInd,
				Basliklar.Aciklama

	)

	SELECT 
		Hesaplar.Owner, 
		h.CariHesapInd, 
		Hesaplar.HesapAdi as CariHesapAdi, 
		h.TipInd,							
		h.Aciklama,
		h.Tarih,
		SUM(h.Borc) as Alacak, 
		SUM(h.Alacak) as Borc,
		SUM(Borc) - SUM(Alacak) + SUM(Irsaliye) as Toplam
	FROM (SELECT 
		TOP 100 PERCENT
		h.*
	FROM HareketDokumu as h	WITH(NOLOCK) WHERE CariHesapInd IS NOT NULL AND CariHesapInd >0
	ORDER BY h.Tarih) as h 
	LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.CariHesapInd
	where h.CariHesapInd = @HesapInd
	GROUP BY Hesaplar.HesapAdi, Hesaplar.Owner, h.CariHesapInd,h.TipInd,h.Aciklama,h.Tarih

)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanCariBorcAlacakDokumu] 
(	
	@Tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH HareketDokumu(Owner,Tarih,CariHesapInd,Borc,Alacak,Irsaliye)
	AS
	(
		SELECT 
			Owner,
			c.Tarih,
			CariHesapInd,
			Borc,
			Alacak,
			0.00 as Irsaliye
		FROM CariHesapHareketleri as c WITH(NOLOCK)
		WHERE c.Tarih <= @Tarih
		
		UNION ALL

		SELECT 
				Basliklar.Owner,
				Basliklar.Tarih,
				Basliklar.HesapInd as CariHesapInd,
				0.00 as Borc,
				0.00 as Alacak,
				SUM(
					CASE WHEN Hareketler.TipInd =5
					THEN Miktar*Fiyat
					ELSE 0.00
					END 
				)-SUM(
					CASE WHEN Hareketler.TipInd =2
					THEN Miktar*Fiyat
					ELSE 0.00
					END
				) AS Irsaliye
			FROM Hareketler WITH(NOLOCK)
			LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
			WHERE Hareketler.TipInd IN (2,5) AND Hareketler.DurumInd is NULL
			AND Basliklar.Tarih <= @Tarih
			GROUP BY 
				Basliklar.Owner,
				Basliklar.Tarih,
				Basliklar.HesapInd

			UNION ALL

			SELECT  
				Basliklar.Owner, 
				Basliklar.Tarih,
				Basliklar.HesapInd as CariHesapInd, 	
				0.00 as Borc,
				0.00 as Alacak,		
				SUM(Hareketler.Miktar * dbo.Hareketler.Fiyat) AS Irsaliye
			FROM	dbo.Basliklar WITH(NOLOCK) INNER JOIN
						dbo.Hareketler WITH(NOLOCK) ON dbo.Basliklar.Ind = dbo.Hareketler.BaslikInd
			WHERE	(dbo.Basliklar.TipInd = 111) AND (dbo.Hareketler.TipInd = 37) 
					AND (dbo.Basliklar.DurumInd IS NULL) AND (dbo.Basliklar.FisPortfoyu IS NULL OR dbo.Basliklar.FisPortfoyu = 0) AND  (dbo.Hareketler.DurumInd IS NULL)
					AND Basliklar.Tarih <= @Tarih			
			GROUP BY 
				Basliklar.Owner, 
				Basliklar.Tarih,
				Basliklar.HesapInd
	)

	SELECT 
		Hesaplar.Owner, 
		h.CariHesapInd, 
		Hesaplar.HesapAdi as CariHesapAdi, 
		SUM(h.Borc) as Alacak, 
		SUM(h.Alacak) as Borc,
		SUM(Borc) - SUM(Alacak) + SUM(Irsaliye) as Toplam
	FROM (SELECT 
		TOP 100 PERCENT
		h.*
	FROM HareketDokumu as h	WITH(NOLOCK) WHERE CariHesapInd IS NOT NULL AND CariHesapInd >0
	ORDER BY h.Tarih) as h 
	LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.CariHesapInd
	GROUP BY Hesaplar.HesapAdi, Hesaplar.Owner, h.CariHesapInd
)




GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[MizanKasaHareket]  
(
	@ParaBirimi NVARCHAR(5),
	@Tarih DATETIME
)
RETURNS 
TABLE 
AS
RETURN 
(
	WITH Devir(Owner, Giren, Cikan)
	AS
	(	
		SELECT 
		Hareketler.Owner,
		(
			CASE WHEN (Hareketler.TipInd In (7,9,19,20,25)
			OR (Hareketler.TipInd = 11 AND Hareketler.DurumInd = 5)
			OR(Hareketler.TipInd=38 and Basliklar.TipInd=108)
			OR (Hareketler.TipInd=38 and b.TipInd=505))
			THEN Tutar
			END
		) as Giren,
		(
			CASE WHEN (Hareketler.TipInd In (8,13,17,18,26,31))
			THEN Tutar
			END
		) as Cikan		
		FROM Hareketler WITH(NOLOCK)
		LEFT JOIN Basliklar WITH(NOLOCK) ON Basliklar.Ind = Hareketler.VardiyaKartInd
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = Hareketler.BaslikInd
		WHERE 
			(Hareketler.ParaBirimi = @ParaBirimi OR (@ParaBirimi = (SELECT TOP 1 ParaBirimi FROM KurBilgileri WHERE IsAnaParaBirimi=1) AND Hareketler.ParaBirimi IS NULL))  AND
			(((Hareketler.TipInd IN (7,9,19,20,25,8,13,17,18,26,31) AND Hareketler.VardiyaKartInd IS NULL) AND Hareketler.GirisTarihi <= @Tarih)
			OR (Hareketler.TipInd=38 and Basliklar.TipInd=108 AND Basliklar.Tarih <= @Tarih)
			OR (Hareketler.TipInd = 11 AND Hareketler.DurumInd = 5 AND Hareketler.IslemTarihi <= @Tarih )
			OR (Hareketler.TipInd = 38 AND b.TipInd = 505 AND b.Tarih <= @Tarih)) 
	)

	SELECT
		23 AS TipInd,
		Devir.Owner,
		SUM(Devir.Giren) AS Giren, 
		SUM(Devir.Cikan) AS Cikan
	FROM Devir WITH(NOLOCK)
	GROUP BY
		Devir.Owner
)



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanNakit]  
(
	@Tarih DATETIME
)
RETURNS 
TABLE 
AS
RETURN 
(
	WITH Devir(Owner, Giren, Cikan)
	AS
	(	
		SELECT 
		Hareketler.Owner,
		(
			CASE WHEN (Hareketler.TipInd In (7,9,19,20,25)
			OR (Hareketler.TipInd = 11 AND Hareketler.DurumInd = 5)
			OR(Hareketler.TipInd=38 and Basliklar.TipInd=108)
			OR (Hareketler.TipInd=38 and b.TipInd=505))
			THEN Tutar
			END
		) as Giren,
		(
			CASE WHEN (Hareketler.TipInd In (8,13,17,18,26,31))
			THEN Tutar
			END
		) as Cikan		
		FROM Hareketler WITH(NOLOCK)
		LEFT JOIN Basliklar WITH(NOLOCK) ON Basliklar.Ind = Hareketler.VardiyaKartInd
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = Hareketler.BaslikInd
		WHERE 
			((Hareketler.TipInd IN (7,9,19,20,25,8,13,17,18,26,31) AND Hareketler.VardiyaKartInd IS NULL) AND Hareketler.GirisTarihi <= @Tarih
			OR (Hareketler.TipInd=38 and Basliklar.TipInd=108 AND Basliklar.Tarih <= @Tarih)
			OR (Hareketler.TipInd = 11 AND Hareketler.DurumInd = 5 AND Hareketler.IslemTarihi <= @Tarih )
			OR (Hareketler.TipInd = 38 AND b.TipInd = 505 AND b.Tarih <= @Tarih)) 
	)

	SELECT
		23 AS TipInd,
		Devir.Owner,
		SUM(Devir.Giren) AS Giren, 
		SUM(Devir.Cikan) AS Cikan
	FROM Devir WITH(NOLOCK)
	GROUP BY Devir.Owner
)
GO
CREATE FUNCTION [dbo].[MizanPosAlacak] 
(	
	@Tarih DateTime
)
RETURNS TABLE 
AS
RETURN 
(WITH Dokum( Owner, Yatirilan, Tahsilat,HesapKodu, HesapAdi, BankaKomisyon, 
           MusteriKomisyon, Vade,  GirisTarihi)
	AS
	(	
		SELECT
			null as Owner,
		  --H.Owner,		
			CASE WHEN H.TipInd =10
			THEN H.Tutar 
			ELSE 0
			END as Yatirilan,
			0 AS Tahsilat,
			Hesaplar.HesapKodu,		
			Hesaplar.HesapAdi,
			CASE WHEN B.Iskonto IS NOT NULL THEN
			B.Iskonto
			ELSE
			Hesaplar.BankaKomisyon
			END AS BankaKomisyon,
			Hesaplar.MusteriKomisyon,
			Hesaplar.Vade,
			H.GirisTarihi		
		FROM Hareketler AS H WITH(NOLOCK)
			LEFT JOIN Basliklar AS B WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind	
			left join Hesaplar WITH(NOLOCK) on Hesaplar.Ind = H.KKHesapInd
		WHERE 
			H.GirisTarihi <= @Tarih
			AND H.TipInd =10	

    UNION ALL

	SELECT			
		null as Owner,
		--KrediKartiTahsil.Owner,	
		NULL,
		(CASE WHEN (KrediKartiTahsil.Aciklama != 'Komisyon')
			THEN
				CASE WHEN KrediKartiTahsil.Iskonto IS NOT NULL THEN --önceki tahsilatların banka komisyon oranlarını kaybetmemek üzere tahsil esnasındaki komisyon oranı başlığa eklendi
				(Tahsilat-Tahsilat*(KrediKartiTahsil.Iskonto/100)) ELSE
				(Tahsilat-Tahsilat*(Hesaplar.BankaKomisyon/100)) END
			ELSE Tahsilat
			END) as Tahsilat,
			Hesaplar.HesapKodu,		
			Hesaplar.HesapAdi,
			Hesaplar.BankaKomisyon,
			Hesaplar.MusteriKomisyon,
			Hesaplar.Vade,
			Tarih			
		FROM KrediKartiTahsil
			LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = KrediKartiTahsil.KKHesapInd
		WHERE
			Tarih <= @Tarih	
)


		SELECT 
			[Owner],
			HesapKodu,
			HesapAdi, 
			SUM(Yatirilan)- sum(Tahsilat) as Bakiye,
			BankaKomisyon,
			MusteriKomisyon,
			Vade
		FROM 
			Dokum WITH(NOLOCK)
		GROUP BY 
			[Owner],
			HesapKodu, 
			HesapAdi,
			BankaKomisyon,
			MusteriKomisyon,
			Vade


)



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanStokHareketDetail]
(	
	@StokInd int,
	@DepoInds nvarchar(max),
	@tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH HareketDokumu(BaslikInd,StokInd,Tarih,Belge,Owner,TipInd,Giren,Cikan)
	AS
	(
		SELECT 
			g.BaslikInd,
			g.StokInd,
			g.Tarih,
			g.Belge,
			g.Owner,
			g.TipIndAltHareket as TipInd,
			g.Giren,
			g.Cikan
		FROM
			GirisCikisHareketleri as g WITH(NOLOCK)
		WHERE
			g.TipIndAltHareket IN (2, 3, 5, 6, 504)
			AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
			AND g.Tarih <= @tarih
			AND g.StokInd = @StokInd
		UNION ALL
		SELECT 
			g.BaslikInd,
			g.StokInd,
			g.Tarih,
			g.Belge,
			g.Owner,
			g.TipIndAltHareket as TipInd,
			g.Giren,
			g.Cikan
		FROM
			GirisCikisHareketleri as g WITH(NOLOCK)
		WHERE
			g.TipIndAltHareket IN (39, 40, 112)
			AND g.Tarih <= @tarih
			AND g.StokInd = @StokInd
	)

	SELECT 
		h1.*,
		Stoklar.StokAdi,
		(SELECT
			top 1 Fiyat
		FROM
			Hareketler as h WITH(NOLOCK)
            LEFT JOIN Basliklar WITH(NOLOCK) on Basliklar.Ind = h.BaslikInd
		WHERE
			h.StokInd=@StokInd
			AND h.TipInd = 3
			AND h.Owner = h1.Owner
			and Basliklar.Tarih <= @tarih
        order by
			Basliklar.Tarih desc,
			h.Ind desc
		) 
		--(SELECT 
		--Fiyat 
	--FROM Hareketler 
	--WHERE 
		--Ind IN 
		--(				
          --  SELECT top 1 h.Ind
		--	FROM HAREKETLER as h
          --  LEFT JOIN Basliklar on Basliklar.Ind = h.BaslikInd
			--WHERE h.StokInd=@StokInd AND h.TipInd=3 AND h.Owner = h1.Owner and Basliklar.Tarih <= @tarih
            --order by Basliklar.Tarih desc, h.Ind desc 
		--) )
		as Fiyat
	FROM HareketDokumu as h1 WITH(NOLOCK)
	LEFT JOIN Stoklar WITH(NOLOCK) on h1.StokInd = Stoklar.Ind

	--ORDER BY h1.Tarih
)


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanStokHareketDevirButun]
(	
	@DepoInds nvarchar(max),
	@tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH HareketDokumu(BaslikInd,StokInd,Tarih,Belge,Owner,TipInd,Fiyat,Giren,Cikan)
	AS
	(
		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			b.Tarih as Tarih,
			b.BelgeNo as Belge,
			Hesaplar.Owner as Owner,
			h.TipInd as TipInd,
			h.Fiyat as Fiyat,
			SUM(Hareketler.Miktar * Hareketler.Carpan) as Giren,
			0 as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind  = h.BaslikInd
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd 
		WHERE 
		b.Aktif != 0	
		AND h.TipInd = 3
		AND Hareketler.TipInd = 29	
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.Tarih <= @tarih
		AND b.TipInd = 101
 
		GROUP BY 
			b.Ind,
			h.StokInd,
			b.Tarih,
			b.BelgeNo,
			Hesaplar.Owner,
			h.TipInd,
			h.Fiyat

	UNION ALL

		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			b.Tarih as Tarih,
			b.BelgeNo as Belge,
			Hesaplar.Owner as Owner,
			h.TipInd as TipInd,
			h.Fiyat as Fiyat,
			0 as Giren,
			SUM(Hareketler.Miktar * Hareketler.Carpan) as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd 
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.BaslikInd 
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd 
		WHERE 
		b.TipInd = 102
		AND b.Aktif != 0
		AND h.TipInd = 6	 
		AND Hareketler.TipInd = 30 
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.Tarih <= @tarih
		GROUP BY 
			b.Ind,
			h.StokInd,
			b.Tarih,
			b.BelgeNo,
			Hesaplar.Owner,
			h.TipInd,
			h.Fiyat

		UNION ALL

		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			b.Tarih as Tarih,
			b.BelgeNo as Belge,
			Hesaplar.Owner as Owner,
			h.TipInd as TipInd,
			h.Fiyat as Fiyat,
			SUM(Hareketler.Miktar * Hareketler.Carpan) as Giren,
			0 as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 103
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd 
		WHERE h.TipInd = 2 
		AND Hareketler.TipInd = 29
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.Tarih <= @tarih
		AND b.TipInd = 103
		
		GROUP BY 
			b.Ind,
			h.StokInd,
			b.Tarih,
			b.BelgeNo,
			Hesaplar.Owner,
			h.TipInd,
			h.Fiyat

UNION ALL
		
		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			b.Tarih as Tarih,
			b.BelgeNo as Belge,
			Hesaplar.Owner as Owner,
			h.TipInd as TipInd,
			h.Fiyat as Fiyat,
			0 as Giren,
			SUM(Hareketler.Miktar * Hareketler.Carpan) as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 104
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd 
		WHERE h.TipInd = 5 
		AND Hareketler.TipInd = 30
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.Tarih <= @tarih
		AND b.TipInd = 104

		GROUP BY 
			b.Ind,
			h.StokInd,
			b.Tarih,
			b.BelgeNo,
			Hesaplar.Owner,
			h.TipInd,
			h.Fiyat

		UNION ALL

		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			b.Tarih as Tarih,
			b.BelgeNo as Belge,
			h.Owner as Owner,
			h.TipInd as TipInd,
			CASE WHEN(h.SayimMiktari > h.Miktar)
				THEN h.SatisFiyati 
				ELSE h.AlisFiyati
				END as Fiyat,
			CASE WHEN(h.SayimMiktari > h.Miktar)
				THEN (h.SayimMiktari - h.Miktar) 
				ELSE 0
				END as Giren,
			CASE WHEN(h.SayimMiktari < h.Miktar)
				THEN (h.Miktar - h.SayimMiktari) 
				ELSE 0
				END as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 113
		WHERE h.TipInd = 112 
		AND b.Tarih <= @tarih
		AND b.TipInd = 113

		UNION ALL
		
		SELECT 
		h.VardiyaNo as BaslikInd,
		h.StokInd as StokInd,
		h.Tarih as Tarih,
		h.Aciklama as Belge,
		h.Owner as Owner,
		h.TipInd as TipInd,
		h.Fiyat as Fiyat,
		0 as Giren,
		h.Fark as Cikan
		FROM EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
		WHERE h.TipInd = 39
		AND h.Tarih <= @tarih

		UNION ALL

		SELECT
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.BelgeNo as Belge,
		h.Owner as Owner,
		h.TipInd as TipInd,
		h.Fiyat as Fiyat,
		0 as Giren,
		(h.Miktar * h.Carpan) as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd AND b.TipInd = 108
		WHERE h.TipInd = 40		
		AND b.Tarih <= @tarih

		UNION ALL
		
		SELECT
		NULL as BaslikInd,
		h.StokInd as StokInd,
		h.GirisTarihi as Tarih,
		NULL as Belge,
		h.Owner as Owner,
		h.TipInd as TipInd,
		h.Fiyat as Fiyat,
		0 as Giren,
		(h.Miktar * h.Carpan) as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind
		WHERE h.TipInd = 504
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND h.GirisTarihi <= @tarih 
	)

	SELECT 
		h1.*
	FROM HareketDokumu as h1 WITH(NOLOCK)
	--ORDER BY h1.Tarih
)




GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanStokHareketDokumu]
(	
	@DepoInds nvarchar(max),
	@tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH HareketDokumu(BaslikInd,StokInd,Tarih,Belge,Owner,TipInd,Fiyat,Giren,Cikan)
	AS
	(
		SELECT 
			g.BaslikInd,
			g.StokInd,
			g.Tarih,
			g.Belge,
			g.Owner,
			g.TipIndAltHareket as TipInd,
			g.Fiyat,
			SUM(g.Miktar * g.Carpan) as Giren,
			0 as Cikan
		FROM
			GirisCikisHareketleri as g WITH(NOLOCK)
		WHERE 
			g.TipIndAltHareket = 3
		AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND g.Tarih <= @tarih
 
		GROUP BY 
			g.BaslikInd,
			g.StokInd,
			g.Tarih,
			g.Belge,
			g.Owner,
			g.TipIndAltHareket,
			g.Fiyat

	UNION ALL

		SELECT 
			g.BaslikInd,
			g.StokInd,
			g.Tarih,
			g.Belge,
			g.Owner,
			g.TipIndAltHareket AS TipInd,
			g.Fiyat,
			0 as Giren,
			SUM(g.Miktar * g.Carpan) as Cikan
		FROM
			GirisCikisHareketleri as g WITH(NOLOCK)
		WHERE 
			g.TipIndAltHareket = 6	 
			AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
			AND g.Tarih <= @tarih
		GROUP BY 
			g.BaslikInd,
			g.StokInd,
			g.Tarih,
			g.Belge,
			g.Owner,
			g.TipIndAltHareket,
			g.Fiyat

		UNION ALL

		SELECT 
			g.BaslikInd,
			g.StokInd,
			g.Tarih,
			g.Belge,
			g.Owner,
			g.TipIndAltHareket AS TipInd,
			g.Fiyat,
			SUM(g.Miktar * g.Carpan) as Giren,
			0 as Cikan
		FROM
			GirisCikisHareketleri as g WITH(NOLOCK)
		WHERE
			g.TipIndAltHareket = 2 
			AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
			AND g.Tarih <= @tarih
		
		GROUP BY 
			g.BaslikInd,
			g.StokInd,
			g.Tarih,
			g.Belge,
			g.Owner,
			g.TipIndAltHareket,
			g.Fiyat

UNION ALL
		
		SELECT 
			g.BaslikInd,
			g.StokInd,
			g.Tarih,
			g.Belge,
			g.Owner,
			g.TipIndAltHareket AS TipInd,
			g.Fiyat,
			0 as Giren,
			SUM(g.Miktar * g.Carpan) as Cikan
		FROM
			GirisCikisHareketleri as g WITH(NOLOCK)
		WHERE
			g.TipIndAltHareket = 5 
			AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
			AND g.Tarih <= @tarih

		GROUP BY 
			g.BaslikInd,
			g.StokInd,
			g.Tarih,
			g.Belge,
			g.Owner,
			g.TipIndAltHareket,
			g.Fiyat

		UNION ALL

		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			b.Tarih as Tarih,
			b.BelgeNo as Belge,
			h.Owner as Owner,
			h.TipInd as TipInd,
			CASE WHEN(h.SayimMiktari > h.Miktar)
				THEN h.SatisFiyati 
				ELSE h.AlisFiyati
				END as Fiyat,
			CASE WHEN(h.SayimMiktari > h.Miktar)
				THEN (h.SayimMiktari - h.Miktar) 
				ELSE 0
				END as Giren,
			CASE WHEN(h.SayimMiktari < h.Miktar)
				THEN (h.Miktar - h.SayimMiktari) 
				ELSE 0
				END as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 113
		WHERE h.TipInd = 112 
		AND b.Tarih <= @tarih
		AND b.TipInd = 113

		UNION ALL
		
		SELECT 
		h.VardiyaNo as BaslikInd,
		h.StokInd as StokInd,
		h.Tarih as Tarih,
		h.Aciklama as Belge,
		h.Owner as Owner,
		h.TipInd as TipInd,
		h.Fiyat as Fiyat,
		0 as Giren,
		h.Fark as Cikan
		FROM EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
		WHERE h.TipInd = 39
		AND h.Tarih <= @tarih

		UNION ALL

		SELECT
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.BelgeNo as Belge,
		h.Owner as Owner,
		h.TipInd as TipInd,
		h.Fiyat as Fiyat,
		0 as Giren,
		(h.Miktar * h.Carpan) as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd AND b.TipInd = 108
		WHERE h.TipInd = 40		
		AND b.Tarih <= @tarih

		UNION ALL
		
		SELECT
		NULL as BaslikInd,
		h.StokInd as StokInd,
		h.GirisTarihi as Tarih,
		NULL as Belge,
		h.Owner as Owner,
		h.TipInd as TipInd,
		h.Fiyat as Fiyat,
		0 as Giren,
		(h.Miktar * h.Carpan) as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind
		WHERE h.TipInd = 504
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND h.GirisTarihi <= @tarih 
	)

	SELECT 
		h1.Owner, h1.StokInd, Stoklar.StokAdi, SUM(h1.Giren - h1.Cikan) as Miktar, (SELECT 
		Fiyat 
	FROM Hareketler WITH(NOLOCK)
	WHERE 
		Ind IN 
		(				
            SELECT top 1 h.Ind
			FROM HAREKETLER as h WITH(NOLOCK)
            LEFT JOIN Basliklar WITH(NOLOCK) on Basliklar.Ind = h.BaslikInd
			WHERE h.StokInd=h1.StokInd AND h.TipInd=3 AND h.Owner = h1.Owner and Basliklar.Tarih <= @tarih
            order by Basliklar.Tarih desc, h.Ind desc 
		) ) as Fiyat
	FROM HareketDokumu as h1 WITH(NOLOCK)
	LEFT JOIN Stoklar WITH(NOLOCK) on h1.StokInd = Stoklar.Ind
	GROUP BY h1.StokInd, Stoklar.StokAdi, h1.Owner

	--ORDER BY h1.Tarih
)



GO
set ANSI_NULLS ON
go
set QUOTED_IDENTIFIER ON
go



CREATE FUNCTION [dbo].[MizanSubeNakit] 
(	
	@Tarih DateTime,
	@Owner int
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT  
        ISNULL(kh.ParaBirimi, 'TL') AS ParaBirimi, 
		SUM(kh.Giren - kh.Cikan) AS Kalan, 
		ISNULL(k.Kur, 1) AS Kur, 
		SUM((kh.Giren - kh.Cikan) * ISNULL(k.Kur,1)) AS Tutar, 
		s.Ind AS Owner, 
		s.SubeAdi
	FROM KasaHareketleri AS kh WITH(NOLOCK)
	LEFT JOIN Subeler AS s WITH(NOLOCK) ON s.Ind = kh.Owner 
	LEFT JOIN Kur AS k WITH(NOLOCK) ON k.ParaBirimi = kh.ParaBirimi AND k.Tarih = @Tarih -- AND k.Owner=kh.Owner
	WHERE kh.GirisTarihi <= @Tarih AND kh.ParaBirimi IS NOT NULL
	AND (k.[Owner]=@Owner or @Owner = 0)
	GROUP BY s.Ind, s.SubeAdi, ISNULL(kh.ParaBirimi, 'TL'), ISNULL(k.Kur, 1)
)






GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[MizanVerilenCekTutar] 
(	
	@Tarih DateTime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		Owner,
		CASE WHEN ((SELECT COUNT(*) FROM Hareketler as h3 WHERE h3.TipInd = 14 AND h3.DurumInd=4) > 0)
	THEN SUM(Tutar)
	ELSE 0 END as Tutar
	FROM
	Hareketler WITH(NOLOCK)
	WHERE TipInd=14 AND Senet = 0 AND DurumInd=4 AND GirisTarihi<=@Tarih
	GROUP BY
		Owner
)


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanVerilenCekTutarDetails] 
(	
	@HesapInd int,
	@Tarih DateTime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
	null as Owner,
	CASE WHEN ((SELECT COUNT(*) FROM Hareketler as h3 WHERE h3.TipInd = 14 AND h3.DurumInd = 4) > 0)
	THEN Tutar
	ELSE 0 END as Tutar,
CariHesapKodu,
	CariHesapAdi,
	CariHesapInd,
GirisTarihi
	FROM
	Hareketler WITH(NOLOCK)
	WHERE TipInd=14 AND DurumInd = 4 AND GirisTarihi<=@Tarih AND CariHesapInd = @HesapInd
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanVerilenCekTutarDokumu] 
(	
	@Tarih DateTime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		[Owner],
		CASE WHEN ((SELECT COUNT(*) FROM Hareketler as h3 WHERE h3.TipInd = 14 AND h3.DurumInd = 4) > 0)
		THEN SUM(Tutar)
		ELSE 0 END as Tutar,
		CariHesapKodu,
		CariHesapAdi,
		CariHesapInd
	FROM
		Hareketler WITH(NOLOCK)
	WHERE 
		TipInd=14 AND DurumInd = 4 AND Senet = 0 AND GirisTarihi<=@Tarih
	GROUP BY 
		[Owner],
		CariHesapKodu, 
		CariHesapInd, 
		CariHesapAdi
)


GO
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[MizanVerilenSenetTutar] 
(	
	@Tarih DateTime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		Owner,
		CASE WHEN ((SELECT COUNT(*) FROM Hareketler as h3 WHERE h3.TipInd = 14 AND h3.DurumInd=4) > 0)
	THEN SUM(Tutar)
	ELSE 0 END as Tutar
	FROM
	Hareketler WITH(NOLOCK)
	WHERE TipInd=14 AND Senet = 1 AND DurumInd=4 AND GirisTarihi<=@Tarih
	GROUP BY
		Owner
)


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MizanVerilenSenetTutarDokumu] 
(	
	@Tarih DateTime
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		[Owner],
		CASE WHEN ((SELECT COUNT(*) FROM Hareketler as h3 WHERE h3.TipInd = 14 AND h3.DurumInd = 4) > 0)
		THEN SUM(Tutar)
		ELSE 0 END as Tutar,
		CariHesapKodu,
		CariHesapAdi,
		CariHesapInd
	FROM
		Hareketler WITH(NOLOCK)
	WHERE 
		TipInd=14 AND DurumInd = 4 AND Senet = 1 AND GirisTarihi<=@Tarih
	GROUP BY 
		[Owner],
		CariHesapKodu, 
		CariHesapInd, 
		CariHesapAdi
)


GO
GO
CREATE FUNCTION [dbo].[MuhteviyatGenelDepoListesiForOlcum] 
(	
	@Ind int,
	@BaslangicTarihi datetime
)

RETURNS @MuhteviyatDurum TABLE 
(
	Owner int,
	HesapKodu nvarchar(50),
	HesapAdi nvarchar(100),
	Ind int,
	StokKodu nvarchar(50),
	StokAdi nvarchar(100),
	Kapasite decimal(28,13),
	Miktar decimal(28,13),
	KulOran decimal(28,13),
	DepoInd int
)
AS
  BEGIN
    DECLARE  @AkaryakitMi int
    SET @AkaryakitMi = (SELECT TOP 1 StokInd FROM Hesaplar WHERE TipInd = 205 AND StokInd = @Ind)
    
    IF NOT @AkaryakitMi > 0      RETURN
    
	INSERT INTO @MuhteviyatDurum 
    	(Owner,HesapKodu,HesapAdi,Ind,StokKodu,StokAdi,Kapasite,Miktar,KulOran,DepoInd)
	SELECT 
		dbo.Hesaplar.Owner,
		dbo.Hesaplar.HesapKodu,
		dbo.Hesaplar.HesapAdi,
		dbo.Hesaplar.Ind,
		s.StokKodu,
		s.StokAdi,
		dbo.Hesaplar.Kapasite, 
		SUM(g.Giren) - SUM(g.Cikan) AS Miktar,
		(SUM(g.Giren) - SUM(g.Cikan)) / ISNULL(dbo.Hesaplar.Kapasite,1) * 100 AS KulOran,
		g.DepoInd
	FROM
		dbo.Hesaplar WITH(NOLOCK)
		LEFT OUTER JOIN GirisCikisHareketleri AS g WITH(NOLOCK) ON dbo.Hesaplar.Ind = g.DepoInd
		LEFT OUTER JOIN dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = dbo.Hesaplar.StokInd
	WHERE
		(g.DepoInd IS NOT NULL) AND (dbo.Hesaplar.Kapasite IS NOT NULL) AND (dbo.Hesaplar.Kapasite != 0) AND DepoInd = @Ind
		AND g.Tarih <= @BaslangicTarihi
	GROUP BY
		dbo.Hesaplar.Owner,
		dbo.Hesaplar.Kapasite,
		g.DepoInd,
		dbo.Hesaplar.HesapKodu,
		dbo.Hesaplar.HesapAdi,
		dbo.Hesaplar.Ind,
		s.StokKodu, 
		s.StokAdi
		
		RETURN
END


GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go


CREATE FUNCTION [dbo].[MuhteviyatliStoklarGrupluToplamlari](
	@tarih DATETIME
)

RETURNS @tblMuhteviyatliStoklarGruplu TABLE
(StokInd INT,StokKodu VARCHAR(50),StokAdi VARCHAR(100), Miktar DECIMAL(28,8),Tutar DECIMAL(28,8),Owner INT,Aciklama VARCHAR(100))

AS 

BEGIN


	DECLARE @muhteviyatliStoklarGruplu TABLE (StokInd INT,StokKodu VARCHAR(50),StokAdi VARCHAR(100),Miktar DECIMAL(28,8))

	INSERT INTO @muhteviyatliStoklarGruplu
		SELECT StokInd,StokKodu,StokAdi,SUM(Miktar) FROM MuhteviyatliStoklarToplamlari(@tarih)
			WHERE Miktar>0
			GROUP BY StokInd,StokKodu,StokAdi	
	
	DECLARE @stokInd INT,@stokKodu VARCHAR(50),@stokAdi VARCHAR(100),@miktar DECIMAL(28,8),@toplamTutar DECIMAL(28,8)
	
	DECLARE StokCursor CURSOR FOR 
	SELECT StokInd,StokKodu,StokAdi,Miktar FROM  @muhteviyatliStoklarGruplu

	

	OPEN StokCursor
	FETCH NEXT FROM StokCursor
	INTO @stokInd,@stokKodu,@stokAdi,@miktar
	WHILE @@FETCH_STATUS = 0
	BEGIN


		DECLARE @hMiktar DECIMAL(28,8),@hFiyat DECIMAL(28,8), @hIskonto DECIMAL(28,8), @kalanMiktar DECIMAL(28,8), @birimFiyat DECIMAL(28,8)

		SET @kalanMiktar=@miktar
		SET @toplamTutar=0

		DECLARE HareketCursor CURSOR FOR 
		SELECT H.Miktar,H.Fiyat,H.Iskonto 
			FROM Hareketler H WITH(NOLOCK)
			INNER JOIN Basliklar B WITH(NOLOCK) ON B.Ind=H.BaslikInd
			WHERE H.TipInd=3 AND H.StokInd=@stokInd 
			AND B.Tarih<=@tarih	
			ORDER BY H.Ind DESC

		OPEN HareketCursor
		FETCH NEXT FROM HareketCursor
		INTO @hMiktar,@hFiyat,@hIskonto
		WHILE @@FETCH_STATUS = 0
		BEGIN
			
			IF(@hMiktar<=@kalanMiktar) -- kalan 0 veya fazlası
			BEGIN
				SET @toplamTutar=@toplamTutar +( @hMiktar*@hFiyat-@hIskonto)
				SET @kalanMiktar=@kalanMiktar-@hMiktar
			END
			ELSE IF(@hMiktar>=@kalanMiktar) -- kalan 0
			BEGIN
				SET @birimFiyat =((@hMiktar*@hFiyat-@hIskonto)/@hMiktar)
				SET @toplamTutar=@toplamTutar + (@birimFiyat*@kalanMiktar)
				SET @kalanMiktar=0
				BREAK
			END

			FETCH NEXT FROM HareketCursor
			INTO @hMiktar,@hFiyat,@hIskonto
		END		
		CLOSE HareketCursor
		DEALLOCATE HareketCursor


		INSERT INTO @tblMuhteviyatliStoklarGruplu 
			(StokInd,StokKodu ,StokAdi , Miktar ,Tutar ,Owner ,Aciklama)
			VALUES (@stokInd,@stokKodu,@stokAdi,@miktar,@toplamTutar,NULL, '')


		FETCH NEXT FROM StokCursor
		INTO @stokInd,@stokKodu,@stokAdi,@miktar
	END
	
	CLOSE StokCursor
	DEALLOCATE StokCursor


	RETURN 
END



GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go



CREATE FUNCTION [dbo].[MuhteviyatliStoklarToplamlari](
	@tarih DATETIME
)

RETURNS @tblMuhteviyatliStoklar TABLE
(DepoInd INT,StokInd INT,StokKodu VARCHAR(50),StokAdi VARCHAR(100), Miktar DECIMAL(28,8),Owner INT,Aciklama VARCHAR(100))
AS
BEGIN 

DECLARE @depoInd INT,@stokInd INT,@stokKodu VARCHAR(50),@stokAdi VARCHAR(100)

	DECLARE StokCursor CURSOR FOR 
	SELECT 	Ind, StokInd,StokKodu,StokAdi FROM CBDepoListesi WHERE TipInd =205 AND StokInd IS NOT NULL

	OPEN StokCursor;
	FETCH NEXT FROM StokCursor
	INTO @depoInd,@stokInd,@stokKodu,@stokAdi
	WHILE @@FETCH_STATUS = 0
	BEGIN
		INSERT INTO @tblMuhteviyatliStoklar
		SELECT
			@depoInd,@stokInd,@stokKodu,@stokAdi,Miktar , NULL Owner,'' Aciklama
			FROM DepoUrunMiktari(@depoInd,@tarih)

		BREAK
		FETCH NEXT FROM StokCursor
		INTO @depoInd,@stokInd,@stokKodu,@stokAdi
	END
	
	CLOSE StokCursor
	DEALLOCATE StokCursor
	
	
		
	RETURN
END


	







GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[MuhteviyatMiktarlari]
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS 
TABLE 
AS
RETURN 
(
	WITH Dokumu(Owner, StokInd, StokKodu, StokAdi,SatisFiyati,Miktar)
	AS
	(
		SELECT 		
			Hesaplar.Owner,
			Stoklar.Ind AS StokInd,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			StokDetaylari.Tutar as SatisFiyati,
			(SUM(
			CASE  WHEN (Hareketler.TipInd=29 AND (Basliklar.Aktif = 1 OR Basliklar.Aktif IS NULL))
			THEN Hareketler.Miktar * Hareketler.Carpan
			ELSE 0
			END
			) - SUM(
			CASE  WHEN (Hareketler.TipInd=30 AND (Basliklar.Aktif = 1 OR Basliklar.Aktif IS NULL))
			THEN Hareketler.Miktar * Hareketler.Carpan
			ELSE 0
			END
			)) as Miktar
		FROM Hesaplar
		LEFT JOIN Stoklar WITH(NOLOCK) ON Hesaplar.StokInd=Stoklar.Ind
		LEFT JOIN StokDetaylari WITH(NOLOCK) ON StokDetaylari.StokInd=Stoklar.Ind AND StokDetaylari.IsAnaFiyat='True'
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.DepoInd = Hesaplar.Ind AND Hareketler.StokInd = Stoklar.Ind
		LEFT JOIN Basliklar WITH(NOLOCK) ON Basliklar.Ind = Hareketler.BaslikInd
		WHERE Hesaplar.TipInd=205 AND Hesaplar.StokInd IS NOT NULL 
		GROUP BY
			Hesaplar.Owner,
			Stoklar.Ind,
			Stoklar.StokKodu,
			Stoklar.StokAdi,
			StokDetaylari.Tutar
	)

	SELECT
		Hesaplar.Owner,
		Dokumu.StokInd,
		Dokumu.StokKodu,
		Dokumu.StokAdi,
		Dokumu.Miktar as Devir,
		SUM(CASE WHEN (Hareketler.TipInd IN (39,44))
			THEN Hareketler.YeniEndeks-Hareketler.EskiEndeks
			ELSE 0
			END) AS Cikan,
		Dokumu.SatisFiyati,
		(Dokumu.Miktar - SUM(CASE WHEN (Hareketler.TipInd IN (39,44))
							THEN Hareketler.YeniEndeks-Hareketler.EskiEndeks
							ELSE 0
							END)) as KalanMiktar,
		((Dokumu.Miktar - SUM(CASE WHEN (Hareketler.TipInd IN (39,44))
							 THEN Hareketler.YeniEndeks-Hareketler.EskiEndeks
							 ELSE 0
							 END))*Dokumu.SatisFiyati) as KalanTutar
	FROM Dokumu  	WITH(NOLOCK)
	LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.StokInd=Dokumu.StokInd AND Hesaplar.Owner = Dokumu.Owner
	LEFT JOIN HesapDetaylari WITH(NOLOCK) ON HesapDetaylari.DepoInd=Hesaplar.Ind
	LEFT JOIN Hareketler WITH(NOLOCK) ON   Hareketler.SayacInd=HesapDetaylari.Ind	AND Hareketler.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
	WHERE 0=0
	GROUP BY
		Hesaplar.Owner,
		Dokumu.StokInd,
		Dokumu.StokKodu,
		Dokumu.StokAdi,
		Dokumu.SatisFiyati,
		Dokumu.Miktar		

)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[NakitVardiyaTutarlariToplam] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT 
		Hareketler.Owner,
		SUM(Hareketler.Tutar) AS Tutar
	FROM Hareketler WITH(NOLOCK)
	WHERE Hareketler.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,',')) AND TipInd IN (38,42)
	GROUP BY Hareketler.Owner
)

GO

SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

-- =============================================
-- Author:		Emrah Kasal
-- Create date: 27.09.2013
-- Description:	Verilen Ind 'den X adet önceki Vardiyayı Getirir
-- =============================================
CREATE FUNCTION [dbo].[OncekiVardiya] 
(	
	@Ind AS INT,
	@Onceki AS INT,
	@Owner AS INT
)
RETURNS TABLE 
AS
RETURN 
(
	WITH tmp AS
(   SELECT DISTINCT
	Top(@Onceki)
	0 as Ind,
	Tarih,
	VardiyaNo,
	[Owner]
	FROM Basliklar WITH(NOLOCK)
	WHERE Ind < @Ind AND TipInd = 108 AND [Owner]= @Owner
	order by Tarih desc
)
	SELECT Top 1 *, ROW_NUMBER() OVER(ORDER BY tmp.Tarih DESC) AS sirano
	FROM tmp ORDER BY sirano DESC
)

GO



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[ParaBirimineAitKKartlari] 
(
	@ParaBirimi NVARCHAR(5)
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT * 
	FROM (SELECT 
			KKarti.Ind,
			KKarti.HesapKodu,
			KKarti.HesapAdi,
			KKarti.Vade,
			Banka.parabirimi,
			KKarti.Owner,
			KKarti.MusteriKomisyon 
		FROM Hesaplar as KKarti WITH(NOLOCK)
		LEFT JOIN Hesaplar as Banka WITH(NOLOCK) ON KKarti.BankaInd=Banka.Ind
		WHERE KKarti.TipInd=203 AND Banka.ParaBirimi =@ParaBirimi) as tbl1
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[ParaBirimineAitKKartlari2] 
(
	@ParaBirimi NVARCHAR
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT
	*
	FROM
	(
		SELECT 
			KKarti.Ind,
			KKarti.HesapKodu,
			KKarti.HesapAdi,
			KKarti.Vade,
			Banka.ParaBirimi,
			KKarti.Owner 
		FROM Hesaplar AS KKarti WITH(NOLOCK)
		LEFT JOIN Hesaplar as Banka WITH(NOLOCK) ON KKarti.BankaInd = Banka.Ind
		WHERE KKarti.TipInd=203 AND Banka.ParaBirimi =@ParaBirimi
	) AS PBneAitKKartlari
)
GO
/****** Object:  UserDefinedFunction [dbo].[PerakendeSatisIadeEdilenUrunler]    Script Date: 03/07/2011 12:00:57 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[PerakendeSatisIadeEdilenUrunler] 
(	
	@KullaniciInd int
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT 
		TOP 100 PERCENT
		Owner,
		StokInd,
		StokKodu,
		StokAdi,
		GrupInd,
		GrupAdi,
		SUM(Miktar) AS Miktar,
		SUM(Carpan) AS Carpan,
		Fiyat,
		SUM(Miktar*Carpan*Fiyat) AS Tutar
	FROM PerakendeSatisIadeListesi WITH(NOLOCK)
	WHERE PerakendeSatisIadeListesi.KullaniciInd = @KullaniciInd
	GROUP BY
		Owner,
		StokInd,
		StokKodu,
		StokAdi,
		GrupInd,
		GrupAdi,
		Fiyat
	ORDER BY
		GrupInd
)
GO
/****** Object:  UserDefinedFunction [dbo].[PerakendeSatisIadeKayitlariGetir]    Script Date: 03/07/2011 12:00:07 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--	Açıklama	:	Kullanıcı Id'si verilen bir personelin açık kasasındaki iadelerin listesini getirir
CREATE FUNCTION [dbo].[PerakendeSatisIadeKayitlariGetir]
(	
	@PersonelKullaniciId int
)
RETURNS TABLE 
AS
RETURN
(
	select Hareketler.Ind as Ind, Hareketler.BaslikInd as BaslikInd, Hareketler.Owner, StokInd, StokKodu, StokAdi, Miktar, AnaBirimAdi, BirimAdi,
	Carpan, Fiyat as BirimFiyat, KDVOrani
	from hareketler WITH(NOLOCK) inner join satiskasasi WITH(NOLOCK) on hareketler.BaslikInd = satiskasasi.IslemInd
	where hareketler.tipInd = 513 and satiskasasi.Tablo = N'Hareketler' AND satiskasasi.KullaniciInd = @PersonelKullaniciId
		and satiskasasi.IsYeniSatis = 'true' and hareketler.Miktar > 0
	group by Hareketler.Ind, Hareketler.BaslikInd, Hareketler.Owner, StokInd, StokKodu, StokAdi, Miktar, AnaBirimAdi, BirimAdi,	Carpan, Hareketler.Fiyat, KDVOrani
)
GO
CREATE FUNCTION [dbo].[PersBorcAlacak] 
(
	@baslangic datetime,
	@bitis datetime,
	@tipInd int
)
RETURNS 
TABLE 
AS
RETURN 
(
	WITH HareketDokumu(Owner,PersonelHesapInd,Alacak,Borc,Fark)
	AS
	(
		SELECT
			h.Owner,
			h.PersonelHesapInd,
			SUM(CASE WHEN h.TipInd = 20 
				THEN h.Tutar
				ELSE 0
				END) as Alacak,
			SUM(CASE WHEN TipInd IN (18,22) 
				THEN h.Tutar
				ELSE 0.00
				END) as Borc,
			NULL as Fark
		FROM Hareketler as h WITH(NOLOCK)
		WHERE  h.GirisTarihi < @bitis
		AND h.GirisTarihi >= @baslangic
		AND h.TipInd in (18,20,22) AND @tipInd = (CASE WHEN @tipInd = 5556 THEN 9999 ELSE 0 END)
		GROUP BY 
			h.PersonelHesapInd,
			h.Owner

		UNION ALL

		SELECT
			h.Owner,
			h.PersonelHesapInd,			
			0.00 as Alacak,
			SUM(h.Tutar) as Borc,
			NULL as Fark
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind 
		WHERE  h.GirisTarihi < @bitis
		AND h.GirisTarihi >= @baslangic
		AND h.TipInd = 31
		AND @tipInd = (CASE WHEN @tipInd = 5556 THEN 9999 ELSE 0 END)
		GROUP BY 
			h.PersonelHesapInd,
			h.Owner

		UNION ALL

		SELECT
			h.Owner,
			h.PersonelHesapInd,
			SUM(ISNULL(h.Hakedilen, 0) + ISNULL(h.Prim, 0) + ISNULL(h.Agi, 0) ) as Alacak,
			0.00 as Borc,
			NULL as Fark
		FROM Hareketler as h WITH(NOLOCK)
		WHERE  h.GirisTarihi < @bitis
		AND h.GirisTarihi >= @baslangic
		AND h.TipInd = 31
		AND @tipInd = (CASE WHEN @tipInd = 5556 THEN 9999 ELSE 0 END)
		GROUP BY 
			h.PersonelHesapInd,
			h.Owner

		UNION ALL

		SELECT
			h.Owner,
			h.PersonelHesapInd,		
			SUM(CASE WHEN h.TipInd in (56) 
					THEN h.Tutar
					ELSE 0.00
					END) as Alacak,
			SUM(CASE WHEN h.TipInd in (55) 
				THEN h.Tutar
					ELSE 0.00
					END) as Borc,
			NULL as Fark
		FROM Hareketler as h WITH(NOLOCK)
		WHERE  h.GirisTarihi < @bitis
		AND h.GirisTarihi >= @baslangic
		AND h.TipInd IN (55,56)
		GROUP BY
			h.Owner,
			h.PersonelHesapInd
	)

	SELECT 
		h.Owner,
		h1.HesapAdi as PersonelHesapAdi,
		h1.HesapKodu as PersonelHesapKodu,
		SUM(h.Alacak) as Alacak,
		SUM(h.Borc) as Borc,
		null as Fark
	FROM HareketDokumu as h WITH(NOLOCK)
	LEFT JOIN Hesaplar as h1 on h1.Ind = h.PersonelHesapInd
	--WHERE
	--	h1.CikisTarihi > CAST(FLOOR(CAST(GETDATE() AS float)) AS datetime) OR h1.CikisTarihi IS NULL
	GROUP BY
		h.Owner,
		h1.HesapAdi,
		h1.HesapKodu
)



GO



GO
CREATE FUNCTION [dbo].[PersonelHareketDevir]
(	
	@Ind int,
	@Tarih datetime
)
RETURNS 
TABLE 
AS
RETURN 
(	
	WITH Devir(TipInd, Owner, Borc, Alacak)
	AS
	(
		SELECT			
			23,
			Owner,
			SUM(CASE
					WHEN TipInd in (18,22,31,55) AND PersonelHesapInd = @Ind THEN Tutar
					ELSE 0
					END) as Borc,
			SUM(CASE
					WHEN TipInd IN (20,56) AND PersonelHesapInd = @Ind THEN Tutar
					WHEN TipInd = 31 AND PersonelHesapInd = @Ind THEN Hakedilen + ISNULL(Prim, 0) + ISNULL(Agi, 0)
					ELSE 0
					END) as Alacak
		FROM Hareketler WITH(NOLOCK)
		WHERE PersonelHesapInd = @Ind
		AND GirisTarihi < @Tarih 
		AND TipInd IN (18,20,22,31,55,56)
		GROUP BY Owner
	)
	SELECT
		Devir.*,
		Subeler.SubeAdi
	FROM Devir WITH(NOLOCK)
	LEFT JOIN Subeler WITH(NOLOCK) ON Devir.Owner = Subeler.Ind	
)
GO
CREATE FUNCTION [dbo].[PersonelHareketDokumu]
(	
	@Ind int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS 
TABLE 
AS
RETURN 
(
	WITH HareketDokumu(Ind, BaslikInd, TipInd, Owner, GirisTarihi, Aciklama, Borc, Alacak,PersonelHesapAdi)
	AS
	(
		SELECT
			Ind,
			BaslikInd,
			TipInd,
			Owner,
			GirisTarihi,
			Aciklama,
			CASE
				WHEN TipInd IN (18,22) AND PersonelHesapInd = @Ind THEN Tutar
				ELSE 0
				END as Borc,
			CASE
				WHEN TipInd = 20 AND PersonelHesapInd = @Ind THEN Tutar
				ELSE 0
				END as Alacak	,
			PersonelHesapAdi	
		FROM Hareketler WITH(NOLOCK)
		WHERE PersonelHesapInd = @Ind
		AND GirisTarihi >= @BaslangicTarihi
		AND GirisTarihi < @BitisTarihi
		AND TipInd in (18,20,22)
		
		UNION ALL

		SELECT
			h.Ind,
			h.BaslikInd,
			h.TipInd,
			h.Owner,
			h.GirisTarihi as GirisTarihi,
			b.Aciklama as Aciklama,
			h.Tutar as Borc,
			0 as Alacak,
			PersonelHesapAdi
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind 
		WHERE h.PersonelHesapInd = @Ind
		AND h.GirisTarihi >= @BaslangicTarihi
		AND h.GirisTarihi < @BitisTarihi
		AND h.TipInd = 31 AND h.Tutar>0

		UNION ALL

		--Tahakkuk eden maaş kaleminde Alacak alanına agi eklendi. Bu amaçla hesaplar tablosu hareketler tablosuna bağlandı
		SELECT
			h1.Ind,
			h1.BaslikInd,
			1000,
			h1.Owner,
			h1.MaasDonemTarihi as GirisTarihi,
			b.Aciklama,--'' AS Aciklama (Eski Hali) 
			0 as Borc,
			ISNULL(h1.Hakedilen,0) + ISNULL(h1.Prim, 0) + ISNULL(h1.Agi, 0) as Alacak,
			h1.PersonelHesapAdi
		FROM Hareketler h1 WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h1.BaslikInd = b.Ind 
		WHERE h1.PersonelHesapInd = @Ind 
		AND h1.MaasDonemTarihi >= @BaslangicTarihi
		AND h1.MaasDonemTarihi < @BitisTarihi
		AND h1.TipInd = 31

		UNION ALL

		SELECT
			Hareketler.Ind,
			0 as BaslikInd,
			Hareketler.TipInd,
			Hareketler.Owner,
			Hareketler.GirisTarihi,
			(CASE WHEN (Hareketler.TipInd = 55) 
			THEN CAST(b.VardiyaNo AS varchar(50)) + '. Vardiya Hesap Açığı'
			WHEN (Hareketler.TipInd = 56)
			THEN CAST(b.VardiyaNo AS varchar(50)) + '. Vardiya Hesap Fazlası'
			END)as Aciklama,
			SUM(CASE WHEN Hareketler.TipInd in (55) THEN Hareketler.Tutar
					ELSE 0
					END) as Borc,
			SUM(CASE WHEN Hareketler.TipInd in (56) THEN Hareketler.Tutar
					ELSE 0
					END) as Alacak,
			PersonelHesapAdi
		FROM Hareketler WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = Hareketler.VardiyaKartInd
		WHERE Hareketler.PersonelHesapInd = @Ind
		AND Hareketler.GirisTarihi >= @BaslangicTarihi
		AND Hareketler.GirisTarihi < @BitisTarihi
		AND Hareketler.TipInd IN (55,56)
		GROUP BY
			Hareketler.Ind,
			Hareketler.TipInd,
			Hareketler.Owner,
			Hareketler.GirisTarihi,
			b.VardiyaNo,
			PersonelHesapAdi
	)
	SELECT
		TOP 100 PERCENT
		h.*,
		s.SubeAdi
	FROM HareketDokumu as h WITH(NOLOCK)
	LEFT JOIN Subeler as s WITH(NOLOCK) ON h.Owner = s.Ind
	ORDER BY h.GirisTarihi, h.Ind, h.TipInd
)



GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go



CREATE FUNCTION [dbo].[PersonelHareketToplamlari](
	@tarih DATETIME
)

RETURNS @tblPersonelToplamlari TABLE
(PersonelInd INT, Bakiye DECIMAL(28,8),Owner INT,Aciklama VARCHAR(100))
AS
BEGIN 

DECLARE @personelInd INT

	DECLARE PersonelCursor CURSOR FOR 
	SELECT 	Ind	FROM Hesaplar WITH(NOLOCK) WHERE TipInd = 204

	OPEN PersonelCursor;
	FETCH NEXT FROM PersonelCursor
	INTO @personelInd
	WHILE @@FETCH_STATUS = 0
	BEGIN
		INSERT INTO @tblPersonelToplamlari
		SELECT
			@personelInd,ISNULL(SUM(Borc-Alacak),0) AS Bakiye, NULL Owner,'' Aciklama
		FROM PersonelHareketDevir(@personelInd,@tarih)
		LEFT JOIN Hesaplar as h1 WITH(NOLOCK) on h1.Ind = @personelInd
		--WHERE h1.CikisTarihi > CAST(FLOOR(CAST(GETDATE() AS float)) AS datetime) OR h1.CikisTarihi IS NULL


		FETCH NEXT FROM PersonelCursor
		INTO @personelInd
	END

	CLOSE PersonelCursor
	DEALLOCATE PersonelCursor
	RETURN
END


	




GO
CREATE FUNCTION [dbo].[PersonelIadeForSatisKasasi] 
(	
	@Ind int
)
RETURNS TABLE 
AS
RETURN 
(
SELECT 
		T.Owner,
		SUM (T.Tutar) AS Tutar
	FROM
	(
SELECT SUM(Miktar*Carpan*Fiyat) AS Tutar, S.Owner AS Owner
		FROM SatisKasasi AS S WITH(NOLOCK)
		LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.Ind = S.IslemInd
		WHERE H.TipInd = 513 AND S.IsYeniSatis = 'true'
		AND S.Tablo = N'Hareketler'
		AND S.KullaniciInd = @Ind
		GROUP BY S.Owner
		
		UNION ALL
		
		SELECT SUM(Miktar*Carpan*Fiyat) AS Tutar, H.Owner AS Owner
		FROM Hareketler AS H
		INNER JOIN SatisKasasi S WITH(NOLOCK) ON H.BaslikInd = S.IslemInd
		WHERE H.TipInd = 513 AND S.IsYeniSatis = 'true'
		AND S.Tablo = N'Hareketler'
		AND S.KullaniciInd = @Ind
		AND (H.BaslikInd > 0 OR H.BaslikInd IS NOT NULL)
		GROUP BY H.Owner

	) AS T
	GROUP BY T.Owner
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[PersonelIrsaliyeForSatisKasasi] 
(	
	@Ind int
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		T.Owner,
		SUM (T.Tutar) AS Tutar
	FROM
	(
		SELECT SUM(Miktar*Carpan*Fiyat) AS Tutar, S.Owner AS Owner
		FROM SatisKasasi AS S WITH(NOLOCK)
		LEFT JOIN Basliklar AS B WITH(NOLOCK) ON S.IslemInd = B.Ind
		LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
		WHERE B.TipInd = 104 AND H.TipInd = 5 AND S.IsYeniSatis = 'true'
		AND S.Tablo = N'Basliklar'
		AND S.KullaniciInd = @Ind
		GROUP BY S.Owner

	) AS T
	GROUP BY T.Owner
)
GO
/****** Object:  UserDefinedFunction [dbo].[PersonelMarketSatislariGetir]    Script Date: 03/07/2011 11:58:48 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

--	Açıklama	:	Kullanıcı Id'si verilen bir personelin açık kasasındaki satışların listesini getirir
CREATE FUNCTION [dbo].[PersonelMarketSatislariGetir]
(	
	@PersonelKullaniciId int
)
RETURNS TABLE 
AS
RETURN
(
	select Hareketler.Ind as Ind, Hareketler.Owner, StokInd, StokKodu, StokAdi, Miktar, AnaBirimAdi, BirimAdi,
	Carpan, Fiyat as BirimFiyat, KDVOrani
	from hareketler WITH(NOLOCK) inner join satiskasasi WITH(NOLOCK) on hareketler.Ind = satiskasasi.IslemInd
	where hareketler.tipInd = 504 and satiskasasi.Tablo = N'Hareketler' AND satiskasasi.KullaniciInd = @PersonelKullaniciId
		and satiskasasi.IsYeniSatis = 'true' --and hareketler.Miktar > 0
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[PersonelNakitForEskiSatisKasasi] 
(	
	@BaslikInd int
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		T.Owner,
		SUM (T.Tutar) AS Tutar
	FROM
	(
		SELECT
			SUM(H.Miktar*H.Carpan*H.Fiyat*(1+H.KDVOrani/100)-H.Iskonto) AS Tutar, 
			S.Owner AS Owner
		FROM SatisKasasi AS S WITH(NOLOCK)
		LEFT JOIN Basliklar AS B WITH(NOLOCK) ON S.IslemInd = B.Ind
		LEFT JOIN BaslikMatrahTutari AS BMT WITH(NOLOCK) ON BMT.BaslikInd = B.Ind
		LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
		WHERE H.TipInd = 6 AND B.TipInd = 102
		AND S.Tablo = N'Basliklar'
		AND S.BaslikInd = @BaslikInd AND S.IsYeniSatis = 'False'
		GROUP BY S.Owner

		UNION ALL

		SELECT 
			P.Miktar*P.Carpan*P.Fiyat AS Tutar, 
			S.Owner AS Owner
		FROM SatisKasasi AS S WITH(NOLOCK)
		LEFT JOIN Hareketler AS P WITH(NOLOCK)
		ON S.IslemInd = P.Ind
		WHERE P.TipInd = 504 AND S.IsYeniSatis = 'False'
		AND S.Tablo = N'Hareketler'
		AND S.BaslikInd = @BaslikInd

		UNION ALL

		SELECT 
			SUM(Miktar*Carpan*Fiyat) AS Tutar, 
			S.Owner AS Owner
		FROM SatisKasasi AS S WITH(NOLOCK)
		LEFT JOIN Basliklar AS B WITH(NOLOCK) ON S.IslemInd = B.Ind
		LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
		WHERE B.TipInd = 104 AND H.TipInd = 5
		AND S.Tablo = N'Basliklar'
		AND S.BaslikInd = @BaslikInd AND S.IsYeniSatis = 'False'
		GROUP BY S.Owner

	) AS T
	GROUP BY T.Owner
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[PersonelNakitForSatisKasasi] 
(	
	@Ind int
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		T.Owner,
		SUM (T.Tutar) AS Tutar
	FROM
	(
		SELECT
			SUM(H.Miktar*H.Carpan*H.Fiyat*(1+H.KDVOrani/100)-H.Iskonto) AS Tutar, 
			S.Owner AS Owner
		FROM SatisKasasi AS S WITH(NOLOCK)
		LEFT JOIN Basliklar AS B WITH(NOLOCK) ON S.IslemInd = B.Ind
		LEFT JOIN BaslikMatrahTutari AS BMT WITH(NOLOCK) ON BMT.BaslikInd = B.Ind
		LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
		WHERE H.TipInd = 6 AND B.TipInd = 102
		AND S.Tablo = N'Basliklar'
		AND S.KullaniciInd = @Ind AND S.IsYeniSatis = 'true'
		GROUP BY S.Owner

		UNION ALL

		SELECT 
			P.Miktar*P.Carpan*P.Fiyat AS Tutar, 
			S.Owner AS Owner
		FROM SatisKasasi AS S WITH(NOLOCK)
		LEFT JOIN Hareketler AS P WITH(NOLOCK)
		ON S.IslemInd = P.Ind
		WHERE P.TipInd = 504 AND S.IsYeniSatis = 'true'
		AND S.Tablo = N'Hareketler'
		AND S.KullaniciInd = @Ind

		UNION ALL

		SELECT 
			SUM(Miktar*Carpan*Fiyat) AS Tutar, 
			S.Owner AS Owner
		FROM SatisKasasi AS S WITH(NOLOCK)
		LEFT JOIN Basliklar AS B WITH(NOLOCK) ON S.IslemInd = B.Ind
		LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
		WHERE B.TipInd = 104 AND H.TipInd = 5
		AND S.Tablo = N'Basliklar'
		AND S.KullaniciInd = @Ind AND S.IsYeniSatis = 'true'
		GROUP BY S.Owner

	) AS T
	GROUP BY T.Owner
)
GO
CREATE FUNCTION [dbo].[PompaSatisBilgileri]
(
	@Owner int,
	@OkcNo varchar(50),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)

RETURNS @SONUC TABLE (
	Owner int,
	SubeId int,
	SubeAdi varchar(50),
	VardiyaTarihi datetime,
	VardiyaNo int,
	StokInd int,
	StokKodu varchar(50),
	StokAdi varchar(50),
	Miktar decimal(28, 8),
	Fiyat decimal(28, 8),
	Tutar decimal(28, 8),
	OkcNo varchar(50))
AS
BEGIN 
IF @OkcNo = ''
	BEGIN
	INSERT INTO @SONUC
	SELECT 
		S.Ind AS Owner,
		S.Ind AS SubeId, 
		S.SubeAdi,
		B.Tarih AS VardiyaTarihi,
		B.VardiyaNo,
		STK.Ind AS StokInd, 
		STK.StokKodu,
		STK.StokAdi,
		SUM(H.YeniEndeks - H.EskiEndeks) AS Miktar,
		SUM(H.Tutar) / SUM (H.YeniEndeks - H.EskiEndeks) AS Fiyat,
		SUM(H.Tutar) AS Tutar,
		ISNULL(SE.OkcNo,'') AS OkcNo
	FROM 
		Hareketler H WITH(NOLOCK)
	INNER JOIN
		Basliklar B WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind
	INNER JOIN
		SayacaAitDepoStok SADS WITH(NOLOCK) ON H.SayacInd = SADS.Ind AND H.Owner = SADS.Owner
	INNER JOIN 
		Stoklar STK WITH(NOLOCK) ON SADS.StokInd = STK.Ind
	INNER JOIN 
		Subeler S ON B.Owner = S.Ind
	LEFT JOIN LO_SayacEslestirme SE WITH(NOLOCK) ON H.SayacKodu = SE.SayacKodu AND H.Owner = SE.Owner
	WHERE
		B.TipInd = 108 AND
		H.YeniEndeks - H.EskiEndeks > 0 AND
		H.TipInd = 39 AND 
		B.Owner = @Owner AND
		B.Tarih BETWEEN @BaslangicTarihi AND @BitisTarihi
	GROUP BY
		S.Ind,
		S.SubeAdi,
		B.Tarih,
		B.VardiyaNo,
		STK.Ind, 
		STK.StokKodu,
		STK.StokAdi,
		SE.OkcNo
	END
ELSE
	BEGIN
	INSERT INTO @SONUC
	SELECT 
		S.Ind AS Owner,
		S.Ind AS SubeId, 
		S.SubeAdi,
		MAX(H.TeslimTarihi) AS VardiyaTarihi,
		B.VardiyaNo,
		STK.Ind AS StokInd, 
		STK.StokKodu,
		STK.StokAdi,
		SUM(H.YeniEndeks - H.EskiEndeks) AS Miktar,
		SUM(H.Tutar) / SUM (H.YeniEndeks - H.EskiEndeks) AS Fiyat,
		SUM(H.Tutar) AS Tutar,
		ISNULL(SE.OkcNo,'') AS OkcNo
	FROM 
		Hareketler H  WITH(NOLOCK)
	INNER JOIN
		Basliklar B WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind
	INNER JOIN
		SayacaAitDepoStok SADS WITH(NOLOCK) ON H.SayacInd = SADS.Ind AND H.Owner = SADS.Owner
	INNER JOIN 
		Stoklar STK WITH(NOLOCK) ON SADS.StokInd = STK.Ind
	INNER JOIN 
		Subeler S WITH(NOLOCK) ON B.Owner = S.Ind
	LEFT JOIN LO_SayacEslestirme SE WITH(NOLOCK) ON H.SayacKodu = SE.SayacKodu AND H.Owner = SE.Owner
	WHERE
		B.TipInd = 108 AND
		H.YeniEndeks - H.EskiEndeks > 0 AND
		H.TipInd = 39 AND 
		B.Owner = @Owner AND
		SE.OkcNo = @OkcNo AND
		H.TeslimTarihi BETWEEN @BaslangicTarihi AND @BitisTarihi
	GROUP BY
		S.Ind,
		S.SubeAdi,
		B.Tarih,
		B.VardiyaNo,
		STK.Ind, 
		STK.StokKodu,
		STK.StokAdi,
		SE.OkcNo
	END
RETURN
END
GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go




CREATE FUNCTION [dbo].[PromosyonStoklarFIFOForBilanco](
	@tarih DATETIME,
	@promosyonHesapInd INT,@depoStokInds VARCHAR(8000)
)

RETURNS @tblPromosyonStoklar TABLE
(StokInd INT,StokKodu VARCHAR(50),StokAdi VARCHAR(100), Miktar DECIMAL(28,8),Tutar DECIMAL(28,8),Owner INT,Aciklama VARCHAR(100))

AS 

BEGIN


	DECLARE @stokInd INT,@stokKodu VARCHAR(50),@stokAdi VARCHAR(100),@miktar DECIMAL(28,8),@toplamTutar DECIMAL(28,8)
	
	DECLARE StokCursor CURSOR FOR 
		SELECT S.Ind StokInd,S.StokKodu,S.StokAdi
			FROM HesapDetaylari HD WITH(NOLOCK)
			INNER JOIN Stoklar S WITH(NOLOCK) ON S.Ind=HD.CariHesapInd
			WHERE HD.DepoInd=@promosyonHesapInd

	
		
	OPEN StokCursor
	FETCH NEXT FROM StokCursor
	INTO @stokInd,@stokKodu,@stokAdi
	WHILE @@FETCH_STATUS = 0
	BEGIN
		DECLARE @hMiktar DECIMAL(28,8),@hFiyat DECIMAL(28,8), @hIskonto DECIMAL(28,8), @kalanMiktar DECIMAL(28,8), @birimFiyat DECIMAL(28,8)



		SET @miktar=(SELECT SUM(GirilenMiktar-CikilanMiktar) FROM StokMiktarlari(@stokInd, @tarih ,@depoStokInds))

		DECLARE HareketCursor CURSOR FOR 
		SELECT H.Miktar,H.Fiyat,H.Iskonto
			FROM Hareketler H WITH(NOLOCK)
			INNER JOIN Basliklar B WITH(NOLOCK) ON B.Ind=H.BaslikInd
			WHERE H.TipInd=3 AND H.StokInd=@stokInd AND b.Tarih<=@tarih
			ORDER BY H.Ind DESC
		--SELECT Miktar,Fiyat,Iskonto FROM Hareketler WHERE TipInd=3 AND StokInd=@stokInd ORDER BY Ind DESC

		SET @kalanMiktar=@miktar
		SET @toplamTutar=0


		OPEN HareketCursor
		FETCH NEXT FROM HareketCursor
		INTO @hMiktar,@hFiyat,@hIskonto
		WHILE @@FETCH_STATUS = 0
		BEGIN

			IF(@hMiktar<=@kalanMiktar) -- kalan 0 veya fazlası
			BEGIN
				SET @toplamTutar=@toplamTutar +( @hMiktar*@hFiyat-@hIskonto)
				SET @kalanMiktar=@kalanMiktar-@hMiktar
			END
			ELSE IF(@hMiktar>=@kalanMiktar) -- kalan 0
			BEGIN
				SET @birimFiyat =((@hMiktar*@hFiyat-@hIskonto)/@hMiktar)
				SET @toplamTutar=@toplamTutar + (@birimFiyat*@kalanMiktar)
				SET @kalanMiktar=0
				BREAK
			END

			FETCH NEXT FROM HareketCursor
			INTO @hMiktar,@hFiyat,@hIskonto
		END		
		CLOSE HareketCursor
		DEALLOCATE HareketCursor


		INSERT INTO @tblPromosyonStoklar 
			(StokInd,StokKodu ,StokAdi , Miktar ,Tutar ,Owner ,Aciklama)
			VALUES (@stokInd,@stokKodu,@stokAdi,@miktar,@toplamTutar,NULL, '')

		FETCH NEXT FROM StokCursor
		INTO @stokInd,@stokKodu,@stokAdi
	END
	
	CLOSE StokCursor
	DEALLOCATE StokCursor

	RETURN 
END






GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[SatilanIrsaliyeUrunler] 
(	
	@KullaniciInd int
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT 
		TOP 100 PERCENT
		Owner,
		StokInd,
		StokKodu,
		StokAdi,
		GrupInd,
		GrupAdi,
		SUM(Miktar) AS Miktar,
		SUM(Carpan) AS Carpan,
		Fiyat,
		SUM(Miktar*Carpan*Fiyat) AS Tutar
	FROM SatilanUrunListesi WITH(NOLOCK)
	WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd AND SatilanUrunListesi.TipInd = 5
	GROUP BY
		Owner,
		StokInd,
		StokKodu,
		StokAdi,
		GrupInd,
		GrupAdi,
		Fiyat
	ORDER BY
		GrupInd
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[SatisFaturasiAltToplam]
(	
	@BaslikInd int
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		@BaslikInd AS BaslikInd,
		SUM
		(
			Hareketler.Miktar*Hareketler.Fiyat/(1+KDVOrani/100)
		) AS Matrah,
		
		SUM
		(
			Hareketler.Iskonto
		)+ Basliklar.Iskonto AS  ToplamIndirim,
		-- fatura iskontosu
		basliklar.Iskonto AS  FaturaIskontosu,
		--Ara Toplam	
		SUM
		(
			Hareketler.Miktar*Hareketler.Fiyat/(1+KDVOrani/100)-Hareketler.Iskonto
		)-basliklar.Iskonto AS AraToplam,
		--kdv tutari
		SUM
		(
			(Hareketler.Miktar*Hareketler.Fiyat/(1+KDVOrani/100)-Hareketler.Iskonto) * KDVOrani/100
		) * (1-basliklar.Iskonto/SUM
		(
			Hareketler.Miktar*Hareketler.Fiyat/(1+KDVOrani/100)-Hareketler.Iskonto
		)) AS KDVTutari,
		-- net toplam
		SUM
		(
			(Hareketler.Miktar*Hareketler.Fiyat/(1+KDVOrani/100)-Hareketler.Iskonto) * (1+KDVOrani/100)
		) * (1-basliklar.Iskonto/SUM
		(
			Hareketler.Miktar*Hareketler.Fiyat/(1+KDVOrani/100)-Hareketler.Iskonto
		)) + basliklar.Yuvarlama  AS NetToplam,
		basliklar.owner AS Owner,
		basliklar.Yuvarlama
	FROM
	hareketler WITH(NOLOCK)
	LEFT JOIN basliklar WITH(NOLOCK) ON hareketler.BaslikInd=basliklar.Ind
	WHERE basliklar.Ind=@BaslikInd
	GROUP BY basliklar.Iskonto,basliklar.owner,basliklar.Yuvarlama
)

GO
CREATE FUNCTION SatisFiyatiBilgileri
(
 @ownerInd INT ,@depoInd INT
)
RETURNS 
TABLE 
AS
RETURN 
(

	SELECT  SD.*,SFS.SiraNo
		FROM StokDetaylari SD WITH(NOLOCK)
		INNER JOIN Hesaplar H  WITH(NOLOCK) ON SD.StokInd=H.StokInd
		INNER JOIN SatisFiyatiSiralama SFS WITH(NOLOCK) ON SFS.FiyatInd=SD.Ind AND SFS.Owner=SD.Owner
		WHERE SD.TipInd=501 AND IsAnaFiyat=0	
			AND  SD.Owner=@ownerInd AND H.Ind=@depoInd

)
GO
CREATE FUNCTION SatisFiyatiOnBilgileri
(
@depoInd INT
)
RETURNS @satisFiyatlariOnBilgi TABLE
(
	Ind INT,
	Owner INT,
	HesapAdi NVARCHAR(50),
	StokAdi  NVARCHAR(50),
	StokInd INT,
	AnaBirimInd INT,
	AnaParaBirimi NVARCHAR(10)
	
)
AS
BEGIN 
	DECLARE @anaParaBirimi NVARCHAR(10)

	SELECT  @anaParaBirimi=AnaParaBirimi 
		FROM Ayarlar 
		WHERE TipInd=301

	INSERT INTO @satisFiyatlariOnBilgi
	SELECT H.Ind, H.Owner,H.HesapAdi,S.StokAdi,S.Ind  StokInd,S.AnaBirimInd,@anaParaBirimi AnaParaBirimi
		FROM  Hesaplar H WITH(NOLOCK)
		INNER JOIN Stoklar S WITH(NOLOCK) ON S.Ind=H.StokInd

		WHERE H.Ind=@depoInd

	RETURN
END
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[SatisFiyatiSiralamaForCB]
(
	
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT  
		TOP 100 PERCENT
		dbo.SatisFiyatiSiralama.Ind, 
		dbo.SatisFiyatiSiralama.Owner, 
		dbo.SatisFiyatiSiralama.FiyatInd, 
		dbo.SatisFiyatiSiralama.SiraNo, 
		dbo.StokDetaylari.StokInd, 
		dbo.StokDetaylari.FiyatAdi,
		dbo.Birimler.BirimAdi
	FROM
		dbo.SatisFiyatiSiralama WITH(NOLOCK) INNER JOIN 
		dbo.StokDetaylari WITH(NOLOCK) ON dbo.SatisFiyatiSiralama.FiyatInd = dbo.StokDetaylari.Ind LEFT OUTER JOIN
		dbo.Birimler WITH(NOLOCK) ON dbo.StokDetaylari.BirimInd = dbo.Birimler.Ind
	ORDER BY 
		dbo.SatisFiyatiSiralama.SiraNo
)
GO
CREATE FUNCTION SatisHareketleriGetir
(
	@StokInd int,
	@Tarih datetime
)
RETURNS 
TABLE 
AS
RETURN 
(
	select top 1 *, null as Owner
	from SatisHareketleri
	where StokInd=@StokInd and Tarih<=@Tarih
	order by Tarih desc
)

GO
CREATE FUNCTION [dbo].[SatisIrsaliyesiFaturalandirma]
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@HesapInd int
)
RETURNS TABLE 
AS
RETURN 
(
		SELECT 
			Basliklar.Owner,
			Basliklar.TipInd,
			Basliklar.AltTipInd,
			(Hareketler.Miktar * Hareketler.Fiyat * Hareketler.Carpan) AS NetTutar,
			(Hareketler.Miktar * Hareketler.Carpan) AS Miktar,
			Hareketler.Fiyat,
			Basliklar.Tarih As Tarih,
			Hareketler.DurumInd,
			Basliklar.HesapInd,
			Basliklar.PlakaNo,
			Basliklar.BelgeNo,
			(Hareketler.StokKodu + ' - ' + Hareketler.StokAdi) AS StokKodu
			, Basliklar.Ind
			, Hareketler.StokInd
		FROM Hareketler WITH(NOLOCK)
		LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
		WHERE Basliklar.Tarih >= @BaslangicTarihi
			  AND Basliklar.Tarih < @BitisTarihi
			  AND Basliklar.HesapInd = @HesapInd
			  AND Hareketler.TipInd IN (2,5)
			AND (Basliklar.DurumInd NOT IN(3,11) OR Basliklar.DurumInd IS NULL) 
		UNION ALL

		SELECT 
			Basliklar.Owner,
			Basliklar.TipInd,
			Basliklar.AltTipInd,
			Hareketler.Tutar AS NetTutar,
			(Hareketler.Miktar * Hareketler.Carpan) AS Miktar,
			Hareketler.Fiyat,
			Basliklar.Tarih As Tarih,
			Hareketler.DurumInd,
			Basliklar.HesapInd,
			Basliklar.PlakaNo,
			Basliklar.BelgeNo,
			(Hareketler.StokKodu + ' - ' + Hareketler.StokAdi) AS StokKodu
			, Basliklar.Ind
			,Hareketler.StokInd
		FROM Hareketler WITH(NOLOCK)
		LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
		WHERE Basliklar.Tarih >= @BaslangicTarihi
			  AND Basliklar.Tarih < @BitisTarihi
			  AND Basliklar.HesapInd = @HesapInd
			  AND Hareketler.TipInd IN (37)
		      AND (Basliklar.DurumInd NOT IN(3,11) OR Basliklar.DurumInd IS NULL)
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[SatisIrsaliyesiGenelOzet] 
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@TipInd int
)
RETURNS @dokum TABLE
(
	Owner int,
	HesapKodu nvarchar(max),
	HesapAdi nvarchar(max),
	FisAdedi int,
	Tutar decimal(28,8),
	TipInd int
) 
AS
BEGIN
	IF (@TipInd = 5)
		INSERT INTO @dokum
		SELECT
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Owner,
			dbo.Hesaplar.HesapKodu,
			dbo.Hesaplar.HesapAdi,
			COUNT(dbo.SatisIrsaliyesiOzetWithFaturasiz.Ind) AS FisAdedi,
			SUM(dbo.SatisIrsaliyesiOzetWithFaturasiz.Tutar) AS Tutar,
			dbo.SatisIrsaliyesiOzetWithFaturasiz.TipInd
		FROM
			dbo.SatisIrsaliyesiOzetWithFaturasiz WITH(NOLOCK) INNER JOIN
			dbo.Hesaplar WITH(NOLOCK) ON (dbo.Hesaplar.Ind = dbo.SatisIrsaliyesiOzetWithFaturasiz.HesapInd)
		WHERE
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Tarih >= @BaslangicTarihi AND 
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Tarih <= @BitisTarihi AND
			dbo.SatisIrsaliyesiOzetWithFaturasiz.TipInd = @TipInd
		GROUP BY
			dbo.Hesaplar.Ind,
			dbo.Hesaplar.HesapKodu,
			dbo.Hesaplar.HesapAdi,
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Owner,
			dbo.SatisIrsaliyesiOzetWithFaturasiz.TipInd
		ORDER BY
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Owner,
			dbo.Hesaplar.HesapKodu,
			dbo.Hesaplar.HesapAdi
	ELSE IF (@TipInd = 537)
		INSERT INTO @dokum
		SELECT
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Owner,
			dbo.Hesaplar.HesapKodu,
			dbo.Hesaplar.HesapAdi,
			COUNT(dbo.SatisIrsaliyesiOzetWithFaturasiz.Ind) AS FisAdedi,
			SUM(dbo.SatisIrsaliyesiOzetWithFaturasiz.Tutar) AS Tutar,
			dbo.SatisIrsaliyesiOzetWithFaturasiz.TipInd
		FROM
			dbo.SatisIrsaliyesiOzetWithFaturasiz WITH(NOLOCK) INNER JOIN
			dbo.Hesaplar WITH(NOLOCK) ON (dbo.Hesaplar.Ind = dbo.SatisIrsaliyesiOzetWithFaturasiz.HesapInd)
		WHERE
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Tarih >= @BaslangicTarihi AND 
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Tarih <= @BitisTarihi
		GROUP BY
			dbo.Hesaplar.Ind,
			dbo.Hesaplar.HesapKodu,
			dbo.Hesaplar.HesapAdi,
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Owner,
			dbo.SatisIrsaliyesiOzetWithFaturasiz.TipInd
		ORDER BY
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Owner,
			dbo.Hesaplar.HesapKodu,
			dbo.Hesaplar.HesapAdi
	ELSE
		INSERT INTO @dokum
		SELECT
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Owner,
			dbo.Hesaplar.HesapKodu,
			dbo.Hesaplar.HesapAdi,
			COUNT(dbo.SatisIrsaliyesiOzetWithFaturasiz.Ind) AS FisAdedi,
			SUM(dbo.SatisIrsaliyesiOzetWithFaturasiz.Tutar) AS Tutar,
			37 AS TipInd
		FROM
			dbo.SatisIrsaliyesiOzetWithFaturasiz WITH(NOLOCK) INNER JOIN
			dbo.Hesaplar WITH(NOLOCK) ON (dbo.Hesaplar.Ind = dbo.SatisIrsaliyesiOzetWithFaturasiz.HesapInd)
		WHERE
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Tarih >= @BaslangicTarihi AND 
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Tarih <= @BitisTarihi AND
			dbo.SatisIrsaliyesiOzetWithFaturasiz.TipInd = 37
		GROUP BY
			dbo.Hesaplar.Ind,
			dbo.Hesaplar.HesapKodu,
			dbo.Hesaplar.HesapAdi,
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Owner
		ORDER BY
			dbo.SatisIrsaliyesiOzetWithFaturasiz.Owner,
			dbo.Hesaplar.HesapKodu,
			dbo.Hesaplar.HesapAdi
		RETURN
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[SatisRaporuDokumu] 
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@cariInd int,
    @depoInds nvarchar(max),
    @stokInds nvarchar(max),
	@TipInd int
	, @KullaniciInds nvarchar(max)
)
RETURNS @dokum TABLE
(
            Owner int,
  			StokInd int, 
			GrupInd int, 
			StokKodu nvarchar(50),
			StokAdi nvarchar(50), 
			KDVOrani decimal(28,8), 
			Miktar  decimal(28,8), 
			Tutar decimal(28,8), 
            OrtalamaFiyat decimal (28,8),
			Iskonto decimal (28,8),
            KarOrani decimal(28,8) 
) 
AS
BEGIN
	IF(@TipInd = 504) -- Market + Vardiya
	BEGIN
		IF (@cariInd=0 and @stokInds ='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar
					,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat
					,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null) AND
					(h1.TipIndAltHareket = @TipInd OR h1.TipIndAltHareket = 40)
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
		ELSE IF (@cariInd=0 and @stokInds !='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK) 
				WHERE
					--(
					(h1.Tarih >= @BaslangicTarihi
					 AND h1.Tarih <= @BitisTarihi)
					 AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					 AND h1.StokInd IN (SELECT * FROM fnSplit(@stokInds,',')) AND
					(h1.TipIndAltHareket = @TipInd OR h1.TipIndAltHareket = 40)
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
		ELSE IF (@cariInd!=0 and @stokInds ='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK) 
				WHERE
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND h1.HesapInd=@cariInd
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null) AND
					(h1.TipIndAltHareket = @TipInd OR h1.TipIndAltHareket = 40)
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
		ELSE IF (@cariInd!=0 and @stokInds !='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE  
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND h1.HesapInd=@cariInd
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					AND h1.StokInd IN (SELECT * FROM fnSplit(@stokInds,',')) AND
					(h1.TipIndAltHareket = @TipInd OR h1.TipIndAltHareket = 40)
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
	END
	ELSE IF(@TipInd = 40) -- Vardiya
	BEGIN
		IF (@cariInd=0 and @stokInds ='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar
					,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat
					,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE
					--(
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null) AND
					(h1.TipIndAltHareket = @TipInd)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
		ELSE IF (@cariInd=0 and @stokInds !='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE
					(h1.Tarih >= @BaslangicTarihi
					 AND h1.Tarih <= @BitisTarihi)
					 AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					 AND h1.StokInd IN (SELECT * FROM fnSplit(@stokInds,',')) AND
					(h1.TipIndAltHareket = @TipInd)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
		ELSE IF (@cariInd!=0 and @stokInds ='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND h1.HesapInd=@cariInd
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null) AND
					(h1.TipIndAltHareket = @TipInd)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
		ELSE IF (@cariInd!=0 and @stokInds !='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE  
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND h1.HesapInd=@cariInd
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					AND h1.StokInd IN (SELECT * FROM fnSplit(@stokInds,',')) AND
					(h1.TipIndAltHareket = @TipInd)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
	END
	ELSE IF(@TipInd = 5042) -- Market
	BEGIN
		IF (@cariInd=0 and @stokInds ='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar
					,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat
					,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null) AND
					(h1.TipIndAltHareket = 504)
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')))
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
		ELSE IF (@cariInd=0 and @stokInds !='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE
					(h1.Tarih >= @BaslangicTarihi
					 AND h1.Tarih <= @BitisTarihi)
					 AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					 AND h1.StokInd IN (SELECT * FROM fnSplit(@stokInds,',')) AND
					(h1.TipIndAltHareket = 504)
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')))
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
		ELSE IF (@cariInd!=0 and @stokInds ='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND h1.HesapInd=@cariInd
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null) AND
					(h1.TipIndAltHareket = 504)
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')))
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
		ELSE IF (@cariInd!=0 and @stokInds !='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE  
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND h1.HesapInd=@cariInd
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					AND h1.StokInd IN (SELECT * FROM fnSplit(@stokInds,',')) AND
					(h1.TipIndAltHareket = 504)
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')))
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
	END
	ELSE IF(@TipInd = 1000) -- Akaryakıt
	BEGIN
		IF (@cariInd=0 and @stokInds ='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar
					,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat
					,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null) AND
					(h1.TipIndAltHareket != 504 OR h1.TipIndAltHareket != 40)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani--,h1.KarOrani
		ELSE IF (@cariInd=0 and @stokInds !='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE
					(h1.Tarih >= @BaslangicTarihi
					 AND h1.Tarih <= @BitisTarihi)
					 AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					 AND h1.StokInd IN (SELECT * FROM fnSplit(@stokInds,',')) AND
					(h1.TipIndAltHareket != 504 OR h1.TipIndAltHareket != 40)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani--, h1.KarOrani
		ELSE IF (@cariInd!=0 and @stokInds ='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND h1.HesapInd=@cariInd
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null) AND
					(h1.TipIndAltHareket != 504 OR h1.TipIndAltHareket != 40)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani--,h1.KarOrani
		ELSE IF (@cariInd!=0 and @stokInds !='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE  
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND h1.HesapInd=@cariInd
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					AND h1.StokInd IN (SELECT * FROM fnSplit(@stokInds,',')) AND
					(h1.TipIndAltHareket != 504 OR h1.TipIndAltHareket != 40)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani--,h1.KarOrani
	END
	ELSE IF(@TipInd = 50440) -- Akaryakıt + Market
	BEGIN
		IF (@cariInd=0 and @stokInds ='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar
					,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat
					,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE  
					--(
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null) --AND
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0)
					AND (h1.TipIndAltHareket != 40)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani--,h1.KarOrani
		ELSE IF (@cariInd=0 and @stokInds !='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE 
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					AND h1.StokInd IN (SELECT * FROM fnSplit(@stokInds,','))
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0)
					AND (h1.TipIndAltHareket != 40)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani--, h1.KarOrani
		ELSE IF (@cariInd!=0 and @stokInds ='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE  
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND h1.HesapInd=@cariInd
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0)
					AND (h1.TipIndAltHareket != 40)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
		ELSE IF (@cariInd!=0 and @stokInds !='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE  
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND h1.HesapInd=@cariInd
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					AND h1.StokInd IN (SELECT * FROM fnSplit(@stokInds,','))
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0)
					AND (h1.TipIndAltHareket != 40)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani--,h1.KarOrani
	END
	ELSE -- Hepsi
	BEGIN
		IF (@cariInd=0 and @stokInds ='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar
					,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat
					,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE  
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani--,h1.KarOrani
		ELSE IF (@cariInd=0 and @stokInds !='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE 
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					AND h1.StokInd IN (SELECT * FROM fnSplit(@stokInds,','))
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
		ELSE IF (@cariInd!=0 and @stokInds ='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK)
				WHERE  
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND h1.HesapInd=@cariInd
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
		ELSE IF (@cariInd!=0 and @stokInds !='')
			INSERT INTO @dokum
				SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
				FROM SatisRaporDokumu as h1 WITH(NOLOCK) 
				WHERE  
					(h1.Tarih >= @BaslangicTarihi
					AND h1.Tarih <= @BitisTarihi)
					AND h1.HesapInd=@cariInd
					AND (h1.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) or h1.DepoInd is null)
					AND h1.StokInd IN (SELECT * FROM fnSplit(@stokInds,','))
					AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0)
				GROUP BY
					h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani
	END
return
end

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[SatisRaporuDokumuDepoBazli] 
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@TipInd int
	, @KullaniciInds nvarchar(max)
)
RETURNS @dokum TABLE
(
	Owner int,
	DepoInd int,
	DepoKodu nvarchar(max),
	DepoAdi nvarchar(max),
	StokInd int,
	StokAdi nvarchar(max),
	KDVOrani decimal(28,8),
	Cikan decimal(28,8),
	Tutar decimal(28,8),
	BirimFiyat decimal (28,8),
	Iskonto decimal (28,8)
) 
AS
BEGIN
	IF (@TipInd = 504) -- Market + Vardiya
		INSERT INTO @dokum
			SELECT
				h1.Owner,
				h1.DepoInd AS Ind,
				dbo.Hesaplar.HesapKodu,
				dbo.Hesaplar.HesapAdi,
				h1.StokInd,
				h1.StokAdi,
				h1.KDVOrani,
				SUM(Miktar) as Miktar,
				SUM(Tutar) as Tutar,
				CASE WHEN (SUM(Miktar) > 0) 
				THEN (SUM(Tutar) / SUM(Miktar)) 
				ELSE 0
				END as OrtalamaFiyat,
				0.00 as Iskonto
			FROM
				dbo.Hesaplar WITH(NOLOCK) LEFT OUTER JOIN
				SatisRaporDokumu as h1 WITH(NOLOCK) ON (dbo.Hesaplar.Ind = h1.DepoInd)
			WHERE
				dbo.Hesaplar.TipInd = 205 AND
				h1.StokInd IS NOT NULL AND
				(h1.Tarih >= @BaslangicTarihi AND 
				h1.Tarih <= @BitisTarihi)
				AND (h1.TipIndAltHareket = @TipInd OR h1.TipIndAltHareket = 40)
				AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0)
			GROUP BY
				h1.Owner,
				h1.DepoInd,
				dbo.Hesaplar.HesapKodu,
				dbo.Hesaplar.HesapAdi,
				h1.StokInd,
				h1.StokAdi,
				h1.KDVOrani
			ORDER BY
				h1.Owner,
				dbo.Hesaplar.HesapKodu,
				h1.StokAdi
	ELSE IF (@TipInd = 40) -- Vardiya
		INSERT INTO @dokum
			SELECT
				h1.Owner,
				h1.DepoInd AS Ind,
				dbo.Hesaplar.HesapKodu,
				dbo.Hesaplar.HesapAdi,
				h1.StokInd,
				h1.StokAdi,
				h1.KDVOrani,
				SUM(Miktar) as Miktar,
				SUM(Tutar) as Tutar,
				CASE WHEN (SUM(Miktar) > 0) 
				THEN (SUM(Tutar) / SUM(Miktar)) 
				ELSE 0
				END as OrtalamaFiyat,
				0.00 as Iskonto
			FROM
				dbo.Hesaplar WITH(NOLOCK) LEFT OUTER JOIN
				SatisRaporDokumu as h1 WITH(NOLOCK) ON (dbo.Hesaplar.Ind = h1.DepoInd)
			WHERE
				dbo.Hesaplar.TipInd = 205 AND
				h1.StokInd IS NOT NULL AND
				(h1.Tarih >= @BaslangicTarihi AND 
				h1.Tarih <= @BitisTarihi)
				AND (h1.TipIndAltHareket = @TipInd)
			GROUP BY
				h1.Owner,
				h1.DepoInd,
				dbo.Hesaplar.HesapKodu,
				dbo.Hesaplar.HesapAdi,
				h1.StokInd,
				h1.StokAdi,
				h1.KDVOrani
			ORDER BY
				h1.Owner,
				dbo.Hesaplar.HesapKodu,
				h1.StokAdi
	ELSE IF (@TipInd = 5042) -- Market
		INSERT INTO @dokum
			SELECT
				h1.Owner,
				h1.DepoInd AS Ind,
				dbo.Hesaplar.HesapKodu,
				dbo.Hesaplar.HesapAdi,
				h1.StokInd,
				h1.StokAdi,
				h1.KDVOrani,
				SUM(Miktar) as Miktar,
				SUM(Tutar) as Tutar,
				CASE WHEN (SUM(Miktar) > 0) 
				THEN (SUM(Tutar) / SUM(Miktar)) 
				ELSE 0
				END as OrtalamaFiyat,
				0.00 as Iskonto
			FROM
				dbo.Hesaplar WITH(NOLOCK) LEFT OUTER JOIN
				SatisRaporDokumu as h1 WITH(NOLOCK) ON (dbo.Hesaplar.Ind = h1.DepoInd)
			WHERE
				dbo.Hesaplar.TipInd = 205 AND
				h1.StokInd IS NOT NULL AND
				--(
				(h1.Tarih >= @BaslangicTarihi AND 
				h1.Tarih <= @BitisTarihi)
				AND (h1.TipIndAltHareket = 504)
				AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')))
			GROUP BY
				h1.Owner,
				h1.DepoInd,
				dbo.Hesaplar.HesapKodu,
				dbo.Hesaplar.HesapAdi,
				h1.StokInd,
				h1.StokAdi,
				h1.KDVOrani
			ORDER BY
				h1.Owner,
				dbo.Hesaplar.HesapKodu,
				h1.StokAdi
	ELSE IF (@TipInd = 1000) -- Akaryakıt
		INSERT INTO @dokum
			SELECT
				h1.Owner,
				h1.DepoInd AS Ind,
				dbo.Hesaplar.HesapKodu,
				dbo.Hesaplar.HesapAdi,
				h1.StokInd,
				h1.StokAdi,
				h1.KDVOrani,
				SUM(Miktar) as Miktar,
				SUM(Tutar) as Tutar,
				CASE WHEN (SUM(Miktar) > 0) 
				THEN (SUM(Tutar) / SUM(Miktar)) 
				ELSE 0
				END as OrtalamaFiyat,
				0.00 as Iskonto
			FROM
				dbo.Hesaplar WITH(NOLOCK) LEFT OUTER JOIN
				SatisRaporDokumu as h1 WITH(NOLOCK) ON (dbo.Hesaplar.Ind = h1.DepoInd)
			WHERE
				dbo.Hesaplar.TipInd = 205 AND
				h1.StokInd IS NOT NULL AND
				h1.Tarih >= @BaslangicTarihi AND 
				h1.Tarih <= @BitisTarihi AND 
				(h1.TipIndAltHareket != 504 OR h1.TipIndAltHareket != 40)
			GROUP BY
				h1.Owner,
				h1.DepoInd,
				dbo.Hesaplar.HesapKodu,
				dbo.Hesaplar.HesapAdi,
				h1.StokInd,
				h1.StokAdi,
				h1.KDVOrani
			ORDER BY
				h1.Owner,
				dbo.Hesaplar.HesapKodu,
				h1.StokAdi
	ELSE IF (@TipInd = 50440)  -- Akaryakıt + Market
		INSERT INTO @dokum
			SELECT
				h1.Owner,
				h1.DepoInd AS Ind,
				dbo.Hesaplar.HesapKodu,
				dbo.Hesaplar.HesapAdi,
				h1.StokInd,
				h1.StokAdi,
				h1.KDVOrani,
				SUM(Miktar) as Miktar,
				SUM(Tutar) as Tutar,
				CASE WHEN (SUM(Miktar) > 0) 
				THEN (SUM(Tutar) / SUM(Miktar)) 
				ELSE 0
				END as OrtalamaFiyat,
				0.00 as Iskonto
			FROM
				dbo.Hesaplar WITH(NOLOCK) LEFT OUTER JOIN
				SatisRaporDokumu as h1 WITH(NOLOCK) ON (dbo.Hesaplar.Ind = h1.DepoInd)
			WHERE
				dbo.Hesaplar.TipInd = 205 AND
				h1.StokInd IS NOT NULL AND
				(h1.Tarih >= @BaslangicTarihi AND 
				h1.Tarih <= @BitisTarihi)
				AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0) AND 
				(h1.TipIndAltHareket != 40)
			GROUP BY
				h1.Owner,
				h1.DepoInd,
				dbo.Hesaplar.HesapKodu,
				dbo.Hesaplar.HesapAdi,
				h1.StokInd,
				h1.StokAdi,
				h1.KDVOrani
			ORDER BY
				h1.Owner,
				dbo.Hesaplar.HesapKodu,
				h1.StokAdi
	ELSE -- Hepsi
		INSERT INTO @dokum
			SELECT
				h1.Owner,
				h1.DepoInd AS Ind,
				dbo.Hesaplar.HesapKodu,
				dbo.Hesaplar.HesapAdi,
				h1.StokInd,
				h1.StokAdi,
				h1.KDVOrani,
				SUM(Miktar) as Miktar,
				SUM(Tutar) as Tutar,
				CASE WHEN (SUM(Miktar) > 0) 
				THEN (SUM(Tutar) / SUM(Miktar)) 
				ELSE 0
				END as OrtalamaFiyat,
				0.00 as Iskonto
			FROM
				dbo.Hesaplar WITH(NOLOCK) LEFT OUTER JOIN
				SatisRaporDokumu as h1 WITH(NOLOCK) ON (dbo.Hesaplar.Ind = h1.DepoInd)
			WHERE
				dbo.Hesaplar.TipInd = 205 AND
				h1.StokInd IS NOT NULL AND
				(h1.Tarih >= @BaslangicTarihi AND 
				h1.Tarih <= @BitisTarihi)
				AND (h1.KullaniciInd IN (SELECT * FROM fnSplit(@KullaniciInds,',')) or h1.KullaniciInd = 0)
			GROUP BY
				h1.Owner,
				h1.DepoInd,
				dbo.Hesaplar.HesapKodu,
				dbo.Hesaplar.HesapAdi,
				h1.StokInd,
				h1.StokAdi,
				h1.KDVOrani
			ORDER BY
				h1.Owner,
				dbo.Hesaplar.HesapKodu,
				h1.StokAdi
	RETURN
END

GO
CREATE FUNCTION [dbo].[SatisRaporuOrtalamaAlisFiyatlari]
(
	@Owner INT,
	@BaslangicTarihi DATETIME,
	@BitisTarihi DATETIME,
	@IskontoEtkilesin INT 
)
RETURNS TABLE
AS
RETURN
(
		SELECT Owner, StokInd, CASE @IskontoEtkilesin WHEN 1 THEN  AVG(Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0)) 
			ELSE AVG(Fiyat) END AS Fiyat  FROM GirisCikisHareketleriEnvanter GCH WITH(NOLOCK)
			WHERE (GCH.EnvanterOwner = @Owner OR @Owner = 0)
					AND Giren > 0 
					AND Tarih <= @BitisTarihi AND Tarih >= @BaslangicTarihi
			GROUP BY Owner, StokInd

)

GO



GO
CREATE FUNCTION [dbo].[SatisRaporuOrtalamaSatisFiyatlari]
(
	@Owner INT,
	@BaslangicTarihi DATETIME,
	@BitisTarihi DATETIME,
	@IskontoEtkilesin INT 
)
RETURNS TABLE
AS
RETURN
(
		SELECT Owner, StokInd, CASE @IskontoEtkilesin WHEN 1 THEN  AVG(Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0)) 
			ELSE AVG(Fiyat) END AS Fiyat FROM GirisCikisHareketleriEnvanter GCH WITH(NOLOCK)
			WHERE (GCH.EnvanterOwner = @Owner OR @Owner = 0)
					AND Cikan > 0 
					AND Tarih <= @BitisTarihi AND Tarih >= @BaslangicTarihi
			GROUP BY Owner, StokInd

)
GO
CREATE FUNCTION [dbo].[SatisRaporuSonAlisFiyatlari]
(
	@Owner INT,
	@BaslangicTarihi DATETIME,
	@BitisTarihi DATETIME,
	@IskontoEtkilesin INT 
)
RETURNS TABLE
AS
RETURN
(
	SELECT  result.Owner, result.StokInd, result.Fiyat FROM         
		(SELECT     Owner,StokInd, ROW_NUMBER() OVER (PARTITION BY StokInd, Owner
					ORDER BY Tarih DESC) AS Position, CASE @IskontoEtkilesin WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0)
					ELSE Fiyat END AS Fiyat
		FROM         GirisCikisHareketleriEnvanter GCH WITH(NOLOCK)
		WHERE    (GCH.EnvanterOwner = @Owner OR @Owner = 0)
			AND Giren > 0
			AND Tarih <= @BitisTarihi AND Tarih >= @BaslangicTarihi) AS result
		WHERE     position = 1

)
GO



GO
CREATE FUNCTION [dbo].[SatisRaporuSonSatisFiyatlari]
(
	@Owner INT,
	@BaslangicTarihi DATETIME,
	@BitisTarihi DATETIME,
	@IskontoEtkilesin INT 
)
RETURNS TABLE
AS
RETURN
(
	SELECT result.Owner, result.StokInd, result.Fiyat FROM      
		(SELECT     Owner,StokInd,ROW_NUMBER() OVER (PARTITION BY StokInd, Owner
					ORDER BY Tarih DESC) AS Position, CASE @IskontoEtkilesin WHEN 1 THEN Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0)
					ELSE Fiyat END AS Fiyat
		FROM         GirisCikisHareketleriEnvanter GCH WITH(NOLOCK)
		WHERE    (GCH.EnvanterOwner = @Owner OR @Owner = 0)
			AND Cikan > 0
			AND Tarih <= @BitisTarihi AND Tarih >= @BaslangicTarihi) AS result
		WHERE     position = 1

)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[SatisRaporuWithoutCari] 
(
	@stokInd int,
	@depoInds nvarchar(max),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS 
TABLE 
AS
RETURN 
(
	WITH Dokumu(BaslikInd, StokInd,Owner,TipInd,Fiyat,Miktar,Tutar)
	AS
	(
		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			Hesaplar.Owner as Owner,
			h.TipInd as TipInd,
			h.Fiyat as Fiyat,
			SUM(
				Hareketler.Miktar * Hareketler.Carpan
			) as Miktar,
			SUM(
				(Hareketler.Miktar*Hareketler.Carpan*h.Fiyat-h.Iskonto-(Hareketler.Miktar*Hareketler.Carpan*h.Fiyat-h.Iskonto)*b.Iskonto/BaslikMatrah.Matrah)*(1+h.KDVOrani/100)
			)AS Tutar
		FROM Hareketler as h
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd 
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.BaslikInd 
		LEFT JOIN (SELECT 
			Basliklar.Ind as BaslikInd, 
			SUM(h.Miktar*h.Carpan*h.Fiyat-h.Iskonto) as Matrah
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar WITH(NOLOCK) ON h.BaslikInd=Basliklar.Ind 
		WHERE  h.TipInd = 6
		GROUP BY
			Basliklar.Ind)  as  BaslikMatrah ON BaslikMatrah.BaslikInd=b.Ind
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd 
		WHERE 
		b.TipInd = 102
		AND b.Aktif != 0
		AND h.TipInd = 6
		AND h.StokInd = @stokInd	 
		AND Hareketler.TipInd = 30 
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@depoInds,','))
		AND Hareketler.StokInd = @stokInd
		AND b.Tarih >= @BaslangicTarihi
		AND b.Tarih <= @BitisTarihi
		GROUP BY 
			b.Ind,
			h.StokInd,
			Hesaplar.Owner,
			h.TipInd,
			h.Fiyat
		UNION ALL
		
		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			Hesaplar.Owner as Owner,
			h.TipInd as TipInd,
			h.Fiyat as Fiyat,
			SUM(Hareketler.Miktar * Hareketler.Carpan) as Miktar,
			SUM(Hareketler.Miktar * Hareketler.Carpan * h.Fiyat) AS Tutar
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 104
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd 
		WHERE h.TipInd = 5 
		AND h.StokInd = @stokInd
		AND Hareketler.TipInd = 30
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@depoInds,','))
		AND Hareketler.StokInd = @stokInd
		AND b.Tarih >= @BaslangicTarihi
		AND b.Tarih <= @BitisTarihi
		AND b.TipInd = 104
		GROUP BY 
			b.Ind,
			h.StokInd,
			Hesaplar.Owner,
			h.TipInd,
			h.Fiyat

		UNION ALL

		SELECT
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		h.Owner as Owner,
		h.TipInd as TipInd,
		h.Fiyat as Fiyat,
		(h.Miktar * h.Carpan) as Miktar,
		(h.Miktar * h.Carpan * h.Fiyat) as Tutar
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd AND b.TipInd = 108
		WHERE h.TipInd = 40
		AND h.StokInd = @stokInd		
		AND b.Tarih >= @BaslangicTarihi
		AND b.Tarih <= @BitisTarihi 

		UNION ALL
		
		SELECT
		NULL as BaslikInd,
		h.StokInd as StokInd,
		h.Owner as Owner,
		h.TipInd as TipInd,
		h.Fiyat as Fiyat,
		(h.Miktar * h.Carpan) as Miktar,
		(h.Miktar * h.Carpan * h.Fiyat) as Tutar
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind
		WHERE h.TipInd = 504
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@depoInds,','))
		AND h.GirisTarihi >= @BaslangicTarihi
		AND h.GirisTarihi <= @BitisTarihi 
			
		UNION ALL
			
		SELECT 
		h.VardiyaNo as BaslikInd,
		h.StokInd as StokInd,
		h.Owner as Owner,
		h.TipInd as TipInd,
		h.Fiyat as Fiyat,
		h.Fark as Miktar,
		h.Fiyat * h.Fark as Tutar
		FROM EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
		WHERE h.TipInd = 39
		AND h.StokInd = @stokInd
		AND h.Tarih >= @BaslangicTarihi
			AND h.Tarih <= @BitisTarihi 
	)

	SELECT 
		s.Owner as Owner,
		s.Ind as StokInd,
		s.StokKodu as StokKodu,
		s.StokAdi as StokAdi,
		k.KDVOrani as KDVOrani,
		SUM(Dokumu.Miktar) as Miktar,
		(SUM(Dokumu.Tutar) / SUM(Dokumu.Miktar)) as OrtalamaFiyat,
		(SELECT 
			(CASE WHEN (Hareketler.TipInd = 6)
			THEN Fiyat*(100+Hareketler.KDVOrani)/100
			ELSE Fiyat 
			END) as Fiyat
			 FROM Hareketler 
			 WHERE Ind = (SELECT MAX(Hareketler.Ind) 
			 FROM Hareketler WITH(NOLOCK)
			 LEFT JOIN Hareketler as c WITH(NOLOCK) ON c.TipInd = 30 AND c.BaslikInd = Hareketler.BaslikInd
			 LEFT JOIN Hareketler as a WITH(NOLOCK) ON a.PerakendeInd = Hareketler.Ind
			 LEFT JOIN Basliklar WITH(NOLOCK) ON Basliklar.Ind = Hareketler.BaslikInd
			 LEFT JOIN Basliklar as p WITH(NOLOCK) ON p.Ind = Hareketler.VardiyaKartInd
			 LEFT JOIN EskiVardiyaSayacHareketleri as k ON k.Ind = Hareketler.Ind
			 WHERE ((Hareketler.TipInd IN(5,6) 
			 AND Hareketler.StokInd = @stokInd 
			 AND c.TipInd = 30 
			 AND c.DepoInd IN (SELECT * FROM fnSplit(@depoInds,','))
			 AND Basliklar.Tarih >= @BaslangicTarihi
			 AND Basliklar.Tarih <= @BitisTarihi)
			 OR (Hareketler.TipInd = 40
			 AND Hareketler.StokInd = @stokInd
			 AND a.TipInd = 30 
			 AND a.DepoInd IN (SELECT * FROM fnSplit(@depoInds,','))
			 AND p.Tarih >= @BaslangicTarihi
			 AND p.Tarih <= @BitisTarihi ))
			 OR ( Hareketler.TipInd = 39 
			 AND k.StokInd = @stokInd 
			 AND k.Tarih >= @BaslangicTarihi
			 AND k.Tarih <= @BitisTarihi)
			 OR (Hareketler.TipInd = 504 
			 AND Hareketler.StokInd = @stokInd
			 AND Hareketler.GirisTArihi>= @BaslangicTarihi
			 AND Hareketler.GirisTArihi <= @BitisTarihi 
			 AND a.DepoInd IN (SELECT * FROM fnSplit(@depoInds,','))) )) as SonFiyati,
		(SELECT MAX(Hareketler.Ind) 
			 FROM Hareketler WITH(NOLOCK)
			 LEFT JOIN Hareketler as c WITH(NOLOCK) ON c.TipInd = 30 AND c.BaslikInd = Hareketler.BaslikInd
			 LEFT JOIN Hareketler as a WITH(NOLOCK) ON a.PerakendeInd = Hareketler.Ind
			 LEFT JOIN Basliklar WITH(NOLOCK)  ON Basliklar.Ind = Hareketler.BaslikInd
			 LEFT JOIN Basliklar as p WITH(NOLOCK) ON p.Ind = Hareketler.VardiyaKartInd
			 LEFT JOIN EskiVardiyaSayacHareketleri as k WITH(NOLOCK) ON k.Ind = Hareketler.Ind
			 WHERE ((Hareketler.TipInd IN(5,6) 
			 AND Hareketler.StokInd = @stokInd 
			 AND c.TipInd = 30 
			 AND c.DepoInd IN (SELECT * FROM fnSplit(@depoInds,','))
			 AND Basliklar.Tarih >= @BaslangicTarihi
			 AND Basliklar.Tarih <= @BitisTarihi)
			 OR (Hareketler.TipInd = 40
			 AND Hareketler.StokInd = @stokInd
			 AND a.TipInd = 30 
			 AND a.DepoInd IN (SELECT * FROM fnSplit(@depoInds,','))
			 AND p.Tarih >= @BaslangicTarihi
			 AND p.Tarih <= @BitisTarihi ))
			 OR ( Hareketler.TipInd = 39 
			 AND k.StokInd = @stokInd 
			 AND k.Tarih >= @BaslangicTarihi
			 AND k.Tarih <= @BitisTarihi)
			 OR (Hareketler.TipInd = 504 
			 AND Hareketler.StokInd = @stokInd
			 AND Hareketler.GirisTArihi>= @BaslangicTarihi
			 AND Hareketler.GirisTArihi <= @BitisTarihi 
			 AND a.DepoInd IN (SELECT * FROM fnSplit(@depoInds,','))) ) as SonFiyatInd,
		SUM(Dokumu.Tutar) as Tutar
	FROM Stoklar as s WITH(NOLOCK)
	LEFT JOIN Dokumu WITH(NOLOCK) ON Dokumu.StokInd = s.Ind
	LEFT JOIN KDVGruplari as k WITH(NOLOCK) ON k.Ind = s.SatisKDVGrupInd 
	WHERE s.Ind = @stokInd AND Dokumu.Miktar <>0
	GROUP BY
		s.Owner,
		s.Ind,
		s.StokKodu,
		s.StokAdi,
		k.KDVOrani
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[SatisSatilanUrunler] 
(	
	@KullaniciInd int
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT 
		TOP 100 PERCENT
		Owner,
		StokInd,
		StokKodu,
		StokAdi,
		GrupInd,
		GrupAdi,
		SUM(Miktar) AS Miktar,
		SUM(Carpan) AS Carpan,
		Fiyat,
		SUM(Miktar*Carpan*Fiyat) AS Tutar
	FROM SatilanUrunListesi WITH(NOLOCK)
	WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd
	GROUP BY
		Owner,
		StokInd,
		StokKodu,
		StokAdi,
		GrupInd,
		GrupAdi,
		Fiyat
	ORDER BY
		GrupInd
)
GO


CREATE FUNCTION [dbo].[SayacHareketDokumu] 
(
	@baslangic datetime,
	@bitis datetime
)
RETURNS 
@Dokum TABLE 
(
	SayacInd int,
	SayacAdi nvarchar(100),
	DegisimTarihi datetime,
	Owner int,
	Fiyat decimal(28,8),
	IlkEndeks decimal(28,8),
	SonEndeks decimal(28,8),
	Fark decimal(28,8),
	Tutar decimal(28,8),
	Aktarma decimal(28,8),
	AzalanEndeks bit
	
)
AS
BEGIN
	WITH HareketDokumu(SayacInd, SayacAdi, DegisimTarihi, Owner, Fiyat, IlkEndeks, SonEndeks, Fark, Tutar, Aktarma, AzalanEndeks)
	AS
	(	
		SELECT 
			s.SayacInd,
			s.SayacAdi,
			MIN(v.Tarih) as DegisimTarihi,
			h.Owner as Owner,
			h.Fiyat as Fiyat,
			MIN(h.EskiEndeks) as IlkEndeks,
			CASE WHEN (s.AzalanEndeks IN (1))
			THEN MAX(h.EskiEndeks) + SUM(h.YeniEndeks - h.EskiEndeks) 
			ELSE MIN(h.EskiEndeks) + SUM(h.YeniEndeks - h.EskiEndeks) END as SonEndeks,
			ABS(SUM(h.YeniEndeks - h.EskiEndeks - h.Aktarma)) as Fark,
			ABS(SUM(h.YeniEndeks - h.EskiEndeks - h.Aktarma))*h.Fiyat as Tutar,
			SUM(h.Aktarma) as Aktarma,
			s.AzalanEndeks
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN SayacForVardiya as s ON h.SayacInd = s.SayacInd
		LEFT JOIN VardiyaKartInds as v ON v.Ind = h.VardiyaKartInd
		WHERE
		v.Tarih >= @baslangic
		AND v.Tarih <= @bitis
		AND (h.TipInd = 44 OR h.TipInd = 39)
		GROUP BY h.Owner, h.Fiyat, s.SayacInd, s.SayacAdi, s.AzalanEndeks, v.Tarih
	)

	INSERT INTO @Dokum
		SELECT 
			h1.*
		FROM HareketDokumu as h1 WITH(NOLOCK)
		ORDER BY  h1.SayacAdi, h1.DegisimTarihi, h1.Fiyat, h1.AzalanEndeks

	DECLARE @x int
		SELECT @x=COUNT(*) FROM @Dokum

		IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
		0 as SayacInd,
		'' as SayacAdi,
		'' as DegisimTarihi,
		null as Owner,
		0 as Fiyat,
		0 as IlkEndeks,
		0 as SonEndeks,
		0 as Fark,
		0 as Tutar,
		0 as Aktarma,
		'false' as AzalanEndeks

	RETURN
END

GO
CREATE FUNCTION [dbo].[SayacinMuhteviyati](

@sayacInd INT)

RETURNS 
TABLE 
AS
RETURN 
(
	SELECT H.StokInd, NULL Owner
		FROM HesapDetaylari HD WITH(NOLOCK)
		INNER JOIN Hesaplar H WITH(NOLOCK) ON H.Ind=HD.DepoInd
		WHERE HD.Ind=@sayacInd
)

GO
CREATE FUNCTION [dbo].[SayacListesi](@Owner int)

RETURNS TABLE 
AS
RETURN 
(
SELECT 
	CASE WHEN SE.Ind IS NULL
	THEN 0 ELSE	SE.Ind END AS Ind,
	S.Ind AS Owner,
	S.Ind AS SubeId, 
	S.SubeAdi, 
	HD.SayacAdi, 
	HD.SayacKodu,
	CASE WHEN SE.OkcInd IS NULL
	THEN 0 ELSE SE.OkcInd END AS OkcInd,
	CASE WHEN SE.OkcNo IS NULL
	THEN '' ELSE SE.OkcNo END AS OkcNo
FROM 
	HesapDetaylari HD WITH(NOLOCK)
INNER JOIN 
	Subeler S WITH(NOLOCK) ON HD.Owner = S.Ind
LEFT JOIN
	LO_SayacEslestirme SE WITH(NOLOCK) ON HD.SayacKodu = SE.SayacKodu
WHERE
	TipInd = 402 AND 
	OtomasyonAktif = 1
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[SayilmayanUrunler] 
(	
	@SayimBaslikInd nvarchar(200)
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT 
		Stoklar.Owner,
		Stoklar.Ind as StokInd,
		Stoklar.StokKodu,
		Stoklar.StokAdi,
		SUM(
			CASE  WHEN (Hareketler.TipInd=29)
			THEN Miktar * Carpan
			ELSE 0
			END
			)-
		SUM(
			CASE  WHEN (Hareketler.TipInd=30 )
			THEN Miktar * Carpan
			ELSE 0
			END
			) as DepoMiltari,
		0 as RafMiktari
		FROM Stoklar WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Stoklar.Ind=Hareketler.StokInd
		WHERE Hareketler.StokInd NOT IN (SELECT StokInd FROM Hareketler WHERE SayimMiktari>0 AND BaslikInd=@SayimBaslikInd)
		GROUP BY 
			Stoklar.Owner,
			Stoklar.Ind,
			Stoklar.StokKodu,
			Stoklar.StokAdi
)
GO
CREATE FUNCTION [dbo].[SayimBaslikBilgisindenStokSayimKontrol]
(
	@BaslikInd int
)
RETURNS TABLE 
AS
RETURN 
(
	select t1.StokInd as Ind, t1.Owner as Owner
	from
	(
		select Owner, StokInd
		from Hareketler WITH(NOLOCK)
		where BaslikInd in
		(
			select top 1 Ind
			from Basliklar WITH(NOLOCK)
			where DepoInd in
			(
				select DepoInd
				from Basliklar WITH(NOLOCK)
				where Ind = @BaslikInd
			)
			and TipInd in (118, 113) and Ind < @BaslikInd
			order by Ind desc
		) and TipInd = 112
	) as t1
		inner join
	(
		select Owner, StokInd
		from Hareketler WITH(NOLOCK)
		where BaslikInd = @BaslikInd
			and TipInd = 112
	) as t2
		on t1.StokInd = t2.StokInd
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[SayimIcinDepoDurumu] 
(
	@DepoInd int,
	@SelectedSube int
)
RETURNS 
TABLE 
AS
RETURN 
(
	WITH DepoDurumu(DepoInd,Owner,Durum)
	AS
	(	
		SELECT 
			Hesaplar.Ind as DepoInd,
			Hesaplar.Owner as Owner,
			(CAST((CASE WHEN(Subeler.IsMerkez = 1 AND @SelectedSube = 0) OR (@SelectedSube > 0)
			THEN 1
			ELSE 0
			END) AS bit)) as durum
		FROM Hesaplar WITH(NOLOCK)
		LEFT JOIN Subeler WITH(NOLOCK) ON Hesaplar.Owner = Subeler.Ind
		WHERE Hesaplar.Ind = @DepoInd
	)
	SELECT
		d.*
	FROM DepoDurumu as d WITH(NOLOCK)
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[SayimIcinStokDurumu] 
(
	@StokInd int,
	@SelectedSube int
)
RETURNS 
TABLE 
AS
RETURN 
(
	WITH StokDurumu(StokInd,Owner,Durum)
	AS
	(	
		SELECT 
			Stoklar.Ind as StokInd,
			Stoklar.Owner as Owner,
			(CAST((CASE WHEN(((Stoklar.Owner IS NULL OR Subeler.IsMerkez = 1) AND @SelectedSube = 0) OR (@SelectedSube > 0))
			THEN 1
			ELSE 0
			END) AS bit)) as Durum
		FROM Stoklar WITH(NOLOCK)
		LEFT JOIN Subeler WITH(NOLOCK) ON Subeler.Ind = Stoklar.Owner
		WHERE Stoklar.Ind = @StokInd 
	)

	SELECT
		*
	FROM StokDurumu WITH(NOLOCK)
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[SGGSatilanUrunler] 
(	
	@KullaniciInd int
)
RETURNS 
TABLE 
AS
RETURN 
(	
	SELECT 
		SatilanUrunListesi.Owner,
		SatilanUrunListesi.StokInd,
		SatilanUrunListesi.StokKodu,	
		SatilanUrunListesi.StokAdi,	
		SatilanUrunListesi.GrupInd,
		SatilanUrunListesi.GrupAdi,
		SUM(SatilanUrunListesi.Miktar) AS Miktar,
		SatilanUrunListesi.Fiyat,
		SUM(Miktar*Carpan*Fiyat) AS Tutar
	FROM SatilanUrunListesi WITH(NOLOCK)
	WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd
	GROUP BY
		SatilanUrunListesi.Owner,
		SatilanUrunListesi.StokInd,
		SatilanUrunListesi.StokKodu,	
		SatilanUrunListesi.StokAdi,	
		SatilanUrunListesi.GrupInd,
		SatilanUrunListesi.GrupAdi,
		SatilanUrunListesi.Fiyat

)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[SGGSatilanUrunOrani] 
(	
	@KullaniciInd int
)
RETURNS 
TABLE 
AS
RETURN 
(
	WITH StokDokumu(Owner,Miktar,Tutar)
	AS
	(
		SELECT 
			Owner,
			SUM(Miktar) AS Miktar,
			SUM(Miktar*Carpan*Fiyat) AS Tutar
		FROM SatilanUrunListesi WITH(NOLOCK)
		WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd
		GROUP BY
			Owner
	)

	SELECT 
		SatilanUrunListesi.Owner,
		SatilanUrunListesi.GrupInd,
		SatilanUrunListesi.GrupAdi,
		SUM(SatilanUrunListesi.Miktar) AS Miktar,
		(SUM(SatilanUrunListesi.Miktar)/StokDokumu.Miktar)*100 AS MiktarYuzde,
		SUM(SatilanUrunListesi.Miktar*SatilanUrunListesi.Carpan*SatilanUrunListesi.Fiyat) AS Tutar,
		(SUM(SatilanUrunListesi.Miktar*SatilanUrunListesi.Carpan*SatilanUrunListesi.Fiyat)/StokDokumu.Tutar)*100 AS TutarYuzde
	FROM SatilanUrunListesi WITH(NOLOCK),StokDokumu WITH(NOLOCK)
	WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd
	GROUP BY
		SatilanUrunListesi.Owner,
		SatilanUrunListesi.GrupInd,
		SatilanUrunListesi.GrupAdi,
		StokDokumu.Miktar,
		StokDokumu.Tutar

)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[SiparisDetayToplam] 
(
	@Inds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT
		NULL AS Owner,
		h.CarihesapAdi,
		h.StokAdi,
		ISNULL
		(
			SUM(h.Miktar)
			,0
		) AS Miktar,
		ISNULL
		(
			SUM
			(
				(
					h.Miktar
					* 
					h.Fiyat 
				) 
			)
			,0
		) AS Tutar,
		h.BirimAdi
	FROM 
		Basliklar AS b WITH(NOLOCK)
		INNER JOIN Hareketler AS h WITH(NOLOCK) ON b.Ind = h.BaslikInd
	WHERE 
		(b.Aktif IS NULL OR b.Aktif = 1) AND 
		(b.TipInd = 120)
		AND 
		(b.Ind IN (SELECT * FROM fnSplit(@Inds,',')))
	GROUP BY
		h.CarihesapAdi,
		h.StokAdi,
		h.BirimAdi
	UNION ALL
	SELECT
		NULL AS Owner,
		'' AS CarihesapAdi,
		'' AS StokAdi,
		ISNULL
		(
			SUM(h.Miktar)
			,0
		) AS Miktar,
		ISNULL
		(
			SUM
			(
				(
					h.Miktar
					* 
					h.Fiyat 
				) 
			)
			,0
		) AS Tutar,
		h.BirimAdi
	FROM 
		Basliklar AS b WITH(NOLOCK)
		INNER JOIN Hareketler AS h WITH(NOLOCK) ON b.Ind = h.BaslikInd
	WHERE 
		(b.Aktif IS NULL OR b.Aktif = 1) AND 
		(b.TipInd = 120)
		AND 
		(b.Ind IN (SELECT * FROM fnSplit(@Inds,',')))
	GROUP BY
		h.BirimAdi
)
GO
CREATE FUNCTION [dbo].[SonAlisFiyatiForDepoAktarim]
(	
	@Tarih datetime,
	@StokInd int,
	@Owner int
)
RETURNS @AlisFiyati TABLE 
(
	Tarih datetime,
	StokInd int,
	Owner int,
	Fiyat decimal(28,13)
)
AS
BEGIN
DECLARE @Fiyat DECIMAL(28,13)


	SELECT TOP 1 
		@StokInd = StokInd,
		@Fiyat = Fiyat,
		@Owner = Owner,
		@Tarih = Tarih
	FROM 
		dbo.AlisHareketleri WITH(NOLOCK)
	WHERE 
	TipInd IN (2,3) 
	AND owner = @Owner
	AND StokInd = @StokInd
	AND Tarih <= @Tarih	
	AND HesapInd IS NOT NULL
	ORDER BY Tarih DESC,Ind DESC

IF (@Fiyat IS NULL) --Baktigi subede deger bulamazsa yapilmis son hareketi getirmesi icin.
	BEGIN 
		SELECT TOP 1 
			@Fiyat = Fiyat
		FROM 
			dbo.AlisHareketleri 
		WHERE 
		TipInd IN (2,3) 
		AND StokInd = @StokInd
		AND Tarih <= @Tarih
		AND HesapInd IS NOT NULL
	    ORDER BY Tarih DESC,Ind DESC

	END
		INSERT INTO @AlisFiyati 
		(Tarih,StokInd,Owner,Fiyat)
		VALUES (@Tarih,@StokInd,@Owner,@Fiyat)
	RETURN
END


GO
CREATE FUNCTION [dbo].[SonAlisFiyatiIskontoluForSayimGercek]
(	
	@Tarih datetime,
	@StokInd int,
	@Owner int
)
RETURNS @AlisFiyatiIskontolu TABLE 
(
	Tarih datetime,
	StokInd int,
	Owner int,
	Fiyat decimal(28,13)
)
AS
BEGIN
DECLARE @Fiyat DECIMAL(28,13)


	SELECT TOP 1 
		@Owner = Owner,
		@StokInd = StokInd,
		@Fiyat = ((Fiyat*Miktar)-Iskonto)/Miktar,--SZY burada iskonto düşmüyordu düşmesi sağlandı
		@Tarih = Tarih
	FROM 
		dbo.AlisHareketleri WITH(NOLOCK)
	WHERE 
	TipInd IN (3) 
	AND owner = @Owner
	AND StokInd = @StokInd
	AND Tarih <= @Tarih
	ORDER BY Tarih DESC,Ind DESC
IF (@Fiyat IS NULL) --Baktigi subede deger bulamazsa yapilmis son hareketi getirmesi icin.
	BEGIN 
		SELECT TOP 1 
			@Fiyat = ((Fiyat*Miktar)-Iskonto)/Miktar--SZY burada iskonto düşmüyordu düşmesi sağlandı
		FROM 
			dbo.AlisHareketleri WITH(NOLOCK)
		WHERE 
		TipInd IN (3) 
		AND StokInd = @StokInd
		AND Tarih <= @Tarih
		ORDER BY Tarih DESC,Ind DESC

	END
		INSERT INTO @AlisFiyatiIskontolu 
		(Tarih,StokInd,Owner,Fiyat)
		VALUES (@Tarih,@StokInd,@Owner,@Fiyat)
	RETURN
END


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[SonAlisFiyatlariCari] 
(	
	@Tarih datetime,
	@DepoInds nvarchar(max),
	@CariInd int
)
RETURNS @Dokum TABLE
(
	Owner int,
	BirimAdi nvarchar(15),
	Fiyat decimal(28,8),
	StokInd int
)

AS
BEGIN
	INSERT INTO @Dokum
	SELECT
		g.Owner,
		brm.BirimAdi,
		g.Fiyat,
		g.StokInd
	FROM
		GirisCikisHareketleri as g WITH(NOLOCK)
		LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
	WHERE
		g.TipIndAltHareket IN (2, 3)
		AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND g.Tarih <= @Tarih
		AND g.HesapInd = @CariInd
	DECLARE @x int
		SELECT @x=COUNT(*) FROM @Dokum		
		IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
		null as Owner,
		'' as BirimAdi,
		0 as Fiyat,
		-1 as StokInd
		
RETURN
END

GO
-- verilen tarihten önceki alış fiyatlarını getirir
CREATE FUNCTION [dbo].[SonAlisFiyatlariTariheGore] 
(	
	@Tarih datetime,
	@StokInd int,
	@Owner INT
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		Fiyat, 
		BirimAdi,
		@Owner AS Owner,
		KDVOrani
	FROM SonAlisFiyatlar(@Tarih, @Owner) WHERE StokInd = @StokInd
)

GO
CREATE FUNCTION [dbo].[SonKayitIndPersonelNakitForSatisKasasi] 
(	
	@Ind int,
	@EntegrasyonTipiFalse int
)
RETURNS @dokum TABLE
(
    Owner int,
	SonKayitInd int
) 
begin

	if @EntegrasyonTipiFalse=0
	begin 
		insert into @dokum
		SELECT 
		    Owner,
			SonKayitInd
		FROM
		(
			SELECT
			Owner,
		    MAX(IslemInd) AS SonKayitInd
			FROM SatisKasasi WITH(NOLOCK)
			WHERE 
		    KullaniciInd = @Ind AND IsYeniSatis = 'false' AND Tablo= 'Hareketler'
			GROUP BY Owner
		) AS T
		
	end 
return
end




GO



GO
CREATE FUNCTION [dbo].[SonSatisFiyatiIskontolu]
(
	@Owner INT,
	@StokInd INT
)
RETURNS TABLE
AS
RETURN
(
	select top 1 Owner, Fiyat - ISNULL(ISNULL(HareketlerIskonto,0) / NULLIF(Miktar, 0),0) - ISNULL(HareketBaslikIskonto,0) as Fiyat 
	from GirisCikisHareketleriEnvanter WITH(NOLOCK) WHERE EnvanterOwner = @Owner and Cikan > 0 and StokInd = 
	@StokInd order by Tarih desc
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[SonSatisFiyatlari] 
(	
	@Tarih datetime,
	--@MarketTarih datetime,
	@DepoInds nvarchar(max),
	@TipInd int--,
	--@Ind int
)
RETURNS @Dokum TABLE
(
	Owner int,
	BirimAdi nvarchar(15),
	Fiyat decimal(28,8),
	StokInd int
)
AS
BEGIN
	IF(@TipInd = 1000)
		INSERT INTO @Dokum
		SELECT
			GirisCikisHareketleri.Owner,  
			Birimler.BirimAdi,
			GirisCikisHareketleri.Fiyat,
			GirisCikisHareketleri.StokInd 
		FROM
			GirisCikisHareketleri WITH(NOLOCK) LEFT JOIN
			Stoklar WITH(NOLOCK) ON (Stoklar.Ind = GirisCikisHareketleri.StokInd) LEFT JOIN
			Birimler WITH(NOLOCK) ON (Stoklar.AnaBirimInd = Birimler.Ind)
		WHERE 
			(GirisCikisHareketleri.TipIndAltHareket = 5 OR GirisCikisHareketleri.TipIndAltHareket = 6) AND
			GirisCikisHareketleri.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,',')) AND
			GirisCikisHareketleri.Tarih <= @Tarih	
		UNION ALL
		SELECT 
			h.Owner,  
			NULL as BirimAdi,
			h.Fiyat,
			h.StokInd
		FROM EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
		WHERE h.TipInd = 39
		AND h.Tarih <= @Tarih 
		AND h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
	ELSE IF(@TipInd = 504)
		INSERT INTO @Dokum
		SELECT 
			h.Owner,  
			h.BirimAdi,
			h.Fiyat,
			h.StokInd
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd 
		WHERE h.TipInd = 40
		AND b.Tarih <= @Tarih 
		AND (h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,',')) OR h.DepoInd IS NULL)
		AND b.TipInd = 108
		UNION ALL
		SELECT
			h.Owner,
			h.BirimAdi,
			h.Fiyat,
			h.StokInd
		FROM 
			SatisKasasi as sk WITH(NOLOCK)
			LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
			LEFT JOIN Hareketler WITH(NOLOCK) ON 0=0
		WHERE
			h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0
			AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
			AND Hareketler.PerakendeInd = h.Ind
			AND Hareketler.StokInd = h.StokInd
			AND Hareketler.TipInd = 30
	ELSE
		INSERT INTO @Dokum
		SELECT
			GirisCikisHareketleri.Owner,  
			Birimler.BirimAdi,
			GirisCikisHareketleri.Fiyat,
			GirisCikisHareketleri.StokInd 
		FROM
			GirisCikisHareketleri WITH(NOLOCK) LEFT JOIN
			Stoklar WITH(NOLOCK) ON (Stoklar.Ind = GirisCikisHareketleri.StokInd) LEFT JOIN
			Birimler WITH(NOLOCK) ON (Stoklar.AnaBirimInd = Birimler.Ind)
		WHERE 
			(GirisCikisHareketleri.TipIndAltHareket = 5 OR GirisCikisHareketleri.TipIndAltHareket = 6) AND
			GirisCikisHareketleri.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,',')) AND
			GirisCikisHareketleri.Tarih <= @Tarih	
		UNION ALL
		SELECT 
			h.Owner,  
			NULL as BirimAdi,
			h.Fiyat,
			h.StokInd
		FROM EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
		WHERE h.TipInd = 39
		AND h.Tarih <= @Tarih 
		AND h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		UNION ALL
		SELECT 
			h.Owner,  
			h.BirimAdi,
			h.Fiyat,
			h.StokInd
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd 
		WHERE h.TipInd = 40
		AND b.Tarih <= @Tarih 
		AND (h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,',')) OR h.DepoInd IS NULL)
		AND b.TipInd = 108
		UNION ALL
		SELECT 
			h.Owner,  
			h.BirimAdi,
			h.Fiyat,
			h.StokInd
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd 
		WHERE h.TipInd = 40
		AND b.Tarih <= @Tarih 
		AND (h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,',')) OR h.DepoInd IS NULL)
		AND b.TipInd = 108
		UNION ALL
		SELECT
			h.Owner,
			h.BirimAdi,
			h.Fiyat,
			h.StokInd
		FROM 
			SatisKasasi as sk WITH(NOLOCK)
			LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
			LEFT JOIN Hareketler WITH(NOLOCK) ON 0=0
		WHERE
			h.TipInd = 504 AND sk.Tablo = 'Hareketler' AND sk.IsYeniSatis = 0
			AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
			AND Hareketler.PerakendeInd = h.Ind
			AND Hareketler.StokInd = h.StokInd
			AND Hareketler.TipInd = 30
	DECLARE @x int
	SELECT @x=COUNT(*) FROM @Dokum		
	IF(@x=0)
	INSERT INTO @Dokum 
	SELECT
	null as Owner,
	'' as BirimAdi,
	0 as Fiyat,
	-1 as StokInd	
RETURN
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[SonSatisFiyatlariCari] 
(	
	@Tarih datetime,
	@DepoInds nvarchar(max),
	@CariInd int
)
RETURNS @Dokum TABLE
(
	Owner int,
	BirimAdi nvarchar(15),
	Fiyat decimal(28,8),
	StokInd int
)

AS
BEGIN
	INSERT INTO @Dokum
	SELECT
		g.Owner,
		brm.BirimAdi,
		g.Fiyat,
		g.StokInd
	FROM
		GirisCikisHareketleri as g WITH(NOLOCK)
		LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = g.StokInd
		LEFT JOIN Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
	WHERE
		g.TipIndAltHareket IN (5, 6)
		AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND g.Tarih <= @Tarih
		AND g.HesapInd = @CariInd
	DECLARE @x int
		SELECT @x=COUNT(*) FROM @Dokum		
		IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
		null as Owner,
		'' as BirimAdi,
		0 as Fiyat,
		-1 as StokInd
		
RETURN
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[StogaAitBirimler] 
(	
	@Ind int
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		Birimler.Ind,
		Birimler.BirimAdi,
		Birimler.Carpan,
		Birimler.ParentInd,
		Stoklar.Owner
	FROM Birimler WITH(NOLOCK), Stoklar WITH(NOLOCK)
	WHERE Birimler.ParentInd = (SELECT AnaBirimInd 
								 FROM Stoklar WITH(NOLOCK)
								 WHERE Stoklar.Ind = @Ind)
	AND Stoklar.Ind = @Ind
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[StogunDepoyaUygunlugu] 
(
	@StokInd int,
	@DepoInd int
)
RETURNS 
TABLE 
AS
RETURN 
(
	WITH StokDurumu(StokInd,Owner,Durum)
	AS
	(	
		SELECT 
			Stoklar.Ind as StokInd,
			NULL as Owner,
			(CAST((CASE WHEN ((Stoklar.Owner IS NOT NULL AND Stoklar.Owner = Hesaplar.Owner) OR (Stoklar.Owner IS NULL) )
			THEN 1 
			ELSE 0
			END) AS bit)) as Durum 
		FROM Stoklar WITH(NOLOCK)
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = @DepoInd
		WHERE Stoklar.Ind = @StokInd 
	)

	SELECT
		*
	FROM StokDurumu
)
GO
CREATE FUNCTION StokAkaryakitKontrol
(
	@stokInd INT 
)

RETURNS 
TABLE 
AS
RETURN 
(
	SELECT COUNT(Ind) StokDepoSayisi,NULL Owner FROM Hesaplar
	WHERE StokInd=@stokInd

)
GO
CREATE FUNCTION StokDetayGetir
(
	@Deger INT
)
RETURNS TABLE
AS
RETURN
(	
	SELECT * FROM StokDetaylari WITH(NOLOCK) WHERE Ind=@Deger
)
GO
CREATE FUNCTION StokDetayIndGetir
(
	@StokKodu VARCHAR(MAX),
	@Own VARCHAR(MAX)
)
RETURNS @Table TABLE(Owner INT,SonFiyatInd INT)
AS
BEGIN
		DECLARE @D1 INT
		DECLARE @D2 INT
		DECLARE @ANA VARCHAR(MAX)

IF (@Own='')
BEGIN
		SET @ANA =(SELECT COUNT(Ind) FROM StokDetaylari WITH(NOLOCK)
		WHERE StokInd=(SELECT Ind FROM Stoklar WITH(NOLOCK) WHERE StokKodu=@StokKodu) AND Owner IS NULL)

		SET @D1 = (SELECT Owner FROM StokDetaylari WITH(NOLOCK)
		WHERE StokInd=(SELECT Ind FROM Stoklar WITH(NOLOCK) WHERE StokKodu=@StokKodu) AND Owner IS NULL
		GROUP BY Owner )

		IF (@ANA=1)
		BEGIN
			SET @D2 = (SELECT DISTINCT(K.Ind)FROM SatisFiyatiSiralama S WITH(NOLOCK),
			(SELECT Ind FROM StokDetaylari WITH(NOLOCK) WHERE StokInd=(SELECT Ind FROM Stoklar WITH(NOLOCK) WHERE StokKodu=@StokKodu) AND Owner IS NULL) K)
		END
		ELSE		
		BEGIN
			SET @D2 = (SELECT DISTINCT(K.Ind) FROM SatisFiyatiSiralama S WITH(NOLOCK),
			(SELECT Ind FROM StokDetaylari WITH(NOLOCK) WHERE StokInd=(SELECT Ind FROM Stoklar WITH(NOLOCK) WHERE StokKodu=@StokKodu) AND Owner IS NULL) K
			WHERE S.FiyatInd=K.Ind AND SiraNo=0)
		END
END
ELSE
BEGIN
		SET @ANA =(SELECT COUNT(Ind) FROM StokDetaylari
		WHERE StokInd=(SELECT Ind FROM Stoklar WITH(NOLOCK) WHERE StokKodu=@StokKodu) AND Owner = @Own)

		SET @D1 = (SELECT Owner FROM StokDetaylari WITH(NOLOCK)
		WHERE StokInd=(SELECT Ind FROM Stoklar WITH(NOLOCK) WHERE StokKodu=@StokKodu) AND Owner = @Own  
		GROUP BY Owner)

		IF (@ANA=1)
		BEGIN
			SET @D2 = (SELECT DISTINCT(K.Ind)FROM SatisFiyatiSiralama S WITH(NOLOCK),
			(SELECT Ind FROM StokDetaylari WITH(NOLOCK) WHERE StokInd=(SELECT Ind FROM Stoklar WITH(NOLOCK) WHERE StokKodu=@StokKodu) AND Owner = @Own) K)
		END
		ELSE
		BEGIN
			SET @D2 = (SELECT DISTINCT(K.Ind)FROM SatisFiyatiSiralama S,
			(SELECT Ind FROM StokDetaylari WITH(NOLOCK) WHERE StokInd=(SELECT Ind FROM Stoklar WITH(NOLOCK) WHERE StokKodu=@StokKodu) AND Owner = @Own) K
			WHERE S.FiyatInd=K.Ind AND SiraNo=0)
		END
END	
		INSERT INTO @Table(Owner,SonFiyatInd)
		VALUES(@D1,@D2)
RETURN
END

GO
CREATE FUNCTION [dbo].[StokFifoDegerleri]
(
	@ArticleId int
)
/*
ArticleId  Stoklar tablosunun Ind sine karsilik gelmektedir... 
select * from Stoklar S CROSS APPLY dbo.StokFifoDegerleri(s.Ind)
seklinde kullanilabilmesi icin parametre olarak set edilmistir... 
*/
RETURNS TABLE
AS

RETURN 
(
WITH cteStockSum (ArticleID ,TotalStock)AS
(
	SELECT  ArticleID ,
	SUM(CASE WHEN TranCode = 'OUT' THEN 0 - Items
			 ELSE Items
		END) AS TotalStock

	FROM    [dbo].[FifoyaEsasHareketler] WITH(NOLOCK)
	GROUP BY ArticleID
),
cteReverseInSum (ArticleID, TranDate, RollingStock, ThisStock) AS
(
	SELECT  s.ArticleID ,
	s.TranDate ,
	( SELECT    SUM(i.Items)
	  FROM      [dbo].[FifoyaEsasHareketler] AS i WITH(NOLOCK)
	  WHERE     i.ArticleID = s.ArticleID
				AND i.TranCode IN ( 'IN', 'RET' )
				AND i.TranDate >= s.TranDate
	) AS RollingStock ,
	s.Items AS ThisStock
	FROM    [dbo].[FifoyaEsasHareketler] AS s WITH(NOLOCK)
	WHERE   s.TranCode IN ( 'IN', 'RET' )
),

cteWithLastTranDate (ArticleID, TotalStock, TranDate, StockToUse, RunningTotal, UseThisStock) AS
(
SELECT  w.ArticleID ,
w.TotalStock ,
LastPartialStock.TranDate ,
LastPartialStock.StockToUse ,
LastPartialStock.RunningTotal ,
w.TotalStock - LastPartialStock.RunningTotal
+ LastPartialStock.StockToUse AS UseThisStock
FROM    cteStockSum AS w WITH(NOLOCK)
CROSS APPLY ( SELECT TOP ( 1 )
                        z.TranDate ,
                        z.ThisStock AS StockToUse ,
                        z.RollingStock AS RunningTotal
              FROM      cteReverseInSum AS z WITH(NOLOCK)
              WHERE     z.ArticleID = w.ArticleID
                        AND z.RollingStock >= w.TotalStock
              ORDER BY  z.TranDate DESC
            ) AS LastPartialStock
)


SELECT e.Owner, y.ArticleID ,
y.TotalStock AS CurrentItems ,
e.TranDate ,
e.TranDate AS LastTranDate ,
y.UseThisStock ,
e.Items AS FifoyaEsasAlimMiktari ,
Price.Price AS FifoBirimFiyat ,
CASE WHEN e.TranDate = y.TranDate THEN y.UseThisStock
     ELSE e.Items
END * Price.Price AS SatirFifoDegeri
FROM    cteWithLastTranDate AS y WITH(NOLOCK)
INNER JOIN dbo.FifoyaEsasHareketler AS e WITH(NOLOCK)
      ON e.ArticleID = y.ArticleID
        AND e.TranDate >= y.TranDate
        AND e.TranCode IN ('IN', 'RET' )
CROSS APPLY (
/* Find the Price of the item in */ SELECT TOP ( 1 )
                                    p.Price
                            FROM    dbo.FifoyaEsasHareketler AS p
                            WHERE   p.ArticleID = e.ArticleID
                                    AND p.TranDate <= e.TranDate
                                    AND p.TranCode = 'IN'
                            ORDER BY p.TranDate DESC
            ) AS Price
WHERE y.ArticleID = @ArticleId

)
GO
CREATE FUNCTION [dbo].[StokGruplarininAkaryakitOlmasi]
(
	@grupInd INT
)

RETURNS 
TABLE 
AS
RETURN 
(
	SELECT * , (SELECT COUNT(Ind) FROM Hesaplar WITH(NOLOCK) WHERE Hesaplar.TipInd=205 AND Hesaplar.StokInd=Stoklar.Ind) AS DepoSayisi,0 Sira 
		FROM Stoklar WITH(NOLOCK)
		WHERE Stoklar.GrupInd=@grupInd 
)

GO
CREATE FUNCTION [dbo].[StokGrupRecursive](@stokGrupId as int)

RETURNS TABLE
AS
RETURN
(
	WITH
	  cteGrup (Ind, GrupAdi, ParentInd, SiraNo)
	  AS
	  (
		SELECT Ind, GrupAdi, ParentInd, SiraNo
		FROM StokGruplari WITH(NOLOCK)
		WHERE Ind=@stokGrupId 
	    
		UNION ALL
	    
		select sg.Ind, sg.GrupAdi, sg.ParentInd, sg.SiraNo
		From StokGruplari sg WITH(NOLOCK)
		inner join cteGrup g  
		on g.Ind=sg.ParentInd
	  )
	  
	  select 0 as Owner, Ind, GrupAdi, ParentInd, SiraNo
	  from cteGrup WITH(NOLOCK)
)

GO
CREATE FUNCTION [dbo].[StokGrupRecursive_Stoklar]
(
	@stokGrupId as int
)

RETURNS TABLE
AS
RETURN
(
	WITH
	  cteGrup (Ind, GrupAdi, ParentInd, SiraNo)
	  AS
	  (
		SELECT Ind, GrupAdi, ParentInd, SiraNo
		FROM StokGruplari WITH(NOLOCK)
		WHERE Ind=@stokGrupId 
	    
		UNION ALL
	    
		select sg.Ind, sg.GrupAdi, sg.ParentInd, sg.SiraNo
		From StokGruplari sg WITH(NOLOCK)
		inner join cteGrup g 
		on g.Ind=sg.ParentInd
	  )
	  
	  select * from Stoklar WITH(NOLOCK) where GrupInd in (select Ind from cteGrup)
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[StokHareketDevir] 
(	
	@StokInd int, @DepoInds nvarchar(max), 
	@tarih datetime
)


RETURNS @HareketDokumu TABLE
(BaslikInd int, StokInd int, Tarih DATETIME, Belge nvarchar(max), Owner int, TipInd int, Fiyat decimal(28, 8), Giren decimal(28, 8), Cikan decimal(28, 8))
AS
BEGIN
	INSERT INTO @HareketDokumu
	SELECT TOP 100 PERCENT
		g.BaslikInd as BaslikInd,
		g.StokInd as StokInd,
		g.Tarih as Tarih,
		g.Belge as Belge,
		g.Owner as Owner,
		--g.TipIndAltHareket as TipInd,
		g.TipInd,
		g.Fiyat as Fiyat,
		g.Giren as Giren,
		g.Cikan as Cikan
	FROM
		GirisCikisHareketleri AS g WITH(NOLOCK)
	WHERE
		g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))  
		AND
		g.StokInd = @StokInd
		AND g.Tarih < @tarih
	GROUP BY 
		g.BaslikInd,
		g.StokInd,
		g.Tarih,
		g.Belge,
		g.Owner,
		g.TipInd,
		g.Fiyat,
		g.Giren,
		g.Cikan
	ORDER BY 
		g.Tarih
	RETURN
END


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[StokHareketDevirButun]
(	
	@DepoInds nvarchar(max),
	@tarih datetime
)


RETURNS @HareketDokumu TABLE
(BaslikInd int, StokInd int, Tarih DATETIME, Belge nvarchar(max), Owner int, TipInd int, Fiyat decimal(28, 8), Giren decimal(28, 8), Cikan decimal(28, 8))
AS
BEGIN
	INSERT INTO @HareketDokumu
	SELECT
		g.BaslikInd as BaslikInd,
		g.StokInd as StokInd,
		g.Tarih as Tarih,
		g.Belge as Belge,
		g.Owner as Owner,
		--g.TipIndAltHareket as TipInd,
		g.TipInd,
		g.Fiyat as Fiyat,
		SUM(g.Giren) as Giren,
		SUM(g.Cikan) as Cikan
	FROM
		GirisCikisHareketleri AS g WITH(NOLOCK)
	WHERE
		g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND g.Tarih < @tarih
	GROUP BY 
		g.BaslikInd,
		g.StokInd,
		g.Tarih,
		g.Belge,
		g.Owner,
		g.TipIndAltHareket,
		g.TipInd,
		g.Fiyat
	RETURN
END


GO
CREATE FUNCTION [dbo].[StokHareketDokumu] 
(
	@StokInd int,
	@DepoInds nvarchar(max),
	@baslangic datetime,
	@bitis datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH HareketDokumu(BaslikInd,StokInd,Tarih,Belge,Aciklama,Owner,TipInd,Fiyat,Giren,Cikan)
	AS
	(
		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			b.Tarih as Tarih,
			b.BelgeNo as Belge,
			b.Aciklama as Aciklama,
			Hesaplar.Owner as Owner,
			h.TipInd as TipInd,
			h.Fiyat as Fiyat,
			SUM(h.Miktar * h.Carpan) as Giren,
			0.00 as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind  = h.BaslikInd
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd 
		WHERE 
		b.Aktif != 0	
		AND h.TipInd = 3
		AND Hareketler.TipInd = 29	
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))  
		AND Hareketler.StokInd = @StokInd
		AND h.StokInd = @StokInd			
		AND b.Tarih >= @baslangic
		AND b.Tarih <= @bitis
		AND b.TipInd = 101
 
		GROUP BY 
			b.Ind,
			h.StokInd,
			b.Tarih,
			b.BelgeNo,
			b.Aciklama,
			Hesaplar.Owner,
			h.TipInd,
			h.Fiyat

	UNION ALL

		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			b.Tarih as Tarih,
			b.BelgeNo as Belge,
			b.Aciklama as Aciklama,
			Hesaplar.Owner as Owner,
			h.TipInd as TipInd,
			h.Fiyat as Fiyat,
			0.00 as Giren,
			SUM(h.Miktar * h.Carpan) as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd 
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.BaslikInd 
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd 
		WHERE 
		b.TipInd = 102
		AND b.Aktif != 0
		AND h.TipInd = 6
		AND h.StokInd = @StokInd	 
		AND Hareketler.TipInd = 30 
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND Hareketler.StokInd = @StokInd
		AND b.Tarih >= @baslangic
		AND b.Tarih <= @bitis
		GROUP BY 
			b.Ind,
			h.StokInd,
			b.Tarih,
			b.BelgeNo,
			b.Aciklama,
			Hesaplar.Owner,
			h.TipInd,
			h.Fiyat

		UNION ALL
		
		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			b.Tarih as Tarih,
			b.BelgeNo as BelgeNo,
			b.Aciklama as Aciklama,
			Hesaplar.Owner as Owner,
			b.TipInd as TipInd,
			0.00 as Fiyat,
			0.00 as Giren,
			(h.Miktar * h.Carpan) as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 503
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd
		WHERE h.TipInd = 30 
		AND h.StokInd = @StokInd
		AND h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.TipInd = 503
		AND b.Tarih >= @baslangic
		AND b.Tarih <= @bitis

		UNION ALL
		
		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			b.Tarih as Tarih,
			b.BelgeNo as BelgeNo,
			b.Aciklama as Aciklama,
			Hesaplar.Owner as Owner,
			b.TipInd as TipInd,
			0.00 as Fiyat,
			(h.Miktar * h.Carpan) as Giren,
			0.00 as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 503
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd
		WHERE h.TipInd = 29 
		AND h.StokInd = @StokInd
		AND h.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND b.TipInd = 503
		AND b.Tarih >= @baslangic
		AND b.Tarih <= @bitis

		UNION ALL

		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			b.Tarih as Tarih,
			b.BelgeNo as Belge,
			b.Aciklama as Aciklama,
			Hesaplar.Owner as Owner,
			h.TipInd as TipInd,
			h.Fiyat as Fiyat,
			SUM(h.Miktar * h.Carpan) as Giren,
			0.00 as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 103
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd 
		WHERE h.TipInd = 2 
		AND h.StokInd = @StokInd
		AND Hareketler.TipInd = 29
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))	
		AND Hareketler.StokInd = @StokInd
		AND b.Tarih >= @baslangic
		AND b.Tarih <= @bitis
		AND b.TipInd = 103
		AND (b.DurumInd IS NULL OR b.DurumInd != 11)
		
		GROUP BY 
			b.Ind,
			h.StokInd,
			b.Tarih,
			b.BelgeNo,
			b.Aciklama,
			Hesaplar.Owner,
			h.TipInd,
			h.Fiyat

		UNION ALL
		
		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			b.Tarih as Tarih,
			b.BelgeNo as Belge,
			b.Aciklama as Aciklama,
			Hesaplar.Owner as Owner,
			h.TipInd as TipInd,
			h.Fiyat as Fiyat,
			0.00 as Giren,
			SUM(h.Miktar * h.Carpan) as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 104
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.BaslikInd = h.BaslikInd
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd 
		WHERE h.TipInd = 5 
		AND h.StokInd = @StokInd
		AND Hareketler.TipInd = 30
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND Hareketler.StokInd = @StokInd
		AND b.Tarih >= @baslangic
		AND b.Tarih <= @bitis
		AND b.TipInd = 104
		AND (b.DurumInd IS NULL OR b.DurumInd != 11)

		GROUP BY 
			b.Ind,
			h.StokInd,
			b.Tarih,
			b.BelgeNo,
			b.Aciklama,
			Hesaplar.Owner,
			h.TipInd,
			h.Fiyat

		UNION ALL

		SELECT 
			b.Ind as BaslikInd,
			h.StokInd as StokInd,
			b.Tarih as Tarih,
			b.BelgeNo as Belge,
			b.Aciklama as Aciklama,
			h.Owner as Owner,
			h.TipInd as TipInd,
			CASE WHEN(h.SayimMiktari > h.Miktar)
				THEN h.SatisFiyati 
				ELSE h.AlisFiyati
				END as Fiyat,
			CASE WHEN(h.SayimMiktari > h.Miktar)
				THEN (h.SayimMiktari - h.Miktar) 
				ELSE 0.00
				END as Giren,
			CASE WHEN(h.SayimMiktari < h.Miktar)
				THEN (h.Miktar - h.SayimMiktari) 
				ELSE 0.00
				END as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind AND b.TipInd = 113
		WHERE h.TipInd = 112 
		AND h.StokInd = @StokInd
		AND b.Tarih >= @baslangic
		AND b.Tarih <= @bitis
		AND b.TipInd = 113

		UNION ALL
		
		SELECT 
		h.VardiyaNo as BaslikInd,
		h.StokInd as StokInd,
		h.Tarih as Tarih,
		CAST(VardiyaNo AS  NVARCHAR)+'.Vardiya' as Belge,
		'Vardiya hesap kabul' as Aciklama,
		h.Owner as Owner,
		h.TipInd as TipInd,
		h.Fiyat as Fiyat,
		0.00 as Giren,
		SUM(h.Fark) as Cikan
		FROM EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
		WHERE h.TipInd = 39
		AND h.StokInd = @StokInd
		AND h.Tarih >= @baslangic
		AND h.Tarih <= @bitis
		GROUP BY h.Owner, 
		h.VardiyaNo, h.StokInd, h.Tarih, h.VardiyaNo, h.TipInd, h.Fiyat  

		UNION ALL

		SELECT
		b.Ind as BaslikInd,
		h.StokInd as StokInd,
		b.Tarih as Tarih,
		b.BelgeNo as Belge,
		h.Aciklama as Aciklama,
		h.Owner as Owner,
		h.TipInd as TipInd,
		h.Fiyat as Fiyat,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.VardiyaKartInd AND b.TipInd = 108
		WHERE h.TipInd = 40
		AND h.StokInd = @StokInd		
		AND b.Tarih >= @baslangic
		AND b.Tarih <= @bitis 

		UNION ALL
		
		SELECT
		NULL as BaslikInd,
		h.StokInd as StokInd,
		h.GirisTarihi as Tarih,
		NULL as Belge,
		h.Aciklama as Aciklama,
		h.Owner as Owner,
		h.TipInd as TipInd,
		h.Fiyat as Fiyat,
		0.00 as Giren,
		(h.Miktar * h.Carpan) as Cikan
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind
		WHERE h.TipInd = 504
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND Hareketler.StokInd = @StokInd
		AND h.StokInd = @StokInd
		AND h.GirisTarihi >= @baslangic
		AND h.GirisTarihi <= @bitis 
	)

		SELECT 
			TOP 100 PERCENT
			HareketDokumu.*, 
			0.00 as Kalan
		FROM HareketDokumu WITH(NOLOCK)
		ORDER BY 
			HareketDokumu.Tarih
)




GO
CREATE FUNCTION [dbo].[StokHrkToplamlariByStokGrup]
(	
	-- Add the parameters for the function here
	@BaslangicTarihi AS DATETIME,
	@BitisTarihi AS DATETIME,
	@Owner AS INT
)
RETURNS TABLE 
AS
RETURN 
(
WITH 
	StoklarGruplar(StokInd,StokGrupInd,StokGrupAdi)AS
	(
		SELECT ST.Ind AS StokInd, ST.GrupInd AS StokGrupInd, SG.GrupAdi AS StokGrupAdi
		FROM Stoklar ST WITH(NOLOCK) INNER JOIN StokGruplari SG 
		ON ST.GrupInd = SG.Ind 	
	)
	,Devir(StokInd, DevirAdet, DevirFiyat) AS 
	(
		SELECT StokInd, SUM(Giren) - SUM(Cikan) AS  DevirAdet, (SUM(Giren) - SUM(Cikan) ) * dbo.SonAlisFiyatiIskontolu(@Owner, GCH.StokInd, @BitisTarihi) AS DevirFiyat
			FROM dbo.GirisCikisHareketleri GCH WITH(NOLOCK)
			WHERE Tarih <= @BaslangicTarihi
			GROUP BY StokInd 
	)
	
	,  Alis (StokInd, AlisAdet, AlisFiyat) AS
	(
		SELECT H.StokInd,  SUM (h.Miktar * h.Carpan) as AlisAdet
		, SUM (h.Miktar * h.Carpan) * dbo.SonAlisFiyatiIskontolu(@Owner, H.StokInd, @BitisTarihi) As AlisFiyat
			FROM Hareketler as H WITH(NOLOCK) LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind  = h.BaslikInd LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = H.DepoInd 
				
			WHERE ISNULL(b.Aktif, 1) != 0 AND h.TipInd = 29 AND (b.DurumInd != 11 or b.DurumInd IS NULL) AND b.TipInd IN ( 101, 103 )
				AND Tarih > @BaslangicTarihi AND Tarih <= @BitisTarihi 
			    AND (b.FaturaIadeMi IS NULL OR b.FaturaIadeMi = 0) 
			GROUP BY H.StokInd
	)
	
	, Satis(StokInd, SatisAdet, SatilanAlisFiyat, SatisFiyat) AS 
      (
		SELECT H.StokInd, SUM (h.Miktar * h.Carpan) as SatisAdet
		, SUM (h.Miktar * h.Carpan) * dbo.SonAlisFiyatiIskontolu(@Owner, H.StokInd, @BitisTarihi) As SatilanAlisFiyat
		, SUM (h.Miktar * h.Carpan) * (SELECT SUM(Fiyat*Miktar)/SUM(Miktar) FROM Hareketler WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd IN (6,504)) AS SatisFiyat
		FROM Hareketler as h WITH(NOLOCK) LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.BaslikInd  LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd  	
			INNER JOIN stoklar S WITH(NOLOCK) ON S.Ind = h.StokInd
		WHERE ISNULL(b.Aktif, 1) != 0 AND h.TipInd = 30  AND (b.DurumInd IS NULL OR b.DurumInd != 11)AND b.TipInd IN ( 102, 104,504 )			
		AND Tarih > @BaslangicTarihi AND Tarih <= @BitisTarihi
		 AND (b.FaturaIadeMi IS NULL OR b.FaturaIadeMi = 0) 
		GROUP BY H.StokInd, h.BaslikInd
	)
	, Perakende(StokInd, PerakendeAdet, SatilanPerakendeAlisFiyat, PerakendeFiyat) AS 
      (
		SELECT StokInd,SUM (Miktar * Carpan) as PerakendeAdet,
		CASE WHEN SUM(Miktar) > 0 THEN SUM (Miktar * Carpan) * dbo.SonAlisFiyatiIskontolu(@Owner, StokInd, @BitisTarihi) ELSE 0 END AS SatilanPerakendeAlisFiyat,
		CASE WHEN SUM(Miktar) > 0 THEN SUM (Miktar * Carpan) * (SELECT SUM(Fiyat*Miktar)/SUM(Miktar)) ELSE 0 END AS PerakendeFiyat--SUM (Miktar * Carpan) * (SELECT SUM(Fiyat*Miktar)/SUM(Miktar)) AS PerakendeFiyat 
		FROM Hareketler WHERE BaslikInd IS NULL AND TipInd = 504 AND GirisTarihi > @BaslangicTarihi AND GirisTarihi <= @BitisTarihi AND Ind IN (SELECT IslemInd FROM SatisKasasi WITH(NOLOCK) WHERE IsYeniSatis = 0 AND Tablo='Hareketler')
		GROUP BY StokInd
	)
	 , SatisIade (StokInd, GrupInd, SatisIadeAdet, SatisIadeFiyat) AS
	(
		SELECT H.StokInd, S.GrupInd, SUM (h.Miktar * h.Carpan) as SatisIadeAdet
		, SUM (h.Miktar * h.Carpan) * (SELECT SUM(Fiyat*Miktar)/SUM(Miktar) FROM Hareketler WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=3) AS SatisIadeFiyat
		FROM Hareketler as h WITH(NOLOCK) LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind  = h.BaslikInd LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd 
		INNER JOIN stoklar S WITH(NOLOCK) ON S.Ind = h.StokInd
		WHERE ISNULL(b.Aktif, 1) != 0 AND h.TipInd = 29 AND (b.DurumInd != 11 or b.DurumInd IS NULL) AND b.TipInd = ( 101 )
		AND FaturaIadeMi = 1 AND Tarih > @BaslangicTarihi AND Tarih <= @BitisTarihi
		GROUP BY H.StokInd, S.GrupInd, h.BaslikInd
	)
	
	, AlisIade (StokInd, GrupInd, AlisIadeAdet, AlisIadeFiyat) AS 
      (
		SELECT H.StokInd, S.GrupInd, SUM (h.Miktar * h.Carpan) as AlisIadeAdet
		, SUM (h.Miktar * h.Carpan) * (SELECT SUM(Fiyat*Miktar)/SUM(Miktar) FROM Hareketler WITH(NOLOCK) WHERE BaslikInd = h.BaslikInd AND StokInd = h.StokInd AND TipInd=6) AS SatisIadeFiyat
		FROM Hareketler as h WITH(NOLOCK) LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.BaslikInd  LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = h.DepoInd  	
		INNER JOIN stoklar S WITH(NOLOCK) ON S.Ind = h.StokInd
		WHERE ISNULL(b.Aktif, 1) != 0 AND h.TipInd = 30  AND (b.DurumInd IS NULL OR b.DurumInd != 11)AND b.TipInd = ( 102 )			
		AND FaturaIadeMi = 1 AND Tarih > @BaslangicTarihi AND Tarih <= @BitisTarihi
		GROUP BY H.StokInd, S.GrupInd, h.BaslikInd
      )
      , SonSayim (StokInd, SayimMiktar, SayimTutar) AS
      (
     	SELECT TOP 1 h.StokInd,
		SUM(h.sayimmiktari) AS SayimMiktar,
		SUM(h.SayimMiktari * h.AlisFiyati) AS SayimTutar
		FROM Hareketler h WITH(NOLOCK)
		INNER JOIN Basliklar b WITH(NOLOCK) ON h.BaslikInd = b.Ind 
		WHERE b.TipInd = 113 AND h.TipInd = 112
		AND b.Tarih > @BaslangicTarihi AND b.Tarih <= @BitisTarihi AND b.[Owner] = @Owner
		group by h.StokInd, b.Tarih
		order by b.Tarih desc
		)

	-- Yukarıdaki Setler içerisinden seçip yapılıp gruplanır ve sonuç tablosu oluşur --
	SELECT 
	ST.StokGrupAdi AS StokGrupAdi
	,SUM(D.DevirMiktar) AS DevirMiktar, SUM(D.DevirTutar) As DevirTutar -- devir
	,SUM(A.AlisMiktar) AS AlisMiktar, SUM(A.AlisTutar) As AlisTutar -- alış
	,SUM(AI.AlisIadeMiktar) AS AlisIadeMiktar, SUM(AI.AlisIadeTutar) AS AlisIadeTutar -- alış iade
	,SUM(S.SatisMiktar) AS SatisMiktar,SUM(S.SatilanAlisTutar) AS SatilanAlisTutar, SUM(S.SatisTutar) As SatisTutar -- satış
    ,SUM(P.PerakendeMiktar) AS PerakendeMiktar, SUM(P.SatilanPerakendeAlisTutar) As SatilanPerakendeAlisTutar, SUM(P.PerakendeTutar) As PerakendeTutar -- perakende satış
	,SUM(SI.SatisIadeMiktar) AS SatisIadeMiktar, SUM(SI.SatisIadeTutar) As SatisIadeTutar -- satış iade
	,SUM((D.DevirMiktar + (A.AlisMiktar - AI.AlisIadeMiktar) - (S.SatisMiktar-SI.SatisIadeMiktar))) AS KalanMiktar -- kalan adet
	,SUM((D.DevirTutar + (A.AlisTutar - AI.AlisIadeTutar) - (S.SatisTutar-SI.SatisIadeTutar)))AS KalanTutar -- kalan fiyat
	,SUM(SY.SayimMiktar) AS SayimMiktar -- sayım 
	,SUM(SY.SayimTutar) AS SayimTutar
	,SUM((D.DevirMiktar + (A.AlisMiktar - AI.AlisIadeMiktar) - (S.SatisMiktar-SI.SatisIadeMiktar))) - SUM(SY.SayimMiktar)  AS FarkMiktar
	,SUM((D.DevirTutar + (A.AlisTutar - AI.AlisIadeTutar) - (S.SatisTutar-SI.SatisIadeTutar))) - SUM(SY.SayimTutar) AS FarkTutar
	,BaslangicTarihi=@BaslangicTarihi
	,BitisTarihi=@BitisTarihi
	,SubeOwner=@Owner
	,[Owner]=@Owner
	FROM StoklarGruplar ST WITH(NOLOCK) LEFT JOIN 
	(
	SELECT SUM(A.AlisAdet) AS AlisMiktar, SUM(A.AlisFiyat) AS AlisTutar, A.StokInd AS StokInd FROM Alis A WITH(NOLOCK) Group by StokInd 
	)A   ON A.StokInd = ST.StokInd  
	LEFT JOIN
	(
	SELECT SUM(AI.AlisIadeAdet) AS AlisIadeMiktar, SUM(AI.AlisIadeFiyat) AS AlisIadeTutar, AI.StokInd AS StokInd FROM AlisIade AI WITH(NOLOCK) Group by StokInd 
	)AI  ON AI.StokInd = ST.StokInd
	LEFT JOIN
	(
	SELECT SUM(S.SatisAdet) AS SatisMiktar, SUM(S.SatilanAlisFiyat) AS SatilanAlisTutar, SUM(S.SatisFiyat) AS SatisTutar, S.StokInd AS StokInd FROM Satis S WITH(NOLOCK) Group by StokInd 
	)S   ON S.StokInd = ST.StokInd
	LEFT JOIN
	(
	SELECT SUM(P.PerakendeAdet) AS PerakendeMiktar, SUM(P.SatilanPerakendeAlisFiyat) AS SatilanPerakendeAlisTutar, SUM(P.PerakendeFiyat) AS PerakendeTutar, P.StokInd AS StokInd FROM Perakende P WITH(NOLOCK) Group by StokInd 
	)P   ON P.StokInd = ST.StokInd
	LEFT JOIN
	(
	SELECT SUM(SI.SatisIadeAdet) AS SatisIadeMiktar, SUM(SI.SatisIadeFiyat) AS SatisIadeTutar, SI.StokInd AS StokInd FROM SatisIade SI WITH(NOLOCK) Group by StokInd 
	)SI   ON SI.StokInd = ST.StokInd
	LEFT JOIN
	(
	SELECT SUM(D.DevirAdet) AS DevirMiktar, SUM(D.DevirFiyat) AS DevirTutar, D.StokInd AS StokInd FROM Devir D WITH(NOLOCK) Group by StokInd 
	)D   ON D.StokInd = ST.StokInd
	LEFT JOIN
	(
	SELECT SUM(SY.SayimMiktar) AS SayimMiktar, SUM(SY.SayimTutar) AS SayimTutar, SY.StokInd  FROM SonSayim SY WITH(NOLOCK) Group by StokInd 
	)SY ON SY.StokInd = ST.StokInd
	
	Group by ST.StokGrupInd, ST.StokGrupAdi 
)



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[StoklarToplamMiktarlari] 
(	
	@depoInds nvarchar(max),
	@stokInds nvarchar(max)	
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT
		Hareketler.Owner, 
		Hareketler.StokInd,
		Hareketler.DepoInd,
		SUM(
			CASE  WHEN (Hareketler.TipInd=29)
			THEN Miktar * Carpan
			ELSE 0
			END
			) as GirilenMiktar,
		SUM(
			CASE  WHEN (Hareketler.TipInd=30 )
			THEN Miktar * Carpan
			ELSE 0
			END
			) as CikilanMiktar
		FROM Hareketler WITH(NOLOCK)
		WHERE
		Hareketler.StokInd IN (SELECT * FROM fnSplit(@stokInds,','))
		AND Hareketler.DepoInd IN (SELECT * FROM fnSplit(@depoInds,',')) 
		AND Hareketler.TipInd IN (29,30) 
		GROUP BY 
			Hareketler.Owner,
			Hareketler.StokInd,
			Hareketler.DepoInd
)
GO
CREATE FUNCTION [dbo].[StokListesiBarkodlu] 
(
	@Owner INT
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT  
			DISTINCT @Owner AS [Owner]
		  , S.Ind AS StokInd
		  , S.StokKodu
		  , S.StokAdi
		  , SDY.Barkod
		  , B.BirimAdi
		  , K.KDVKodu
		  , K.KDVOrani
		  , dbo.SuAnkiStokSatisFiyatiYazarkasa(@Owner, S.Ind) AS SatisFiyati
		  , ISNULL(S.KasiyerKoduVarMi, 0) AS KasiyerKoduVarMi
		  , ISNULL(S.KasiyerFiyatDegistirebilir, 0) AS KasiyerFiyatDegistirebilir
		  , S.Aktif
	FROM Stoklar S WITH(NOLOCK)
		 INNER JOIN StokDetaylari SDY WITH(NOLOCK) ON S.Ind = SDY.StokInd
		 INNER JOIN KDVGruplari K WITH(NOLOCK) ON S.SatisKDVGrupInd = K.Ind
		 INNER JOIN Birimler B WITH(NOLOCK) ON S.AnaBirimInd = B.Ind
		 --LEFT OUTER JOIN dbo.Hesaplar AS h ON h.StokInd = s.Ind
	WHERE S.Ind NOT IN (SELECT StokInd FROM Hesaplar WITH(NOLOCK) WHERE StokInd IS NOT NULL AND StokInd > 0 AND TipInd != 203)--h.StokInd IS NULL
		 AND SDY.TipInd = 502 AND S.Aktif = 1
)

GO
CREATE FUNCTION [dbo].[StokMiktarlari] 
(	
	@StokInd INT, @Tarih DATETIME, @DepoInds VARCHAR(MAX)
)
RETURNS @Result TABLE
(	
	Owner int,
	StokInd int,
	GirilenMiktar decimal(28, 7),
	CikilanMiktar decimal(28, 7)
) 
AS
BEGIN

	

	--declare @GrupInd int = (select GrupInd from Stoklar where Ind=@StokInd);

	--HIT-3172 - Depo Bilgileri ile tutarsızlık vardı alltaki if else sorunu çözdü - Sinan
	-- CRMT T-032053 ilgili Kayıt nedeniyle yapılan incelemede her veritabanında Grup ID'leri farklı olduğu için Sinan Beyin tavsiyes ile Grup adina göre 
	-- eşleştirme yapildi. Emrah DURUDOĞAN
	declare @GrupAD nvarchar(500) = (select t2.GrupAdi from Stoklar t1 inner join StokGruplari t2 on t1.GrupInd=t2.Ind   where t1.Ind=@StokInd);
	IF(@GrupAD = 'AKARYAKIT') --Eğer stok grupu akaryakıt ise StokInd'ye bakmadan depoyu kontrol et
	BEGIN
		INSERT INTO @Result
		SELECT
			GCH.Owner AS Owner,
			GCH.StokInd AS StokInd,
			SUM(GCH.Giren) as GirilenMiktar, 
			SUM(GCH.Cikan) as CikilanMiktar
		FROM GirisCikisHareketleri GCH
		WHERE
			 (GCH.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,',')))
			AND GCH.Tarih >= '20000101' And GCH.Tarih <= @Tarih
		GROUP BY 
			GCH.Owner,
			GCH.StokInd
	END
	ELSE
	BEGIN
		INSERT INTO @Result
		SELECT
			dbo.GirisCikisHareketleri.Owner AS Owner,
			dbo.GirisCikisHareketleri.StokInd AS StokInd,
			SUM(dbo.GirisCikisHareketleri.Giren) as GirilenMiktar, 
			SUM(dbo.GirisCikisHareketleri.Cikan) as CikilanMiktar
		FROM GirisCikisHareketleri
		WHERE
			dbo.GirisCikisHareketleri.StokInd = @StokInd
			-- AND dbo.GirisCikisHareketleri.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
			AND dbo.GirisCikisHareketleri.Tarih <= @Tarih
		GROUP BY 
			GirisCikisHareketleri.Owner,
			GirisCikisHareketleri.StokInd
	END	

	RETURN 
END
--(	
--	@StokInd INT, @Tarih DATETIME, @DepoInds VARCHAR(MAX)
--)
--RETURNS @Result TABLE
--(	
--	Owner int,
--	StokInd int,
--	GirilenMiktar decimal(28, 7),
--	CikilanMiktar decimal(28, 7)
--) 
--AS
--BEGIN

--	declare @GrupInd int = (select GrupInd from Stoklar where Ind=@StokInd);

--	--HIT-3172 - Depo Bilgileri ile tutarsızlık vardı alltaki if else sorunu çözdü - Sinan
--	IF(@GrupInd = 53) --Eğer stok grupu akaryakıt ise StokInd'ye bakmadan depoyu kontrol et
--	BEGIN
--		INSERT INTO @Result
--		SELECT
--			GCH.Owner AS Owner,
--			GCH.StokInd AS StokInd,
--			SUM(GCH.Giren) as GirilenMiktar, 
--			SUM(GCH.Cikan) as CikilanMiktar
--		FROM GirisCikisHareketleri GCH WITH(NOLOCK)
--		WHERE
--			 (GCH.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,',')))
--			AND GCH.Tarih >= '20000101' And GCH.Tarih <= @Tarih
--		GROUP BY 
--			GCH.Owner,
--			GCH.StokInd
--	END
--	ELSE
--	BEGIN
--		INSERT INTO @Result
--		SELECT
--			dbo.GirisCikisHareketleri.Owner AS Owner,
--			dbo.GirisCikisHareketleri.StokInd AS StokInd,
--			SUM(dbo.GirisCikisHareketleri.Giren) as GirilenMiktar, 
--			SUM(dbo.GirisCikisHareketleri.Cikan) as CikilanMiktar
--		FROM GirisCikisHareketleri WITH(NOLOCK)
--		WHERE
--			dbo.GirisCikisHareketleri.StokInd = @StokInd
--			AND dbo.GirisCikisHareketleri.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
--			AND dbo.GirisCikisHareketleri.Tarih <= @Tarih
--		GROUP BY 
--			GirisCikisHareketleri.Owner,
--			GirisCikisHareketleri.StokInd
--	END	

--	RETURN 
--END


GO

CREATE FUNCTION [dbo].[StokMiktarlariDepoyaGore]
(	
	@StokInd int,
	@Owner int
)
RETURNS @StokDepoMiktarlari TABLE 
(
	Owner int,
	DepoKodu nvarchar(100),
	DepoAdi nvarchar(100),
	Miktar decimal
)
AS
BEGIN
		IF(@Owner = 0)
		BEGIN
				 INSERT INTO @StokDepoMiktarlari SELECT
					d.Owner,
					d.hesapkodu as DepoKodu, d.hesapadi as DepoAdi, 
					SUM(gch.Giren-gch.Cikan) as Miktar
				FROM GirisCikisHareketleri gch WITH(NOLOCK)
				inner join depolar d WITH(NOLOCK) on d.Ind = gch.DepoInd
				WHERE
					gch.StokInd = @StokInd
				GROUP BY gch.StokInd,d.hesapadi, d.hesapkodu, d.Owner

		END

		ELSE
		BEGIN
				INSERT INTO @StokDepoMiktarlari SELECT
				d.Owner,
				d.hesapkodu as DepoKodu, d.hesapadi as DepoAdi, 
				SUM(gch.Giren-gch.Cikan) as Miktar
				FROM GirisCikisHareketleri gch WITH(NOLOCK)
				inner join depolar d on d.Ind = gch.DepoInd
				WHERE
				gch.StokInd = @StokInd and d.Owner=@Owner
			    GROUP BY gch.StokInd,d.hesapadi, d.hesapkodu, d.Owner
		END
		RETURN
END







GO

CREATE FUNCTION [dbo].[StokMiktarlariDepoyaGoreForMigration]
(	
	@StokInd int
)
RETURNS TABLE 
AS
RETURN
(
				select
			d.hesapkodu as DepoKodu, 
			d.hesapadi as DepoAdi,
			SUM(gch.Giren-gch.Cikan) as Miktar
		from GirisCikisHareketleri_MIGRATION gch WITH(NOLOCK)
		inner join depolar d WITH(NOLOCK) on d.Ind = gch.DepoInd
		where
			gch.StokInd = @StokInd
		group by gch.StokInd, d.hesapadi, d.hesapkodu
)







GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[StokMiktarlariForFifo] 
(	
	@StokInds VARCHAR(MAX), @DepoInds VARCHAR(MAX), @Owners VARCHAR(MAX)
)


RETURNS TABLE 
AS
RETURN 
(
	SELECT
		NULL AS Owner,
		dbo.GirisCikisHareketleri.StokInd,
		SUM(dbo.GirisCikisHareketleri.Cikan) as Miktar
	FROM GirisCikisHareketleri WITH(NOLOCK)
	WHERE
		dbo.GirisCikisHareketleri.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
		AND dbo.GirisCikisHareketleri.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND 
		(dbo.GirisCikisHareketleri.Owner IN (SELECT * FROM fnSplit(@Owners,',')) OR dbo.GirisCikisHareketleri.Owner IS NULL)
		--AND dbo.GirisCikisHareketleri.TipIndBaslik = 503
	GROUP BY 
		GirisCikisHareketleri.StokInd
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[StokMiktarlariForFifoDepoAktarimsiz] 
(	
	@StokInds VARCHAR(MAX), @DepoInds VARCHAR(MAX), @Tarih datetime, @BaslikInds VARCHAR(MAX), @Owners VARCHAR(MAX)
)


RETURNS TABLE 
AS
RETURN 
(
	SELECT
		NULL AS Owner,
		dbo.GirisCikisHareketleri.StokInd,
		SUM(dbo.GirisCikisHareketleri.Cikan) as Miktar
	FROM GirisCikisHareketleri WITH(NOLOCK)
	WHERE
		dbo.GirisCikisHareketleri.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
		AND dbo.GirisCikisHareketleri.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND dbo.GirisCikisHareketleri.BaslikInd NOT IN (SELECT * FROM fnSplit(@BaslikInds,','))
		AND 
		(dbo.GirisCikisHareketleri.Owner IN (SELECT * FROM fnSplit(@Owners,',')) OR dbo.GirisCikisHareketleri.Owner IS NULL)
		AND dbo.GirisCikisHareketleri.Tarih <= @Tarih
	GROUP BY 
		GirisCikisHareketleri.StokInd
)
GO
CREATE FUNCTION [dbo].[StokMiktarlariForSayim] 
(	
	@StokInds VARCHAR(MAX), @Tarih DATETIME, @DepoInds VARCHAR(MAX)
)

RETURNS TABLE 
AS
RETURN 
(
	SELECT
		Owner,
		StokInd,
		SUM(Giren) as GirilenMiktar, 
		SUM(Cikan) as CikilanMiktar
	FROM GirisCikisHareketleri
	where Tarih<=@Tarih
	    --(@StokInds, @Tarih, @DepoInds) mhan edition stok miktarlarına göre getirir
		---FROM GirisCikisHareketleri(@StokInds, @Tarih, @DepoInds) orjinal hali depo miktarlarına göre getirir
	GROUP BY 
		Owner,
		StokInd

	/*SELECT
		dbo.GirisCikisHareketleri.Owner AS Owner,
		dbo.GirisCikisHareketleri.StokInd AS StokInd,
		SUM(dbo.GirisCikisHareketleri.Giren) as GirilenMiktar, 
		SUM(dbo.GirisCikisHareketleri.Cikan) as CikilanMiktar
	FROM GirisCikisHareketleri
	WHERE
		dbo.GirisCikisHareketleri.StokInd IN (SELECT * FROM fnSplit(@StokInds,','))
		AND dbo.GirisCikisHareketleri.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		AND dbo.GirisCikisHareketleri.Tarih <= @Tarih
	GROUP BY 
		GirisCikisHareketleri.Owner,
		GirisCikisHareketleri.StokInd*/
)

GO
CREATE FUNCTION [dbo].[StokMiktarlariToplam] 
(	
	@Owner int,
	@StokInd INT
)


RETURNS @dokum TABLE(Owner int, StokInd int, GirilenMiktar decimal(28,13), CikilanMiktar decimal(28,13)) 
AS
BEGIN
	if(@Owner=0) 
		begin
			insert into @dokum
			SELECT
				0 AS Owner,
				dbo.GirisCikisHareketleri.StokInd AS StokInd,
				SUM(dbo.GirisCikisHareketleri.Giren) as GirilenMiktar, 
				SUM(dbo.GirisCikisHareketleri.Cikan) as CikilanMiktar
			FROM GirisCikisHareketleri WITH(NOLOCK)
			WHERE
				dbo.GirisCikisHareketleri.StokInd = @StokInd
			GROUP BY 
				GirisCikisHareketleri.StokInd
		end
	else
		begin
			insert into @dokum 
			SELECT
				0 AS Owner,
				dbo.GirisCikisHareketleri.StokInd AS StokInd,
				SUM(dbo.GirisCikisHareketleri.Giren) as GirilenMiktar, 
				SUM(dbo.GirisCikisHareketleri.Cikan) as CikilanMiktar
			FROM GirisCikisHareketleri WITH(NOLOCK)
			WHERE
				dbo.GirisCikisHareketleri.StokInd = @StokInd
				AND
				(dbo.GirisCikisHareketleri.Owner is null or dbo.GirisCikisHareketleri.Owner=@Owner)
			GROUP BY 
				GirisCikisHareketleri.StokInd
		end
RETURN
END



GO
CREATE FUNCTION [dbo].[StokMiktarRiskRaporuMerkez]
(	
    @stokGrupInd int,
	@aktif int --aktif=1, pasif=0, hepsi=-1
)
RETURNS TABLE 
AS
RETURN 
(
--StokGrupRecursive_Stoklar function parametre olarak gönderilen stok grubuna ait tüm alt grupları ve her birine ait stokları getirir
	with 
	GrubaBagliStoklarveMiktarlar(Owner, StokInd, StokKodu, StokAdi, Aktif, MinStokMiktari) AS
	(
		select sd.Owner, s.Ind, s.StokKodu, s.StokAdi, s.Aktif, sd.MinStokMiktari
	    from StokGrupRecursive_Stoklar(@stokGrupInd) s  inner join StokDetaylari sd WITH(NOLOCK) on s.Ind=sd.StokInd
	    inner join Subeler sube WITH(NOLOCK) on sube.Ind=sd.Owner
	    where sd.TipInd=523 --and GrupInd=@stokGrupInd
	),
	MevcutStokMiktarlari(StokInd, Owner, MevcutMiktar) AS
	(
		SELECT GCH.StokInd
			  ,GCH.Owner
		      ,SUM(Giren) - SUM(Cikan) AS  StokMiktari
		FROM dbo.GirisCikisHareketleri GCH WITH(NOLOCK) INNER JOIN dbo.Stoklar S WITH(NOLOCK) ON S.Ind = GCH.StokInd
			inner join GrubaBagliStoklarveMiktarlar G WITH(NOLOCK) on G.StokInd=S.Ind and G.Owner=GCH.Owner
		GROUP BY GCH.StokInd, GCH.Owner
	),
	AlisFiyati(StokInd, AlisFiyati) AS
    (
		SELECT StokInd
		      ,(SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleri WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleri GCH WITH(NOLOCK)
		WHERE Giren > 0 
		GROUP BY StokInd
	)
	
	select grup.Owner as Owner
	     , grup.StokInd
		 , grup.StokKodu
		 , grup.StokAdi
		 , ISNULL(grup.MinStokMiktari,0) as MinStokMiktari
		 , ISNULL(msm.MevcutMiktar,0) as MevcutMiktar
		 , (ISNULL(grup.MinStokMiktari,0)-ISNULL(msm.MevcutMiktar,0)) as Fark
		 , ISNULL(af.AlisFiyati,0) as AlisFiyati
		 , ((ISNULL(grup.MinStokMiktari,0)-ISNULL(msm.MevcutMiktar,0)) * ISNULL(af.AlisFiyati, 0)) as FarkTutari
	from GrubaBagliStoklarveMiktarlar grup WITH(NOLOCK)
											   LEFT JOIN MevcutStokMiktarlari msm WITH(NOLOCK) on msm.StokInd=grup.StokInd and msm.Owner=grup.Owner
											   LEFT JOIN AlisFiyati af WITH(NOLOCK) on af.StokInd=grup.StokInd
	where grup.MinStokMiktari>0			
		  AND
		  (ISNULL(msm.MevcutMiktar,0)<=ISNULL(grup.MinStokMiktari,0))
		  AND (grup.Aktif = @aktif OR @aktif = -1)
   
		  	
)


GO
CREATE FUNCTION [dbo].[StokMiktarRiskRaporuSube]
(	
	@stokGrupInd int,
	@aktif int, --aktif=1, pasif=0, hepsi=-1
	@owner int
)
RETURNS TABLE 
AS
RETURN 
(

	--StokGrupRecursive_Stoklar function parametre olarak gönderilen stok grubuna ait tüm alt grupları ve her birine ait stokları getirir
	with 
	GrubaBagliStoklarveMiktarlar(Owner, StokInd, StokKodu, StokAdi, Aktif, MinStokMiktari) AS
	(
		select sd.Owner, s.Ind, s.StokKodu, s.StokAdi, s.Aktif, sd.MinStokMiktari
	    from StokGrupRecursive_Stoklar(@stokGrupInd) s   inner join StokDetaylari sd WITH(NOLOCK) on s.Ind=sd.StokInd
	    inner join Subeler sube WITH(NOLOCK) on sube.Ind=sd.Owner
	    where sd.TipInd=523 --and GrupInd=@stokGrupInd
	    and sd.Owner=@owner
	),
	MevcutStokMiktarlari(StokInd, MevcutMiktar) AS
	(
		SELECT StokInd
		      ,SUM(Giren) - SUM(Cikan) AS  StokMiktari
		FROM dbo.GirisCikisHareketleri GCH WITH(NOLOCK) INNER JOIN dbo.Stoklar S WITH(NOLOCK) ON S.Ind = GCH.StokInd
		where GCH.Owner=@owner
		GROUP BY StokInd
	),
	AlisFiyati(StokInd, AlisFiyati) AS
    (
		SELECT StokInd
		      ,(SELECT TOP 1 Fiyat FROM dbo.GirisCikisHareketleri WITH(NOLOCK) WHERE Ind = MAX(GCH.Ind)) AS Fiyat
		FROM dbo.GirisCikisHareketleri GCH WITH(NOLOCK)
		WHERE Giren > 0 and GCH.Owner=@owner
		GROUP BY StokInd
	)
		  
	select grup.Owner as Owner
	     , grup.StokInd
		 , grup.StokKodu
		 , grup.StokAdi
		 , ISNULL(grup.MinStokMiktari,0) as MinStokMiktari
		 , ISNULL(msm.MevcutMiktar,0) as MevcutMiktar
		 , (ISNULL(grup.MinStokMiktari,0)-ISNULL(msm.MevcutMiktar,0)) as Fark
		 , ISNULL(af.AlisFiyati,0) as AlisFiyati
		 , ((ISNULL(grup.MinStokMiktari,0)-ISNULL(msm.MevcutMiktar,0)) * ISNULL(af.AlisFiyati, 0)) as FarkTutari
	from GrubaBagliStoklarveMiktarlar grup WITH(NOLOCK)
											   LEFT JOIN MevcutStokMiktarlari msm WITH(NOLOCK) on msm.StokInd=grup.StokInd
											   LEFT JOIN AlisFiyati af WITH(NOLOCK) on af.StokInd=grup.StokInd
	where grup.MinStokMiktari>0			
		  AND
		  (ISNULL(msm.MevcutMiktar,0)<=ISNULL(grup.MinStokMiktari,0))
		  AND (grup.Aktif = @aktif OR @aktif = -1)	
)


GO
CREATE FUNCTION StokNetMiktari(
@stokInd INT ,@tarih DATETIME
)

RETURNS 
TABLE 
AS
RETURN 
(
SELECT 
		SUM(ISNULL(h.NetMiktar,h.Miktar)) NetMiktar, NULL Owner
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind  = h.BaslikInd
		WHERE 
		ISNULL(b.Aktif,1) != 0	 
		AND (h.TipInd = 3 OR h.TipInd = 2)
		AND( b.TipInd = 101 OR  b.TipInd = 103)
		AND h.StokInd = @stokInd
		AND b.Tarih <@tarih
)





GO
CREATE FUNCTION [dbo].[StokSatilanMiktarlariSubeyeGore]
(	
	@StokInd int,
	@Owner int
)
RETURNS @StokSatilanMiktarlari TABLE
(
	StokInd INT,
	Miktar DECIMAL,
	Owner INT
)
AS
BEGIN

		IF(@Owner = 0)
		BEGIN
			    INSERT INTO  @StokSatilanMiktarlari SELECT StokInd, ISNULL(SUM(Hareketler.Miktar),0), NULL	
				from Hareketler WITH(NOLOCK) inner join Satiskasasi WITH(NOLOCK) on Hareketler.Ind = Satiskasasi.IslemInd
				where Hareketler.tipInd = 504 and Satiskasasi.Tablo = N'Hareketler' 
											  and Satiskasasi.IsYeniSatis ='true' 
		                                      and Hareketler.StokInd= @StokInd GROUP BY StokInd, Satiskasasi.Owner

		END

		ELSE
		BEGIN
				INSERT INTO  @StokSatilanMiktarlari SELECT StokInd, ISNULL(SUM(Hareketler.Miktar),0),  Satiskasasi.Owner		
				from Hareketler WITH(NOLOCK) inner join Satiskasasi WITH(NOLOCK) on Hareketler.Ind = Satiskasasi.IslemInd
				where Hareketler.tipInd = 504 and Satiskasasi.Tablo = N'Hareketler' 
											  and Satiskasasi.IsYeniSatis ='true'   and Hareketler.Owner= @Owner
		                                      and Hareketler.StokInd= @StokInd GROUP BY StokInd,  Satiskasasi.Owner
		END
		RETURN
END



GO
CREATE FUNCTION [dbo].[StokSayimKontrol]
(
	@StokInd int,
	@Tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
	select top 1 Ind, Owner
	from Basliklar WITH(NOLOCK)
	where Ind in
	(
		select BaslikInd from Hareketler WITH(NOLOCK) where StokInd = @StokInd and TipInd=112
	)
	and TipInd = 113 and Tarih > @Tarih
)


GO
CREATE FUNCTION [dbo].[StokSayimKontrolEskiAktifSatisKasasi]
(
	@BaslikInd int,
	@Tarih datetime
)
RETURNS TABLE 
AS
RETURN 
(
			SELECT TOP 1 B.Owner, B.Ind
			FROM Hareketler H WITH(NOLOCK) INNER JOIN SatisKasasi SK WITH(NOLOCK)
				ON SK.IslemInd = H.Ind  INNER JOIN Hareketler H2 WITH(NOLOCK)
				ON H2.StokInd = H.StokInd INNER JOIN Basliklar B WITH(NOLOCK)
				ON H2.DepoInd = B.DepoInd
			WHERE  H2.TipInd = 112 AND B.TipInd IN (118, 113)
			AND SK.BaslikInd = @BaslikInd AND B.Tarih  >= @Tarih
)
/*
	select top 1 Owner, Ind
	from Basliklar
	where DepoInd in
	(
		select DepoInd
		from Hareketler
		where StokInd in
		(
			select StokInd
			from Hareketler
			where Ind in
			(
				select IslemInd
				from SatisKasasi
				where BaslikInd = @BaslikInd
			)
		) and TipInd = 112
	) and TipInd in (118, 113) and Tarih >= @Tarih
*/


GO
CREATE FUNCTION [dbo].[StokSayimKontrolSatisKasasi]
(
	@Tarih datetime,
	@Owner int
)
RETURNS TABLE 
AS
RETURN 
(
	select top 1 Owner, Ind
	from Basliklar WITH(NOLOCK)
	where DepoInd in
	(
		select DepoInd
		from Hareketler WITH(NOLOCK)
		where StokInd in
		(
			select StokInd
			from Hareketler WITH(NOLOCK)
			where Ind in
			(
				select IslemInd
				from SatisKasasi WITH(NOLOCK)
				where IsYeniSatis = 1 and Tablo = 'Hareketler' and Owner = @Owner
			)
		) and TipInd = 112
	) and TipInd in (118, 113) and Tarih > @Tarih
)

GO
CREATE FUNCTION [dbo].[StokSonSatisFiyatiTariheGore]
(
     @Owner int
	,@StokInd int
	,@Tarih SMALLDATETIME 
)
RETURNS @SatisFiyati TABLE
(
Owner int,
StokInd int,
Fiyat decimal(28,13)
)
AS
BEGIN

DECLARE @_Sonuc	DECIMAL(28,13)
DECLARE @_KDVOrani DECIMAL
DECLARE @_TipInd INT

	SELECT TOP 1 
			@_Sonuc = Fiyat,
			@_KDVOrani = KDVOrani,
			@_TipInd = TipInd
		FROM 
			dbo.SatisHareketleriEk WITH(NOLOCK)
			WHERE Owner = @Owner
			AND StokInd = @StokInd
			AND Tarih <= @Tarih
		ORDER BY Tarih DESC

IF (@_Sonuc IS NULL) --Baktigi subede deger bulamazsa yapilmis son hareketi getirmesi icin.
	BEGIN 
		SELECT TOP 1 
		    @Owner = Owner,
			@_Sonuc = Fiyat,
			@_KDVOrani = KDVOrani,
			@_TipInd = TipInd
		FROM dbo.SatisHareketleriEk WITH(NOLOCK)
		WHERE StokInd = @StokInd 
		AND Tarih <= @Tarih 
		ORDER BY Tarih DESC
	END 

	IF (@_Sonuc IS NOT NULL)
	BEGIN
		IF @_TipInd = 6
			BEGIN
				SET @_Sonuc =  @_Sonuc * ( 1 + (@_KDVOrani / 100))
			END
	END



IF (@_Sonuc IS NULL) --Hiç deger bulamazsa StokDetaylari tablosundan getirmesi icin.
	BEGIN 
		SELECT TOP 1 
			@_Sonuc = Tutar
		FROM 
			StokDetaylari
		WHERE 
	IsAnaFiyat = 1
	AND StokInd = @StokInd
	END 

INSERT INTO @SatisFiyati VALUES (@Owner, @StokInd, ISNULL(@_Sonuc, 0))

RETURN
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[StokVardiyaMiktarTutarlariToplam] 
(	
	@VardiyaKartInds nvarchar(max),
	@StokInd int
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT B.Owner,SUM(YeniEndeks - EskiEndeks) AS Miktar, SUM(Tutar) AS Tutar
	FROM Hareketler H WITH(NOLOCK)
	INNER JOIN Basliklar B WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind
	INNER JOIN HesapDetaylari HD WITH(NOLOCK) ON H.SayacInd = HD.Ind
	INNER JOIN Hesaplar HSP WITH(NOLOCK) ON HD.DepoInd = HSP.Ind
	WHERE 
	HSP.TipInd = 205
	AND HSP.StokInd IS NOT NULL AND HSP.StokInd = @StokInd  
	AND H.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,',')) AND H.TipInd IN (39,44) AND H.Aktarma = 0
	GROUP BY B.Owner
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[StokVergiMuafiyetKodu] 
(	
	@StokInd INT
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT SG.Owner,SG.VergiMuafiyetKodu
	FROM StokGruplari SG WITH(NOLOCK)
	INNER JOIN Stoklar S WITH(NOLOCK) ON S.GrupInd = SG.Ind
	WHERE S.Ind = @StokInd
)

GO
CREATE FUNCTION [dbo].[SuAnkiStokSatisFiyati_SatisRaporu]
(
	@Owner INT,
	@StokInd INT
)
RETURNS @SonSatisFiyati TABLE
(
	SonFiyat decimal (28,13)
)
AS
BEGIN

	DECLARE @_Result DECIMAL(28,13)
	DECLARE @_FiyatInd INT

	if (@Owner=0) set @Owner = null

	--Şubedeki son satış fiyatı en öncelikli - Ulaş
	SELECT top 1 @_Result = Fiyat
	FROM Hareketler WITH(NOLOCK)
	WHERE StokInd = @StokInd AND Owner = @Owner
		AND TipInd IN (6, 37, 39, 504)
		AND Fiyat > 0
	order by Ind desc
	
	IF (@_Result IS NOT NULL)
		INSERT INTO @SonSatisFiyati VALUES(@_Result)
	RETURN
	IF @Owner IS NULL
	BEGIN
	SELECT 
		TOP 1
		@_FiyatInd = FiyatInd
	FROM 
		SatisFiyatiSiralamaWithStokInd WITH(NOLOCK)
	WHERE 
		Owner IS NULL AND 
		StokInd = @StokInd 
	ORDER BY 
		SiraNo
		DESC
	END
	ELSE
	BEGIN
		SELECT 
		TOP 1
		@_FiyatInd = FiyatInd
	FROM 
		SatisFiyatiSiralamaWithStokInd WITH(NOLOCK) 
	WHERE 
		Owner = @Owner AND 
		StokInd = @StokInd 
	ORDER BY 
		SiraNo
		DESC
	END


	IF (@_FiyatInd IS NULL)
	BEGIN	

		--Ulaş
		if (@_Result is null)
		begin
			SELECT @_Result = Tutar
			FROM StokDetaylari WITH(NOLOCK)
			WHERE StokInd = @StokInd AND Owner = @Owner
				AND TipInd = 501 and IsAnaFiyat = 1
		end

		if (@_Result is null)
		begin
			SELECT @_Result = Tutar
			FROM StokDetaylari WITH(NOLOCK)
			WHERE StokInd = @StokInd AND Owner is null
				AND TipInd = 501 and IsAnaFiyat = 1
		end
		--Ulaş


		if (@_Result is null)
		begin
			SELECT 
				@_Result = Tutar 
			FROM 
				dbo.CBSatisFiyatiListesi WITH(NOLOCK)
			WHERE 
				Owner is null AND
				(StokInd=@StokInd) AND
				TipInd=501 
		end

	END
	ELSE
	BEGIN

		SELECT TOP 1
			@_Result = Tutar 
		FROM 
			dbo.CBSatisFiyatiListesi  WITH(NOLOCK)
		WHERE 
			Ind=@_FiyatInd
			
	
	END
	INSERT INTO @SonSatisFiyati VALUES (@_Result)
	RETURN

END




GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[SubedekiStokMiktari] 
(	
	@stokInd int	
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT
		TOP 100 PERCENT
		Hesaplar.Owner, 
		Hareketler.StokInd,
		SUM(
			CASE  WHEN (Hareketler.TipInd=29)
			THEN Miktar * Carpan
			ELSE 0
			END
			) - SUM(
			CASE  WHEN (Hareketler.TipInd=30 )
			THEN Miktar * Carpan
			ELSE 0
			END
			) as Miktar
		FROM Hareketler WITH(NOLOCK)
		LEFT JOIN Hesaplar WITH(NOLOCK) ON Hesaplar.Ind = Hareketler.DepoInd
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = Hareketler.BaslikInd
		WHERE
		Hareketler.StokInd=@stokInd 
		AND Hareketler.TipInd IN (29,30) 
		AND (b.Aktif = NULL OR b.Aktif = 1)
		GROUP BY Hesaplar.Owner,Hareketler.StokInd
		ORDER BY Hesaplar.Owner
)
GO
CREATE FUNCTION [dbo].[SubeVardiyalari] 
(	
	@baslangic DATETIME,@bitis DATETIME
)

RETURNS TABLE 
AS
RETURN 
(
SELECT 
		B.Ind , 
		B.VardiyaNo,
		B.Tarih VardiyaTarihi,
		B.Owner AS SubeOwner,
		S.SubeAdi AS SubeOwnerAdi,
		B.Owner,
	ROW_NUMBER() OVER(
    PARTITION BY B.Owner 
    ORDER BY B.Tarih ASC,B.VardiyaNo ASC) AS Sira  

	FROM Basliklar  B WITH(NOLOCK)
	INNER JOIN Subeler S WITH(NOLOCK) ON S.Ind=B.Owner
	WHERE B.Tarih>= @baslangic AND B.Tarih<= @bitis AND B.TipInd = 108
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[TarihAraliginaBagliAlisSatisRaporu] 
(
	@StokInd int,
	@DepoInds nvarchar(max),
	@baslangic datetime,
	@bitis datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH HareketDokumu(TipInd,Tutar,Giren,Cikan,Iskonto)
	AS
	(
		SELECT
			h.TipInd as TipInd,
			0.00 as Tutar, 
			0.00 as Giren,
			0.00 as Cikan,
			((h.Miktar*h.Carpan*h.Fiyat-h.Iskonto)+ ((h.Miktar*h.Carpan*h.Fiyat-h.Iskonto)* h.KDVOrani/100)) - (h.Miktar*h.Carpan*h.Fiyat-h.Iskonto-(h.Miktar*h.Carpan*h.Fiyat-h.Iskonto)*b.Iskonto/BaslikMatrahTutari.Matrah)*(1+h.KDVOrani/100) as Iskonto
		FROM Hareketler as h WITH(NOLOCK)
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = h.BaslikInd 
		LEFT JOIN BaslikMatrahTutari WITH(NOLOCK) ON BaslikMatrahTutari.BaslikInd=b.Ind
		LEFT JOIN Basliklar WITH(NOLOCK) ON Basliklar.FaturaInd = b.Ind AND Basliklar.TipInd = 111
		LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.BaslikInd = Basliklar.Ind AND Hareketler.StokInd = @StokInd
		WHERE 
			h.StokInd = @StokInd
			AND h.TipInd = 6
			AND (b.Aktif = 1 OR b.Aktif IS NULL) 
			AND b.TipInd = 102
			AND b.Tarih >= @baslangic
			AND b.Tarih < @bitis 
			AND Hareketler.Owner IN (SELECT DISTINCT Hesaplar.Owner FROM Hesaplar WITH(NOLOCK) WHERE Hesaplar.Ind IN (SELECT * FROM fnSplit(@DepoInds,',')))
			AND b.Ind IN (SELECT Basliklar.FaturaInd FROM Basliklar WITH(NOLOCK) WHERE Basliklar.TipInd = 111)
		GROUP BY
			h.TipInd,
			h.Miktar,
			h.Carpan,
			h.Iskonto,	
			h.Fiyat,	
			h.KDVOrani,
			b.Iskonto,
			BaslikMatrahTutari.Matrah
		UNION ALL
		SELECT 
			gi.TipIndAltHareket as TipInd,
			SUM((gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) + ((gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) * k.KDVOrani/100) - (((gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) + ((gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) * k.KDVOrani / 100)) - (gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto - (gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) * gi.BaslikIskonto / gi.ToplamTutar) * (1 + k.KDVOrani / 100))) as Tutar,
			SUM(gi.Giren) as Giren,
			0.00 as Cikan,
			SUM(gi.HareketIskonto + (((gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto)+ ((gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto)* k.KDVOrani/100)) - (gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto - (gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) * gi.BaslikIskonto / gi.ToplamTutar) * (1+k.KDVOrani/100))) as Iskonto
		FROM
			GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
			LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = gi.StokInd
			LEFT JOIN dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.SatisKDVGrupInd
		WHERE 
			gi.TipIndAltHareket = 3
			AND gi.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))  
			AND gi.StokInd = @StokInd
			AND gi.Tarih >= @baslangic
			AND gi.Tarih < @bitis
			AND gi.TipIndBaslik = 101
		GROUP BY 
			gi.TipIndAltHareket
		UNION ALL
		SELECT
			gi.TipIndAltHareket as TipInd,
			SUM((gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) + ((gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) * k.KDVOrani/100) - (((gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) + ((gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) * k.KDVOrani / 100)) - (gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto - (gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) * gi.BaslikIskonto / gi.ToplamTutar) * (1 + k.KDVOrani / 100))) as Tutar,
			0.00 as Giren,
			SUM(gi.Cikan) as Cikan,
			SUM(gi.HareketIskonto + (((gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto)+ ((gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto)* k.KDVOrani/100)) - (gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto - (gi.Miktar * gi.Carpan * gi.Fiyat - gi.HareketIskonto) * gi.BaslikIskonto / gi.ToplamTutar) * (1+k.KDVOrani/100))) as Iskonto
		FROM
			GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
			LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = gi.StokInd
			LEFT JOIN dbo.KDVGruplari AS k WITH(NOLOCK) ON k.Ind = s.SatisKDVGrupInd
		WHERE 
			gi.StokInd = @StokInd
			AND gi.TipIndAltHareket = 6
			AND gi.TipIndBaslik = 102
			AND gi.Tarih >= @baslangic
			AND gi.Tarih < @bitis 
			AND gi.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		GROUP BY
			gi.TipIndAltHareket
		UNION ALL
		SELECT 
			gi.TipIndAltHareket as TipInd,
			SUM(gi.Miktar * gi.Carpan * gi.Fiyat) as Tutar, 
			SUM(gi.Giren) as Giren,
			SUM(gi.Cikan) as Cikan,
			SUM(gi.HareketIskonto) as Iskonto
		FROM
			GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
		WHERE gi.TipIndAltHareket IN (2, 5) 
		AND gi.StokInd = @StokInd
		AND gi.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))	
		AND gi.Tarih >= @baslangic
		AND gi.Tarih < @bitis
		AND gi.TipIndBaslik IN (103, 104)
		GROUP BY 
			gi.TipIndAltHareket
		UNION ALL
		SELECT 
			g.TipInd as TipInd,
			SUM(g.Cikan * g.Fiyat) as Tutar,
			0.00 as Giren,
			g.Cikan,
			0.00 as Iskonto
		FROM
			GirisCikisHareketleri as g WITH(NOLOCK)
		WHERE
			g.TipInd = 39
			AND g.StokInd = @StokInd
			AND g.Tarih >= @baslangic
			AND g.Tarih < @bitis
			AND g.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,','))
		GROUP BY 
			g.TipInd, g.Cikan
		UNION ALL
		SELECT
			gi.TipInd as TipInd,
			(gi.Cikan * gi.Fiyat) as Tutar,
			0.00 as Giren,
			gi.Cikan,
			CASE WHEN(gi.TipInd = 40)
			THEN 0.00
			ELSE gi.HareketIskonto
			END as Iskonto
		FROM
			GirisCikisHareketleriIskontolu as gi WITH(NOLOCK)
		WHERE
			gi.TipInd IN (40, 504)
			AND gi.StokInd = @StokInd		
			AND gi.Tarih >= @baslangic
			AND gi.Tarih < @bitis
			AND gi.DepoInd IN (SELECT * FROM fnSplit(@DepoInds,',')) 
	)
	SELECT 
		SUM(CASE WHEN (h.TipInd = 3 OR h.TipInd = 2)
			THEN (h.Giren)
			ELSE 0 
			END) as GirenMiktar,
		SUM(CASE WHEN (h.TipInd = 3 OR h.TipInd = 2)
			THEN (h.Tutar)
			ELSE 0 
			END) as GirenTutar,
		SUM(CASE WHEN (h.TipInd = 3 OR h.TipInd = 2)
			THEN (h.Iskonto)
			ELSE 0 
			END) as GirenIskontoTutar,
		SUM(CASE WHEN (h.TipInd = 6 OR h.TipInd = 5 OR h.TipInd = 39 OR h.TipInd = 40 OR h.TipInd = 504)
			THEN (h.Cikan)
			ELSE 0 
			END) as CikanMiktar,
		SUM(CASE WHEN (h.TipInd = 6 OR h.TipInd = 5 OR h.TipInd = 39 OR h.TipInd = 40 OR h.TipInd = 504)
			THEN (h.Tutar)
			ELSE 0 
			END) as CikanTutar,
		SUM(CASE WHEN (h.TipInd = 6 OR h.TipInd = 5 OR h.TipInd = 39 OR h.TipInd = 40 OR h.TipInd = 504)
			THEN (h.Iskonto)
			ELSE 0 
			END) as CikanIskontoTutar
	FROM HareketDokumu as h WITH(NOLOCK)
	WHERE 0=0
)


GO
CREATE FUNCTION [dbo].[TopluSatisIrsaliyesiFaturalandirma]
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
RETURNS TABLE 
AS
RETURN 
(
		SELECT 
			Basliklar.Owner,
			Basliklar.TipInd,
			Basliklar.AltTipInd,
			Basliklar.HesapKodu AS HesapKodu,
				(Hareketler.Miktar * Hareketler.Fiyat * Hareketler.Carpan) AS NetTutar,
			(Hareketler.Miktar * Hareketler.Carpan) AS Miktar,
			Hareketler.Fiyat,
			Basliklar.HesapKodu As Tarih,
			Hareketler.DurumInd,
			Basliklar.HesapInd,
			Basliklar.PlakaNo,
			Basliklar.BelgeNo,
			 Basliklar.HesapAdi
			, Basliklar.Ind
			, Hareketler.StokInd
		FROM Hareketler WITH(NOLOCK)
		LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
		WHERE Basliklar.Tarih >= @BaslangicTarihi
			  AND Basliklar.Tarih < @BitisTarihi
			--  AND Basliklar.HesapInd = @HesapInd
			  AND Hareketler.TipInd IN (2,5)
			AND (Basliklar.DurumInd NOT IN(3,11) OR Basliklar.DurumInd IS NULL) 
		UNION ALL

		SELECT 
			Basliklar.Owner,
			Basliklar.TipInd,
			Basliklar.AltTipInd,
			Basliklar.HesapKodu AS HesapKodu,
			(Hareketler.Miktar * Hareketler.Fiyat * Hareketler.Carpan) AS NetTutar,
			(Hareketler.Miktar * Hareketler.Carpan) AS Miktar,
			Hareketler.Fiyat,
			Basliklar.HesapKodu As Tarih,
			Hareketler.DurumInd,
			Basliklar.HesapInd,
			Basliklar.PlakaNo,
			Basliklar.BelgeNo,
			 Basliklar.HesapAdi AS StokKodu
			, Basliklar.Ind
			,Hareketler.StokInd
		FROM Hareketler WITH(NOLOCK)
		LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.BaslikInd=Basliklar.Ind
		WHERE Basliklar.Tarih >= @BaslangicTarihi
			  AND Basliklar.Tarih < @BitisTarihi
			--  AND Basliklar.HesapInd = @HesapInd
			  AND Hareketler.TipInd IN (37)
		      AND (Basliklar.DurumInd NOT IN(3,11) OR Basliklar.DurumInd IS NULL)
)


GO


CREATE FUNCTION [dbo].[TumIrsaliyeSatisBilgileriGetir]
(
	@Owner int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)

RETURNS TABLE 
AS


RETURN 
(
-- Verilen Tarih Aralığında Düzenlenen Vardiya içi İrsaliyeler (111) alınıyor)
SELECT
	V.Owner,
	S.SubeAdi,
	V.Tarih AS IrsaliyeTarihi,
	B.BelgeNo AS IrsaliyeNo,
	B.HesapInd,
	B.HesapKodu,
	B.HesapAdi,
	H.StokInd,
	H.StokKodu,
	NULL AS StokMuhasebeKodu,
	H.StokAdi,
	SUM(Miktar) AS Miktar,
	SUM(Tutar) / SUM(Miktar) AS Fiyat,
	SUM(Tutar) AS Tutar,
	NULL AS CariMuhasebeKodu,
	HS.DekontCarisi
    FROM Hareketler H WITH(NOLOCK)
    INNER JOIN Basliklar B WITH(NOLOCK) ON H.BaslikInd = B.Ind
    INNER JOIN Basliklar V WITH(NOLOCK) ON B.VardiyaKartInd = V.Ind
    INNER JOIN Subeler S WITH(NOLOCK) ON B.Owner = S.Ind
    LEFT JOIN Hesaplar HS WITH(NOLOCK) ON B.HesapInd = HS.Ind
    LEFT JOIN Stoklar STK WITH(NOLOCK) ON H.StokInd = STK.Ind
    WHERE 
	B.TipInd = 111 AND
	B.Owner = @Owner AND
    B.Tarih >= CASE WHEN DATEDIFF(day, @BaslangicTarihi, @BitisTarihi) > 2 THEN 
		CAST('19900101' AS DATETIME)
	 ELSE
		@BaslangicTarihi
	END
	AND B.Tarih < @BitisTarihi 
	
	AND V.Tarih >= CASE WHEN DATEDIFF(day, @BaslangicTarihi, @BitisTarihi) > 2 THEN 
		CAST('19900101' AS DATETIME)
	 ELSE
		@BaslangicTarihi
	END
	AND V.Tarih < @BitisTarihi 
	--AND B.HesapInd NOT IN (2108,4389,4390) -- G012 Çekilen Akaryakıt, TEST Yakıt Carisi, Hatalı Yakıt Dolumları

	AND B.Owner IS NOT NULL
   --AND Hs.DekontCarisi != 1 -- Dekont Carisi Dışındakiler
GROUP BY
	V.Owner,
	S.SubeAdi,
	V.Tarih,
	B.BelgeNo,
	B.HesapInd,
	B.HesapKodu,
	B.HesapAdi,
 	H.StokInd,
	H.StokKodu,
	H.StokAdi,
	HS.DekontCarisi
	
)






GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[VardiyaAcikFazlaToplam] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT 
    Hareketler.Owner,
    Hareketler.TipInd,
	SUM(Hareketler.Tutar) AS Tutar
	FROM Hareketler WITH(NOLOCK)
	WHERE Hareketler.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,',')) AND TipInd IN (55,56)
	GROUP BY Hareketler.Owner,Hareketler.TipInd
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[VardiyaCikisListe] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT Owner, ListeAdi, SUM(Tutar) AS Tutar
	FROM VardiyaCikis WITH(NOLOCK)
	WHERE VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds, ','))
	GROUP BY ListeAdi, Owner
)




GO
CREATE FUNCTION [dbo].[VardiyadaHareketiOlanKrediKartlari]
(	
	@Owner int
)
RETURNS 
TABLE 
AS
RETURN 
(
	select * from pbkredikartlari WITH(NOLOCK)
	where Ind in
	(
		select KKHesapInd from Hareketler WITH(NOLOCK) where TipInd=54 and Owner = @Owner
	)
)

GO
CREATE FUNCTION [dbo].[VardiyaEskiSayaclar] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT TOP 10000 * FROM
		(SELECT 
			SayacaAitDepoStok.Owner,
			SayacaAitDepoStok.StokInd,
			SayacInd,
			SayacKodu,
			SayacAdi,
			MIN(EskiEndeks) AS EskiEndeks,
			MIN(EskiEndeks)+SUM(YeniEndeks-EskiEndeks) AS YeniEndeks,
			SUM(Aktarma) AS Aktarma,
			SUM(ABS(YeniEndeks-EskiEndeks-Aktarma)) AS Fark,
			Fiyat,
			SUM(Tutar) as Tutar,	
			SayacaAitDepoStok.OtomasyonKodu AS OtomasyonKodu
		FROM
			Hareketler WITH(NOLOCK)
		LEFT JOIN SayacaAitDepoStok WITH(NOLOCK) ON SayacaAitDepoStok.Ind = Hareketler.SayacInd  
		WHERE TipInd IN (39) 
		AND VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
		GROUP BY 
			SayacInd,
			SayacaAitDepoStok.Owner,
			SayacKodu,
			SayacAdi,
			SayacaAitDepoStok.StokInd,
			Fiyat,
			SayacaAitDepoStok.OtomasyonKodu) AS VardiyaEskiSayaclarWithTumSubelerinSayacinaAitDepoStoklarla
	--WHERE
	--	VardiyaEskiSayaclarWithTumSubelerinSayacinaAitDepoStoklarla.EskiEndeks != VardiyaEskiSayaclarWithTumSubelerinSayacinaAitDepoStoklarla.YeniEndeks
	order by VardiyaEskiSayaclarWithTumSubelerinSayacinaAitDepoStoklarla.SayacKodu
	)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[VardiyaGirisListe] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS @Dokum TABLE 
(
	Owner int,
	ListeAdi nvarchar(40),
	Tutar decimal(28,8)
)
AS
BEGIN
		-- Sayaç
	DECLARE @sayac int
	SELECT @sayac=Count(*) 
		FROM Hareketler WITH(NOLOCK)
		WHERE (TipInd=44 OR TipInd=39) AND VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
		GROUP BY Hareketler.Owner
	IF @sayac !=0
		INSERT INTO @Dokum	
		SELECT 
			Hareketler.Owner,
			'Sayaç satış' as ListeAdi,
			SUM(CASE WHEN(b.OtomasyonVardiyaInd >0)
				THEN Tutar
				WHEN (b.OtomasyonVardiyaInd IS NULL OR b.OtomasyonVardiyaInd = 0)
				THEN (ABS(YeniEndeks-EskiEndeks-Aktarma))*Fiyat
				END) as Tutar
		FROM Hareketler WITH(NOLOCK)
		LEFT JOIN Basliklar as b ON b.Ind = Hareketler.VardiyaKartInd
		WHERE (Hareketler.TipInd=44 OR Hareketler.TipInd=39)  AND Hareketler.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
		GROUP BY Hareketler.Owner

	ELSE
		INSERT INTO @Dokum VALUES(NULL, 'Sayaç satış',0)
		
		-- Emtia(Perakende)
	DECLARE @emtia int
	SELECT @emtia=Count(*) 
		FROM Hareketler
		WHERE (TipInd=43 OR TipInd=40)  AND VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
		GROUP BY Hareketler.Owner
	IF @emtia !=0
		INSERT INTO @Dokum	
		SELECT 
			Hareketler.Owner,
			'Emtia satış' as ListeAdi,
			SUM(Miktar*Carpan*Fiyat) as Tutar
		FROM Hareketler WITH(NOLOCK)
		WHERE (TipInd=43 OR TipInd=40)  AND VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
		GROUP BY Hareketler.Owner
	ELSE
		INSERT INTO @Dokum VALUES(NULL, 'Emtia satış',0)
		
		--Gelir
	DECLARE @gelirler int
	SELECT @gelirler=Count(*) 
		FROM Hareketler WITH(NOLOCK)
		WHERE Hareketler.TipInd in (25,45,9,533,46,532,20,47,19,48) AND VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
	IF @gelirler !=0
		INSERT INTO @Dokum	
		SELECT 
			Hareketler.Owner,
			'Gelirler' as ListeAdi,
			SUM(
				CASE  WHEN (Hareketler.TipInd in (25,45,9,533,46,532,19,48))
				THEN Hareketler.Tutar*Hareketler.Kur 
				WHEN (Hareketler.TipInd in (20,47))
				THEN Hareketler.Tutar
				ELSE 0
				END
			) as Tutar
		FROM Hareketler WITH(NOLOCK)
		WHERE Hareketler.TipInd in (25,45,9,533,46,532,20,47,19,48) AND VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
		GROUP BY Hareketler.Owner
	ELSE
		INSERT INTO @Dokum VALUES(NULL, 'Gelirler',0)


	RETURN 	
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[VardiyaGirisListeTurev] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS @Dokum TABLE 
(
	Owner int,
	ListeAdi nvarchar(40),
	Tutar decimal(28,8)
)
AS
BEGIN
	-- Sayaç
	DECLARE @sayac int
	SELECT
		@sayac=Count(*) 
	FROM 
		Hareketler WITH(NOLOCK)
	WHERE 
		(
			TipInd=44 
			OR TipInd=39
		) 
		AND --@VardiyaKartInds
		VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
	GROUP BY 
		Hareketler.Owner
	IF @sayac !=0
		INSERT INTO @Dokum	
		SELECT 
			Hareketler.Owner,
			'Sayaç satış' as ListeAdi,
			SUM(CASE WHEN(b.OtomasyonVardiyaInd >0)
				THEN Tutar
				WHEN (b.OtomasyonVardiyaInd IS NULL OR b.OtomasyonVardiyaInd = 0)
				THEN (ABS(YeniEndeks-EskiEndeks-Aktarma))*Fiyat
				END) as Tutar
		FROM 
			Hareketler WITH(NOLOCK)
			LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = Hareketler.VardiyaKartInd
		WHERE 
			(Hareketler.TipInd=44 OR Hareketler.TipInd=39)  
			AND --@VardiyaKartInds
			Hareketler.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
		GROUP BY 
			Hareketler.Owner

	ELSE
		INSERT INTO @Dokum VALUES(NULL, 'Sayaç satış',0)
	-- Emtia(Perakende)
	DECLARE @emtia int
	SELECT 
		@emtia = Count(*) 
	FROM 
		Hareketler
	WHERE 
		(TipInd=43 OR TipInd=40)  
		AND --@VardiyaKartInds
		VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
	GROUP BY 
		Hareketler.Owner
	IF @emtia !=0
		INSERT INTO @Dokum	
		SELECT 
			Hareketler.Owner,
			'Emtia satış' as ListeAdi,
			SUM
			(
				Miktar
				*
				Carpan
				*
				Fiyat
			) as Tutar
		FROM 
			Hareketler WITH(NOLOCK)
		WHERE 
			(
				TipInd=43 
				OR TipInd=40
			)  
			AND --@VardiyaKartInds
			VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
		GROUP BY 
			Hareketler.Owner
	ELSE
		INSERT INTO @Dokum VALUES(NULL, 'Emtia satış',0)
	--Gelir
	DECLARE @gelirler int
	SELECT 
		@gelirler = Count(*) 
	FROM 
		Hareketler WITH(NOLOCK)
	WHERE 
		(
			Hareketler.TipInd = 25 
			OR Hareketler.TipInd = 45 
			OR Hareketler.TipInd = 9 
			OR Hareketler.TipInd = 46
            OR Hareketler.TipInd = 532
            OR Hareketler.TipInd = 533  			
			OR Hareketler.TipInd = 20 
			OR Hareketler.TipInd = 47 
			OR Hareketler.TipInd = 19 
			OR Hareketler.TipInd = 48
		) 
		AND --@VardiyaKartInds
		VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
	IF @gelirler !=0
		INSERT INTO @Dokum	
		SELECT 
			Hareketler.Owner,
			'Gelirler' as ListeAdi,
			SUM(
				CASE  WHEN (Hareketler.TipInd in (25,45,9,46,532,19,48))
				THEN Hareketler.Tutar * Hareketler.Kur 
				WHEN (Hareketler.TipInd = 20 OR Hareketler.TipInd = 47)
				THEN Hareketler.Tutar
				ELSE 0
				END
			   ) as Tutar
		FROM 
			Hareketler WITH(NOLOCK)
		WHERE 
			(
				Hareketler.TipInd = 25 
				OR Hareketler.TipInd = 45 
				OR Hareketler.TipInd = 9 
				OR Hareketler.TipInd = 46
                OR Hareketler.TipInd = 532
                OR Hareketler.TipInd = 533 				
				OR Hareketler.TipInd = 20 
				OR Hareketler.TipInd = 47 
				OR Hareketler.TipInd = 19 
				OR Hareketler.TipInd = 48
			) 
			AND --@VardiyaKartInds
			VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
		GROUP BY Hareketler.Owner
	ELSE
		INSERT INTO @Dokum VALUES(NULL, 'Gelirler',0)
	RETURN 	
END

GO
CREATE FUNCTION [dbo].[VardiyaGrupluSayaclar] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		S.Owner,
		SA.StokInd,
		H.TipInd, 
		S.SayacInd, 
		S.SayacKodu, 
		S.SayacAdi, 
		S.AzalanEndeks,
		S.EskiEndeks, 
		SUM(H.YeniEndeks - H.EskiEndeks) + S.EskiEndeks AS YeniEndeks,
		H.Aktarma,
		(SUM(ABS(H.YeniEndeks - H.EskiEndeks) - H.Aktarma)) AS Fark,
		H.Fiyat,
		(SUM(H.Tutar)) AS Tutar,
		S.OtomasyonKodu as OtomasyonKodu
	FROM SayacForVardiya AS S WITH(NOLOCK)
	LEFT JOIN Hareketler AS H WITH(NOLOCK) ON S.SayacInd = H.SayacInd
	LEFT JOIN SayacaAitDepoStok AS SA WITH(NOLOCK) ON SA.Ind = S.SayacInd 
	WHERE (H.TipInd = 44) AND VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
	GROUP BY
		S.Owner,
		H.TipInd, 
		S.SayacInd, 
		S.SayacKodu, 
		S.SayacAdi, 
		S.AzalanEndeks,
		S.EskiEndeks, 
		H.Aktarma,
		SA.StokInd,
		H.Fiyat,
		S.OtomasyonKodu

	UNION ALL

	SELECT		
		HD.Owner,
		SayacaAitDepoStok.StokInd,
		44 AS TipInd,
		HD.Ind AS SayacInd, 
		HD.SayacKodu, 
		HD.SayacAdi, 
		HD.AzalanEndeks,
		HD.SayacEndeksi AS EskiEndeks, 
		HD.SayacEndeksi AS YeniEndeks,
		0 AS Aktarma,
		0 AS Fark,
		SO.Tutar AS Fiyat,
		0 AS Tutar,
		HD.OtomasyonKodu as OtomasyonKodu
	FROM HesapDetaylari AS HD WITH(NOLOCK)
	LEFT JOIN SayacaAitDepoStok WITH(NOLOCK) ON SayacaAitDepoStok.Ind = HD.Ind 
	INNER JOIN SayacOzet AS SO WITH(NOLOCK) ON HD.Ind = SO.Ind
	WHERE HD.TipInd=402 AND 
	HD.Ind 
		NOT IN (
		SELECT 
			DISTINCT SayacInd
		FROM Hareketler
		WHERE (TipInd = 44 OR TipInd = 39) AND VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
		GROUP BY SayacInd
		)
)



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[VardiyaGunlukSayaclar] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
		SELECT 
			Hareketler.Owner,
			Hareketler.SayacKodu,
			Hareketler.SayacAdi,
			MIN(Hareketler.EskiEndeks) as EskiEndeks,
			MAX(Hareketler.YeniEndeks) as YeniEndeks,
			SUM(Hareketler.Aktarma) as Aktarma,
			SUM(Hareketler.YeniEndeks-Hareketler.EskiEndeks-Hareketler.Aktarma) as Fark,
			StokDetaylari.Tutar*(1+KDVOrani.SatisKDVOrani/100) as Fiyat,
			SUM((Hareketler.YeniEndeks-Hareketler.EskiEndeks)*StokDetaylari.Tutar*(1+KDVOrani.SatisKDVOrani/100)) as Tutar
		FROM HesapDetaylari WITH(NOLOCK)
			LEFT JOIN Hareketler WITH(NOLOCK) ON HesapDetaylari.Ind=hareketler.SayacInd
			LEFT JOIN Hesaplar WITH(NOLOCK) ON HesapDetaylari.DepoInd=Hesaplar.Ind
			LEFT JOIN StokDetaylari WITH(NOLOCK) ON StokDetaylari.StokInd=Hesaplar.StokInd AND StokDetaylari.IsAnaFiyat=1
			LEFT JOIN KDVOrani WITH(NOLOCK) ON dbo.StokDetaylari.StokInd = dbo.KDVOrani.Ind
		WHERE Hareketler.TipInd=39 AND VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
		GROUP BY 
		Hareketler.Owner,
		Hareketler.SayacKodu,
		Hareketler.SayacAdi,
		StokDetaylari.Tutar,
		KDVOrani.SatisKDVOrani
)
GO
CREATE FUNCTION [dbo].[VardiyaIrsaliyeKontrol]
(
	@Owner int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)

RETURNS TABLE 
AS
RETURN 
(
SELECT 
	B.Owner,
	B.Ind 
FROM Basliklar B WITH(NOLOCK)
INNER JOIN Basliklar V WITH(NOLOCK) ON B.VardiyaKartInd = V.Ind
INNER JOIN Hesaplar H WITH(NOLOCK) ON H.Ind = B.HesapInd AND h.DekontCarisi = 0
INNER JOIN Ayarlar A WITH(NOLOCK) ON B.HesapInd != A.OtomasyonFirmaInd
WHERE 
	A.TipInd = 304 AND
	B.TipInd = 111 AND 
	B.FaturaInd IS NULL AND 
	B.Owner = @Owner AND
	B.Tarih BETWEEN @BaslangicTarihi AND @BitisTarihi
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[VardiyaKasaGiderleriToplam] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS 
TABLE 
AS
RETURN 
(

	SELECT H.Owner,SUM(H.Tutar) AS Tutar, H.GiderInd,H.GiderKodu,H.GiderAdi
	FROM Hareketler H WITH(NOLOCK)
	WHERE H.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
	AND 
	H.TipInd IN (26,49) GROUP BY H.Owner,H.GiderInd,H.GiderKodu,H.GiderAdi
)

GO
CREATE FUNCTION [dbo].[VardiyaKKSatislariGetir]
(
	@Owner int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)

RETURNS TABLE 
AS
RETURN 
(
SELECT 
	B.Ind AS VardiyaKartInd,
	H.Ind AS HareketInd,
	B.Owner,
	B.Tarih, 
	B.VardiyaNo, 
	H.KKHesapInd,
	H.KKHesapKodu,
	HS.MuhasebeKodu AS KKMuhasebeKodu,
	H.KKHesapAdi,
	H2.Ind AS BankaInd,
	H2.HesapKodu AS BankaKodu,
	H2.MuhasebeKodu AS BankaMuhasebeKodu,
	H2.HesapAdi AS BankaHesapAdi,
	H2.BankaAdi,
	H.Tutar AS Tutar 
FROM Hareketler H WITH(NOLOCK)
INNER JOIN Hesaplar HS WITH(NOLOCK) ON H.KKHesapInd = HS.Ind
INNER JOIN Hesaplar H2 WITH(NOLOCK) ON HS.BankaInd = H2.Ind
INNER JOIN Basliklar B WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind
WHERE 
	B.TipInd = 108 AND 
	H.TipInd IN (10,533) AND 
	H.CariHesapInd = 0 AND
	B.Owner = @Owner AND
	B.Tarih BETWEEN @BaslangicTarihi AND @BitisTarihi
)



GO
CREATE FUNCTION [dbo].[VardiyaKrediKartliHareketSayisi]
(	
	@TipInd int,
	@Owner int
)
RETURNS TABLE 
AS
RETURN
(
	SELECT count(*) as Sayi, null as Owner
	FROM Hareketler WITH(NOLOCK)
	WHERE Owner=@Owner AND TipInd = @TipInd
	group by Owner
)

GO
CREATE FUNCTION [dbo].[VardiyaKurumsalSatis]
(
	@KayitAdet int
)

RETURNS TABLE 
AS
RETURN 
(
SELECT TOP (@KayitAdet)
	v.Ind as OtomasyonVardiya_Ind,
	v.Owner as Owner,
	v.SubeId as OtomasyonVardiya_SubeId,
	v.KayitDurumu,
	v.DosyaVardiyaKodu,
	v.VardiyaTarihi,
	v.VardiyaNo,
	
	vd.Ind as OtomasyonVardiyaDetay_Ind,
	vd.Owner as OtomasyonVardiyaDetay_Owner,
	vd.SatisTarihi,
	vd.OtomasyonVardiyaInd as OtomasyonVardiyaDetay_VardiyaInd,
	vd.SatisTipi,
	vd.OtomasyonOdemeTipi,
	vd.StokKodu,
	vd.Miktar,
	vd.Birim,
	vd.BirimFiyat,
	vd.IskontoTutari,
	vd.PompaNo,
	vd.TabancaNo,
	vd.KazanilanPuan,
	vd.KazanilanTutar,
	vd.KartNo,
	vd.KartTipi,
	vd.FisNo,
	vd.OtomasyonSatisId,
	vd.Plaka,
	vd.PersonelOtomasyonKodu,
	vd.UstIsilDeger,
	vd.Yogunluk,
	vd.Aktarildi,
	vd.AktarildiDurum,
	vd.RfId,
	vd.Tutar,
	vd.OtomasyonFirmaKodu as OtomasyonVardiya_FirmaKodu,
	vd.OtomasyonMusteriId,
	vd.OtomasyonSatisTipId,
	vd.OtomasyonPompaciAdi,
	vd.DenemeSayisi,
	
	vs.OtomasyonFirmaKodu as OtomasyonVardiyaSube_FirmaKodu,
	vs.OtomasyonSubeKodu,
	vs.Ind as OtomasyonVardiyaSube_Ind,
	vs.SubeId as OtomasyonVardiyaSube_SubeId,
	
	sb.SubeKodu as HititSubeKodu
	FROM OtomasyonVardiya as v WITH(NOLOCK)
	INNER JOIN OtomasyonVardiyaDetay as vd WITH(NOLOCK) ON vd.OtomasyonVardiyaInd = v.Ind
	INNER JOIN OtomasyonVardiyaSube as vs WITH(NOLOCK) ON vs.Ind = vd.OtomasyonVardiyaSubeInd
	INNER JOIN Subeler as sb WITH(NOLOCK) ON sb.Ind = vs.SubeId
	WHERE vd.Aktarildi = 0
)



GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[VardiyaMiktarTutarlariToplam] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS 
TABLE 
AS
RETURN 
(
	--SELECT B.Owner,SUM(YeniEndeks - EskiEndeks) AS Miktar, SUM(Tutar) AS Tutar
	--FROM Hareketler H 
	--INNER JOIN Basliklar B ON H.VardiyaKartInd = B.Ind  
	--WHERE H.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,',')) AND H.TipInd IN (39,44) 
	--GROUP BY B.Owner

	--HIT-3196 - Ä°stasyon satÄ±ÅŸ Raporu Sorunu - Sinan
	SELECT B.Owner,SUM(Miktar) AS Miktar, SUM(Miktar * Fiyat) AS Tutar
	FROM VTS V WITH(NOLOCK)
	INNER JOIN Basliklar B WITH(NOLOCK) ON V.VardiyaKartInd = B.Ind  
	WHERE V.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,',')) AND V.TipInd IN (39,44) 
	GROUP BY B.Owner
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[VardiyaMiktarTutarlariToplamStokBazli] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT STK.Ind As StokInd,STK.StokKodu,STK.StokAdi,B.Owner,SUM(YeniEndeks - EskiEndeks) AS Miktar, SUM(Tutar) AS Tutar
	FROM Hareketler H WITH(NOLOCK)
	INNER JOIN Basliklar B WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind
	INNER JOIN HesapDetaylari HD WITH(NOLOCK) ON H.SayacInd = HD.Ind
	INNER JOIN Hesaplar HSP WITH(NOLOCK) ON HD.DepoInd = HSP.IND
	INNER JOIN Stoklar STK WITH(NOLOCK) ON HSP.StokInd = STK.Ind  
	WHERE H.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,',')) AND H.TipInd IN (39,44) 
	GROUP BY B.Owner,STK.Ind,STK.StokKodu,STK.StokAdi
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[VardiyaNakitSatirlari] 
(	
	@VardiyaKartInd int
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT 
		Hareketler.Owner,
		Hareketler.Ind,
		KurBilgileri.Owner AS KurOwner,
		KurBilgileri.ParaBirimi,
		KurBilgileri.Kur,
		Hareketler.Tutar,
		Hareketler.VardiyaKartInd 
	FROM KurBilgileri WITH(NOLOCK)
	LEFT JOIN Hareketler WITH(NOLOCK) ON KurBilgileri.ParaBirimi=Hareketler.ParaBirimi AND (vardiyaKartInd=@VardiyaKartInd AND TipInd=42)

)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[VardiyaNakitTahsilatListesi] 
(
	@vardiyaKartInds nvarchar(MAX)
)
RETURNS 
TABLE 
AS
RETURN 
(
	WITH Dokum(Owner,ParaBirimi,Kur,Tutar, Kaynak)
	AS
	(
		SELECT
			h.Owner,
			h.Parabirimi,
			h.Kur,
			SUM(h.Tutar * h.Kur) as Tutar,
			'Vardiya' AS Kaynak
		FROM Hareketler as h WITH(NOLOCK)
		WHERE h.TipInd IN (38,42) AND h.VardiyaKartInd IN (SELECT * FROM fnSplit(@vardiyaKartInds,','))
		GROUP BY
			h.Owner,
			h.ParaBirimi,
			h.Kur
	)

	SELECT * 
	FROM Dokum 
	WHERE 0 = 0
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[VardiyaPersonel]
(
	@varInd int

) 
RETURNS @Dokum TABLE
(
	PersonelHesapAdi nvarchar(50),
	Owner int
	
)
AS BEGIN
	INSERT INTO @Dokum
	SELECT h.PersonelHesapAdi, h.Owner 
	FROM Hareketler as h WITH(NOLOCK)
	LEFT JOIN VardiyaKartInds as v WITH(NOLOCK) on h.VardiyaKartInd = v.Ind
	WHERE (h.TipInd IN (33, 35)) AND
			v.Ind = @varInd
	
	DECLARE @x int
		SELECT @x=COUNT(*) FROM @Dokum

		IF(@x=0)
		INSERT INTO @Dokum 
		SELECT
			'Personel atanmamış' as PersonelHesapAdi,
			NULL as Owner

RETURN
END
GO
CREATE FUNCTION [dbo].[VardiyaPersonelAcikFazla] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Dokum(Owner, VardiyaKartInd, GirisTutar,CikisTutar)
	AS
	(
		SELECT 
		Hareketler.Owner,
		Hareketler.VardiyaKartInd,	
		SUM(
			CASE  WHEN (Hareketler.TipInd in (25,45,9,46,533,19,48))
			THEN Hareketler.Tutar*Hareketler.Kur 
			WHEN (Hareketler.TipInd in (20,47))
			THEN Hareketler.Tutar
			WHEN Hareketler.TipInd IN (39,44) AND (Basliklar.OtomasyonVardiyaInd IS NULL OR Basliklar.OtomasyonVardiyaInd <1)
			THEN (ABS(YeniEndeks-EskiEndeks)-Aktarma)*Fiyat
			WHEN Hareketler.TipInd IN (39,44) AND (Basliklar.OtomasyonVardiyaInd >0)
			THEN Hareketler.Tutar
			WHEN Hareketler.TipInd IN (43,40)
			THEN Miktar*Carpan*Fiyat
			ELSE 0
			END
		) as GirisTutar,
		SUM(
			CASE  WHEN (Hareketler.TipInd in (26,42,49,13,50,17,52,11,53))
			THEN Hareketler.Tutar*Hareketler.Kur 
			WHEN (Hareketler.TipInd in (18,51))
			THEN Hareketler.Tutar
			WHEN (Hareketler.TipInd in (54,10))
			THEN Hareketler.Tutar
			WHEN (Hareketler.TipInd in (41,37) AND (Basliklar.OtomasyonVardiyaInd IS NULL OR Basliklar.OtomasyonVardiyaInd <1))
			THEN Miktar*Carpan*Fiyat
			WHEN (Hareketler.TipInd in (41,37) AND (Basliklar.OtomasyonVardiyaInd >0))
			THEN Hareketler.Tutar
			WHEN (Hareketler.TipInd in (38))
			THEN Tutar*Kur
			ELSE 0
			END
		) as CikisTutar
	FROM Hareketler WITH(NOLOCK)
	LEFT JOIN Basliklar WITH(NOLOCK) ON Basliklar.Ind = Hareketler.VardiyaKartInd


	WHERE Hareketler.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
	GROUP BY Hareketler.Owner,Hareketler.VardiyaKartInd
	)

	SELECT DISTINCT
		Dokum.Owner,
		Dokum.VardiyaKartInd,
		((Dokum.CikisTutar-Dokum.GirisTutar)/VardiyaPersonelSayisi.Sayi) as Tutar,
		(CASE 
			WHEN Dokum.GirisTutar>Dokum.CikisTutar
			THEN 'Vardiya Açığı'
			WHEN Dokum.GirisTutar<Dokum.CikisTutar
			THEN 'Vardiya Fazlası'
			ELSE ''
			END) AS HesapDurum,
		Hareketler.PersonelHesapInd,
		Hareketler.PersonelHesapKodu,
		Hareketler.PersonelHesapAdi,
(SELECT     COUNT(Ind) FROM   Hareketler as b WITH(NOLOCK)
     WHERE      (b.VardiyaKartInd = Hareketler.VardiyaKartInd) AND (b.TipInd = 39 OR
                    b.TipInd = 44)) AS AdetSatis
	FROM Dokum WITH(NOLOCK)
	LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.VardiyaKartInd=Dokum.VardiyaKartInd AND TipInd IN (33,35)
	LEFT JOIN VardiyaPersonelSayisi WITH(NOLOCK) ON Hareketler.VardiyaKartInd=VardiyaPersonelSayisi.VardiyaKartInd
	WHERE
		Hareketler.PersonelHesapKodu IS NOT NULL
)


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[VardiyaPersonelAcikToplam] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT B.Owner,SUM(Tutar) AS Tutar
	FROM Hareketler H WITH(NOLOCK)
	INNER JOIN Basliklar B WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind  
	WHERE H.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,',')) AND H.TipInd = 55
	GROUP BY B.Owner
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[VardiyaPersonelFazlaToplam] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS 
TABLE 
AS
RETURN 
(
	SELECT B.Owner,SUM(Tutar) AS Tutar
	FROM Hareketler H WITH(NOLOCK)
	INNER JOIN Basliklar B WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind  
	WHERE H.VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,',')) AND H.TipInd = 56 
	GROUP BY B.Owner
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[VardiyaPersoneliAcikFazlaDokumu] 
(
	@baslangic datetime,
	@bitis datetime
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Dokum(Owner,Ind,HesapKodu,HesapAdi,Fazla,Acik,Kalan)
	AS
	(
		SELECT  
			dbo.Hesaplar.Owner,   
			dbo.Hesaplar.Ind, 
			dbo.Hesaplar.HesapKodu, 
			dbo.Hesaplar.HesapAdi, 
			SUM(CASE WHEN (Hareketler.TipInd = 55) 
				THEN (Hareketler.Tutar) 
				ELSE 0 
				END) AS Acik, 
			SUM(CASE WHEN Hareketler.TipInd = 56
				THEN Hareketler.Tutar 			
				ELSE 0 
				END) AS Fazla,
			((SUM(CASE WHEN Hareketler.TipInd = 56 
				THEN Hareketler.Tutar 
				ELSE 0 
				END) - SUM(CASE WHEN (Hareketler.TipInd = 55) 
				THEN (Hareketler.Tutar) 	
				ELSE 0 
				END))) as Kalan

		FROM dbo.Hesaplar WITH(NOLOCK)
		LEFT OUTER JOIN dbo.Hareketler WITH(NOLOCK) ON dbo.Hareketler.PersonelHesapInd = dbo.Hesaplar.Ind
		LEFT JOIN Basliklar as b WITH(NOLOCK) ON b.Ind = Hareketler.BaslikInd
		LEFT JOIN Basliklar WITH(NOLOCK) ON Basliklar.Ind = Hareketler.VardiyaKartInd
		WHERE (dbo.Hesaplar.Ind IN
			(SELECT PersonelHesapInd
			FROM dbo.Hareketler AS Hareketler_1
			WHERE(TipInd IN (55,56)))) 
		AND (dbo.Hareketler.TipInd IN (55, 56))
		AND ((b.Tarih >= @baslangic AND b.Tarih < @bitis) 
			OR (Basliklar.Tarih >= @baslangic AND Basliklar.Tarih < @bitis))
	GROUP BY 
		dbo.Hesaplar.Owner,
		dbo.Hesaplar.Ind, 
		dbo.Hesaplar.HesapKodu, 
		dbo.Hesaplar.HesapAdi
	)

	SELECT
		Owner,   
		Ind as PersonelHesapInd, 
		HesapKodu as PersonelHesapKodu, 
		HesapAdi as PersonelHesapAdi, 
		Acik,
		Fazla,			
		Kalan,
		(CASE WHEN(Kalan >0)
			THEN 'F'
			WHEN(Kalan<0)
			THEN 'A' 
			ELSE '-'
			END) as AcikFazla
	FROM Dokum WITH(NOLOCK)
	WHERE 0=0
)
GO

SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[VardiyaRaporu] 
(	
	@vardiyaInd INT
)
RETURNS @Dokum TABLE
(
	Owner INT,
	SubeOwner INT
	,SubeOwnerAdi VARCHAR(100)
	,VardiyaNo INT
	,VardiyaTarihi DATETIME
	,Sayac DECIMAL(28,8)
	,SayacLitre DECIMAL(28,8) 
	,Perakende DECIMAL(28,8)
	,Gelirler DECIMAL(28,8)
	,KrediKartli DECIMAL(28,8)
	,KKliTahsilat DECIMAL(28,8)
	,Kredili DECIMAL(28,8)
	,KrediliLt  DECIMAL(28,8) 
	,Giderler DECIMAL(28,8)
	,Nakit DECIMAL(28,8)
	,AcikFazla DECIMAL(28,8)
	,Tts DECIMAL(28,8)
)
AS
BEGIN
	DECLARE 
		@sayac DECIMAL(28,8),
		@sayacLitre DECIMAL(28,8), 
		@perakende DECIMAL(28,8),
		@gelirler DECIMAL(28,8),
		@krediKartli DECIMAL(28,8),
		@kklitahsilat DECIMAL(28,8),
		@kredili DECIMAL(28,8),
		@krediliLt DECIMAL(28,8),
		@giderler DECIMAL(28,8),
		@nakit DECIMAL(28,8),
		@acikFazla DECIMAL(28,8),
		@tts DECIMAL(28,8)
		
	SET 
		@acikFazla = (SELECT ISNULL(SUM(Tutar),0) FROM VardiyaPersonelAcikFazla(@vardiyaInd))
	
	SELECT @sayac=ISNULL(SUM(Tutar),0),@sayacLitre=ISNULL(SUM(Fark),0) FROM VardiyaEskiSayaclar(@vardiyaInd)

	SET
		@perakende=(SELECT ISNULL(SUM(Miktar*Fiyat*Carpan),0) FROM Hareketler WITH(NOLOCK) WHERE TipInd = 40 AND VardiyaKartInd =@vardiyaInd)
	SET
		@kredili=(SELECT ISNULL(SUM(Tutar),0) FROM AktifVeresiyeFisi WITH(NOLOCK) WHERE (TipInd = 111 AND VardiyaKartInd =@vardiyaInd))

		 SELECT @krediliLt = ISNULL(SUM(Miktar),0) FROM AktifVeresiyeFisLitreDahil WITH(NOLOCK) WHERE (TipInd = 111 AND VardiyaKartInd =@vardiyaInd)

	SET
		@krediKartli=(SELECT ISNULL(SUM(Tutar),0) FROM KKVardiyaTutarlari(@vardiyaInd))
	SET
		@kklitahsilat=(SELECT ISNULL(SUM(Tutar),0) FROM KKliTahsilatVardiyaTutarlari(@vardiyaInd))
	SET
		@nakit=(SELECT ISNULL(SUM(Tutar),0) FROM VardiyaNakitTahsilatListesi(@vardiyaInd))
	SET 
		@gelirler = (SELECT ISNULL(SUM(Tutar),0)
					FROM 
						(
							SELECT 
								CASE WHEN (TipInd!=20)
									THEN ISNULL(Tutar*Kur,0) 
								ELSE ISNULL(Tutar,0) END AS Tutar
							 FROM Hareketler WITH(NOLOCK) WHERE((TipInd=25 or TipInd=9 or TipInd= 20 or TipInd=19 or TipInd=11) and VardiyaKartInd =@vardiyaInd)
						) AS Result)

	SET 
		@giderler = (SELECT ISNULL(SUM(Tutar),0)
					FROM 
						(
						SELECT 
								CASE WHEN (TipInd!=18)
									THEN ISNULL(Tutar*Kur,0) 
								ELSE ISNULL(Tutar,0) END AS Tutar	
							FROM Hareketler WITH(NOLOCK) WHERE ((TipInd=26 or TipInd=13 or TipInd= 18 or TipInd=17) and VardiyaKartInd =@vardiyaInd)
						) AS Result)
	SET
		@tts = (SELECT ISNULL(SUM(h.Tutar),0)
			   FROM 
				Hareketler as h WITH(NOLOCK)
				LEFT JOIN VardiyaKartInds as v WITH(NOLOCK) on h.VardiyaKartInd = v.Ind
				LEFT JOIN Basliklar as b WITH(NOLOCK) ON h.BaslikInd = b.Ind
			   WHERE
				(b.TipInd = 111)
				AND  b.VardiyaKartInd IN (SELECT
											h.VardiyaKartInd
										 FROM 
											Hareketler as h WITH(NOLOCK)
											LEFT JOIN VardiyaKartInds as v WITH(NOLOCK) on h.VardiyaKartInd = v.Ind
										WHERE
											h.TipInd = 35
											AND PersonelHesapAdi LIKE '%Elektronik Pompacı%')
											AND v.Ind = @vardiyaInd)
	INSERT INTO 
		@Dokum 
		VALUES (NULL, NULL, NULL, NULL, NULL, @sayac,@sayacLitre, @perakende, @gelirler, @krediKartli,@kklitahsilat, @kredili,@krediliLt, @giderler, @nakit, @acikFazla, @tts)
	RETURN
END
GO

SET ANSI_NULLS OFF
GO
SET QUOTED_IDENTIFIER OFF
GO


GO
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE FUNCTION [dbo].[VardiyaSatisGunToplamiGetir]
(	
	@Tarih DateTime,
	@Owner INT
)
RETURNS TABLE 
AS
RETURN 
(
	--SELECT Owner,SUM(YeniEndeks - EskiEndeks) AS Miktar, SUM(Tutar) AS Tutar
	--FROM Hareketler WHERE Ind IN (SELECT H.Ind  FROM Hareketler H INNER JOIN Basliklar B ON H.VardiyaKartInd = B.Ind 
	--WHERE B.OtomasyonVardiyaInd = @OtomasyonVardiyaInd 
	--AND H.TipInd IN (39,44))
	--GROUP BY Owner

    SELECT B.Owner,SUM(YeniEndeks - EskiEndeks) AS Miktar, SUM(Tutar) AS Tutar
	FROM Hareketler H WITH(NOLOCK)
	INNER JOIN Basliklar B WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind  
	WHERE B.Tarih = @Tarih AND B.Owner = @Owner
	AND H.TipInd IN (39,44)
	GROUP BY B.Owner

)
GO
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO



CREATE FUNCTION [dbo].[VardiyaSatisGunToplamiGetirTumSubeler]
(	
	@Tarih DateTime,
	@Owner INT
)
RETURNS TABLE 
AS
RETURN 
(

WITH ToplamlarVardiyaSatisGunToplami(Owner,Tarih,Miktar,Tutar) AS

(
SELECT B.Owner, B.Tarih,SUM(YeniEndeks - EskiEndeks) AS Miktar, SUM(Tutar) AS Tutar
	FROM Hareketler H WITH(NOLOCK)
	INNER JOIN Basliklar B WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind  
	WHERE B.Tarih = @Tarih AND B.Owner IS NOT NULL
	AND H.TipInd IN (39,44)
	GROUP BY B.Owner, B.Tarih
)
SELECT 0 AS Owner,SUM(Miktar) AS Miktar,SUM(Tutar) AS Tutar FROM ToplamlarVardiyaSatisGunToplami
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[VardiyaSatisToplamiGetir]
(	
	@OtomasyonVardiyaInd INT,
	@Owner INT
)
RETURNS TABLE 
AS
RETURN 
(
    SELECT B.Owner,SUM(YeniEndeks - EskiEndeks) AS Miktar, SUM(Tutar) AS Tutar
	FROM Hareketler H WITH(NOLOCK)
	INNER JOIN Basliklar B WITH(NOLOCK) ON H.VardiyaKartInd = B.Ind  
	WHERE B.OtomasyonVardiyaInd = @OtomasyonVardiyaInd 
	AND H.TipInd IN (39,44) AND B.Owner = @Owner
	GROUP BY B.Owner
)
GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[VardiyaSayacHareketleriForOtomasyon] 
(	
	@VardiyaKartInd int
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT
		Hareketler.Owner,
		SUBSTRING(HesapDetaylari.OtomasyonKodu,3,1) AS Pompa,
		SUBSTRING(HesapDetaylari.OtomasyonKodu,1,2) AS Tabanca,
		ISNULL(Hareketler.TeslimTarihi, Basliklar.Tarih) AS Tarih,
		Stoklar.Ind AS StokInd,
		Stoklar.StokKodu,
		Stoklar.StokAdi,
		(CASE WHEN (Basliklar.OtomasyonVardiyaInd <1 OR Basliklar.OtomasyonVardiyaInd IS NULL)
				THEN Hareketler.Fiyat*(ABS(Hareketler.YeniEndeks-Hareketler.EskiEndeks))
			WHEN (Basliklar.OtomasyonVardiyaInd >0) 
				THEN Hareketler.Tutar
			ELSE 0
			END
		)AS Tutar,
		(ABS(Hareketler.YeniEndeks-Hareketler.EskiEndeks)) AS Miktar
	FROM Hareketler WITH(NOLOCK)

	LEFT JOIN Basliklar WITH(NOLOCK) ON Hareketler.VardiyaKartInd=Basliklar.Ind
	LEFT JOIN HesapDetaylari WITH(NOLOCK) ON Hareketler.SayacInd=HesapDetaylari.Ind
	LEFT JOIN Hesaplar WITH(NOLOCK) ON HesapDetaylari.DepoInd=Hesaplar.Ind
	LEFT JOIN Stoklar WITH(NOLOCK) ON Hesaplar.StokInd=Stoklar.Ind

	WHERE Hareketler.TipInd=44 AND 	Hareketler.VardiyaKartInd=@VardiyaKartInd	
)

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[VardiyaTarihi] 
(	
	@Ind int
)
RETURNS TABLE 
AS
RETURN 
(

	SELECT DISTINCT
		Basliklar.Ind, 
		VardiyaNo,
		Tarih,
		Owner 
	FROM Basliklar WITH(NOLOCK)
	WHERE Ind = @Ind
)
GO
-- =============================================
-- Author:		Can Öncü
-- Create date: 08.07.2011
-- Description:	Vardiya bazında akaryakıt durum listesi göstermek için 
-- =============================================
CREATE FUNCTION [dbo].[VardiyaVeresiyeDurumListesi] 
(	
	@vardiyaKartInds nvarchar(MAX)
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Dokum(Owner, StokKodu, StokAdi, SatisFiyati, Cikan, CikanTutar) 
	AS
	(
		SELECT 
			null as Owner,
			StokKodu,
			StokAdi,
			SUM(Tutar)/SUM(Miktar) AS SatisFiyat,
			SUM(Miktar) AS Cikan,
			SUM(Tutar) AS CikanTutar 
		FROM Hareketler WITH(NOLOCK)
		WHERE tipInd = 41 AND BaslikInd IN (SELECT Ind FROM basliklar WITH(NOLOCK) WHERE tipInd=110) AND VardiyaKartInd IN (SELECT * FROM fnSplit(@vardiyaKartInds,','))
		GROUP BY
			StokAdi,
			StokKodu 
	)
	
	SELECT * FROM Dokum WITH(NOLOCK) WHERE Cikan > 0
)


GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE FUNCTION [dbo].[VardiyaVeresiyeFisleriToplam] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS 
TABLE 
AS
RETURN 
(
    SELECT
	B.Owner, 
	B.HesapInd,
	B.HesapKodu,
	B.HesapAdi,
	SUM(H.Tutar) AS Tutar
	FROM Hareketler H WITH(NOLOCK)
	INNER JOIN Basliklar B WITH(NOLOCK) ON H.BaslikInd = B.Ind
	WHERE H.VardiyaKartInd 
	IN (SELECT * FROM fnSplit(@VardiyaKartInds,',')) 
	AND B.TipInd IN(110,111) AND H.TipInd IN(37,41)
	GROUP BY B.Owner,B.HesapInd,B.HesapKodu,B.HesapAdi
)

GO
CREATE FUNCTION [dbo].[VardiyaYeniSayaclar] 
(	
	@VardiyaKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	SELECT Top 10000
		SayacaAitDepoStok.Owner,
		SayacaAitDepoStok.StokInd,
		SayacInd,
		SayacKodu,
		SayacAdi,
		MIN(EskiEndeks) AS EskiEndeks,
		MIN(EskiEndeks)+SUM(YeniEndeks-EskiEndeks-Aktarma) AS YeniEndeks,
		SUM(Aktarma) AS Aktarma,
		SUM(YeniEndeks-EskiEndeks-Aktarma) AS Fark,
		Fiyat,
		SUM(Tutar) as Tutar,	
		SayacaAitDepoStok.OtomasyonKodu AS OtomasyonKodu
	FROM
		Hareketler WITH(NOLOCK)
	LEFT JOIN SayacaAitDepoStok WITH(NOLOCK) ON SayacaAitDepoStok.Ind = Hareketler.SayacInd  
	WHERE TipInd IN (44) 
	AND VardiyaKartInd IN (SELECT * FROM fnSplit(@VardiyaKartInds,','))
	GROUP BY 
		SayacInd,
		SayacaAitDepoStok.Owner,
		SayacKodu,
		SayacAdi,
		SayacaAitDepoStok.StokInd,
		Fiyat,
		SayacaAitDepoStok.OtomasyonKodu
	ORDER BY SayacKodu
)








GO

CREATE FUNCTION [dbo].[YeniVardiyaAkaryakitMiktari] 
(	
	@vardiyaKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(
	WITH Dokum(StokInd,Owner,StokKodu,StokAdi,SatisFiyati,Cikan,CikanTutar,Devir)
	AS
	(
		SELECT 
			DISTINCT y.StokInd,
			null as Owner,
			s.StokKodu,
			s.StokAdi,
			sd.Tutar as SatisFiyati,
			SUM(y.Fark) as Cikan,
			0.0 as Devir,
			SUM(CASE WHEN (y.Tutar >0)
				THEN y.Tutar
				ELSE y.Fark * y.Fiyat 
			END) as CikanTutar
		FROM YeniVardiyaSayacHareketleri as y WITH(NOLOCK)
		LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = y.StokInd
		LEFT JOIN StokDetaylari as sd WITH(NOLOCK) ON sd.StokInd = s.Ind AND sd.IsAnaFiyat ='True'
		WHERE y.VardiyaKartInd IN (SELECT * FROM fnSplit(@vardiyaKartInds,','))
		GROUP BY
			y.StokInd,
			s.StokKodu,
			s.StokAdi,
			sd.Tutar
	)

	SELECT * 
	FROM Dokum as d
	WHERE d.Cikan > 0
)







GO
CREATE FUNCTION [dbo].[YeniVardiyaDigerCikisKayit] 
(	
	@vKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(

SELECT
		Owner,
		TipInd,
		(CASE WHEN(TipInd = 49) THEN GiderKodu
			WHEN (TipInd = 50) THEN CariHesapKodu
			WHEN TipInd = 51 THEN PersonelHesapKodu
			WHEN TipInd = 52 THEN BankaHesapKodu
			ELSE GiderKodu END) AS GiderKodu,
		(CASE WHEN(TipInd = 49) THEN GiderAdi
			WHEN TipInd = 50 THEN CariHesapAdi
			WHEN TipInd = 51 THEN PersonelHesapAdi
			WHEN TipInd = 52 THEN BankaHesapAdi
			ELSE GiderAdi END) AS GiderAdi,
		Aciklama,
		SUM(ISNULL(Kur, 1) * Tutar) AS Tutar
	FROM Hareketler WITH(NOLOCK)
	WHERE TipInd IN (49,50,51,52) AND VardiyaKartInd IN (SELECT * FROM fnSplit(@vKartInds,','))
	GROUP BY 
		Owner,
		TipInd,
		GiderKodu,
		GiderAdi,
		CariHesapKodu,
		CariHesapAdi,
		PersonelHesapKodu,
		PersonelHesapAdi,
		BankaHesapKodu,
		BankaHesapAdi,
		Aciklama
		
)

GO
CREATE FUNCTION [dbo].[YeniVardiyaDigerGirisKayit] 
(	
	@vKartInds nvarchar(max)
)
RETURNS TABLE 
AS
RETURN 
(

SELECT
		Owner,
		TipInd,
		(CASE WHEN(TipInd = 45) THEN GelirKodu
			WHEN (TipInd = 46) THEN CariHesapKodu
			WHEN (TipInd = 532) THEN CariHesapKodu
			WHEN TipInd = 47 THEN PersonelHesapKodu
			WHEN TipInd = 48 THEN BankaHesapKodu
			WHEN TipInd = 53 THEN CariHesapKodu
			ELSE GelirKodu END) AS GelirKodu,
		(CASE WHEN(TipInd = 45) THEN GelirAdi
			WHEN TipInd = 46 THEN CariHesapAdi
			WHEN TipInd = 532 THEN CariHesapAdi
			WHEN TipInd = 47 THEN PersonelHesapAdi
			WHEN TipInd = 48 THEN BankaHesapAdi
			WHEN TipInd = 53 THEN CariHesapAdi
			ELSE GelirAdi END) AS GelirAdi,
		Aciklama,
		SUM(ISNULL(Kur, 1) * Tutar) AS Tutar
	FROM Hareketler WITH(NOLOCK)
	WHERE TipInd IN (45,46,532,47,48,53) AND VardiyaKartInd IN (SELECT * FROM fnSplit(@vKartInds,','))
	GROUP BY 
		Owner,
		TipInd,
		GelirKodu,
		GelirAdi,
		CariHesapKodu,
		CariHesapAdi,
		PersonelHesapKodu,
		PersonelHesapAdi,
		BankaHesapKodu,
		BankaHesapAdi,
		Aciklama
		
)

GO
CREATE FUNCTION [dbo].[ZRaporPerakendeSatisIadeEdilenUrunler] 
(	
	@KullaniciInd int,
	@TarihIlk datetime,
	@TarihSon datetime,
	@EntegrasyonTipiFalse int	
) 
RETURNS @dokum TABLE 
(
	Owner int,
	StokInd int,
	StokKodu nvarchar(50),
	StokAdi nvarchar(100),
	GrupInd int,
	GrupAdi nvarchar(50),
	Miktar decimal(28,13),
	Carpan decimal(28,13),
	Fiyat decimal(28,13),
	Tutar decimal(28,13)
)
begin
	if @EntegrasyonTipiFalse=0
	begin
		insert into @dokum
		SELECT 
			TOP 100 PERCENT
			Owner,
			StokInd,
			StokKodu,
			StokAdi,
			GrupInd,
			GrupAdi,
			SUM(Miktar) AS Miktar,
			SUM(Carpan) AS Carpan,
			Fiyat,
			SUM(Miktar*Carpan*Fiyat) AS Tutar
		FROM PerakendeSatisIadeListesi WITH(NOLOCK)
		WHERE PerakendeSatisIadeListesi.KullaniciInd = @KullaniciInd
		GROUP BY
			Owner,
			StokInd,
			StokKodu,
			StokAdi,
			GrupInd,
			GrupAdi,
			Fiyat
		ORDER BY
			GrupInd
	end
	else 
	begin
		insert into @dokum
		SELECT 
			TOP 100 PERCENT
			Owner,
			StokInd,
			StokKodu,
			StokAdi,
			GrupInd,
			GrupAdi,
			SUM(Miktar) AS Miktar,
			SUM(Carpan) AS Carpan,
			Fiyat,
			SUM(Miktar*Carpan*Fiyat) AS Tutar
		FROM PerakendeSatisIadeListesi WITH(NOLOCK)
		WHERE PerakendeSatisIadeListesi.KullaniciInd = @KullaniciInd
			AND (PerakendeSatisIadeListesi.PerakendeKasaIslemTarihi between @TarihIlk and @TarihSon)
		GROUP BY
			Owner,
			StokInd,
			StokKodu,
			StokAdi,
			GrupInd,
			GrupAdi,
			Fiyat
		ORDER BY
			GrupInd
	end	

return
end


GO
CREATE FUNCTION [dbo].[ZRaporPersonelIadeForSatisKasasi] 
(	
	@Ind int,
	@TarihIlk datetime,
	@TarihSon datetime,
	@EntegrasyonTipiFalse int
)
RETURNS @dokum TABLE 
(
	Owner int,
	Tutar decimal(28,13)
)
BEGIN

	if @EntegrasyonTipiFalse=0
	begin
		insert into @dokum
		SELECT 
			T.Owner,
			SUM (T.Tutar) AS Tutar
		FROM
		(
			SELECT SUM(Miktar*Carpan*Fiyat) AS Tutar, S.Owner AS Owner
			FROM SatisKasasi AS S WITH(NOLOCK)
			LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.Ind = S.IslemInd
			WHERE H.TipInd = 513 AND S.IsYeniSatis = 'true'
			AND S.Tablo = N'Hareketler'
			AND S.KullaniciInd = @Ind
			GROUP BY S.Owner
			
			UNION ALL
			
			SELECT SUM(Miktar*Carpan*Fiyat) AS Tutar, H.Owner AS Owner
			FROM Hareketler AS H WITH(NOLOCK)
			INNER JOIN SatisKasasi S WITH(NOLOCK) ON H.BaslikInd = S.IslemInd
			WHERE H.TipInd = 513 AND S.IsYeniSatis = 'true'
			AND S.Tablo = N'Hareketler'
			AND S.KullaniciInd = @Ind
			AND (H.BaslikInd > 0 OR H.BaslikInd IS NOT NULL)
			GROUP BY H.Owner

		) AS T
		GROUP BY T.Owner
	end

	else 
	begin
		insert into @dokum
		SELECT 
			T.Owner,
			SUM (T.Tutar) AS Tutar
		FROM
		(
			SELECT SUM(Miktar*Carpan*Fiyat) AS Tutar, S.Owner AS Owner
			FROM SatisKasasi AS S WITH(NOLOCK)
			LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.Ind = S.IslemInd
			WHERE H.TipInd = 513 AND S.IsYeniSatis = 'true'
			AND S.Tablo = N'Hareketler'
			AND S.KullaniciInd = @Ind
			AND s.PerakendeKasaIslemTarihi between @TarihIlk and @TarihSon
			GROUP BY S.Owner
			
			UNION ALL
			
			SELECT SUM(Miktar*Carpan*Fiyat) AS Tutar, H.Owner AS Owner
			FROM Hareketler AS H WITH(NOLOCK)
			INNER JOIN SatisKasasi S WITH(NOLOCK) ON H.BaslikInd = S.IslemInd
			WHERE H.TipInd = 513 AND S.IsYeniSatis = 'true'
			AND S.Tablo = N'Hareketler'
			AND S.KullaniciInd = @Ind
			AND (H.BaslikInd > 0 OR H.BaslikInd IS NOT NULL)
			AND s.PerakendeKasaIslemTarihi between @TarihIlk and @TarihSon
			GROUP BY H.Owner

		) AS T
		GROUP BY T.Owner
	end	
return
end



GO
CREATE FUNCTION [dbo].[ZRaporPersonelIrsaliyeForSatisKasasi] 
(	
	@Ind int,
	@TarihIlk datetime,
	@TarihSon datetime,
	@EntegrasyonTipiFalse int
)
RETURNS @dokum TABLE 
(
	Owner int,
	Tutar decimal(28,13)
)
begin

	if @EntegrasyonTipiFalse=0
	begin
		insert into @dokum
		SELECT 
			T.Owner,
			SUM (T.Tutar) AS Tutar
		FROM
		(
			SELECT DISTINCT B.Ind, SUM(Miktar*Carpan*Fiyat) AS Tutar, B.Owner AS Owner 
			FROM Basliklar AS B WITH(NOLOCK)
			INNER JOIN SatisKasasi AS S WITH(NOLOCK) ON S.IslemInd = B.Ind AND S.Tablo = N'Basliklar' AND B.DurumInd IS NULL
			INNER JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
			WHERE B.TipInd = 104 AND H.TipInd = 5 AND S.IsYeniSatis = 'true'
			AND S.KullaniciInd = @Ind	
			GROUP BY B.Ind,S.Ind, B.Owner

		) AS T
		GROUP BY T.Owner
	end
	else 
	begin
		insert into @dokum
	SELECT 
		T.Owner,
		SUM (T.Tutar) AS Tutar
	FROM
	(
		SELECT DISTINCT B.Ind, SUM(Miktar*Carpan*Fiyat) AS Tutar, B.Owner AS Owner 
		FROM Basliklar AS B WITH(NOLOCK)
		INNER JOIN SatisKasasi AS S WITH(NOLOCK) ON S.IslemInd = B.Ind AND S.Tablo = N'Basliklar' AND B.DurumInd IS NULL
		INNER JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
		WHERE B.TipInd = 104 AND H.TipInd = 5 AND S.IsYeniSatis = 'true'
		AND S.KullaniciInd = @Ind	
		AND S.PerakendeKasaIslemTarihi BETWEEN @TarihIlk AND @TarihSon
		GROUP BY B.Ind,S.Ind, B.Owner

	) AS T
	GROUP BY T.Owner
	end
return 
end




GO
CREATE FUNCTION [dbo].[ZRaporPersonelNakitForSatisKasasi] 
(	
	@Ind int,
	@TarihIlk DateTime,
	@TarihSon DateTime,
	@EntegrasyonTipiFalse int
)
RETURNS @dokum TABLE
(
    Owner int,
	Tutar decimal(28,13)
) 
begin

	if @EntegrasyonTipiFalse=0
	begin 
		insert into @dokum
		SELECT 
			T.Owner,
			SUM (T.Tutar) AS Tutar
		FROM
		(
			SELECT
				SUM(H.Miktar*H.Carpan*H.Fiyat*(1+H.KDVOrani/100)-H.Iskonto) AS Tutar, 
				S.Owner AS Owner
			FROM SatisKasasi AS S WITH(NOLOCK)
			LEFT JOIN Basliklar AS B WITH(NOLOCK) ON S.IslemInd = B.Ind
			LEFT JOIN BaslikMatrahTutari AS BMT WITH(NOLOCK) ON BMT.BaslikInd = B.Ind
			LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
			WHERE H.TipInd = 6 AND B.TipInd = 102
			AND S.Tablo = N'Basliklar'
			AND S.KullaniciInd = @Ind AND S.IsYeniSatis = 'true'
			GROUP BY S.Owner

			UNION ALL

			SELECT 
				P.Miktar*P.Carpan*P.Fiyat AS Tutar, 
				S.Owner AS Owner
			FROM SatisKasasi AS S WITH(NOLOCK)
			LEFT JOIN Hareketler AS P WITH(NOLOCK)
			ON S.IslemInd = P.Ind
			WHERE P.TipInd = 504 AND S.IsYeniSatis = 'true'
			AND S.Tablo = N'Hareketler'
			AND S.KullaniciInd = @Ind

			UNION ALL

			--SELECT DISTINCT 
			--	SUM(Miktar*Carpan*Fiyat) AS Tutar, 
			--	S.Owner AS Owner
			--FROM SatisKasasi AS S
			--LEFT JOIN Basliklar AS B ON S.IslemInd = B.Ind
			--LEFT JOIN Hareketler AS H ON H.BaslikInd = B.Ind
			--WHERE B.TipInd = 104 AND H.TipInd = 5
			--AND S.Tablo = N'Basliklar'
			--AND S.KullaniciInd = @Ind AND S.IsYeniSatis = 'true'
			--GROUP BY S.Ind, S.Owner
			
		    SELECT
		    SUM(Miktar*Carpan*Fiyat) AS Tutar, 
		    S.Owner AS Owner
			FROM SatisKasasi AS S WITH(NOLOCK)
			LEFT JOIN Basliklar AS B WITH(NOLOCK) ON S.IslemInd = B.Ind
			LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
			WHERE B.TipInd = 104 AND H.TipInd = 5 AND B.DurumInd IS NULL
			AND S.Tablo = N'Basliklar'
			AND S.KullaniciInd = @Ind AND S.IsYeniSatis = 'true'
			GROUP BY S.Ind, S.Owner

		) AS T
		GROUP BY T.Owner
	end 
	else
	begin 
		insert into @dokum
		SELECT 
			T.Owner,
			SUM (T.Tutar) AS Tutar
		FROM
		(
			SELECT
				SUM(H.Miktar*H.Carpan*H.Fiyat*(1+H.KDVOrani/100)-H.Iskonto) AS Tutar, 
				S.Owner AS Owner
			FROM SatisKasasi AS S WITH(NOLOCK)
			LEFT JOIN Basliklar AS B WITH(NOLOCK) ON S.IslemInd = B.Ind
			LEFT JOIN BaslikMatrahTutari AS BMT WITH(NOLOCK) ON BMT.BaslikInd = B.Ind
			LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
			WHERE H.TipInd = 6 AND B.TipInd = 102
			AND S.Tablo = N'Basliklar'
			AND S.KullaniciInd = @Ind AND S.IsYeniSatis = 'true'
			and (s.PerakendeKasaIslemTarihi between @TarihIlk and @TarihSon)
			GROUP BY S.Owner

			UNION ALL

			SELECT 
				P.Miktar*P.Carpan*P.Fiyat AS Tutar, 
				S.Owner AS Owner
			FROM SatisKasasi AS S WITH(NOLOCK)
			LEFT JOIN Hareketler AS P WITH(NOLOCK)
			ON S.IslemInd = P.Ind
			WHERE P.TipInd = 504 AND S.IsYeniSatis = 'true'
			AND S.Tablo = N'Hareketler'
			AND S.KullaniciInd = @Ind
			and (P.PerakendeKasaIslemTarihi between @TarihIlk and @TarihSon)

			UNION ALL
			
			SELECT DISTINCT 
				SUM(Miktar*Carpan*Fiyat) AS Tutar, 
				S.Owner AS Owner
			FROM SatisKasasi AS S WITH(NOLOCK)
			LEFT JOIN Basliklar AS B WITH(NOLOCK) ON S.IslemInd = B.Ind
			LEFT JOIN Hareketler AS H WITH(NOLOCK) ON H.BaslikInd = B.Ind
			WHERE B.TipInd = 104 AND H.TipInd = 5
			AND S.Tablo = N'Basliklar'
			AND S.KullaniciInd = @Ind AND S.IsYeniSatis = 'true'
			AND (s.PerakendeKasaIslemTarihi BETWEEN @TarihIlk AND @TarihSon)
			GROUP BY S.Ind, S.Owner

		) AS T
		GROUP BY T.Owner
	end 	
return
end



GO
CREATE FUNCTION [dbo].[ZRaporSatilanIrsaliyeUrunler] 
(	
	@KullaniciInd int,
	@TarihIlk datetime,
	@TarihSon datetime,
	@EntegrasyonTipiFalse int
)
RETURNS @dokum TABLE 
(
	Owner int,
	StokInd int,
	StokKodu nvarchar(50),
	StokAdi nvarchar(100),
	GrupInd int,
	GrupAdi nvarchar(50),
	Miktar decimal(28,13),
	Carpan decimal(28,13),
	Fiyat decimal(28,13),
	Tutar decimal(28,13)
)
begin
	if @EntegrasyonTipiFalse=0
	begin
		insert into @dokum
		SELECT 
			TOP 100 PERCENT
			Owner,
			StokInd,
			StokKodu,
			StokAdi,
			GrupInd,
			GrupAdi,
			Miktar,
			Carpan,
			Fiyat,
			Miktar*Carpan*Fiyat AS Tutar
		FROM SatilanUrunListesi WITH(NOLOCK)
		WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd AND SatilanUrunListesi.TipInd = 5
		GROUP BY
			Owner,
			StokInd,
			StokKodu,
			StokAdi,
			GrupInd,
			GrupAdi,
			Miktar,
			Carpan,
			Fiyat
		ORDER BY
			GrupInd
	end
	else
	begin
		insert into @dokum
		SELECT 
			TOP 100 PERCENT
			Owner,
			StokInd,
			StokKodu,
			StokAdi,
			GrupInd,
			GrupAdi,
			Miktar,
			Carpan,
			Fiyat,
			Miktar*Carpan*Fiyat AS Tutar
		FROM SatilanUrunListesi WITH(NOLOCK)
		WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd AND SatilanUrunListesi.TipInd = 5
			AND (SatilanUrunListesi.PerakendeKasaIslemTarihi BETWEEN @TarihIlk AND @TarihSon)
		GROUP BY
			Owner,
			StokInd,
			StokKodu,
			StokAdi,
			GrupInd,
			GrupAdi,
			Miktar,
			Carpan,
			Fiyat
		ORDER BY
			GrupInd
	end
	
return
end



GO
CREATE FUNCTION [dbo].[ZRaporSatisSatilanUrunler] 
(	
	@KullaniciInd int,
	@TarihIlk datetime,
	@TarihSon datetime,
	@EntegrasyonTipiFalse int
)
RETURNS @dokum TABLE 
(
	Owner int,
	StokInd int,
	StokKodu nvarchar(50),
	StokAdi nvarchar(100),
	GrupInd int,
	GrupAdi nvarchar(50),
	Miktar decimal(28,13),
	Carpan decimal(28,13),
	Fiyat decimal(28,13),
	Tutar decimal(28,13)
)
begin
	if @EntegrasyonTipiFalse=0
	begin
		insert into @dokum
		SELECT 
			TOP 100 PERCENT
			Owner,
			StokInd,
			StokKodu,
			StokAdi,
			GrupInd,
			GrupAdi,
			SUM(Miktar) AS Miktar,
			Carpan,
			Fiyat,
			SUM(Miktar*Carpan*Fiyat) AS Tutar
		FROM SatilanUrunListesi WITH(NOLOCK)
		WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd
		GROUP BY
			Owner,
			StokInd,
			StokKodu,
			StokAdi,
			GrupInd,
			GrupAdi,
			--Miktar,
			Carpan,
			Fiyat
		ORDER BY
			GrupInd
	end 
	else
	begin
		insert into @dokum
		SELECT 
			TOP 100 PERCENT
			Owner,
			StokInd,
			StokKodu,
			StokAdi,
			GrupInd,
			GrupAdi,
			SUM(Miktar) AS Miktar,
			Carpan,
			Fiyat,
			SUM(Miktar*Carpan*Fiyat) AS Tutar
		FROM SatilanUrunListesi WITH(NOLOCK)
		WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd
			and (SatilanUrunListesi.PerakendeKasaIslemTarihi between @TarihIlk and @TarihSon)
		GROUP BY
			Owner,
			StokInd,
			StokKodu,
			StokAdi,
			GrupInd,
			GrupAdi,
			--Miktar,
			Carpan,
			Fiyat
		ORDER BY
			GrupInd
	end 	
return
end



GO
CREATE FUNCTION [dbo].[ZRaporSGGSatilanUrunler] 
(	
	@KullaniciInd int,
	@TarihIlk datetime,
	@TarihSon datetime,
	@EntegrasyonTipiFalse int
)
RETURNS @dokum TABLE 
(
	Owner int,
	StokInd int,
	StokKodu nvarchar(50),
	StokAdi nvarchar(100),
	GrupInd int,
	GrupAdi nvarchar(50),
	Miktar decimal(28,13),
	Fiyat decimal(28,13),
	Tutar decimal(28,13)
)
begin
	if @EntegrasyonTipiFalse=0
	begin
		insert into @dokum	
		SELECT 
			SatilanUrunListesi.Owner,
			SatilanUrunListesi.StokInd,
			SatilanUrunListesi.StokKodu,	
			SatilanUrunListesi.StokAdi,	
			SatilanUrunListesi.GrupInd,
			SatilanUrunListesi.GrupAdi,
			SUM(SatilanUrunListesi.Miktar) AS Miktar,
			SatilanUrunListesi.Fiyat,
			SUM(Miktar*Carpan*Fiyat) AS Tutar
		FROM SatilanUrunListesi WITH(NOLOCK)
		WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd
		GROUP BY
			SatilanUrunListesi.Owner,
			SatilanUrunListesi.StokInd,
			SatilanUrunListesi.StokKodu,	
			SatilanUrunListesi.StokAdi,	
			SatilanUrunListesi.GrupInd,
			SatilanUrunListesi.GrupAdi,
			--SatilanUrunListesi.Miktar
			--SatilanUrunListesi.Carpan,
			SatilanUrunListesi.Fiyat
	end
	
	else 
	begin
		insert into @dokum	
		SELECT 
			SatilanUrunListesi.Owner,
			SatilanUrunListesi.StokInd,
			SatilanUrunListesi.StokKodu,	
			SatilanUrunListesi.StokAdi,	
			SatilanUrunListesi.GrupInd,
			SatilanUrunListesi.GrupAdi,
			SUM(SatilanUrunListesi.Miktar) AS Miktar,
			SatilanUrunListesi.Fiyat,
			SUM(Miktar*Carpan*Fiyat) AS Tutar
		FROM SatilanUrunListesi WITH(NOLOCK)
		WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd
			AND (SatilanUrunListesi.PerakendeKasaIslemTarihi between @TarihIlk and @TarihSon)
		GROUP BY
			SatilanUrunListesi.Owner,
			SatilanUrunListesi.StokInd,
			SatilanUrunListesi.StokKodu,	
			SatilanUrunListesi.StokAdi,	
			SatilanUrunListesi.GrupInd,
			SatilanUrunListesi.GrupAdi,
			--SatilanUrunListesi.Miktar,
			--SatilanUrunListesi.Carpan,
			SatilanUrunListesi.Fiyat

	end	
return
end




GO
CREATE FUNCTION [dbo].[ZRaporSGGSatilanUrunOrani] 
(	
	@KullaniciInd int,
	@TarihIlk datetime,
	@TarihSon datetime,
	@EntegrasyonTipiFalse int
)
RETURNS @dokum TABLE 
(
	Owner int,
	GrupInd int,
	GrupAdi nvarchar(50),
	Miktar decimal(28,13),
	MiktarYuzde decimal(28,13),
	Tutar decimal(28,13),
	TutarYuzde decimal(28,13)
)
begin

	if @EntegrasyonTipiFalse=0
	begin 
		WITH StokDokumu(Owner,Miktar,Tutar)
		AS
		(
			SELECT 
				Owner,
				SUM(Miktar) AS Miktar,
				SUM(Miktar*Carpan*Fiyat) AS Tutar
			FROM SatilanUrunListesi WITH(NOLOCK)
			WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd
			GROUP BY
				Owner
		)
		
		insert into @dokum 
		SELECT 
			SatilanUrunListesi.Owner,
			SatilanUrunListesi.GrupInd,
			SatilanUrunListesi.GrupAdi,
			SUM(SatilanUrunListesi.Miktar) AS Miktar,
			SUM((SatilanUrunListesi.Miktar/StokDokumu.Miktar)*100) AS MiktarYuzde,
			SUM(SatilanUrunListesi.Miktar*SatilanUrunListesi.Carpan*SatilanUrunListesi.Fiyat) AS Tutar,
			SUM((SatilanUrunListesi.Miktar*SatilanUrunListesi.Carpan*SatilanUrunListesi.Fiyat/StokDokumu.Tutar)*100) AS TutarYuzde
		FROM SatilanUrunListesi WITH(NOLOCK),StokDokumu WITH(NOLOCK)
		WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd
		GROUP BY
			SatilanUrunListesi.Owner,
			SatilanUrunListesi.GrupInd,
			SatilanUrunListesi.GrupAdi,
			--SatilanUrunListesi.Miktar,
			--SatilanUrunListesi.Carpan,
			--SatilanUrunListesi.Fiyat,
			StokDokumu.Miktar,
			StokDokumu.Tutar
	end
	else
	begin 
		WITH StokDokumu(Owner,Miktar,Tutar)
		AS
		(
			SELECT 
				Owner,
				SUM(Miktar) AS Miktar,
				SUM(Miktar*Carpan*Fiyat) AS Tutar
			FROM SatilanUrunListesi WITH(NOLOCK)
			WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd
				  AND
				  (SatilanUrunListesi.PerakendeKasaIslemTarihi between @TarihIlk and @TarihSon)
			GROUP BY
				Owner
		)
		
		insert into @dokum 
		SELECT 
			SatilanUrunListesi.Owner,
			SatilanUrunListesi.GrupInd,
			SatilanUrunListesi.GrupAdi,
			SUM(SatilanUrunListesi.Miktar) AS Miktar,
			SUM((SatilanUrunListesi.Miktar/StokDokumu.Miktar)*100) AS MiktarYuzde,
			SUM(SatilanUrunListesi.Miktar*SatilanUrunListesi.Carpan*SatilanUrunListesi.Fiyat) AS Tutar,
			SUM((SatilanUrunListesi.Miktar*SatilanUrunListesi.Carpan*SatilanUrunListesi.Fiyat/StokDokumu.Tutar)*100) AS TutarYuzde
		FROM SatilanUrunListesi WITH(NOLOCK),StokDokumu WITH(NOLOCK)
		WHERE SatilanUrunListesi.KullaniciInd = @KullaniciInd
			  AND
			  (SatilanUrunListesi.PerakendeKasaIslemTarihi between @TarihIlk and @TarihSon)		
		GROUP BY
			SatilanUrunListesi.Owner,
			SatilanUrunListesi.GrupInd,
			SatilanUrunListesi.GrupAdi,
			--SatilanUrunListesi.Miktar,
			--SatilanUrunListesi.Carpan,
			--SatilanUrunListesi.Fiyat,
			StokDokumu.Miktar,
			StokDokumu.Tutar
	end
return 
end




GO
CREATE FUNCTION [dbo].[ZRaporuBilgileriGetir]
(
	@Owner int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)

RETURNS TABLE 
AS
RETURN 
(
SELECT 
	Z.Ind,
	Z.Owner,
	S.SubeAdi,
	Z.StokInd,
	Z.StokKodu,
	Z.StokAdi,
	Z.OkcNo,
	Z.ZFisTarihi,
	Z.ZFisNo,
	Z.Miktar,
	Z.Fiyat,
	Z.Tutar,
	Z.ZKumulatifToplam,
	Z.KontrolEdildi,
	Z.KontrolTarihi,
	Z.Onaylandi,
	Z.OnayTarihi,
	Z.Aktarildi,
	Z.AktarimTarihi,
	Depolar.DepoInd,
	M.DepoId AS MuhDepoId
FROM 
	LO_ZRaporuBilgileri Z WITH(NOLOCK)
		OUTER APPLY 
    (SELECT TOP 1 Ind DepoInd
		FROM [dbo].[Hesaplar] WITH(NOLOCK)
		where TipInd = 205
		AND Owner = Z.Owner
		AND StokInd =Z.StokInd) AS Depolar
INNER JOIN 
	Subeler S WITH(NOLOCK) ON Z.Owner = S.Ind
	LEFT JOIN
	Muh_DepoEslestir M WITH(NOLOCK)
	ON Depolar.DepoInd = M.HititDepoInd AND M.Owner = Z.Owner 
WHERE
	Z.ZFisTarihi BETWEEN @BaslangicTarihi AND @BitisTarihi AND
	Z.Owner = @Owner

)

GO
EXEC DropProcedures
GO
CREATE PROCEDURE [dbo].[AkaryakitVardiyaEnYuksekSatisFiyati]
	@StokInd INT,
	@Tarih DATETIME,
	@SubeInd INT,
	@VardiyaNo INT
AS
BEGIN
	select Max(Fiyat) as Fiyat FROM Hareketler WITH(NOLOCK) WHERE TipInd IN (29,39, 37) AND  StokInd=@StokInd AND 
	VardiyaKartInd IN (SELECT Ind FROM Basliklar WITH(NOLOCK) WHERE Tarih=@Tarih AND VardiyaNo = @VardiyaNo AND Owner=@SubeInd)
END


GO



GO
CREATE PROCEDURE [dbo].[BankaGirisCikisKayitlariGetir]
(	
	@HareketTipi int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@SeciliSube int
)
AS
BEGIN

	if @SeciliSube = 0
	begin

			/* BANKA GİRİŞLERİ */

		-- Banka Girişlerine BankaHesapKodu alanı eklendi - Ulaş
		/* Cari Bankadan Tahsilat*/
		if (@HareketTipi = -1)
			begin
				SELECT NULL As Ind, NULL as Owner, -1 As TipInd, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Cari Bankadan Tahsilat' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi  
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 12) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi 				
				UNION ALL	--Hareket tipine göre, o tipe ilişkin hesap kodu ve adı getirildi - Ulaş
				SELECT	Ind, Owner, TipInd, Tutar as Giren, 0.0 as Cikan, CariHesapAdi AS HesapAdi, CariHesapKodu AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 12) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi 
				order by Owner, GirisTarihi
		end

		/* Kredi Kartından Tahsilat*/
		if (@HareketTipi = -2)
			begin
				SELECT NULL As Ind, NULL as Owner, -2 As TipInd, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Kredi Kartından Tahsilat' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi  
				FROM	dbo.Hareketler AS h WITH(NOLOCK), (select Ind, Tarih from dbo.Basliklar WITH(NOLOCK) where TipInd = 105) As b
				WHERE 	 (h.TipInd IN (10,533)) and h.BaslikInd = b.Ind and b.Tarih>=@BaslangicTarihi and b.Tarih<@BitisTarihi 
				UNION ALL	--Hareket tipine göre, o tipe ilişkin hesap kodu ve adı getirildi - Ulaş
				SELECT	h.Ind, Owner, h.TipInd, h.Tutar as Giren, 0.0 as Cikan, h.KKHesapAdi AS HesapAdi, h.KKHesapKodu AS HesapKodu, h.Aciklama, BankaHesapKodu as BankaHesapKodu, b.Tarih As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK), (select Ind, Tarih from dbo.Basliklar  WITH(NOLOCK) where TipInd = 105) As b
				WHERE 	 (h.TipInd IN (10,533)) and h.BaslikInd = b.Ind and b.Tarih>=@BaslangicTarihi and b.Tarih<@BitisTarihi 
				order by Owner, GirisTarihi
			end
		
		/* Banka Hesabına Para Yatırma*/
		if (@HareketTipi = -3)
			begin
				SELECT NULL As Ind, NULL as Owner, -3 As TipInd, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Banka Hesabına Para Yatırma' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 17) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				UNION ALL		  
				SELECT	Ind, Owner, TipInd, Tutar as Giren, 0.0 as Cikan, NULL AS HesapAdi, NULL AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 17) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				order by Owner, GirisTarihi
			end

		/* Banka Geliri*/
		if (@HareketTipi = -4)
			begin
				SELECT NULL As Ind, NULL as Owner, -4 As TipInd, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Banka Geliri' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 27) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				UNION ALL
				SELECT	Ind, Owner, TipInd, Tutar as Giren, 0.0 as Cikan, GelirAdi AS HesapAdi, GelirKodu AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 27) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				order by Owner, GirisTarihi
			end

		/* Bankadan Aktarım*/
		if (@HareketTipi = -5)
			begin
				SELECT NULL As Ind, NULL as Owner, -5 As TipInd, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Bankadan Aktarım' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 21) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				UNION ALL
				SELECT	Ind, Owner, TipInd, Tutar as Giren, 0.0 as Cikan, HedefBankaHesapAdi AS HesapAdi, HedefBankaHesapKodu AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 21) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				order by Owner, GirisTarihi
			end
			
			/* BANKA ÇIKIŞLARI*/
		
		/*Cari Bankadan Ödeme*/
		if (@HareketTipi = -6)
			begin
				SELECT NULL As Ind, NULL as Owner, -6 As TipInd, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Cari Bankadan Ödeme' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 15) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				UNION ALL
				SELECT	Ind, Owner, TipInd, 0.0 as Giren, Tutar as Cikan, CariHesapAdi AS HesapAdi, CariHesapKodu AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 15) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				order by Owner, GirisTarihi
		end

		/*Banka Hesabından Para Çekme*/
		if (@HareketTipi = -7)
			begin
				SELECT NULL As Ind, NULL as Owner, -7 As TipInd, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Banka Hesabından Para Çekme' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 19) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				UNION ALL
				SELECT	Ind, Owner, TipInd, 0.0 as Giren, Tutar as Cikan, NULL AS HesapAdi, NULL AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 19) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				order by Owner, GirisTarihi
		end

		/*Personel Hesabına EFT - Havale*/
		if (@HareketTipi = -8)
			begin
				SELECT NULL As Ind, NULL as Owner, -8 As TipInd, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Personel Hesabına EFT - Havale' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 22) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				UNION ALL
				SELECT	Ind, Owner, TipInd, 0.0 as Giren, Tutar as Cikan, PersonelHesapAdi AS HesapAdi, PersonelHesapKodu AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 22) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				order by Owner, GirisTarihi
		end

		/*Banka Gideri*/
		if (@HareketTipi = -9)
			begin
				SELECT NULL As Ind, NULL as Owner, -9 As TipInd, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Banka Gideri' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 28) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				UNION ALL
				SELECT	Ind, Owner, TipInd, 0.0 as Giren, Tutar as Cikan, GiderAdi AS HesapAdi, GiderKodu AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 28) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				order by Owner, GirisTarihi
		end

		/*Bankaya Aktarım*/
		if (@HareketTipi = -10)
			begin
				SELECT NULL As Ind, NULL as Owner, -10 As TipInd, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Bankaya Aktarım' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 21) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				UNION ALL		
				SELECT	Ind, Owner, TipInd, 0.0 as Giren, Tutar as Cikan, BankaHesapAdi AS HesapAdi, BankaHesapKodu AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 21) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
				order by Owner, GirisTarihi
		end

		/*Maaş Aktarım*/
		if (@HareketTipi = -11)
			begin
				SELECT NULL As Ind, NULL as Owner, -11 As TipInd, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Maaş Aktarım' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK), (select Ind, Tarih from dbo.Basliklar WITH(NOLOCK) where TipInd = 107) As b
				WHERE 	 (h.TipInd = 31) and h.BaslikInd = b.Ind and b.Tarih>=@BaslangicTarihi and b.Tarih<@BitisTarihi
				UNION ALL
				SELECT	h.Ind, Owner, h.TipInd, 0.0 as Giren, h.Tutar as Cikan, h.PersonelHesapAdi AS HesapAdi, h.PersonelHesapKodu AS HesapKodu, h.Aciklama, BankaHesapKodu as BankaHesapKodu, b.Tarih As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK), (select Ind, Tarih from dbo.Basliklar WITH(NOLOCK) where TipInd = 107) As b
				WHERE 	 (h.TipInd = 31) and h.BaslikInd = b.Ind and b.Tarih>=@BaslangicTarihi and b.Tarih<@BitisTarihi
				order by Owner, GirisTarihi
			end
	end

	if @SeciliSube <> 0
	begin
			/* BANKA GİRİŞLERİ */

		/* Cari Bankadan Tahsilat*/
		if (@HareketTipi = -1)
			begin
				SELECT NULL As Ind, NULL as Owner, -1 As TipInd, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Cari Bankadan Tahsilat' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi  
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 12) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube				
				UNION ALL
				SELECT	Ind, Owner, TipInd, Tutar as Giren, 0.0 as Cikan, CariHesapAdi AS HesapAdi, CariHesapKodu AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 12) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
		end

		/* Kredi Kartından Tahsilat*/
		if (@HareketTipi = -2)
			begin
				SELECT NULL As Ind, NULL as Owner, -2 As TipInd, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Kredi Kartından Tahsilat' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi  
				FROM	dbo.Hareketler AS h WITH(NOLOCK), (select Ind, Tarih from dbo.Basliklar WITH(NOLOCK) where TipInd = 105) As b
				WHERE 	 (h.TipInd IN (10,533)) and h.BaslikInd = b.Ind and b.Tarih>=@BaslangicTarihi and b.Tarih<@BitisTarihi and h.Owner = @SeciliSube
				UNION ALL
				SELECT	h.Ind, Owner, h.TipInd, h.Tutar as Giren, 0.0 as Cikan, h.KKHesapAdi AS HesapAdi, h.KKHesapKodu AS HesapKodu, h.Aciklama, BankaHesapKodu as BankaHesapKodu, b.Tarih As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK), (select Ind, Tarih from dbo.Basliklar  where TipInd = 105) As b
				WHERE 	 (h.TipInd IN (10,533)) and h.BaslikInd = b.Ind and b.Tarih>=@BaslangicTarihi and b.Tarih<@BitisTarihi and h.Owner = @SeciliSube
				order by Owner, GirisTarihi
			end
		
		/* Banka Hesabına Para Yatırma*/
		if (@HareketTipi = -3)
			begin
				SELECT NULL As Ind, NULL as Owner, -3 As TipInd, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Banka Hesabına Para Yatırma' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 17) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				UNION ALL		  
				SELECT	Ind, Owner, TipInd, Tutar as Giren, 0.0 as Cikan, NULL AS HesapAdi, NULL AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 17) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				order by Owner, GirisTarihi
			end

		/* Banka Geliri*/
		if (@HareketTipi = -4)
			begin
				SELECT NULL As Ind, NULL as Owner, -4 As TipInd, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Banka Geliri' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 27) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				UNION ALL
				SELECT	Ind, Owner, TipInd, Tutar as Giren, 0.0 as Cikan, GelirAdi AS HesapAdi, GelirKodu AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 27) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				order by Owner, GirisTarihi
			end

		/* Bankadan Aktarım*/
		if (@HareketTipi = -5)
			begin
				SELECT NULL As Ind, NULL as Owner, -5 As TipInd, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Bankadan Aktarım' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 21) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				UNION ALL
				SELECT	Ind, Owner, TipInd, Tutar as Giren, 0.0 as Cikan, HedefBankaHesapAdi AS HesapAdi, HedefBankaHesapKodu AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 21) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				order by Owner, GirisTarihi
			end
			
			/* BANKA ÇIKIŞLARI*/
		
		/*Cari Bankadan Ödeme*/
		if (@HareketTipi = -6)
			begin
				SELECT NULL As Ind, NULL as Owner, -6 As TipInd, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Cari Bankadan Ödeme' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 15) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				UNION ALL
				SELECT	Ind, Owner, TipInd, 0.0 as Giren, Tutar as Cikan, CariHesapAdi AS HesapAdi, CariHesapKodu AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 15) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				order by Owner, GirisTarihi
		end

		/*Banka Hesabından Para Çekme*/
		if (@HareketTipi = -7)
			begin
				SELECT NULL As Ind, NULL as Owner, -7 As TipInd, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Banka Hesabından Para Çekme' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 19) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				UNION ALL
				SELECT	Ind, Owner, TipInd, 0.0 as Giren, Tutar as Cikan, NULL AS HesapAdi, NULL AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 19) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				order by Owner, GirisTarihi
		end

		/*Personel Hesabına EFT - Havale*/
		if (@HareketTipi = -8)
			begin
				SELECT NULL As Ind, NULL as Owner, -8 As TipInd, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Personel Hesabına EFT - Havale' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 22) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				UNION ALL
				SELECT	Ind, Owner, TipInd, 0.0 as Giren, Tutar as Cikan, PersonelHesapAdi AS HesapAdi, PersonelHesapKodu AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 22) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				order by Owner, GirisTarihi
		end

		/*Banka Gideri*/
		if (@HareketTipi = -9)
			begin
				SELECT NULL As Ind, NULL as Owner, -9 As TipInd, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Banka Gideri' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 28) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				UNION ALL
				SELECT	Ind, Owner, TipInd, 0.0 as Giren, Tutar as Cikan, GiderAdi AS HesapAdi, GiderKodu AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 28) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				order by Owner, GirisTarihi
		end

		/*Bankaya Aktarım*/
		if (@HareketTipi = -10)
			begin
				SELECT NULL As Ind, NULL as Owner, -10 As TipInd, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Bankaya Aktarım' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 21) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				UNION ALL		
				SELECT	Ind, Owner, TipInd, 0.0 as Giren, Tutar as Cikan, BankaHesapAdi AS HesapAdi, BankaHesapKodu AS HesapKodu, Aciklama, BankaHesapKodu as BankaHesapKodu, h.GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK)
				WHERE	(TipInd = 21) and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi and h.Owner = @SeciliSube
				order by Owner, GirisTarihi
		end

		/*Maaş Aktarım*/
		if (@HareketTipi = -11)
			begin
				SELECT NULL As Ind, NULL as Owner, -11 As TipInd, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL As HesapAdi, NULL As HesapKodu,
					'Maaş Aktarım' As Aciklama, NULL as BankaHesapKodu, NULL As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK), (select Ind, Tarih from dbo.Basliklar WITH(NOLOCK) where TipInd = 107) As b
				WHERE 	 (h.TipInd = 31) and h.BaslikInd = b.Ind and b.Tarih>=@BaslangicTarihi and b.Tarih<@BitisTarihi and h.Owner = @SeciliSube
				UNION ALL
				SELECT	h.Ind, Owner, h.TipInd, 0.0 as Giren, h.Tutar as Cikan, h.PersonelHesapAdi AS HesapAdi, h.PersonelHesapKodu AS HesapKodu, h.Aciklama, BankaHesapKodu as BankaHesapKodu, b.Tarih As GirisTarihi
				FROM	dbo.Hareketler AS h WITH(NOLOCK), (select Ind, Tarih from dbo.Basliklar WITH(NOLOCK) where TipInd = 107) As b
				WHERE 	 (h.TipInd = 31) and h.BaslikInd = b.Ind and b.Tarih>=@BaslangicTarihi and b.Tarih<@BitisTarihi and h.Owner = @SeciliSube
				order by Owner, GirisTarihi
			end
	end
END

GO
CREATE procedure [dbo].[FaturaBaslikToplamliGetir]
(
	@GelirInd int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
AS
BEGIN

	select Ind, [Owner], BelgeNo, Tarih, HesapKodu, HesapAdi,
		[dbo].[FaturaBaslikToplamTutarKDVsiz] (Ind) as ToplamTutar
	from Basliklar b WITH(NOLOCK)
	where b.TipInd=102 and (b.Tarih>=@BaslangicTarihi and b.Tarih<@BitisTarihi)
		and b.GelirInd in
		(
			select Ind from Hesaplar where GrupInd = @GelirInd and TipInd = 206
		)

END

GO
CREATE procedure [dbo].[GelirGiderGrupEslestirmesiGuncelle]
(
	@Ind int,
	@GelirGrubuInd int,
	@GiderGrubuInd int
)
AS
BEGIN
	update GelirGiderGrupEslestirme
	set
		GelirGrubuInd = @GelirGrubuInd,
		GiderGrubuInd = @GiderGrubuInd
	where Ind=@Ind

	select Ind, [Owner], GelirGrubuInd, GiderGrubuInd, ParentInd
	from GelirGiderGrupEslestirme WITH(NOLOCK) where Ind=@Ind
END


GO
CREATE procedure [dbo].[GelirGiderGrupEslestirmesiSil]
(
	@Ind int
)
AS
BEGIN

	delete from GelirGiderGrupEslestirme where Ind = @Ind

	delete from GelirGiderGrupEslestirme where ParentInd = @Ind

	select 1 as Ind, 0 as [Owner]
END

GO
CREATE procedure [dbo].[GelirGiderGrupEslestirmeToplamli]
(
	@ParentInd int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
AS
BEGIN

	if @ParentInd is null
	begin

		select Ind, [Owner], GelirGrubuInd, GiderGrubuInd, GelirGrubuAdi, GiderGrubuAdi,
			GelirlerToplami, GiderlerToplami, (GelirlerToplami - GiderlerToplami) as FarkToplami
		from
		(
			select gge.Ind, gge.[Owner], gge.GelirGrubuInd, gge.GiderGrubuInd,
				geg.GrupAdi as GelirGrubuAdi, gig.GrupAdi as GiderGrubuAdi,
				[dbo].[GelirGrubuToplamTutarKDVsiz] (GelirGrubuInd, @BaslangicTarihi, @BitisTarihi) as GelirlerToplami,
				[dbo].[GiderGrubuToplamTutarKDVsiz] (GiderGrubuInd, @BaslangicTarihi, @BitisTarihi) as GiderlerToplami,
				gge.ParentInd
			from GelirGiderGrupEslestirme gge WITH(NOLOCK)
				left join GelirGruplari geg on gge.GelirGrubuInd = geg.Ind
				left join GiderGruplari gig on gge.GiderGrubuInd = gig.Ind
			where gge.ParentInd is null
		) as t

	end
	else
	begin

		select Ind, [Owner], GelirGrubuInd, GiderGrubuInd, GelirGrubuAdi, GiderGrubuAdi,
			GelirlerToplami, GiderlerToplami, (GelirlerToplami - GiderlerToplami) as FarkToplami
		from
		(
			select gge.Ind, gge.[Owner], gge.GelirGrubuInd, gge.GiderGrubuInd,
				geg.GrupAdi as GelirGrubuAdi, gig.GrupAdi as GiderGrubuAdi,
				[dbo].[GelirGrubuToplamTutarKDVsiz] (GelirGrubuInd, @BaslangicTarihi, @BitisTarihi) as GelirlerToplami,
				[dbo].[GiderGrubuToplamTutarKDVsiz] (GiderGrubuInd, @BaslangicTarihi, @BitisTarihi) as GiderlerToplami,
				gge.ParentInd
			from GelirGiderGrupEslestirme gge WITH(NOLOCK)
				left join GelirGruplari geg on gge.GelirGrubuInd = geg.Ind
				left join GiderGruplari gig on gge.GiderGrubuInd = gig.Ind
			where gge.ParentInd = @ParentInd
		) as t

	end

END




GO
CREATE procedure [dbo].[GelirGrubuToplamli]
(
	@ParentInd int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
AS
BEGIN

	select Ind, [Owner], GrupAdi, GelirlerToplami
	from
	(
		select gg.Ind, gg.[Owner], gg.GrupAdi,
			[dbo].[GelirGrubuToplamTutarKDVsiz] (Ind, @BaslangicTarihi, @BitisTarihi) as GelirlerToplami
		from GelirGruplari gg WITH(NOLOCK)
		where gg.ParentInd = @ParentInd
	) as t

END

GO
CREATE procedure [dbo].[GiderGrubuToplamli]
(
	@ParentInd int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
AS
BEGIN

	select Ind, [Owner], GrupAdi, GiderlerToplami
	from
	(
		select gg.Ind, gg.[Owner], gg.GrupAdi,
			[dbo].[GiderGrubuToplamTutarKDVsiz] (Ind, @BaslangicTarihi, @BitisTarihi) as GiderlerToplami
		from GiderGruplari gg WITH(NOLOCK)
		where gg.ParentInd = @ParentInd
	) as t  
END

GO
CREATE procedure [dbo].[GiderKartiHareketleriToplamliGetir]
(
	@GiderInd int,
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
AS
BEGIN

	select h.Ind, h.[Owner], h.GirisTarihi as Tarih, hh.HesapAdi as GiderGrubuAdi,
		[dbo].[HareketToplamTutarKDVsiz] (h.Ind) as ToplamTutar
	from Hareketler h WITH(NOLOCK) inner join Hesaplar hh WITH(NOLOCK) on h.GiderInd = hh.Ind
	where h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
		and h.GiderInd in
		(
			select Ind from Hesaplar where GrupInd = @GiderInd and TipInd = 207
		)

END

GO
--	Açıklama	:	ParaBirimi verilen kasanın verilen tarihler arasındaki giriş çıkış hareket dökümünü getirir

CREATE PROCEDURE [dbo].[KasaGirisCikisKayitlariGetir]
(	
	@HareketTipi int,
	@ParaBirimi nvarchar(5),
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@SeciliSube int
)
AS
BEGIN

	if @SeciliSube = 0
	begin

		--	******	TÜM KASA GİRİŞLERİ	*****	--

		if (@HareketTipi = -15)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -15 as TipInd, NULL as ParaBirimi, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'DÖVİZ GİRİŞİ' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler h WITH(NOLOCK)
			WHERE	TipInd = 7 and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
			UNION ALL
			SELECT  h.Ind, b.Owner, h.TipInd, h.ParaBirimi, h.Tutar as Giren, 0.0 as Cikan,
					NULL as HesapAdi, NULL AS HesapKodu, b.Aciklama, b.Tarih AS GirisTarihi, NULL AS VadeTarihi, h.VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	Hareketler h WITH(NOLOCK)
					INNER JOIN Basliklar b ON h.VardiyaKartInd = b.Ind
			WHERE	b.TipInd = 108 AND
					h.TipInd = 38 AND h.ParaBirimi = @ParaBirimi AND
					b.Tarih >=@BaslangicTarihi AND b.Tarih <@BitisTarihi
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, h.Tutar as Giren, 0.0 as Cikan,
					NULL AS HesapAdi, NULL AS HesapKodu, Aciklama, GirisTarihi, NULL AS VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler h WITH(NOLOCK)
			WHERE	TipInd = 7 and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -1)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -1 as TipInd, NULL as ParaBirimi, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'CARİDEN TAHSİLAT' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 9) AND (VardiyaKartInd IS NULL) AND (Tutar > 0) AND (KasayaIslensinMi IS NULL) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, Tutar as Giren, 0.0 as Cikan, CariHesapAdi AS HesapAdi, CariHesapKodu AS HesapKodu,
					ISNULL(GelirAdi, '') + ' ' + ISNULL(Aciklama, '') AS Aciklama, GirisTarihi, NULL AS VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 9) AND (VardiyaKartInd IS NULL) AND (Tutar > 0) AND (KasayaIslensinMi IS NULL) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -2)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -2 as TipInd, NULL as ParaBirimi, sum(k.GirenTutar) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'KASA VİRMAN' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM	dbo.KasaVirmanHareketleri AS k WITH(NOLOCK)
			WHERE	(GirenTutar > 0) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, GirenTutar AS Giren, 0.0 as Cikan, NULL AS HesapAdi, NULL AS HesapKodu, Aciklama, GirisTarihi,
					NULL	AS VadeTarihi, NULL AS VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	dbo.KasaVirmanHareketleri AS k WITH(NOLOCK)
			WHERE	(GirenTutar > 0) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -3)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -3 as TipInd, NULL as ParaBirimi, sum(Tutar) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'ÇEK TAHSİLATI' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 11) AND (DurumInd = 5) AND (VardiyaKartInd IS NULL) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<=@BitisTarihi
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, Tutar as Giren, 0.0 as Cikan, CariHesapAdi AS HesapAdi, CariHesapKodu AS HesapKodu, Aciklama, 
					IslemTarihi AS GirisTarihi, VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 11) AND (DurumInd = 5) AND (VardiyaKartInd IS NULL) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<=@BitisTarihi
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -4)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -4 as TipInd, NULL as ParaBirimi, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'BANKADAN TAHSİLAT' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN dbo.Hesaplar WITH(NOLOCK) ON dbo.Hesaplar.Ind = h.BankaHesapInd
			WHERE	(h.TipInd = 19) AND (h.VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			UNION ALL
			SELECT	h.Ind, h.Owner, h.TipInd, dbo.Hesaplar.ParaBirimi, h.Tutar as Giren, 0.0 as Cikan, h.BankaHesapAdi AS HesapAdi, h.BankaHesapKodu AS HesapKodu,
					h.Aciklama, h.GirisTarihi, NULL AS VadeTarihi, h.VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN dbo.Hesaplar WITH(NOLOCK) ON dbo.Hesaplar.Ind = h.BankaHesapInd
			WHERE	(h.TipInd = 19) AND (h.VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -5)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -5 as TipInd, NULL as ParaBirimi, sum(Tutar) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'KASA GELİRİ' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 25) AND (VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, Tutar as Giren, 0.0 as Cikan, GelirAdi AS HesapAdi, GelirKodu AS HesapKodu, Aciklama, GirisTarihi,
					NULL AS VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 25) AND (VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -6)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -6 as TipInd, NULL as ParaBirimi, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'PERSONELDEN TAHSİLAT' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 20) AND (VardiyaKartInd IS NULL) AND (KasayaIslensinMi IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, h.Tutar as Giren, 0.0 as Cikan, PersonelHesapAdi AS HesapAdi, PersonelHesapKodu AS HesapKodu, Aciklama, GirisTarihi,
					NULL AS VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 20) AND (VardiyaKartInd IS NULL) AND (KasayaIslensinMi IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -7)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -7 as TipInd, NULL as ParaBirimi, sum(Giren) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'VARDİYA NAKİT GİRİŞİ' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM
			(
				SELECT	e.VardiyaNo AS Ind, e.Owner, 38 AS TipInd, e.ParaBirimi,
						SUM(coalesce(h.Tutar, 0)) AS Giren, 0.0 as Cikan,
						CAST(e.VardiyaNo AS varchar(50)) + '. Vardiya' AS HesapAdi, NULL AS HesapKodu, 
						'Vardiya kabul' AS Aciklama, e.Tarih AS GirisTarihi, NULL AS VadeTarihi, NULL AS VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
				FROM	dbo.EskiVardiyaTarihleri AS e WITH(NOLOCK) LEFT OUTER JOIN
						dbo.Basliklar WITH(NOLOCK) ON dbo.Basliklar.TipInd = 108 AND dbo.Basliklar.Tarih = e.Tarih AND dbo.Basliklar.VardiyaNo = e.VardiyaNo AND 
						dbo.Basliklar.Owner = e.Owner LEFT OUTER JOIN
						(
							select * from Hareketler h WITH(NOLOCK)
							where (h.ParaBirimi=@ParaBirimi)
						) h
						ON h.VardiyaKartInd = dbo.Basliklar.Ind AND h.TipInd = 38 AND e.ParaBirimi = h.ParaBirimi
				WHERE	(dbo.Basliklar.TipInd = 108) AND (dbo.Basliklar.Tarih = e.Tarih) AND (dbo.Basliklar.Owner = e.Owner) AND (dbo.Basliklar.VardiyaNo = e.VardiyaNo) AND 
						(e.ParaBirimi = h.ParaBirimi)
				GROUP BY e.ParaBirimi, e.VardiyaNo, e.Owner, e.Tarih, h.TipInd
			) as T
			where T.GirisTarihi>=@BaslangicTarihi and T.GirisTarihi<@BitisTarihi
			UNION ALL
			select * from
			(
				SELECT	e.VardiyaNo AS Ind, e.Owner, 38 AS TipInd, e.ParaBirimi,
						SUM(CASE WHEN (h.ParaBirimi = e.ParaBirimi AND h.TipInd = 38) THEN h.Tutar ELSE 0.00 END) AS Giren, 0.0 as Cikan,
						CAST(e.VardiyaNo AS varchar(50)) + '. Vardiya' AS HesapAdi, NULL AS HesapKodu, 
						'Vardiya kabul' AS Aciklama, e.Tarih AS GirisTarihi, NULL AS VadeTarihi, NULL AS VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
				FROM	dbo.EskiVardiyaTarihleri AS e WITH(NOLOCK) LEFT OUTER JOIN
						dbo.Basliklar WITH(NOLOCK) ON dbo.Basliklar.TipInd = 108 AND dbo.Basliklar.Tarih = e.Tarih AND dbo.Basliklar.VardiyaNo = e.VardiyaNo AND 
						dbo.Basliklar.Owner = e.Owner LEFT OUTER JOIN
						dbo.Hareketler AS h WITH(NOLOCK) ON h.VardiyaKartInd = dbo.Basliklar.Ind AND h.TipInd = 38 AND e.ParaBirimi = h.ParaBirimi
				WHERE	(dbo.Basliklar.TipInd = 108) AND (dbo.Basliklar.Tarih = e.Tarih) AND (dbo.Basliklar.Owner = e.Owner) AND (dbo.Basliklar.VardiyaNo = e.VardiyaNo) AND 
						(e.ParaBirimi = h.ParaBirimi) and h.ParaBirimi=@ParaBirimi
				GROUP BY e.ParaBirimi, e.VardiyaNo, e.Owner, e.Tarih, h.TipInd
			) as T
			where T.GirisTarihi>=@BaslangicTarihi and T.GirisTarihi<@BitisTarihi
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -8)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -8 as TipInd, NULL as ParaBirimi, sum(Giren) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'MARKET VARDİYASI NAKİT GİRİŞİ' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM
			(
				SELECT	NULL AS Ind, NULL as Owner, -8 as TipInd, NULL as ParaBirimi, h.Tutar as Giren, 0.0 as Cikan, NULL AS HesapAdi,
						NULL AS HesapKodu, 'MARKET VARDİYASI NAKİT GİRİŞİ' as Aciklama, b.Tarih as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
				FROM	dbo.Basliklar AS b WITH(NOLOCK) LEFT OUTER JOIN dbo.Hareketler AS h WITH(NOLOCK) ON h.BaslikInd = b.Ind
				WHERE	(b.TipInd = 505) AND (h.TipInd = 38) and (h.ParaBirimi=@ParaBirimi)
			) as T
			WHERE (GirisTarihi>=@BaslangicTarihi) and (GirisTarihi<@BitisTarihi)
			UNION ALL
			SELECT *
			FROM
			(
				SELECT	b.Ind, b.Owner, h.TipInd, h.ParaBirimi, h.Tutar as Giren, 0.0 as Cikan, h.PersonelHesapAdi AS HesapAdi, h.PersonelHesapKodu AS HesapKodu, 
						'Vardiya kabul' AS Aciklama, b.Tarih AS GirisTarihi, NULL AS VadeTarihi, NULL AS VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
				FROM	dbo.Basliklar AS b WITH(NOLOCK) LEFT OUTER JOIN dbo.Hareketler AS h WITH(NOLOCK) ON h.BaslikInd = b.Ind
				WHERE	(b.TipInd = 505) AND (h.TipInd = 38) and (h.ParaBirimi=@ParaBirimi)
			) as T
			WHERE (GirisTarihi>=@BaslangicTarihi) and (GirisTarihi<@BitisTarihi)
			order by Owner, GirisTarihi
		end

			--	******	TÜM KASA ÇIKIŞLARI	*****	--

		if (@HareketTipi = -16)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -16 as TipInd, NULL as ParaBirimi, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'DÖVİZ ÇIKIŞI' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd =8) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, 0.0 as Giren, h.Tutar as Cikan, NULL AS HesapAdi, NULL AS HesapKodu, Aciklama, GirisTarihi,
					NULL AS VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd =8) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			order by Owner, GirisTarihi
		end


		if (@HareketTipi = -9)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -9 as TipInd, NULL as ParaBirimi, 0.0 as Giren, sum(Tutar) as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'CARİ NAKİT ÖDEME' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 13) AND (VardiyaKartInd IS NULL) AND (Tutar > 0) AND (KasayaIslensinMi IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, 0.0 as Giren, Tutar as Cikan, CariHesapAdi AS HesapAdi, CariHesapKodu AS HesapKodu,
					ISNULL(GiderAdi, '') + ' ' + ISNULL(Aciklama, '') AS Aciklama, GirisTarihi, NULL AS VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 13) AND (VardiyaKartInd IS NULL) AND (Tutar > 0) AND (KasayaIslensinMi IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -10)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -10 as TipInd, NULL as ParaBirimi, 0.0 as Giren, sum(CikanTutar) as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'KASA VİRMAN' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, -1.0 as Carpan
			FROM	dbo.KasaVirmanHareketleri AS k WITH(NOLOCK)
			WHERE	(CikanTutar > 0) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, 0.0 as Giren, CikanTutar as Cikan, NULL AS HesapAdi, NULL AS HesapKodu, Aciklama, GirisTarihi,
					NULL AS VadeTarihi, NULL AS VardiyaKartInd, 0.00 AS Bakiye, -1.0 as Carpan
			FROM	dbo.KasaVirmanHareketleri AS k WITH(NOLOCK)
			WHERE	(CikanTutar > 0) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -11)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -11 as TipInd, NULL as ParaBirimi, 0.0 as Giren, sum(Tutar) as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'BANKAYA ÖDEME' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN dbo.Hesaplar WITH(NOLOCK) ON dbo.Hesaplar.Ind = h.BankaHesapInd
			WHERE	(h.TipInd = 17) AND (h.VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			UNION ALL
			SELECT	h.Ind, h.Owner, h.TipInd, dbo.Hesaplar.ParaBirimi, 0.0 as Giren, Tutar as Cikan, h.BankaHesapAdi AS HesapAdi, h.BankaHesapKodu AS HesapKodu,
					h.Aciklama, h.GirisTarihi, NULL AS VadeTarihi, h.VardiyaKartInd, 0.00 AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN dbo.Hesaplar WITH(NOLOCK) ON dbo.Hesaplar.Ind = h.BankaHesapInd
			WHERE	(h.TipInd = 17) AND (h.VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			order by Owner, GirisTarihi
		end


		if (@HareketTipi = -12)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -12 as TipInd, NULL as ParaBirimi, 0.0 as Giren, sum(Tutar) as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'KASA GİDERİ' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 26) AND (VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			UNION ALL
			SELECT	h.Ind as Ind, h.Owner as Owner, h.TipInd as TipInd, h.ParaBirimi as ParaBirimi, 0.0 as Giren, h.Tutar as Cikan,
					h.GiderAdi AS HesapAdi, he.HesapKodu AS HesapKodu, h.Aciklama as Aciklama, h.GirisTarihi as GirisTarihi,
					NULL AS VadeTarihi, h.VardiyaKartInd as VardiyaKartInd, 0.00 AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK) left join Hesaplar he WITH(NOLOCK) on h.GiderInd = he.Ind
			WHERE	(h.TipInd = 26) AND (h.VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			order by Owner, GirisTarihi
		end


		if (@HareketTipi = -13)
		begin
			SELECT	NULL AS Ind, NULL  as Owner, -13 as TipInd, NULL as ParaBirimi, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'PERSONELE ÖDEME' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 18) AND (VardiyaKartInd IS NULL) AND (KasayaIslensinMi IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, 0.0 as Giren, h.Tutar as Cikan, PersonelHesapAdi AS HesapAdi, PersonelHesapKodu AS HesapKodu, Aciklama,
					GirisTarihi, NULL AS VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 18) AND (VardiyaKartInd IS NULL) AND (KasayaIslensinMi IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -14)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -14 as TipInd, NULL as ParaBirimi, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'MAAŞ ÖDEMESİ' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN dbo.Basliklar WITH(NOLOCK) ON h.BaslikInd = dbo.Basliklar.Ind
			WHERE	(h.TipInd = 31) AND (dbo.Basliklar.TipInd = 107) AND (dbo.Basliklar.HesapInd IS NULL) AND (h.Tutar > 0) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			UNION ALL
			SELECT	h.Ind, h.Owner, h.TipInd, h.ParaBirimi, 0.0 as Giren, h.Tutar as Cikan, h.PersonelHesapAdi AS HesapAdi, h.PersonelHesapKodu AS HesapKodu, 
					dbo.Basliklar.Aciklama, h.GirisTarihi, NULL AS VadeTarihi, NULL AS VardiyaKartInd, 0.00 AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN dbo.Basliklar WITH(NOLOCK) ON h.BaslikInd = dbo.Basliklar.Ind
			WHERE	(h.TipInd = 31) AND (dbo.Basliklar.TipInd = 107) AND (dbo.Basliklar.HesapInd IS NULL) AND (h.Tutar > 0) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
			order by Owner, GirisTarihi
		end
	end

	if @SeciliSube <> 0
	begin

		--	******	TÜM KASA GİRİŞLERİ	*****	--

		if (@HareketTipi = -15)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -15 as TipInd, NULL as ParaBirimi, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'DÖVİZ GİRİŞİ' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler h WITH(NOLOCK)
			WHERE	TipInd = 7 and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			UNION ALL
			SELECT  h.Ind, b.Owner, h.TipInd, h.ParaBirimi, h.Tutar as Giren, 0.0 as Cikan,
					NULL as HesapAdi, NULL AS HesapKodu, b.Aciklama, b.Tarih AS GirisTarihi, NULL AS VadeTarihi, h.VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	Hareketler h WITH(NOLOCK)
					INNER JOIN Basliklar b WITH(NOLOCK) ON h.VardiyaKartInd = b.Ind
			WHERE	b.TipInd = 108 AND b.Owner = @SeciliSube AND 
					h.TipInd = 38 AND h.ParaBirimi = @ParaBirimi AND
					b.Tarih >=@BaslangicTarihi AND b.Tarih <@BitisTarihi
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, h.Tutar as Giren, 0.0 as Cikan,
					NULL AS HesapAdi, NULL AS HesapKodu, Aciklama, GirisTarihi, NULL AS VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler h WITH(NOLOCK)
			WHERE	TipInd = 7 and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -1)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -1 as TipInd, NULL as ParaBirimi, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'CARİDEN TAHSİLAT' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 9) AND (VardiyaKartInd IS NULL) AND (Tutar > 0) AND (KasayaIslensinMi IS NULL) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, Tutar as Giren, 0.0 as Cikan, CariHesapAdi AS HesapAdi, CariHesapKodu AS HesapKodu,
					ISNULL(GelirAdi, '') + ' ' + ISNULL(Aciklama, '') AS Aciklama, GirisTarihi, NULL AS VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 9) AND (VardiyaKartInd IS NULL) AND (Tutar > 0) AND (KasayaIslensinMi IS NULL) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -2)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -2 as TipInd, NULL as ParaBirimi, sum(k.GirenTutar) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'KASA VİRMAN' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM	dbo.KasaVirmanHareketleri AS k WITH(NOLOCK)
			WHERE	(GirenTutar > 0) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
					and k.Owner = @SeciliSube
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, GirenTutar AS Giren, 0.0 as Cikan, NULL AS HesapAdi, NULL AS HesapKodu, Aciklama, GirisTarihi,
					NULL	AS VadeTarihi, NULL AS VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	dbo.KasaVirmanHareketleri AS k WITH(NOLOCK)
			WHERE	(GirenTutar > 0) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
					and k.Owner = @SeciliSube
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -3)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -3 as TipInd, NULL as ParaBirimi, sum(Tutar) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'ÇEK TAHSİLATI' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 11) AND (DurumInd = 5) AND (VardiyaKartInd IS NULL) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, Tutar as Giren, 0.0 as Cikan, CariHesapAdi AS HesapAdi, CariHesapKodu AS HesapKodu, Aciklama, 
					IslemTarihi AS GirisTarihi, VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 11) AND (DurumInd = 5) AND (VardiyaKartInd IS NULL) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -4)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -4 as TipInd, NULL as ParaBirimi, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'BANKADAN TAHSİLAT' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN dbo.Hesaplar WITH(NOLOCK) ON dbo.Hesaplar.Ind = h.BankaHesapInd
			WHERE	(h.TipInd = 19) AND (h.VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			UNION ALL
			SELECT	h.Ind, h.Owner, h.TipInd, dbo.Hesaplar.ParaBirimi, h.Tutar as Giren, 0.0 as Cikan, h.BankaHesapAdi AS HesapAdi, h.BankaHesapKodu AS HesapKodu,
					h.Aciklama, h.GirisTarihi, NULL AS VadeTarihi, h.VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN dbo.Hesaplar WITH(NOLOCK) ON dbo.Hesaplar.Ind = h.BankaHesapInd
			WHERE	(h.TipInd = 19) AND (h.VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -5)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -5 as TipInd, NULL as ParaBirimi, sum(Tutar) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'KASA GELİRİ' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 25) AND (VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, Tutar as Giren, 0.0 as Cikan, GelirAdi AS HesapAdi, GelirKodu AS HesapKodu, Aciklama, GirisTarihi,
					NULL AS VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 25) AND (VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -6)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -6 as TipInd, NULL as ParaBirimi, sum(h.Tutar) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'PERSONELDEN TAHSİLAT' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 20) AND (VardiyaKartInd IS NULL) AND (KasayaIslensinMi IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, h.Tutar as Giren, 0.0 as Cikan, PersonelHesapAdi AS HesapAdi, PersonelHesapKodu AS HesapKodu, Aciklama, GirisTarihi,
					NULL AS VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 20) AND (VardiyaKartInd IS NULL) AND (KasayaIslensinMi IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -7)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -7 as TipInd, NULL as ParaBirimi, sum(Giren) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'VARDİYA NAKİT GİRİŞİ' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM
			(
				SELECT	e.VardiyaNo AS Ind, e.Owner, 38 AS TipInd, e.ParaBirimi,
						SUM(coalesce(h.Tutar, 0)) AS Giren, 0.0 as Cikan,
						CAST(e.VardiyaNo AS varchar(50)) + '. Vardiya' AS HesapAdi, NULL AS HesapKodu, 
						'Vardiya kabul' AS Aciklama, e.Tarih AS GirisTarihi, NULL AS VadeTarihi, NULL AS VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
				FROM	dbo.EskiVardiyaTarihleri AS e WITH(NOLOCK) LEFT OUTER JOIN
						dbo.Basliklar WITH(NOLOCK) ON dbo.Basliklar.TipInd = 108 AND dbo.Basliklar.Tarih = e.Tarih AND dbo.Basliklar.VardiyaNo = e.VardiyaNo AND 
						dbo.Basliklar.Owner = e.Owner LEFT OUTER JOIN
						(
							select * from Hareketler h WITH(NOLOCK)
							where (h.ParaBirimi=@ParaBirimi)
							and h.Owner = @SeciliSube
						) h
						ON h.VardiyaKartInd = dbo.Basliklar.Ind AND h.TipInd = 38 AND e.ParaBirimi = h.ParaBirimi
				WHERE	(dbo.Basliklar.TipInd = 108) AND (dbo.Basliklar.Tarih = e.Tarih) AND (dbo.Basliklar.Owner = e.Owner) AND (dbo.Basliklar.VardiyaNo = e.VardiyaNo) AND 
						(e.ParaBirimi = h.ParaBirimi)
				GROUP BY e.ParaBirimi, e.VardiyaNo, e.Owner, e.Tarih, h.TipInd
			) as T
			where T.GirisTarihi>=@BaslangicTarihi and T.GirisTarihi<@BitisTarihi
			--UNION ALL
			--select * from
			--(
			--	SELECT	e.VardiyaNo AS Ind, e.Owner, 38 AS TipInd, e.ParaBirimi,
			--			SUM(CASE WHEN (h.ParaBirimi = e.ParaBirimi AND h.TipInd = 38) THEN h.Tutar ELSE 0.00 END) AS Giren, 0.0 as Cikan,
			--			CAST(e.VardiyaNo AS varchar(50)) + '. Vardiya' AS HesapAdi, NULL AS HesapKodu, 
			--			'Vardiya kabul' AS Aciklama, e.Tarih AS GirisTarihi, NULL AS VadeTarihi, NULL AS VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
			--	FROM	dbo.EskiVardiyaTarihleri AS e LEFT OUTER JOIN
			--			dbo.Basliklar ON dbo.Basliklar.TipInd = 108 AND dbo.Basliklar.Tarih = e.Tarih AND dbo.Basliklar.VardiyaNo = e.VardiyaNo AND 
			--			dbo.Basliklar.Owner = e.Owner LEFT OUTER JOIN
			--			dbo.Hareketler AS h ON h.VardiyaKartInd = dbo.Basliklar.Ind AND h.TipInd = 38 AND e.ParaBirimi = h.ParaBirimi
			--	WHERE	(dbo.Basliklar.TipInd = 108) AND (dbo.Basliklar.Tarih = e.Tarih) AND (dbo.Basliklar.Owner = e.Owner) AND (dbo.Basliklar.VardiyaNo = e.VardiyaNo) AND 
			--			(e.ParaBirimi = h.ParaBirimi) and h.ParaBirimi=@ParaBirimi
			--			and h.Owner = @SeciliSube
			--	GROUP BY e.ParaBirimi, e.VardiyaNo, e.Owner, e.Tarih, h.TipInd
			--) as T
			--where T.GirisTarihi>=@BaslangicTarihi and T.GirisTarihi<@BitisTarihi
			--order by Owner, GirisTarihi
		end

		if (@HareketTipi = -8)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -8 as TipInd, NULL as ParaBirimi, sum(Giren) as Giren, 0.0 as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'MARKET VARDİYASI NAKİT GİRİŞİ' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
			FROM
			(
				SELECT	NULL AS Ind, NULL as Owner, -8 as TipInd, NULL as ParaBirimi, h.Tutar as Giren, 0.0 as Cikan, NULL AS HesapAdi,
						NULL AS HesapKodu, 'MARKET VARDİYASI NAKİT GİRİŞİ' as Aciklama, b.Tarih as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, 1.0 as Carpan
				FROM	dbo.Basliklar AS b WITH(NOLOCK) LEFT OUTER JOIN dbo.Hareketler AS h WITH(NOLOCK) ON h.BaslikInd = b.Ind
				WHERE	(b.TipInd = 505) AND (h.TipInd = 38) and (h.ParaBirimi=@ParaBirimi)
						and h.Owner = @SeciliSube
			) as T
			WHERE (GirisTarihi>=@BaslangicTarihi) and (GirisTarihi<@BitisTarihi)
			UNION ALL
			SELECT *
			FROM
			(
				SELECT	b.Ind, b.Owner, h.TipInd, h.ParaBirimi, h.Tutar as Giren, 0.0 as Cikan, h.PersonelHesapAdi AS HesapAdi, h.PersonelHesapKodu AS HesapKodu, 
						'Vardiya kabul' AS Aciklama, b.Tarih AS GirisTarihi, NULL AS VadeTarihi, NULL AS VardiyaKartInd, 0.00 AS Bakiye, 1.0 as Carpan
				FROM	dbo.Basliklar AS b WITH(NOLOCK) LEFT OUTER JOIN dbo.Hareketler AS h WITH(NOLOCK) ON h.BaslikInd = b.Ind
				WHERE	(b.TipInd = 505) AND (h.TipInd = 38) and (h.ParaBirimi=@ParaBirimi)
						and h.Owner = @SeciliSube
			) as T
			WHERE (GirisTarihi>=@BaslangicTarihi) and (GirisTarihi<@BitisTarihi)
			order by Owner, GirisTarihi
		end

			--	******	TÜM KASA ÇIKIŞLARI	*****	--

		if (@HareketTipi = -16)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -16 as TipInd, NULL as ParaBirimi, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'DÖVİZ ÇIKIŞI' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd =8) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, 0.0 as Giren, h.Tutar as Cikan, NULL AS HesapAdi, NULL AS HesapKodu, Aciklama, GirisTarihi,
					NULL AS VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd =8) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			order by Owner, GirisTarihi
		end


		if (@HareketTipi = -9)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -9 as TipInd, NULL as ParaBirimi, 0.0 as Giren, sum(Tutar) as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'CARİ NAKİT ÖDEME' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 13) AND (VardiyaKartInd IS NULL) AND (Tutar > 0) AND (KasayaIslensinMi IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, 0.0 as Giren, Tutar as Cikan, CariHesapAdi AS HesapAdi, CariHesapKodu AS HesapKodu,
					ISNULL(GiderAdi, '') + ' ' + ISNULL(Aciklama, '') AS Aciklama, GirisTarihi, NULL AS VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 13) AND (VardiyaKartInd IS NULL) AND (Tutar > 0) AND (KasayaIslensinMi IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -10)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -10 as TipInd, NULL as ParaBirimi, 0.0 as Giren, sum(CikanTutar) as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'KASA VİRMAN (ÇIKIŞ)' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, -1.0 as Carpan
			FROM	dbo.KasaVirmanHareketleri AS k WITH(NOLOCK)
			WHERE	(CikanTutar > 0) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
					and k.Owner = @SeciliSube
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, 0.0 as Giren, CikanTutar as Cikan, NULL AS HesapAdi, NULL AS HesapKodu, Aciklama, GirisTarihi,
					NULL AS VadeTarihi, NULL AS VardiyaKartInd, 0.00 AS Bakiye, -1.0 as Carpan
			FROM	dbo.KasaVirmanHareketleri AS k WITH(NOLOCK)
			WHERE	(CikanTutar > 0) and ParaBirimi=@ParaBirimi and GirisTarihi>=@BaslangicTarihi and GirisTarihi<@BitisTarihi
					and k.Owner = @SeciliSube
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -11)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -11 as TipInd, NULL as ParaBirimi, 0.0 as Giren, sum(Tutar) as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'BANKAYA ÖDEME' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN dbo.Hesaplar WITH(NOLOCK) ON dbo.Hesaplar.Ind = h.BankaHesapInd
			WHERE	(h.TipInd = 17) AND (h.VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			UNION ALL
			SELECT	h.Ind, h.Owner, h.TipInd, dbo.Hesaplar.ParaBirimi, 0.0 as Giren, Tutar as Cikan, h.BankaHesapAdi AS HesapAdi, h.BankaHesapKodu AS HesapKodu,
					h.Aciklama, h.GirisTarihi, NULL AS VadeTarihi, h.VardiyaKartInd, 0.00 AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN dbo.Hesaplar WITH(NOLOCK) ON dbo.Hesaplar.Ind = h.BankaHesapInd
			WHERE	(h.TipInd = 17) AND (h.VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			order by Owner, GirisTarihi
		end


		if (@HareketTipi = -12)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -12 as TipInd, NULL as ParaBirimi, 0.0 as Giren, sum(Tutar) as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'KASA GİDERİ' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 26) AND (VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			UNION ALL
			SELECT	h.Ind as Ind, h.Owner as Owner, h.TipInd as TipInd, h.ParaBirimi as ParaBirimi, 0.0 as Giren, h.Tutar as Cikan,
					h.GiderAdi AS HesapAdi, he.HesapKodu AS HesapKodu, h.Aciklama as Aciklama, h.GirisTarihi as GirisTarihi,
					NULL AS VadeTarihi, h.VardiyaKartInd as VardiyaKartInd, 0.00 AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK) left join Hesaplar he WITH(NOLOCK) on h.GiderInd = he.Ind
			WHERE	(h.TipInd = 26) AND (h.VardiyaKartInd IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			order by Owner, GirisTarihi
		end


		if (@HareketTipi = -13)
		begin
			SELECT	NULL AS Ind, NULL  as Owner, -13 as TipInd, NULL as ParaBirimi, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'PERSONELE ÖDEME' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h
			WHERE	(TipInd = 18) AND (VardiyaKartInd IS NULL) AND (KasayaIslensinMi IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			UNION ALL
			SELECT	Ind, Owner, TipInd, ParaBirimi, 0.0 as Giren, h.Tutar as Cikan, PersonelHesapAdi AS HesapAdi, PersonelHesapKodu AS HesapKodu, Aciklama,
					GirisTarihi, NULL AS VadeTarihi, VardiyaKartInd, 0.00 AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK)
			WHERE	(TipInd = 18) AND (VardiyaKartInd IS NULL) AND (KasayaIslensinMi IS NULL) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			order by Owner, GirisTarihi
		end

		if (@HareketTipi = -14)
		begin
			SELECT	NULL AS Ind, NULL as Owner, -14 as TipInd, NULL as ParaBirimi, 0.0 as Giren, sum(h.Tutar) as Cikan, NULL AS HesapAdi,
					NULL AS HesapKodu, 'MAAŞ ÖDEMESİ' as Aciklama, null as GirisTarihi, NULL as VadeTarihi, NULL as VardiyaKartInd, NULL AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN dbo.Basliklar WITH(NOLOCK) ON h.BaslikInd = dbo.Basliklar.Ind
			WHERE	(h.TipInd = 31) AND (dbo.Basliklar.TipInd = 107) AND (dbo.Basliklar.HesapInd IS NULL) AND (h.Tutar > 0) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			UNION ALL
			SELECT	h.Ind, h.Owner, h.TipInd, h.ParaBirimi, 0.0 as Giren, h.Tutar as Cikan, h.PersonelHesapAdi AS HesapAdi, h.PersonelHesapKodu AS HesapKodu, 
					dbo.Basliklar.Aciklama, h.GirisTarihi, NULL AS VadeTarihi, NULL AS VardiyaKartInd, 0.00 AS Bakiye, -1.0 as Carpan
			FROM	dbo.Hareketler AS h WITH(NOLOCK) LEFT OUTER JOIN dbo.Basliklar WITH(NOLOCK) ON h.BaslikInd = dbo.Basliklar.Ind
			WHERE	(h.TipInd = 31) AND (dbo.Basliklar.TipInd = 107) AND (dbo.Basliklar.HesapInd IS NULL) AND (h.Tutar > 0) and h.ParaBirimi=@ParaBirimi and h.GirisTarihi>=@BaslangicTarihi and h.GirisTarihi<@BitisTarihi
					and h.Owner = @SeciliSube
			order by Owner, GirisTarihi
		end
	end

END



GO
CREATE PROCEDURE [dbo].[KasaPasiflestirmePerformansCalismasi]
(
	@BaslikInd int, 
	@Owner int
)
AS
BEGIN
	BEGIN TRAN KasaPasiflestir;
		DELETE FROM SatisKasasi WHERE IslemInd = 0
		UPDATE H SET H.TipInd = 73
			FROM Hareketler H INNER JOIN SatisKasasi SK ON H.Ind = SK.IslemInd 
			WHERE H.Owner = @Owner AND TipInd NOT IN (81) AND SK.BaslikInd = @BaslikInd AND SK.Tablo ='Hareketler'
		UPDATE H SET H.TipInd = 72
			FROM Hareketler H INNER JOIN SatisKasasi SK ON H.PerakendeInd = SK.IslemInd 
			WHERE H.Owner = @Owner AND SK.BaslikInd = @BaslikInd AND SK.Tablo ='Hareketler'
		UPDATE Hareketler SET TipInd = 76
			FROM Hareketler WHERE Owner = @Owner AND (BaslikInd = @BaslikInd AND TipInd = 55)
		UPDATE Hareketler SET TipInd = 77
			FROM Hareketler WHERE Owner = @Owner AND (BaslikInd = @BaslikInd AND TipInd = 56)
		UPDATE Hareketler SET TipInd = 78
			FROM Hareketler WHERE Owner = @Owner AND (BaslikInd = @BaslikInd AND TipInd = 10)
		UPDATE Hareketler SET TipInd = 79
			FROM Hareketler WHERE Owner = @Owner AND (BaslikInd = @BaslikInd AND TipInd = 38)
		UPDATE Basliklar SET TipInd = 506
			FROM Basliklar WHERE Owner = @Owner AND Ind = @BaslikInd
			
	COMMIT TRAN;
END




GO
create procedure [KontrolluSayimDosyasiAyariGuncelle]
(
	@Ind int,
	@AyiriciKarakter int,
	@SiraNumarasi int,
	@AlanAdi nvarchar(50),
	@KarakterSayisi int,
	@Hizalama bit
)
AS
BEGIN
	update Ayarlar
	set
		AyiriciKarakter = @AyiriciKarakter,
		SiraNumarasi = @SiraNumarasi,
		AlanAdi = @AlanAdi,
		KarakterSayisi = @KarakterSayisi,
		Hizalama = @Hizalama
	where Ind=@Ind

	select Ind, [Owner], TipInd, AyiriciKarakter, SiraNumarasi, AlanAdi, KarakterSayisi, Hizalama
	from Ayarlar WITH(NOLOCK) where Ind=@Ind
END

GO
CREATE PROCEDURE [dbo].[KontrolluSayimDosyasiDokumuSP]
(	
	@Owner int,
	@Tarih datetime,
	@DepoInd int
)
AS
BEGIN

	select @Owner as Owner, coalesce(sd.Barkod,'') as Barkod, s.StokAdi as StokAdi,
		coalesce(dbo.SonAlisFiyati(@Owner, s.Ind, @Tarih),0.00) as AlisFiyati, dh.Miktar as Miktar,
		coalesce(sf.SatisFiyati,0.00) as SatisFiyati
	from Stoklar s WITH(NOLOCK)
	left outer join
	(
		select * from StokDetaylari WITH(NOLOCK)
		where TipInd = 502
	) as sd on s.Ind = sd.StokInd
	inner join
	(
		select StokInd,
		sum(Giren)-sum(Cikan) as Miktar
		from _DepoHareket WITH(NOLOCK)
		where DepoInd = @DepoInd and Tarih <= @Tarih
		group by StokInd
	) as dh on s.Ind = dh.StokInd
	left join
	(
		SELECT StokInd, Fiyat as SatisFiyati
		FROM
		(
			SELECT
				Ind,
				Tarih,
				StokInd,
				ROW_NUMBER() OVER(
				PARTITION BY StokInd 
				ORDER BY Tarih DESC, Ind DESC) AS Position, 
				Fiyat
			FROM SatisHareketleri WITH(NOLOCK)
			WHERE 
				Tarih <= @Tarih AND (TipInd = 504)
		) AS Result
		WHERE Position=1
	) as sf on s.Ind = sf.StokInd

END


GO
CREATE PROCEDURE CariHareketYaslandirmaListesiniVer
	@Tarih datetime
	,@CariInd nvarchar(100)
AS
BEGIN

	SET NOCOUNT ON;
	
	DECLARE @Borc DECIMAL(28, 8) 
	DECLARE @BakiyeTutari DECIMAL(28, 8) 
	DECLARE @AlacakTutari DECIMAL(28, 8) 
	DECLARE @CariKodu NVARCHAR(255)
	DECLARE @CariAdi NVARCHAR(255)
		
	SELECT 
		 @CariKodu = HesapKodu
		,@CariAdi = HesapAdi
	FROM dbo.Hesaplar WITH(NOLOCK) WHERE Ind = @CariInd


	--Alınan cekler için vadetarihi sorgu tarihinden önce ise borçlardan çıkarılacak.
	--Burada borçlardan çıkarılıcak alınan toplamına dahil etmiyorum.
	SELECT 
		 @AlacakTutari = ISNULL(SUM(CASE WHEN BorcAlacak = 'A' THEN Alacak ELSE 0 END ),0) 
		,@BakiyeTutari = ISNULL(SUM(Borc - Alacak),0)
	FROM
		CariHareketYaslandirmaListesi(@Tarih) 
	WHERE 
		CariInd = @CariInd
		AND ( CekVadeTarihi < @Tarih OR CekVadeTarihi IS NULL)
		

	
	SELECT * INTO #Sonuc FROM CariHareketYaslandirmaListesi('1960/01/01') WHERE 1 = 0
	SELECT * INTO #SonucSon FROM CariHareketYaslandirmaListesi('1960/01/01') WHERE 1 = 0
	

	INSERT INTO #Sonuc
	SELECT 
		 Ind
		,TipInd	
		,[Owner] --HareketOwner	
		,BorcAlacak	
		,Tarih
		,CariOwner 			  
		,CariKodu
		,CariAdi
		,CariInd
		,FaturaVadesi	
		,OdemeVadesi
		,Faiz
		,GecenGunSayisi
		,VadesiGecenGunSayisi
		,Aciklama
		,Borc
		,Alacak 
		,Bakiye
		,GelmeyenBorcTutari
		,GecenBorcTutari
		,VadeFarki
		,BelgeNo
		,CekVadeTarihi
	FROM
		CariHareketYaslandirmaListesi(@Tarih) 
	WHERE 
		CariInd = @CariInd
		AND BorcAlacak = 'B' 
	ORDER BY Tarih 


	--/////
	DECLARE @Ind int
	
	DECLARE kayitlar CURSOR  FOR SELECT Ind,Borc FROM #Sonuc
	OPEN kayitlar	

	FETCH NEXT FROM kayitlar INTO @Ind,@Borc
	
	WHILE (@@FETCH_STATUS = 0)
	BEGIN

		IF @AlacakTutari > 0
		BEGIN
			IF  (@Borc - @AlacakTutari) > 0
			BEGIN
				UPDATE #Sonuc SET Borc = ( @Borc - @AlacakTutari) WHERE Ind = @Ind
			END
			ELSE
			BEGIN
				--UPDATE #Sonuc SET BorcAlacak = 'C' WHERE Ind = @Ind					
				UPDATE #Sonuc SET Borc = 0 WHERE Ind = @Ind					
			END	
		END
	
		
		SET @AlacakTutari = @AlacakTutari - @Borc
		
		FETCH NEXT FROM kayitlar INTO @Ind,@Borc
	END

	CLOSE kayitlar
	DEALLOCATE kayitlar



	INSERT INTO  #Sonuc
	SELECT  
		 0--Ind	
		,0--TipInd	
		,NULL --[Owner] --HareketOwner	
		,'' --BorcAlacak	
		,'5000/01/01' --Tarih
		,NULL--CariOwner 			  
		,@CariKodu--CariKodu
		,@CariAdi--CariAdi
		,@CariInd--CariInd
		,0--FaturaVadesi	
		,0--OdemeVadesi
		,0--Faiz
		,0--GecenGunSayisi
		,0--VadesiGecenGunSayisi
		,@CariAdi--Aciklama
		,0--Borc
		,0--Alacak 
		,@BakiyeTutari--Bakiye
		,0--GelmeyenBorcTutari
		,0--GecenBorcTutari
		,0--VadeFarki
		,@CariKodu--BelgeNo
		,'5000/01/01'	--CekVadeTarihi


	

	
	DECLARE kayitlar CURSOR  FOR SELECT Ind,Borc FROM #Sonuc ORDER BY Tarih desc
	OPEN kayitlar	

	FETCH NEXT FROM kayitlar INTO @Ind,@Borc
	
	WHILE (@@FETCH_STATUS = 0)
	BEGIN
		SELECT @BakiyeTutari = @BakiyeTutari - @Borc
		
		UPDATE #Sonuc SET Bakiye = @BakiyeTutari WHERE Ind = @Ind
		

		IF (@BakiyeTutari = 0 AND @Borc = 0)
		BEGIN
			UPDATE #Sonuc SET GecenGunSayisi = -1 WHERE Ind = @Ind
		END


		FETCH NEXT FROM kayitlar INTO @Ind,@Borc
	END

	CLOSE kayitlar
	DEALLOCATE kayitlar

	INSERT INTO #SonucSon
	SELECT * FROM #Sonuc

	DELETE FROM #SonucSon WHERE GecenGunSayisi = -1

	SELECT 
		 Ind	
		,TipInd
		,[Owner] --HareketOwner	
		,BorcAlacak	
		,Tarih
		,CariOwner 			  
		,CariKodu
		,CariAdi
		,CariInd
		,FaturaVadesi	
		,OdemeVadesi
		,Faiz
		,GecenGunSayisi
		,VadesiGecenGunSayisi
		,Aciklama
		,Borc
		,Alacak 
		,Bakiye
		,GelmeyenBorcTutari
		,GecenBorcTutari
		,dbo.CariHareketGecenGunVadeTutari(Tarih,@Tarih,CariInd,Borc) VadeFarki
		--,0 VadeFarki
		,BelgeNo
		,CekVadeTarihi
	FROM  
		#SonucSon 
	ORDER BY Tarih desc


	DROP  TABLE #Sonuc	
	DROP  TABLE #SonucSon	

END
GO



	

GO
CREATE PROCEDURE [dbo].[pStokMaliyetlendir]
	  @DevirTarihi NVARCHAR(50)
	 ,@StokInd NVARCHAR(100) 
	 ,@MalMiktari DECIMAL(28,8)
AS
BEGIN
	SET NOCOUNT ON;
	
	DECLARE @_DSMMTL DECIMAL(28,8)
	SET @_DSMMTL = 0;
 
	DECLARE @_Ind Int
	DECLARE @_Fiyat DECIMAL(28,8)
	DECLARE @_Miktar DECIMAL(28,8)

	DECLARE stoklar_cursor CURSOR FOR 
		SELECT 
			Ind
			,Giren AS Miktar
			,Fiyat
		FROM 
			EnvStokMiktarlariButunViewTurev 	
		WHERE 
			( Tarih <= @DevirTarihi ) 
			AND StokInd = @StokInd --323
			AND Giren <> 0
			--AND tipIndAltHareket NOT IN (2)
		ORDER BY StokInd,Ind DESC


	OPEN stoklar_cursor;

	FETCH NEXT FROM stoklar_cursor INTO @_Ind,@_Miktar,@_Fiyat

	WHILE @@FETCH_STATUS = 0 
	BEGIN 
		IF(@MalMiktari = 0)
		BEGIN
			BREAK;
		END	
		ELSE
		BEGIN
			IF(@MalMiktari < @_Miktar)
			BEGIN
				SET @_Miktar = @MalMiktari;
			END
			
			SET @_DSMMTL = @_DSMMTL + (@_Fiyat * @_Miktar);
			SET @MalMiktari =  @MalMiktari - @_Miktar;	

		END

		FETCH NEXT FROM stoklar_cursor INTO @_Ind,@_Miktar,@_Fiyat
	END

	CLOSE stoklar_cursor
	DEALLOCATE stoklar_cursor	
	
	SELECT @_DSMMTL;

END




GO
CREATE PROCEDURE [dbo].[SayacKayitlariGetir] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@SeciliSube int
)
AS
BEGIN

	if @SeciliSube = 0
	begin
			SELECT  SayacKodu ,
					Min(SayacInd) as SayacInd,
					Min(SayacAdi) as SayacAdi,
					Min(b.Tarih) as Tarih,
					Min(Owner) as Owner,
					MIN(EskiEndeks) AS EskiEndeks,
					MIN(EskiEndeks)+SUM(YeniEndeks-EskiEndeks) AS YeniEndeks,
					SUM(Aktarma) AS Aktarma,
					SUM(YeniEndeks-EskiEndeks-Aktarma) AS Fark,
					AVG(Distinct(Fiyat))  as Fiyat,
					SUM(Tutar) as Tutar
			FROM Hareketler h WITH(NOLOCK),  (select Ind, Tarih from Basliklar where TipInd = 108) b
			WHERE h.VardiyaKartInd = b.Ind and h.TipInd = 39 and b.Tarih>=@BaslangicTarihi and b.Tarih<@BitisTarihi
				--and h.Tutar<>0	--spVardiyaEskiSayac'a göre düzenleme - Can
			GROUP BY 
					h.SayacKodu
			order by 
					SayacKodu
			
	end		

	if @SeciliSube <> 0
	begin
			SELECT  SayacKodu ,
					Min(SayacInd) as SayacInd,
					Min(SayacAdi) as SayacAdi,
					Min(b.Tarih) as Tarih,
					Min(Owner) as Owner,
					MIN(EskiEndeks) AS EskiEndeks,
					MIN(EskiEndeks)+SUM(YeniEndeks-EskiEndeks) AS YeniEndeks,
					SUM(Aktarma) AS Aktarma,
					SUM(YeniEndeks-EskiEndeks-Aktarma) AS Fark,
					AVG(Distinct(Fiyat))  as Fiyat,
					SUM(Tutar) as Tutar
			FROM Hareketler h WITH(NOLOCK),  (select Ind, Tarih from Basliklar where TipInd = 108) b
			WHERE h.VardiyaKartInd = b.Ind and h.TipInd = 39 and b.Tarih>=@BaslangicTarihi and b.Tarih<@BitisTarihi and h.Owner = @SeciliSube
				--and h.Tutar<>0	--spVardiyaEskiSayac'a göre düzenleme - Can
			GROUP BY 
					h.SayacKodu
			order by 
					SayacKodu
	end

END

GO


CREATE PROCEDURE[dbo].[spAkaryakitSatisRaporuDokumu] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@StokInd int,
	@Owner int
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	DECLARE @SQLxgroup NVARCHAR(MAX)
	DECLARE @SQLxorder NVARCHAR(MAX)
	DECLARE @SQLu nvarchar(max)
	DECLARE @SQLc nvarchar(max)

	SET @SQLx = ' select 
h.Owner, 
sb.SubeAdi,
sg.GrupAdi, 
s.Ind AS StokInd, 
s.StokKodu, 
s.StokAdi,
SUM(h.Miktar*h.Fiyat)/SUM(h.Miktar) AS OrtalamaFiyat,
SUM(h.Miktar*h.Fiyat) AS Tutar,
SUM(h.Miktar) AS Miktar
FROM SatisRaporDokumu as h WITH(NOLOCK)
INNER JOIN Subeler AS sb WITH(NOLOCK)
on h.[Owner] = sb.Ind 
INNER JOIN Stoklar AS s WITH(NOLOCK)
on h.StokInd = s.Ind
INNER JOIN StokGruplari AS sg WITH(NOLOCK)
on s.GrupInd = sg.Ind 
					WHERE 
						Miktar > 0 AND
						Tarih >= ''' + CONVERT(NVARCHAR, @BaslangicTarihi) + ''' AND 
						Tarih <= ''' + CONVERT(NVARCHAR, @BitisTarihi) + '''
						AND sg.GrupAdi = ''AKARYAKIT'''
					
IF (@Owner > 0)
		SET @SQLx = @SQLx + ' AND h.[Owner] = ' + CONVERT(NVARCHAR, @Owner) + ' '
IF (@StokInd > 0)
		SET @SQLx = @SQLx + ' AND s.Ind = ' + CONVERT(NVARCHAR, @StokInd) + ' '

		SET @SQLx = @SQLx + '
GROUP BY h.Owner, sb.SubeAdi, sg.GrupAdi, s.Ind, s.StokKodu, s.StokAdi  
order by h.Owner'
	EXEC (@SQLx)

END





GO



GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
CREATE PROCEDURE[dbo].[spAlisRaporuDokumu] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@cariInd int,
    @depoInds nvarchar(max),
    @stokInds nvarchar(max),@filter NVARCHAR(MAX)
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	DECLARE @SQLxgroup NVARCHAR(MAX)
	SET @SQLx = ' SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.GrupInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar
					,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat
					,
					0.00 as Iskonto
				  FROM AlisRaporDokumu as h1 WITH(NOLOCK)
				  WHERE  
					h1.Tarih >= ''' + CONVERT(NVARCHAR, @BaslangicTarihi) + ''' AND 
					h1.Tarih <= ''' + CONVERT(NVARCHAR, @BitisTarihi) + ''''
	SET @SQLxgroup = ' GROUP BY
						h1.Owner, h1.StokInd, h1.GrupInd, h1.StokKodu, h1.StokAdi, h1.KDVOrani'
	IF(@cariInd = 0 and @stokInds = '')
		SET @SQLx = @SQLx + ' ' + 'AND (h1.DepoInd IN (' + @depoInds + ') or h1.DepoInd is null)'
	ELSE IF(@cariInd = 0 and @stokInds != '')
		SET @SQLx = @SQLx + ' ' + 'AND (h1.DepoInd IN (' + @depoInds + ') or h1.DepoInd is null)
								   AND  h1.StokInd IN (' + @stokInds + ')'
	ELSE IF(@cariInd != 0 and @stokInds = '')
		SET @SQLx = @SQLx + ' ' + 'AND  h1.HesapInd = ' + CONVERT(NVARCHAR, @cariInd) + '
								   AND (h1.DepoInd IN (' + @depoInds + ') or h1.DepoInd is null)'
	ELSE IF(@cariInd != 0 and @stokInds != '')
		SET @SQLx = @SQLx + ' ' + 'AND h1.HesapInd = ' + CONVERT(NVARCHAR, @cariInd) + '
								   AND (h1.DepoInd IN (' + @depoInds + ') or h1.DepoInd is null)
								   AND  h1.StokInd IN (' + @stokInds + ')'
	IF(	@filter!='')
		SET @SQLx = @SQLx +' ' + @filter
	SET @SQLx = @SQLx + @SQLxgroup
	EXEC (@SQLx)
END

GO
CREATE PROCEDURE [dbo].[spAlisSatisRaporuAlisDokumu]
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@cariInd int,
	@StokTipi int,
	@KDVGrupInd int,
	@StokGrupInd int,
	@StokInd int,
	@SubeOwner int,
	@IskontoAlisFiyatiniEtkilesin int
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	DECLARE @SQLxgroup NVARCHAR(MAX)
	DECLARE @SQLxtempsatirTip NVARCHAR(MAX)
	DECLARE @SQLxtempsatirDepo NVARCHAR(MAX)
	DECLARE @SQLxtempsatirCari NVARCHAR(MAX)
	DECLARE @SQLxtempsatirStok NVARCHAR(MAX)
	SET @SQLxtempsatirDepo = 'AND (ar.DepoInd IN (SELECT Ind FROM CBDepoListesi WITH(NOLOCK)) or ar.DepoInd is null)'
	SET @SQLx =	'SELECT 
						ar.Owner, 
						ar.StokInd, 
						ar.GrupInd, 
						sg.GrupAdi,
						ar.StokKodu, 
						ar.StokAdi,
						ar.FaturaIadeMi, 
						ar.KDVOrani,						
						SUM(TUTAR) as Matrah,
						(SUM(Tutar) - SUM(ar.HareketlerIskonto + ar.HareketBaslikIskonto)) * (ar.KDVOrani / 100) as KDVTutar,
						SUM(ar.HareketlerIskonto + ar.HareketBaslikIskonto) as Iskonto,
						(SUM(TUTAR) - SUM(ar.HareketlerIskonto + ar.HareketBaslikIskonto)) * (1 + ar.KDVOrani / 100) as Tutar,
						SUM(Miktar) as Miktar,
						CASE WHEN ( SUM(Miktar)> 0) 
							THEN ((SUM(Tutar) - SUM(ar.HareketlerIskonto + ar.HareketBaslikIskonto))/SUM(Miktar)) * (1 + ar.KDVOrani / 100) 
							ELSE 0 END as OrtalamaAlisFiyati
					 FROM 
						AlisRaporDokumuView as ar WITH(NOLOCK)
						inner join StokGruplari sg WITH(NOLOCK)
						on ar.GrupInd=sg.Ind
					 WHERE  
						ar.Tarih >= ''' + CONVERT(NVARCHAR, @BaslangicTarihi) + ''' AND 
						ar.Tarih <= ''' + CONVERT(NVARCHAR, @BitisTarihi) + ''''
  
		SET @SQLxgroup = ' GROUP BY ar.Owner, ar.StokInd, ar.GrupInd,sg.GrupAdi, ar.StokKodu, ar.StokAdi, ar.KDVOrani, ar.FaturaIadeMi'
		IF (@SubeOwner IS NOT NULL)
			SET @SQLxtempsatirDepo = ' AND (ar.DepoInd IN (SELECT Ind FROM CBDepoListesi WHERE Owner = ' + CONVERT(NVARCHAR, @SubeOwner) + ') or ar.DepoInd is null) '
		SET @SQLxtempsatirCari = ' AND  ar.HesapInd = ' + CONVERT(NVARCHAR, @cariInd)
		IF (@SubeOwner IS NULL)
			SELECT TOP 1 @SubeOwner=Ind FROM Subeler WHERE IsMerkez = 1
		IF ((@StokTipi = -1 OR @StokTipi = 0) AND @StokInd = 0 AND @StokGrupInd = 0 AND @KDVGrupInd = 0)
			SET @SQLxtempsatirStok = ' AND ar.StokInd IN (SELECT Ind FROM StoklarinSubelereGoreMuhteviyatDurumu WHERE SubeOwner = ' + CONVERT(NVARCHAR, @SubeOwner) + ' AND GrupInd != 0 )'
		ELSE
			IF (@KDVGrupInd != 0)
				SET @SQLxtempsatirStok = ' AND ar.StokInd IN (SELECT Ind FROM StoklarinSubelereGoreMuhteviyatDurumu WHERE SubeOwner = ' + CONVERT(NVARCHAR, @SubeOwner) + 
				' AND SatisKDVGrupInd = ' + CONVERT(nvarchar, @KDVGrupInd) + ')'
			ELSE IF (@StokGrupInd != 0)
				SET @SQLxtempsatirStok = ' AND ar.StokInd IN (SELECT Ind FROM StoklarinSubelereGoreMuhteviyatDurumu WHERE SubeOwner = ' +CONVERT(NVARCHAR, @SubeOwner) + 
				'AND (GrupInd = '+CONVERT(NVARCHAR, @StokGrupInd)+' OR GrupInd IN (SELECT Ind FROM AlisSatis_Gruplar('+CONVERT(NVARCHAR, @StokGrupInd)+'))))'
			ELSE IF (@StokInd != 0)
				SET @SQLxtempsatirStok = ' AND ar.StokInd IN (SELECT Ind FROM StoklarinSubelereGoreMuhteviyatDurumu WHERE SubeOwner = ' +CONVERT(NVARCHAR, @SubeOwner)+
				'AND Ind = '+CONVERT(NVARCHAR, @StokInd)+')'
			ELSE IF (@StokTipi != 0)
				IF (@StokTipi = 1)
					SET @SQLxtempsatirStok = ' AND ar.StokInd IN (SELECT Ind FROM StoklarinSubelereGoreMuhteviyatDurumu WHERE SubeOwner = ' +CONVERT(NVARCHAR, @SubeOwner)+'
					AND MuhteviyatDurumu = '+CONVERT(NVARCHAR, @StokTipi)+')'
				ELSE
					SET @SQLxtempsatirStok = ' AND ar.StokInd IN (SELECT Ind FROM StoklarinSubelereGoreMuhteviyatDurumu WHERE SubeOwner = ' +CONVERT(NVARCHAR, @SubeOwner)+'
					AND MuhteviyatDurumu != 1)'
			ELSE
				SET @SQLxtempsatirStok = ' AND ar.StokInd IN (SELECT Ind FROM StoklarinSubelereGoreMuhteviyatDurumu WHERE SubeOwner = ' + CONVERT(NVARCHAR, @SubeOwner) + ')'

		IF (@cariInd=0)
			SET @SQLx = @SQLx +  @SQLxtempsatirDepo + @SQLxtempsatirStok
		ELSE 
			SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok

		SET @SQLx = @SQLx + @SQLxgroup
		EXEC (@SQLx)
		--PRINT(@SQLx)
END
GO



GO
CREATE PROCEDURE [dbo].[spAlisSatisRaporuSatisDokumu]
(
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@cariInd int,
	@StokTipi int,
	@KDVGrupInd int,
	@StokGrupInd int,
	@StokInd int,
	@SubeOwner int,
	@IskontoAlisFiyatiniEtkilesin int
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	DECLARE @SQLxgroup NVARCHAR(MAX)
	DECLARE @SQLxtempsatirTip NVARCHAR(MAX)
	DECLARE @SQLxtempsatirDepo NVARCHAR(MAX)
	DECLARE @SQLxtempsatirCari NVARCHAR(MAX)
	DECLARE @SQLxtempsatirStok NVARCHAR(MAX)
	SET @SQLxtempsatirDepo = 'AND (sr.DepoInd IN (SELECT Ind FROM CBDepoListesi) or sr.DepoInd is null)'
	SET @SQLx =	'SELECT 
						sr.Owner, 
						sr.StokInd, 
						sr.GrupInd, 
						sg.GrupAdi,
						sr.StokKodu, 
						sr.StokAdi,
						sr.FaturaIadeMi, 
						sr.KDVOrani,						
						SUM(TUTAR) as Matrah,
						(SUM(Tutar) - SUM(sr.HareketlerIskonto + sr.HareketBaslikIskonto)) * (sr.KDVOrani / 100) as KDVTutar,
						SUM(sr.HareketlerIskonto + sr.HareketBaslikIskonto) as Iskonto,
						(SUM(TUTAR) - SUM(sr.HareketlerIskonto + sr.HareketBaslikIskonto)) * (1 + sr.KDVOrani / 100) as Tutar,
						SUM(Miktar) as Miktar,
						CASE WHEN ( SUM(Miktar)> 0) 
							THEN ((SUM(Tutar) - SUM(sr.HareketlerIskonto + sr.HareketBaslikIskonto))/SUM(Miktar)) * (1 + sr.KDVOrani / 100) 
							ELSE 0 END as OrtalamaSatisFiyati
					 FROM 
						SatisRaporDokumuView as sr WITH(NOLOCK)
						inner join StokGruplari sg WITH(NOLOCK)
						on sr.GrupInd=sg.Ind
					 WHERE  
						sr.Tarih >= ''' + CONVERT(NVARCHAR, @BaslangicTarihi) + ''' AND 
						sr.Tarih <= ''' + CONVERT(NVARCHAR, @BitisTarihi) + ''''
  
		SET @SQLxgroup = ' GROUP BY sr.Owner, sr.StokInd, sr.GrupInd,sg.GrupAdi, sr.StokKodu, sr.StokAdi, sr.KDVOrani, sr.FaturaIadeMi'
		IF (@SubeOwner IS NOT NULL)
			SET @SQLxtempsatirDepo = ' AND sr.Owner = ' + CONVERT(NVARCHAR, @SubeOwner) + ' AND (sr.DepoInd IN (SELECT Ind FROM CBDepoListesi WHERE Owner = ' + CONVERT(NVARCHAR, @SubeOwner) + ') or sr.DepoInd is null) '
		SET @SQLxtempsatirCari = ' AND  sr.HesapInd = ' + CONVERT(NVARCHAR, @cariInd)
		IF (@SubeOwner IS NULL)
			SELECT TOP 1 @SubeOwner=Ind FROM Subeler WHERE IsMerkez = 1
		IF ((@StokTipi = -1 OR @StokTipi = 0) AND @StokInd = 0 AND @StokGrupInd = 0 AND @KDVGrupInd = 0)
			SET @SQLxtempsatirStok = ' AND sr.StokInd IN (SELECT Ind FROM StoklarinSubelereGoreMuhteviyatDurumu WHERE SubeOwner = ' + CONVERT(NVARCHAR, @SubeOwner) + ' AND GrupInd != 0 )'
		ELSE
			IF (@KDVGrupInd != 0)
				SET @SQLxtempsatirStok = ' AND sr.StokInd IN (SELECT Ind FROM StoklarinSubelereGoreMuhteviyatDurumu WHERE SubeOwner = ' + CONVERT(NVARCHAR, @SubeOwner) + 
				' AND SatisKDVGrupInd = ' + CONVERT(nvarchar, @KDVGrupInd) + ')'
			ELSE IF (@StokGrupInd != 0)
				SET @SQLxtempsatirStok = ' AND sr.StokInd IN (SELECT Ind FROM StoklarinSubelereGoreMuhteviyatDurumu WHERE SubeOwner = ' +CONVERT(NVARCHAR, @SubeOwner) + 
				'AND (GrupInd = '+CONVERT(NVARCHAR, @StokGrupInd)+' OR GrupInd IN (SELECT Ind FROM AlisSatis_Gruplar('+CONVERT(NVARCHAR, @StokGrupInd)+'))))'
			ELSE IF (@StokInd != 0)
				SET @SQLxtempsatirStok = ' AND sr.StokInd IN (SELECT Ind FROM StoklarinSubelereGoreMuhteviyatDurumu WHERE SubeOwner = ' +CONVERT(NVARCHAR, @SubeOwner)+
				'AND Ind = '+CONVERT(NVARCHAR, @StokInd)+')'
			ELSE IF (@StokTipi != 0)
				IF (@StokTipi = 1)
					SET @SQLxtempsatirStok = ' AND sr.StokInd IN (SELECT Ind FROM StoklarinSubelereGoreMuhteviyatDurumu WHERE SubeOwner = ' +CONVERT(NVARCHAR, @SubeOwner)+'
					AND MuhteviyatDurumu = '+CONVERT(NVARCHAR, @StokTipi)+')'
				ELSE
					SET @SQLxtempsatirStok = ' AND sr.StokInd IN (SELECT Ind FROM StoklarinSubelereGoreMuhteviyatDurumu WHERE SubeOwner = ' +CONVERT(NVARCHAR, @SubeOwner)+'
					AND MuhteviyatDurumu != 1)'
			ELSE
				SET @SQLxtempsatirStok = ' AND sr.StokInd IN (SELECT Ind FROM StoklarinSubelereGoreMuhteviyatDurumu WHERE SubeOwner = ' + CONVERT(NVARCHAR, @SubeOwner) + ')'

		IF (@cariInd=0)
			SET @SQLx = @SQLx +  @SQLxtempsatirDepo + @SQLxtempsatirStok
		ELSE 
			SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok

		SET @SQLx = @SQLx + @SQLxgroup
		EXEC (@SQLx)
		--PRINT(@SQLx)
END
GO

CREATE PROCEDURE [dbo].[spCariBakiyeListesi] 
(	
	-- Add the parameters for the function here
	@Tarih DateTime,
	@BaslangicTarihi DateTime,
	@AktifDurumu int,
	@OzelKodlar nvarchar(max),
	@SiralamaDurumu nvarchar(max),
	@CariId int,
	@Kontrol int
)

AS
BEGIN 

	--@OzelKodlar stringi parçalayıp sorguya uygun hale getiriyor
	DECLARE @sql nvarchar(max)
	DECLARE @wheresql nvarchar(max)
	DECLARE @groupsql nvarchar(max)
	
	DECLARE @NextString NVARCHAR(40)
	DECLARE @pos INT
	DECLARE @NextPos INT
	DECLARE @String NVARCHAR(40)
	DECLARE @Delimiter NVARCHAR(40)
	DECLARE @newstr nvarchar(40)

	SET @String =@OzelKodlar
	SET @Delimiter = ','
	SET @String = @String + @Delimiter
	SET @pos = charindex(@Delimiter,@String)
	set @newstr=''

	WHILE (@pos <> 0)
	BEGIN
	SET @NextString = substring(@String,1,@pos - 1)
	set @newstr=@newstr+''''+Convert(nvarchar,@NextString)+''','
	SET @String = substring(@String,@pos+1,len(@String))
	SET @pos = charindex(@Delimiter,@String)
	END 

	set @newstr= substring(@newstr, 0, (len(@newstr)))
	--------------------------------------------------------------
	
	if(@Kontrol=0)--Bakiye alanları için
		Begin
			DECLARE @ordersql nvarchar(max)

			set @sql='
				SELECT     h.Ind, h.Owner, h.HesapKodu, h.HesapAdi, SUM(c.Borc) as Borc, SUM(c.Alacak) AS Alacak ,SUM(c.Borc-c.Alacak) AS Bakiye
				FROM         dbo.Hesaplar AS h WITH(NOLOCK) LEFT OUTER JOIN
					 dbo.CariHesapHareketleri AS c WITH(NOLOCK) ON c.CariHesapInd = h.Ind'
			
			if(@AktifDurumu=1)
				set @wheresql=' Where (h.TipInd = 201) and (Aktif=1 OR Aktif IS NULL)'
			else if(@AktifDurumu=0)
				set @wheresql=' Where (h.TipInd = 201) and Aktif=0'
			else if(@AktifDurumu=2)
				set @wheresql=' Where (h.TipInd=201)'
				
			
			if(@OzelKodlar!='')
				Begin
				
				set @wheresql=@wheresql+' and OzelKodu in('+@newstr+')'
				End
				
			if(CONVERT(VARCHAR(10),@BaslangicTarihi,110)='01-01-1900')
				set @wheresql=@wheresql+' and Tarih<=''' + CONVERT(NVARCHAR, @Tarih) + ''''
			else
				set @wheresql=@wheresql+' and (Tarih<=''' + CONVERT(NVARCHAR, @Tarih) + ''' and Tarih>=''' + CONVERT(NVARCHAR, @BaslangicTarihi) + ''')'
			
			set @groupsql=' GROUP BY h.Ind, h.Owner, h.HesapKodu, h.HesapAdi'
			
			set @ordersql=' Order By '+@SiralamaDurumu+' asc'
			
			set @sql=@sql+@wheresql+@groupsql+@ordersql
		end
	else if(@Kontrol=1)--çek-nakit-banka-kredikartı ve son hesap dönemi ödeme tutarı alanları için
		Begin
			
			set @sql='select c.CariHesapInd,c.TipInd,c.Owner,h.HesapKodu, h.HesapAdi, SUM(Alacak) as Alacak
					  from CariHesapHareketleri as c WITH(NOLOCK) left outer join  Hesaplar as h WITH(NOLOCK) ON c.CariHesapInd = h.Ind'
			
			if(@AktifDurumu=1)
				set @wheresql=' Where (h.TipInd = 201) and c.TipInd in (9,10,11,12) and (Aktif=1 OR Aktif IS NULL)'
			else if(@AktifDurumu=0)
				set @wheresql=' Where (h.TipInd = 201) and c.TipInd in (9,10,11,12) and Aktif=0'
			else if(@AktifDurumu=2)
				set @wheresql=' Where (h.TipInd=201) and c.TipInd in (9,10,11,12)'
				
			set @wheresql=@wheresql+' and c.CariHesapInd='+Convert(nvarchar,@CariId)
			
			if(CONVERT(VARCHAR(10),@BaslangicTarihi,110)='01-01-1900')
				set @wheresql=@wheresql+' and Tarih<=''' + CONVERT(NVARCHAR, @Tarih) + ''''
			else
				set @wheresql=@wheresql+' and (Tarih<=''' + CONVERT(NVARCHAR, @Tarih) + ''' and Tarih>=''' + CONVERT(NVARCHAR, @BaslangicTarihi) + ''')'
				
			if(@OzelKodlar!='')
				set @wheresql=@wheresql+' and OzelKodu in('+@newstr+')'
				
			set @groupsql=' group by c.CariHesapInd,c.TipInd,c.Owner,h.HesapKodu, h.HesapAdi'
			
			set @sql=@sql+@wheresql+@groupsql
		End
	exec(@sql)
END


GO



GO
CREATE PROCEDURE [dbo].[spCariKKTahsilatListesi]  (@owner INT, @tarihBas DATETIME, @tarihBit DATETIME )

AS
	SET NOCOUNT ON;
	
    SELECT 
		H.Ind,
		H.TipInd,
		H.Owner,
		S.SubeAdi,
		H.GirisTarihi AS Tarih, 
		H.CariHesapInd, 
		H.CariHesapKodu, 
		H.CariHesapAdi,
		HS1.MuhasebeKodu AS CariMuhKodu,
		H.Aciklama,
		H.KKHesapInd,
		H.KKHesapKodu,
		H.KKHesapAdi,
		HS2.MuhasebeKodu AS KKMuhHesapKodu,
		HS3.Ind AS BankaHesapInd,
		HS3.HesapKodu AS BankaHesapKodu,
		HS3.HesapAdi AS BankaHesapAdi,
		HS3.BankaAdi,
		H.Tutar,
		H.Aktarildi
	FROM Hareketler H WITH(NOLOCK)
		INNER JOIN Hesaplar HS1 WITH(NOLOCK) ON H.CariHesapInd=HS1.Ind
		INNER JOIN Hesaplar HS2 WITH(NOLOCK) ON H.KKHesapInd = HS2.Ind
		INNER JOIN Hesaplar HS3 WITH(NOLOCK) ON HS2.BankaInd = HS3.Ind
		INNER JOIN Subeler S WITH(NOLOCK) ON H.Owner=S.Ind
	WHERE 
		H.TipInd IN (10,533) AND 
		H.CariHesapInd > 0
		AND H.GirisTarihi between @tarihBas and @tarihBit
		AND (H.Owner=@owner or @owner=-1)
		

GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
CREATE PROCEDURE[dbo].[spDonemIciAlisButun] 
(	
	@Baslangic datetime,
	@Bitis datetime,
	@DepoInds nvarchar(MAX)
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	SET @SQLx = '
				SELECT
					(
					(CASE WHEN g.NetMiktar=0 THEN g.Miktar ELSE ISNULL(g.NetMiktar,g.Miktar) END) 
						* g.Carpan * g.Fiyat) as Tutar,
					brm.BirimAdi,
					g.Owner,
					(g.Miktar * g.Carpan) as Miktar,
					g.Tarih,
					g.StokInd
				FROM
					GirisCikisHareketleri as g WITH(NOLOCK)
					LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = g.StokInd
					LEFT JOIN Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
				WHERE
					g.TipIndAltHareket = 3
					AND ''' + CONVERT(NVARCHAR, @Baslangic) + ''' <= g.Tarih
					AND g.Tarih <= ''' + CONVERT(NVARCHAR, @Bitis) + '''
				UNION ALL
				SELECT
					(g.Miktar * g.Carpan * g.Fiyat) as Tutar,
					brm.BirimAdi,
					g.Owner,
					(g.Miktar * g.Carpan) as Miktar,
					g.Tarih,
					g.StokInd
				FROM
					GirisCikisHareketleri as g WITH(NOLOCK)
					LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = g.StokInd
					LEFT JOIN Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
				WHERE
					g.TipInd IN (503) AND g.TipIndAltHareket =29
					AND ''' + CONVERT(NVARCHAR, @Baslangic) + ''' <= g.Tarih
					AND g.Tarih <= ''' + CONVERT(NVARCHAR, @Bitis) + '''
					AND g.DepoInd IN (' + @DepoInds + ')
				UNION ALL
				SELECT
					(g.Miktar * g.Carpan * (g.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WITH(NOLOCK) WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00)) / 100)))) as Tutar,
					brm.BirimAdi,
					g.Owner,
					(g.Miktar * g.Carpan) as Miktar,
					g.Tarih,
					g.StokInd
				FROM
					GirisCikisHareketleri as g  WITH(NOLOCK) LEFT OUTER JOIN
					dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = g.StokInd LEFT OUTER JOIN
					Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
				WHERE g.TipIndAltHareket = 2 
					AND g.DepoInd IN (' + @DepoInds + ')	
					AND g.Tarih >= ''' + CONVERT(NVARCHAR, @Baslangic) + '''
					AND g.Tarih <= ''' + CONVERT(NVARCHAR, @Bitis) + '''
					AND g.DurumInd != 3
				UNION ALL
				SELECT
					0 as Tutar,
					brm.BirimAdi,
					g.Owner,
					g.Giren as Miktar,
					g.Tarih,
					g.StokInd 
				FROM
					GirisCikisHareketleri as g
					LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = g.StokInd
					LEFT JOIN Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
				WHERE
					g.TipIndAltHareket = 112 
					AND g.Tarih >= ''' + CONVERT(NVARCHAR, @Baslangic) + '''
					AND g.Tarih <= ''' + CONVERT(NVARCHAR, @Bitis) + '''
				'
	EXEC (@SQLx)
END

GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
CREATE PROCEDURE[dbo].[spDonemIciSatisButun] 
(	
	@Baslangic datetime,
	@Bitis datetime,
	@DepoInds nvarchar(MAX)
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	SET @SQLx = '
						SELECT
							(g.Miktar * g.Carpan * g.Fiyat) as Tutar,
							brm.BirimAdi,
							g.Owner,
							(g.Miktar * g.Carpan) as Miktar,
							g.StokInd
							, g.TipIndAltHareket as TipInd
						FROM
							GirisCikisHareketleri as g WITH(NOLOCK)
							LEFT JOIN Stoklar as s WITH(NOLOCK) ON s.Ind = g.StokInd
							LEFT JOIN Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
						WHERE
							(g.TipIndAltHareket = 6  OR (g.TipInd =503 AND g.TipIndAltHareket=30))
							AND ''' + CONVERT(NVARCHAR, @Baslangic) + ''' <= g.Tarih AND g.Tarih <= ''' + CONVERT(NVARCHAR, @Bitis) + '''
							AND g.DepoInd IN (' + @DepoInds + ')
						UNION ALL
						SELECT
							((h.Fiyat /(1+(h.KdvOrani/100))) * (h.Fark)) as Tutar,
							NULL as BirimAdi,
							h.Owner as Owner,
							h.Fark as Miktar,
							h.StokInd
							,h.TipInd
						FROM
							EskiVardiyaSayacHareketleri as h WITH(NOLOCK)
						WHERE h.TipInd = 39
							AND h.Tarih <= ''' + CONVERT(NVARCHAR, @Bitis) + ''' AND h.Tarih >= ''' + CONVERT(NVARCHAR, @Baslangic) + '''
						UNION ALL
						SELECT
							(g.Miktar * g.Carpan * (g.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WITH(NOLOCK) WHERE h.BaslikInd=g.BaslikInd AND h.TipInd=g.TipIndAltHareket AND h.StokInd=g.StokInd), 0.00)) / 100)))) as Tutar,
							brm.BirimAdi,
							g.Owner,
							(g.Miktar * g.Carpan) as Miktar,
							g.StokInd 
							,g.TipIndAltHareket
						FROM
							GirisCikisHareketleri as g  WITH(NOLOCK) LEFT OUTER JOIN
							dbo.Stoklar AS s WITH(NOLOCK) ON s.Ind = g.StokInd LEFT OUTER JOIN
							Birimler as brm WITH(NOLOCK) ON s.AnaBirimInd = brm.Ind
						WHERE 
							g.TipIndAltHareket = 5 
							AND g.DepoInd IN (' + @DepoInds + ')	
							AND g.Tarih >= ''' + CONVERT(NVARCHAR, @Baslangic) + '''
							AND g.Tarih <= ''' + CONVERT(NVARCHAR, @Bitis) + '''
						UNION ALL
						SELECT
							((g.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h WHERE h.Ind=g.Ind), 0.00)) / 100))) * g.Miktar * g.Carpan) as Tutar,
							NULL as BirimAdi,
							g.Owner as Owner,
							(g.Miktar * g.Carpan) as Miktar,
							g.StokInd
							,g.TipIndAltHareket
						FROM
							GirisCikisHareketleri as g  WITH(NOLOCK) LEFT OUTER JOIN
							dbo.Stoklar AS s ON s.Ind = g.StokInd
						WHERE
							g.TipIndAltHareket = 40
							AND g.Tarih <= ''' + CONVERT(NVARCHAR, @Bitis) + ''' AND g.Tarih >= ''' + CONVERT(NVARCHAR, @Baslangic) + '''
						UNION ALL
						SELECT
							(h.Miktar * h.Carpan * (h.Fiyat / (1 + ((ISNULL((SELECT TOP 1 KDVOrani FROM Hareketler as h2 WHERE h2.Ind = h.Ind), 0.00)) / 100)))) as Tutar,
							NULL as BirimAdi,
							h.Owner,
							(h.Miktar * h.Carpan) as Miktar,
							h.StokInd
							,h.TipInd
						FROM
							SatisKasasi as sk WITH(NOLOCK)
							LEFT JOIN Hareketler h WITH(NOLOCK) ON h.Ind=sk.IslemInd 
							LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.PerakendeInd = h.Ind AND Hareketler.StokInd=h.StokInd
							LEFT JOIN Basliklar b WITH(NOLOCK) ON b.Ind = sk.BaslikInd
						WHERE
							h.TipInd = 504 AND sk.Tablo = ''Hareketler'' AND sk.IsYeniSatis = 0 AND b.TipInd = 505
							AND (b.Tarih >= ''' + CONVERT(NVARCHAR, @Baslangic) + '''
							AND b.Tarih <= ''' + CONVERT(NVARCHAR, @Bitis) + ''')
							AND sk.Tablo = ''Hareketler'' AND sk.IsYeniSatis = 0
				'
	EXEC (@SQLx)
END

GO
CREATE PROCEDURE[dbo].[spEskiVardiyaStokBazliSayacSatislari] 
(	
	@VardiyaKartInds nvarchar(max)
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	SET @SQLx = '
					SELECT 	
						sads.Owner,
						sads.StokInd,
						(SELECT StokAdi FROM CBStokListesi WITH(NOLOCK) WHERE Ind = sads.StokInd) AS StokAdi,
						SUM(h.YeniEndeks-h.EskiEndeks-Aktarma) AS ToplamLt,
						SUM(h.Tutar) AS ToplamTutar
					FROM
						Hareketler AS h WITH(NOLOCK)
					LEFT JOIN SayacaAitDepoStok AS sads WITH(NOLOCK) ON sads.Ind = h.SayacInd  
					WHERE h.TipInd = 39 AND  h.EskiEndeks != h.YeniEndeks AND h.VardiyaKartInd IN (' + @VardiyaKartInds + ') 
					GROUP BY 
						sads.Owner,
						sads.StokInd
				'
	EXEC (@SQLx)
END


GO



GO
CREATE PROCEDURE[dbo].[spExtraSmartGetir] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime
)
AS
BEGIN

	 SELECT
					H.Owner, 
					SUM(H.Tutar) AS Tutar,	
					H.CariHesapKodu, 
					H.CariHesapInd, 
					H.CariHesapAdi
					FROM Hareketler H  WITH(NOLOCK)
					INNER JOIN Basliklar B WITH(NOLOCK)
					ON H.VardiyaKartInd = B.Ind
					INNER JOIN Stoklar S WITH(NOLOCK)
					ON H.StokInd = S.Ind
				    WHERE H.TipInd = 13 and
					B.Tarih >=  @BaslangicTarihi and
					B.Tarih <=   @BitisTarihi
					GROUP BY H.Owner, H.CariHesapKodu,H.CariHesapInd, H.CariHesapAdi
	END
GO



GO
CREATE PROCEDURE [dbo].[spFifoDegerleriStokGruplu] ( @Owner int )
AS
BEGIN
	SET NOCOUNT ON;
	
	SELECT  S.Ind, 
			S.GrupInd, 
			SG.GrupAdi, 
			SFD.Owner, 
			SFD.TranDate, 
			SFD.LastTranDate, 
			SFD.SatirFifoDegeri AS Tutar 
	FROM Stoklar S WITH(NOLOCK)
	CROSS APPLY StokFifoDegerleri(S.Ind) AS SFD
	INNER JOIN StokGruplari SG WITH(NOLOCK) ON S.GrupInd = SG.Ind
	WHERE
			SFD.Owner = @Owner

END
GO

GO

CREATE PROCEDURE [dbo].[spGenelCekRaporu]
(
	@baslangicTarihi datetime,
	@bitisTarihi datetime,
	@bugununTarihi datetime,
	@cekIslemTipi nvarchar(100),
	@cekDurumlari nvarchar(100),
	@listelemeTipi int,
	@vadeDurumSecenekleri int,
	@enAzTutar decimal,
	@enCokTutar decimal,
	@ciroCariInd int,
	@ciroBankaInd int,
	@kaynakCariInd int,
	@kaynakBankaInd int,
	@subeInd int,
	@order nvarchar(100)
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	DECLARE @SQLListelemeTipi NVARCHAR(MAX)
	DECLARE @SQLxtempCiro NVARCHAR(MAX)
	DECLARE @SQLxtempTutarKontrol NVARCHAR(MAX)
	DECLARE @SQLxtempKaynak NVARCHAR(MAX)
	DECLARE @SQLListelemeTipiIlkSorgu NVARCHAR(MAX)
	DECLARE @SQLListelemeTipiIkinciSorgu NVARCHAR(MAX)
	DECLARE @SQLListelemeTipiIkinciSorguFiltre NVARCHAR(MAX)
	DECLARE @SQLDurumFiltresi NVARCHAR(MAX)
	DECLARE @SQLListelemeTipiIkinciSorguFiltreKaynak NVARCHAR(MAX)
	DECLARE @SQLListelemeOrder NVARCHAR(MAX)
	DECLARE @SQLSubeFilter NVARCHAR(MAX)
	DECLARE @SQLSubeFilterIkinciSorgu NVARCHAR(MAX)

	set @SQLx = ''
	set @SQLListelemeTipi = ''
	set @SQLxtempCiro = ''
	set @SQLxtempTutarKontrol =''
	set @SQLxtempKaynak = ''
	set @SQLListelemeTipiIlkSorgu = ''
	set @SQLListelemeTipiIkinciSorgu=''
	set @SQLDurumFiltresi= ''
	set @SQLListelemeTipiIkinciSorguFiltre=''
	set @SQLListelemeTipiIkinciSorguFiltreKaynak=''
	set @SQLSubeFilter=''
	set @SQLListelemeTipiIkinciSorgu=''
	set @SQLSubeFilterIkinciSorgu=''

	set @SQLListelemeOrder=' ORDER BY ' +  @order 

	IF(@subeInd > 0)
	BEGIN
	set @SQLSubeFilter= ' AND Hareketler.Owner = ' + CONVERT(NVARCHAR, @subeInd) 
	END

	--IF( (@listelemeTipi = 0 OR @listelemeTipi =1) AND (@vadeDurumSecenekleri=0 OR @vadeDurumSecenekleri=1 OR @vadeDurumSecenekleri=2 OR @vadeDurumSecenekleri=3) AND (@enAzTutar<0))
	SET @SQLx =	'SELECT 
						Hareketler.Owner as Owner,
						CekNo,
						TipInd,
						GirisTarihi,
						VadeTarihi,
						CariHesapInd,
						CariHesapKodu,
						CariHesapAdi,
						BankaHesapInd,
						BankaHesapKodu,
						BankaHesapAdi,
						CiroCariInd,
						CiroCariKodu,
						CiroCariAdi,
						CiroBankaInd,
						CiroBankaKodu,
						CiroBankaAdi, 
						CASE WHEN (TipInd = 11)
							THEN Tutar
							ELSE 0
							END as Alinan,
						CASE WHEN (TipInd = 14)
							THEN Tutar
							ELSE 0
							END as Verilen,
						Aciklama,
						BankaAciklama,
						CekSahibi,
						d.Adi as Durum,
						Hareketler.IslemTarihi
				FROM Hareketler WITH(NOLOCK)
				LEFT JOIN Durumlar AS d WITH(NOLOCK) ON d.Ind = Hareketler.DurumInd
					 WHERE Hareketler.DurumInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekDurumlari) + ''', '','')'
        

		IF (@listelemeTipi = 0) 
		BEGIN	
		    
		    SET @SQLDurumFiltresi= ')
					    AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
				 	    AND Hareketler.Senet = 0 '
        

			IF (@vadeDurumSecenekleri = 0) 
			SET @SQLListelemeTipiIlkSorgu = ' AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' AND 
											      Hareketler.GirisTarihi < ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND
											      Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '
			ELSE IF (@vadeDurumSecenekleri = 1) 
			SET @SQLListelemeTipiIlkSorgu = ' AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' AND 
											      Hareketler.GirisTarihi < ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND
											      Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '
											
			ELSE IF (@vadeDurumSecenekleri = 2) 
			SET @SQLListelemeTipiIlkSorgu = ' AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' AND 
											      Hareketler.GirisTarihi < ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND
											      Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '

			ELSE IF (@vadeDurumSecenekleri = 3) 
			SET @SQLListelemeTipiIlkSorgu = ' AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' AND 
											      Hareketler.GirisTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '	
		END			
		
		IF (@listelemeTipi = 1) 
		BEGIN	

		    SET @SQLDurumFiltresi= ')
					    AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
				 	    AND Hareketler.Senet = 0 '

			IF (@vadeDurumSecenekleri = 0) 
			SET @SQLListelemeTipiIlkSorgu = ' AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' AND 
											      Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND
											      Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '
			ELSE IF (@vadeDurumSecenekleri = 1) 
			SET @SQLListelemeTipiIlkSorgu = ' AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' AND 
											      Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND
											      Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '
											
			ELSE IF (@vadeDurumSecenekleri = 2) 
			SET @SQLListelemeTipiIlkSorgu = ' AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' AND 
											      Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND
											      Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '

			ELSE IF (@vadeDurumSecenekleri = 3) 
			SET @SQLListelemeTipiIlkSorgu = ' AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' AND 
											      Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' '
   
		END			
		
		IF (@listelemeTipi = 2)    --------DEVAM
		BEGIN	

			SET @SQLDurumFiltresi= ' where item != 4)
					    AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
				 	    AND Hareketler.Senet = 0 '

			IF(@subeInd > 0)
			BEGIN
			SET	@SQLSubeFilterIkinciSorgu=' AND Hareketler.Owner = ' + CONVERT(NVARCHAR, @subeInd) 
			END
		    
		    IF EXISTS (SELECT * FROM fnSplit(@cekDurumlari, ',') WHERE item = 4)
			SET @SQLListelemeTipi = '   UNION
										SELECT 
											Hareketler.Owner as Owner,
											CekNo,
											TipInd,
											GirisTarihi,
											VadeTarihi,
											CariHesapInd,
											CariHesapKodu,
											CariHesapAdi,
											BankaHesapInd,
											BankaHesapKodu,
											BankaHesapAdi,
											CiroCariInd,
											CiroCariKodu,
											CiroCariAdi,
											CiroBankaInd,
											CiroBankaKodu,
											CiroBankaAdi, 
											CASE WHEN (TipInd = 11)
												THEN Tutar
												ELSE 0
												END as Alinan,
											CASE WHEN (TipInd = 14)
												THEN Tutar
												ELSE 0
												END as Verilen,
											Aciklama,
											BankaAciklama,
											CekSahibi,
											''Portföyde'' as Durum,
											Hareketler.IslemTarihi
										FROM Hareketler WITH(NOLOCK)
										WHERE Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''',  '',''))	'		
										

			IF (@vadeDurumSecenekleri = 0) 
			BEGIN
			SET @SQLListelemeTipiIlkSorgu = ' AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' AND 
											      Hareketler.IslemTarihi < ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND
											      Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '
		           IF(@enAzTutar < 0) 
					BEGIN

					IF(@ciroCariInd=0 AND @ciroBankaInd=0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu = 'AND Hareketler.Senet = 0 
														AND ( ( Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND Hareketler.DurumInd != 4)												
														OR  (Hareketler.DurumInd = 4))
														AND Hareketler.GirisTarihi  <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
														AND Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '
 
                    END

					IF(@ciroCariInd > 0 AND @ciroBankaInd = 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu = 'AND Hareketler.Senet = 0
														AND  ( Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' or  Hareketler.IslemTarihi is null)
														AND Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '

					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroCariInd = ' + CONVERT(NVARCHAR, @ciroCariInd)
					END

					IF(@ciroCariInd = 0 AND @ciroBankaInd > 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu ='AND Hareketler.Senet = 0
																AND ( (Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND Hareketler.DurumInd != 4)
																OR  (Hareketler.Senet = 0
																AND Hareketler.DurumInd = 4) )
																AND Hareketler.GirisTarihi  <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
																AND Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '
					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR, @ciroBankaInd)
					END

					IF(@kaynakCariInd > 0 AND @kaynakBankaInd = 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd)
					IF(@kaynakCariInd = 0 AND @kaynakBankaInd > 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd)
					IF (@kaynakBankaInd > 0 AND @kaynakCariInd > 0)
			        SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd) +
																	 ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd) 

					END
					IF(@enAzTutar >= 0) 
					BEGIN

					IF(@ciroCariInd = 0 AND @ciroBankaInd = 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu = ' AND Hareketler.Senet = 0
														 AND Hareketler.IslemTarihi < ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
														 AND Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
														 AND Hareketler.Tutar >= ' + CONVERT(NVARCHAR, @enAzTutar) + '
														 AND Hareketler.Tutar <= ' + CONVERT(NVARCHAR, @enCokTutar)    
				    END

					IF(@ciroCariInd > 0 AND @ciroBankaInd = 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu ='AND Hareketler.Senet = 0
														AND   ( ( Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND Hareketler.DurumInd != 4)
														OR  (Hareketler.DurumInd = 4) )
														AND Hareketler.GirisTarihi  < ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
														AND Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
														AND Hareketler.Tutar >= ' + CONVERT(NVARCHAR, @enAzTutar) + '
														AND Hareketler.Tutar <= ' + CONVERT(NVARCHAR, @enCokTutar) 
					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroCariInd = ' + CONVERT(NVARCHAR, @ciroCariInd)
					END

					IF(@ciroCariInd = 0 AND @ciroBankaInd > 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu ='AND Hareketler.Senet = 0
														AND   ( ( Hareketler.IslemTarihi  >= ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND Hareketler.DurumInd != 4)
														OR  (Hareketler.DurumInd = 4) )
														AND Hareketler.GirisTarihi  <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
														AND Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
														AND Hareketler.Tutar >= ' + CONVERT(NVARCHAR, @enAzTutar) + '
														AND Hareketler.Tutar <= ' + CONVERT(NVARCHAR, @enCokTutar) 
					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR, @ciroBankaInd)
					END

					IF(@kaynakCariInd > 0 AND @kaynakBankaInd = 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd)
					IF(@kaynakCariInd = 0 AND @kaynakBankaInd > 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd)
					IF (@kaynakBankaInd > 0 AND @kaynakCariInd > 0)
			        SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd) +
																	 ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd) 
					

					END
            END 

			ELSE IF (@vadeDurumSecenekleri = 1) 	
			BEGIN
			SET @SQLListelemeTipiIlkSorgu = ' AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' AND 
											      Hareketler.IslemTarihi < ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND
											      Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '

                    IF(@enAzTutar < 0) 
					BEGIN
					IF(@ciroCariInd = 0 AND @ciroBankaInd = 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu = 'AND Hareketler.Senet = 0
														AND Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''		
														AND Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '
					END

                    IF(@ciroCariInd > 0 AND @ciroBankaInd = 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu ='AND Hareketler.Senet = 0
														AND  ( Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''	 or  Hareketler.IslemTarihi is null)	
														AND Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '
					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroCariInd = ' + CONVERT(NVARCHAR, @ciroCariInd)
					END

					IF(@ciroCariInd = 0 AND @ciroBankaInd > 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu='AND Hareketler.Senet = 0
														AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
														AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
														AND Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '
					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR, @ciroBankaInd)
					END

					IF(@kaynakCariInd > 0 AND @kaynakBankaInd = 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd)
					IF(@kaynakCariInd = 0 AND @kaynakBankaInd > 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd)
					IF (@kaynakBankaInd > 0 AND @kaynakCariInd > 0)
			        SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd) +
																	 ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd) 
					

					END

				    IF(@enAzTutar >= 0) 
					BEGIN

					IF(@ciroCariInd > 0 AND @ciroBankaInd = 0)
					BEGIN
				    SET @SQLListelemeTipiIkinciSorgu = ' AND Hareketler.Senet = 0
														 AND  ( Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' or  Hareketler.IslemTarihi is null)
														 AND Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
														 AND Hareketler.Tutar >= ' + CONVERT(NVARCHAR, @enAzTutar) + '
														 AND Hareketler.Tutar <= ' + CONVERT(NVARCHAR, @enCokTutar)   
					END

					IF(@ciroCariInd > 0 AND @ciroBankaInd = 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu ='	AND Hareketler.Senet = 0
															AND   ( ( Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND Hareketler.DurumInd != 4)
															OR  (Hareketler.Senet = 0
															AND Hareketler.DurumInd = 4) )
															AND Hareketler.GirisTarihi  <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''	
															AND Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
															AND Hareketler.Tutar >=  AND Hareketler.Tutar >= ' + CONVERT(NVARCHAR, @enAzTutar) +
															'AND Hareketler.Tutar <= AND Hareketler.Tutar <= ' + CONVERT(NVARCHAR, @enCokTutar) 
					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroCariInd = ' + CONVERT(NVARCHAR, @ciroCariInd)
					END

					IF(@ciroCariInd = 0 AND @ciroBankaInd > 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu='AND Hareketler.Senet = 0
														AND   ( ( Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND Hareketler.DurumInd != 4)
														OR  (Hareketler.Senet = 0
														AND Hareketler.DurumInd = 4) )
														AND Hareketler.GirisTarihi  <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
														AND Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
														AND Hareketler.Tutar >= ' + CONVERT(NVARCHAR, @enAzTutar) +
														'AND Hareketler.Tutar <= ' + CONVERT(NVARCHAR, @enCokTutar) 
					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR, @ciroBankaInd)
					END

				    IF(@kaynakCariInd > 0 AND @kaynakBankaInd = 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd)
					IF(@kaynakCariInd = 0 AND @kaynakBankaInd > 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd)
					IF (@kaynakBankaInd > 0 AND @kaynakCariInd > 0)
			        SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd) +
																	 ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd) 

					END
			END
											
			ELSE IF (@vadeDurumSecenekleri = 2) 
			BEGIN
			SET @SQLListelemeTipiIlkSorgu = ' AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' AND 
											      Hareketler.IslemTarihi < ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND
											      Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '


				    
			        IF(@enAzTutar < 0) 
					BEGIN

					IF(@ciroCariInd = 0 AND @ciroBankaInd = 0)
					SET @SQLListelemeTipiIkinciSorgu = ' AND Hareketler.Senet = 0
															AND  ( ( Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' or  Hareketler.IslemTarihi is null) or  Hareketler.IslemTarihi is null)		
															AND Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '

					IF(@ciroCariInd > 0 AND @ciroBankaInd = 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu = ' AND Hareketler.Senet = 0
														 AND  ( Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' or  Hareketler.IslemTarihi is null)
														 AND Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '

					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroCariInd = ' + CONVERT(NVARCHAR, @ciroCariInd)
					END

					IF(@ciroCariInd = 0 AND @ciroBankaInd > 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu = ' AND Hareketler.Senet = 0
															AND ( ( Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND Hareketler.DurumInd != 4)
															OR  (Hareketler.Senet = 0
															AND Hareketler.DurumInd = 4) )
															AND Hareketler.GirisTarihi  <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
															AND Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' '
														

					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR, @ciroBankaInd)
					END

					IF(@kaynakCariInd > 0 AND @kaynakBankaInd = 0)	
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd)

					IF(@kaynakCariInd = 0 AND @kaynakBankaInd > 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd)

					IF (@kaynakBankaInd > 0 AND @kaynakCariInd > 0)
			        SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd) +
																	 ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd) 

					END
					IF(@enAzTutar >= 0) 
					BEGIN

					IF(@ciroCariInd = 0 AND @ciroBankaInd = 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu = 'AND Hareketler.Senet = 0
															AND Hareketler.IslemTarihi < ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
															AND Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
															AND Hareketler.Tutar >= ' + CONVERT(NVARCHAR, @enAzTutar) +
															' AND Hareketler.Tutar <= ' + CONVERT(NVARCHAR, @enCokTutar)
														
			        END
			
					IF(@ciroCariInd > 0 AND @ciroBankaInd = 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu = 'AND Hareketler.Senet = 0
														AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
														AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
														AND Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
														AND Hareketler.Tutar >= ' + CONVERT(NVARCHAR, @enAzTutar) + 
														' AND Hareketler.Tutar <= ' + CONVERT(NVARCHAR, @enCokTutar) 
														
					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroCariInd = ' + CONVERT(NVARCHAR, @ciroCariInd)
					END

					IF(@ciroCariInd = 0 AND @ciroBankaInd > 0)

					BEGIN
					SET @SQLListelemeTipiIkinciSorgu ='AND Hareketler.Senet = 0
														AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
														AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
														AND Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
														AND Hareketler.Tutar >= ' + CONVERT(NVARCHAR, @enAzTutar) + 
														' AND Hareketler.Tutar <= ' + CONVERT(NVARCHAR, @enCokTutar)

					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR, @ciroBankaInd) 
					END
					
					IF(@kaynakCariInd > 0 AND @kaynakBankaInd = 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd)

					IF(@kaynakCariInd = 0 AND @kaynakBankaInd > 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd)

					IF (@kaynakBankaInd > 0 AND @kaynakCariInd > 0)
			        SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd) +
																	 ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd) 
					
		    END        
	        
			END

			ELSE IF (@vadeDurumSecenekleri = 3) 
			BEGIN
			SET @SQLListelemeTipiIlkSorgu = ' AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' AND 
											      Hareketler.IslemTarihi < ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' '

					IF(@enAzTutar < 0) 
					BEGIN
					IF(@ciroCariInd = 0 AND @ciroBankaInd = 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu = 'AND   ( ( Hareketler.IslemTarihi  >= ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND Hareketler.DurumInd != 4)
															OR  (Hareketler.DurumInd = 4))
															AND Hareketler.Senet = 0
															AND Hareketler.GirisTarihi  < ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' '
			        END

					IF(@ciroCariInd > 0 AND @ciroBankaInd = 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu = 'AND Hareketler.Senet = 0
														AND ((Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND Hareketler.DurumInd != 4)
														OR  (Hareketler.Senet = 0
														AND Hareketler.DurumInd = 4))
														AND Hareketler.GirisTarihi  <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' '
					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroCariInd = ' + CONVERT(NVARCHAR, @ciroCariInd)

					END

					IF(@ciroCariInd = 0 AND @ciroBankaInd > 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu =' AND Hareketler.Senet = 0
														AND   ( ( Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND Hareketler.DurumInd != 4)
														OR  (Hareketler.Senet = 0
														AND Hareketler.DurumInd = 4) )
														AND Hareketler.GirisTarihi  <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' '

					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR, @ciroBankaInd)

					END

					IF(@kaynakCariInd > 0 AND @kaynakBankaInd = 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd)
					IF(@kaynakCariInd = 0 AND @kaynakBankaInd > 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd)
					IF (@kaynakBankaInd > 0 AND @kaynakCariInd > 0)
			        SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd) +
																	 ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd) 

			        END

					IF(@enAzTutar >= 0) 
					BEGIN
				

					IF(@ciroCariInd = 0 AND @ciroBankaInd = 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu ='AND Hareketler.Senet = 0
															AND (Hareketler.IslemTarihi  >=   ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' or  Hareketler.IslemTarihi is null)
															AND Hareketler.Tutar >= ' + CONVERT(NVARCHAR, @enAzTutar) +
													      ' AND Hareketler.Tutar <= ' + CONVERT(NVARCHAR, @enCokTutar) 
					END

					IF(@ciroCariInd > 0 AND @ciroBankaInd = 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu = 'AND Hareketler.Senet = 0
																AND   ( ( Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND Hareketler.DurumInd != 4)
																OR  (Hareketler.Senet = 0
																AND Hareketler.DurumInd = 4) )
																AND Hareketler.GirisTarihi  <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
																AND Hareketler.Tutar >= ' + CONVERT(NVARCHAR, @enAzTutar) + '
																AND Hareketler.Tutar <= ' + CONVERT(NVARCHAR, @enCokTutar) 

					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroCariInd = ' + CONVERT(NVARCHAR, @ciroCariInd)
					END

					IF(@ciroCariInd = 0 AND @ciroBankaInd > 0)
					BEGIN
					SET @SQLListelemeTipiIkinciSorgu= 'AND Hareketler.Senet = 0
																AND   ( ( Hareketler.IslemTarihi  >=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' AND Hareketler.DurumInd != 4)
																OR  (Hareketler.Senet = 0
																AND Hareketler.DurumInd = 4) )
																AND Hareketler.GirisTarihi  <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
																AND Hareketler.Tutar >= ' + CONVERT(NVARCHAR, @enAzTutar) + '
																AND Hareketler.Tutar <= ' + CONVERT(NVARCHAR, @enCokTutar) 
					SET @SQLListelemeTipiIkinciSorguFiltre = ' AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR, @ciroBankaInd) 
					END

					IF(@kaynakCariInd > 0 AND @kaynakBankaInd = 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd)

					IF(@kaynakCariInd = 0 AND @kaynakBankaInd > 0)
					SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd)

					IF (@kaynakBankaInd > 0 AND @kaynakCariInd > 0)
			        SET @SQLListelemeTipiIkinciSorguFiltreKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd) +
																	 ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd) 
					END
			END					
			
		END 													   

		
		
		IF (@enAzTutar >= 0)
			SET @SQLxtempTutarKontrol =   ' AND Hareketler.Tutar >= ' + CONVERT(NVARCHAR, @enAzTutar) +
									      ' AND Hareketler.Tutar <= ' + CONVERT(NVARCHAR, @enCokTutar) 

	    IF (@ciroCariInd > 0 AND @ciroBankaInd = 0)	--AND @ciroBankaInd = 0)
			SET @SQLxtempCiro =          ' AND Hareketler.CiroCariInd = ' + CONVERT(NVARCHAR, @ciroCariInd)

        IF (@ciroBankaInd > 0 AND @ciroCariInd = 0)  --AND @ciroCariInd = 0)
			SET @SQLxtempCiro =          ' AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR, @ciroBankaInd)

		IF (@ciroBankaInd > 0 AND @ciroCariInd > 0)
		BEGIN
			
			IF(@listelemeTipi = 0 AND @vadeDurumSecenekleri = 0)
			SET @SQLxtempCiro = 'AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
											AND Hareketler.GirisTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
											AND Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 7
											AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR,@ciroBankaInd) +
											'AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''  
											AND Hareketler.GirisTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' ) 
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 6
											AND Hareketler.CiroCariInd = ''' +  CONVERT(NVARCHAR,@ciroCariInd) + ''')
											AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''  
											AND Hareketler.GirisTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' )  '

			ELSE IF(@listelemeTipi = 0 AND @vadeDurumSecenekleri = 1)
			SET @SQLxtempCiro = 'AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
											AND Hareketler.GirisTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
											AND Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
										    OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 7
											AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR,@ciroBankaInd) +
											'AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
											AND Hareketler.GirisTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' ) 
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 6
											AND Hareketler.CiroCariInd = ''' +  CONVERT(NVARCHAR,@ciroCariInd) + ''')
											AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
											AND Hareketler.GirisTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' )  '

			ELSE IF(@listelemeTipi = 0 AND @vadeDurumSecenekleri = 2)
			SET @SQLxtempCiro = 'AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
											AND Hareketler.GirisTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
											AND Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 7
											AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR,@ciroBankaInd) +
											'AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
											AND Hareketler.GirisTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
											AND Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' ) 
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 6
											AND Hareketler.CiroCariInd = ''' +  CONVERT(NVARCHAR,@ciroCariInd) + ''')
											AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
											AND Hareketler.GirisTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' )  '

			ELSE IF(@listelemeTipi = 0 AND @vadeDurumSecenekleri = 3)
			SET @SQLxtempCiro = 'AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
											AND Hareketler.GirisTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
										    OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 7
											AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR,@ciroBankaInd) +
											'AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''  
											AND Hareketler.GirisTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 6
											AND Hareketler.CiroCariInd = ''' +  CONVERT(NVARCHAR,@ciroCariInd) + ''')
											AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.GirisTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
											AND Hareketler.GirisTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''') '

			ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 0)
            SET @SQLxtempCiro = 'AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
											AND Hareketler.VadeTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
											AND Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 7
											AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR,@ciroBankaInd) +
											'AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''  
											AND Hareketler.VadeTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' ) 
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 6
											AND Hareketler.CiroCariInd = ''' +  CONVERT(NVARCHAR,@ciroCariInd) + ''')
											AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
											AND Hareketler.VadeTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.VadeTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' )  '

			ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 1)
            SET @SQLxtempCiro = 'AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
											AND Hareketler.VadeTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
											AND Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 7
											AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR,@ciroBankaInd) +
											'AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''  
											AND Hareketler.VadeTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' ) 
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 6
											AND Hareketler.CiroCariInd = ''' +  CONVERT(NVARCHAR,@ciroCariInd) + ''')
											AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''  
											AND Hareketler.VadeTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.VadeTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' )  '

			ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 2)
            SET @SQLxtempCiro = 'AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
											AND Hareketler.VadeTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
											AND Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 7
											AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR,@ciroBankaInd) +
											'AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''  
											AND Hareketler.VadeTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' ) 
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 6
											AND Hareketler.CiroCariInd = ''' +  CONVERT(NVARCHAR,@ciroCariInd) + ''')
											AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''  
											AND Hareketler.VadeTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' )  '

			ELSE IF(@listelemeTipi = 1 AND @vadeDurumSecenekleri = 3)
            SET @SQLxtempCiro = 'AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
											AND Hareketler.VadeTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 7
											AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR,@ciroBankaInd) +
											'AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''  
											AND Hareketler.VadeTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.VadeTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' ) 
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 6
											AND Hareketler.CiroCariInd = ''' +  CONVERT(NVARCHAR,@ciroCariInd) + ''')
											AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.VadeTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''  
											AND Hareketler.VadeTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' )  '

			ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 0)
			SET	@SQLxtempCiro =	'AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
											AND Hareketler.IslemTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 7
											AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR,@ciroBankaInd) +
											'AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''  
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.IslemTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' ) 
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 6
											AND Hareketler.CiroCariInd = ''' +  CONVERT(NVARCHAR,@ciroCariInd) + ''')
											AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.IslemTarihi < ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' )'

			ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 1)
			SET	@SQLxtempCiro =	'AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
											AND Hareketler.IslemTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 7
											AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR,@ciroBankaInd) +
											'AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''  
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.IslemTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' ) 
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 6
											AND Hareketler.CiroCariInd = ''' +  CONVERT(NVARCHAR,@ciroCariInd) + ''')
											AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.IslemTarihi = ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' )'

		    ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2)
			SET	@SQLxtempCiro =	'AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
											AND Hareketler.IslemTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 7
											AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR,@ciroBankaInd) +
											'AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.IslemTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' ) 
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 6
											AND Hareketler.CiroCariInd = ''' +  CONVERT(NVARCHAR,@ciroCariInd) + ''')
											AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.IslemTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' )'

		 ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 2)
			SET	@SQLxtempCiro =	'AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
											AND Hareketler.IslemTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + '''
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 7
											AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR,@ciroBankaInd) +
											'AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.IslemTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' ) 
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 6
											AND Hareketler.CiroCariInd = ''' +  CONVERT(NVARCHAR,@ciroCariInd) + ''')
											AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
											AND Hareketler.IslemTarihi > ''' + CONVERT(NVARCHAR, @bugununTarihi) + ''' )'

			ELSE IF(@listelemeTipi = 2 AND @vadeDurumSecenekleri = 3)
			SET	@SQLxtempCiro =	'AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + '''
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 7
											AND Hareketler.CiroBankaInd = ' + CONVERT(NVARCHAR,@ciroBankaInd) +
											'AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' ) 
											OR (Hareketler.Senet = 0
											AND Hareketler.DurumInd = 6
											AND Hareketler.CiroCariInd = ''' +  CONVERT(NVARCHAR,@ciroCariInd) + ''')
											AND Hareketler.TipInd IN (SELECT * FROM fnSplit(''' + CONVERT(NVARCHAR,@cekIslemTipi) + ''', '',''))
											AND Hareketler.IslemTarihi >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + '''  
											AND Hareketler.IslemTarihi <  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' )'

		END

        IF (@kaynakCariInd >0 AND @kaynakBankaInd = 0)
			SET @SQLxtempKaynak =   ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd) 

	    IF (@kaynakBankaInd > 0 AND @kaynakCariInd = 0)
			SET @SQLxtempKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd) 

		IF (@kaynakBankaInd > 0 AND @kaynakCariInd > 0)
			SET @SQLxtempKaynak = ' AND Hareketler.BankaHesapInd = ' + CONVERT(NVARCHAR, @kaynakBankaInd) +
								   ' AND Hareketler.CariHesapInd = ' + CONVERT(NVARCHAR, @kaynakCariInd) 

		
		SET @SQLx = @SQLx +@SQLDurumFiltresi + @SQLListelemeTipiIlkSorgu + @SQLxtempTutarKontrol + @SQLxtempCiro  + @SQLxtempKaynak +@SQLSubeFilter + @SQLListelemeTipi 
		 +@SQLListelemeTipiIkinciSorgu +@SQLListelemeTipiIkinciSorguFiltre+ @SQLListelemeTipiIkinciSorguFiltreKaynak  +@SQLSubeFilterIkinciSorgu+ @SQLListelemeOrder

		--SET @SQLx = @SQLx + @SQLxgroup
		EXEC (@SQLx)
		--PRINT(@SQLx)
END

GO
-- ======================================================
-- Author:		Dilsad
-- Create date: 03.09.2013
-- Description:	Sistemdeki son vardiya detayını listeler.
-- ======================================================
CREATE PROCEDURE [dbo].[spGetSonVardiya]  

AS
BEGIN
	SET NOCOUNT ON;
	
    SELECT S.SubeAdi, MAX(B.Tarih) AS SonVardiyaTarihi, MAX(B.VardiyaNo) AS SonVardiyaNo
	FROM Basliklar B INNER JOIN Subeler S ON B.Owner = S.Ind
	WHERE B.TipInd = 108
	GROUP BY B.Owner, S.SubeAdi
	ORDER BY B.Owner
END

GO
CREATE PROCEDURE [dbo].[spGirisCikisHareketleriToplamlari]
(
	@baslangicTarihi DATETIME,@bitisTarihi DATETIME,@stokInd INT, @depoInds NVARCHAR(MAX),@filter NVARCHAR(MAX)
)
AS
BEGIN 
--SET @BitisTarihi= DATEADD(day,1,@BitisTarihi)
DECLARE @GenelSayi int SET @GenelSayi=null;
DECLARE @aktif bit;
DECLARE @aktifHepsi int SET @aktifHepsi=0;

	--DECLARE @GenelSayi int = null;
	--DECLARE @aktif bit;
	--DECLARE @aktifHepsi int=0;

	--pasif stok kartları gösterilmesin seçili ise pasif stok kartlarının gösterilmesi engelleniyor
	SELECT @GenelSayi = GenelSayi FROM Ayarlar WITH(NOLOCK) WHERE TipInd = 524
	IF (@GenelSayi = 1) SET @aktif = 1
	ELSE SET @aktifHepsi = -1


	SELECT SUM(Giren) AS Giren, SUM(Cikan) AS Cikan, GCH.Owner
	FROM GirisCikisHareketleri GCH inner join Stoklar st WITH(NOLOCK) ON st.Ind=GCH.StokInd
	WHERE GCH.Tarih>= @baslangicTarihi AND GCH.Tarih<=@bitisTarihi 
		AND (GCH.DepoInd IN ( @depoInds ) OR @depoInds = '0') -- OR @depoInds != '' OR @depoInds = '0')
		AND (GCH.StokInd = @stokInd OR @stokInd = 0 )
		AND (st.Aktif=@aktif or @aktifHepsi=-1) 
	GROUP BY GCH.Owner


/*
	IF(@stokInd > 0 AND @depoInds != '0' AND @depoInds != '')
		BEGIN
			SET @SQLx = '
			SELECT SUM(GCH.Giren) Giren,SUM(GCH.Cikan) Cikan,GCH.Owner 
						FROM GirisCikisHareketleri GCH INNER JOIN Stoklar ST ON ST.Ind=GCH.StokInd						
						WHERE GCH.Tarih>= '''+CONVERT(VARCHAR,@baslangicTarihi)+''' AND GCH.Tarih<='''+CONVERT(VARCHAR,@bitisTarihi)+''' 
						AND GCH.StokInd='+CONVERT(VARCHAR,@stokInd)+' AND GCH.DepoInd IN ( ' + @depoInds +' )
						AND (ST.Aktif='+CONVERT(VARCHAR,@aktif)+' or '+CONVERT(VARCHAR,@aktifHepsi)+'=-1)'
			IF(	@filter!='')
				SET @SQLx = @SQLx +' ' + @filter
			SET @SQLx = @SQLx +' GROUP BY GCH.Owner' 
			--PRINT @SQLx
			--INSERT INTO @tblHareketler EXEC (@SQLx )
		END
	ELSE IF(@stokInd>0)
		BEGIN
			SET @SQLx = '
			SELECT SUM(GCH.Giren) Giren,SUM(GCH.Cikan) Cikan,GCH.Owner 
						FROM GirisCikisHareketleri GCH INNER JOIN Stoklar ST ON ST.Ind=GCH.StokInd					
						WHERE GCH.Tarih>= '''+CONVERT(VARCHAR,@baslangicTarihi)+''' AND GCH.Tarih<='''+CONVERT(VARCHAR,@bitisTarihi)+''' 
						AND GCH.StokInd='+CONVERT(VARCHAR,@stokInd)+'
						AND (ST.Aktif='+CONVERT(VARCHAR,@aktif)+' or '+CONVERT(VARCHAR,@aktifHepsi)+'=-1)'
			IF(	@filter!='')
				SET @SQLx = @SQLx +' ' + @filter
			SET @SQLx = @SQLx +' GROUP BY GCH.Owner' 
			--PRINT @SQLx
			--INSERT INTO @tblHareketler EXEC (@SQLx )
		END
	ELSE
		BEGIN
			SET @SQLx = ' 
			SELECT SUM(GCH.Giren) Giren, SUM(GCH.Cikan) Cikan, GCH.Owner AS Owner
						FROM GirisCikisHareketleri GCH INNER JOIN Stoklar AS xSx ON xSx.Ind = GCH.StokInd
						WHERE GCH.Tarih>= '''+CONVERT(VARCHAR,@baslangicTarihi)+''' AND  
						GCH.Tarih<='''+CONVERT(VARCHAR,@bitisTarihi)+'''  AND GCH.DepoInd IN ( ' + @depoInds +' )
						AND (xSx.Aktif='+CONVERT(VARCHAR,@aktif)+' or '+CONVERT(VARCHAR,@aktifHepsi)+'=-1)'
			IF(	@filter!='')
				SET @SQLx = @SQLx +' ' + @filter
			SET @SQLx = @SQLx +' GROUP BY GCH.Owner' 
			--PRINT @SQLx
			--INSERT INTO @tblHareketler EXEC (@SQLx )
		END
	--Print @SQLx
	EXEC ( @SQLx )
*/
END




GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
CREATE PROCEDURE[dbo].[spGirisCikisHareketleriToplamlariDepoDevir] 
(	
	@DepoInd INT
	, @baslangicTarihi DATETIME
	, @bitisTarihi DATETIME
	, @TipInds VARCHAR(MAX)
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	DECLARE @SQLxwhere NVARCHAR(MAX)
	DECLARE @SQLxgroup NVARCHAR(MAX)
	IF @DepoInd != 0
		BEGIN
			SET @SQLx = '
				SELECT 
					Owner, '+CONVERT(NVARCHAR, @DepoInd)+' as DepoInd
					, SUM(Giren - Cikan) AS Devir
				FROM GirisCikisHareketleri  WITH(NOLOCK)
			'

			SET @SQLxgroup = '
								GROUP BY 
									Owner
							 '
			SET @SQLxwhere = '
									WHERE 
										Tarih <= ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
										AND DepoInd = ' + CONVERT(NVARCHAR, @DepoInd) + ' 
							 '
			IF(@TipInds IS NULL)
				BEGIN
					IF(@baslangicTarihi IS NULL)
						BEGIN
							SET @SQLx = @SQLx + @SQLxwhere
						END
					ELSE
						BEGIN
							SET @SQLxwhere = '
												WHERE 
													Tarih >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
													AND Tarih <=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
													AND DepoInd = ' + CONVERT(NVARCHAR, @DepoInd) + ' 
											 '
							SET @SQLx = @SQLx + @SQLxwhere
						END
				END
			ELSE
				BEGIN
					IF(@baslangicTarihi IS NULL)
						BEGIN
							SET @SQLxwhere = '
												WHERE 
													Tarih <= ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
													AND DepoInd = ' + CONVERT(NVARCHAR, @DepoInd) + ' 
													AND ' + @TipInds + ' 
											 '
							SET @SQLx = @SQLx + @SQLxwhere
						END
					ELSE
						BEGIN
							SET @SQLxwhere = '
												WHERE 
													Tarih >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
														AND Tarih <=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
														AND DepoInd = ' + CONVERT(NVARCHAR, @DepoInd) + ' 
														AND ' + @TipInds + ' 
											 '
							SET @SQLx = @SQLx + @SQLxwhere
						END
				END
		END
	ELSE
	BEGIN
		SET @SQLx = '
				SELECT 
					Owner, DepoInd
					, SUM(Giren - Cikan) AS Devir
				FROM GirisCikisHareketleri WITH(NOLOCK)
			'

		SET @SQLxgroup = '
							GROUP BY 
								Owner, DepoInd
						 '

		SET @SQLxwhere = '
							WHERE 
								Tarih <= ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
					     '
		IF(@TipInds IS NULL)
			BEGIN
				IF(@baslangicTarihi IS NULL)
					BEGIN
						SET @SQLx = @SQLx + @SQLxwhere
					END
				ELSE
					BEGIN
						SET @SQLxwhere = '
											WHERE 
												Tarih >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
												AND Tarih <=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
										 '
						SET @SQLx = @SQLx + @SQLxwhere
					END
			END
		ELSE
			BEGIN
				IF(@baslangicTarihi IS NULL)
					BEGIN
						SET @SQLxwhere = '
											WHERE 
												Tarih <= ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
												AND ' + @TipInds + ' 
										 '
						SET @SQLx = @SQLx + @SQLxwhere
					END
				ELSE
					BEGIN
						SET @SQLxwhere = '
											WHERE 
												Tarih >= ''' + CONVERT(NVARCHAR, @baslangicTarihi) + ''' 
													AND Tarih <=  ''' + CONVERT(NVARCHAR, @bitisTarihi) + ''' 
													AND ' + @TipInds + ' 
										 '
						SET @SQLx = @SQLx + @SQLxwhere
					END
			END
	END
	
	SET @SQLx = @SQLx + @SQLxgroup
	EXEC (@SQLx)
END

GO
CREATE PROCEDURE[dbo].[spKarZararDonemBasiSonuIslemler] 
(	
	@Owner int, 
	@BaslangicTarihi datetime,
    @BitisTarihi datetime
)
AS
BEGIN

DECLARE @SQLx NVARCHAR(MAX)
DECLARE @SQLxgroup NVARCHAR(MAX)
DECLARE @MaliyetHesabi int

select @MaliyetHesabi = GenelSayi FROM Ayarlar where TipInd = 311

IF(@MaliyetHesabi = 1)
SET @SQLx = '
WITH 
	DBMM(StokInd, DBMMiktari, DBMMaliyeti) AS 
      (
           select StokInd, DSMMiktari, DSMMaliyeti FROM KarZararFIFOAlisFiyati('+ CONVERT(NVARCHAR, @Owner) +', '''+ CONVERT(NVARCHAR,@BaslangicTarihi) + ''', 0)
      ),
	   
	DSMM(StokInd, DSMMiktari, DSMMaliyeti) AS 
      (
           select StokInd, DSMMiktari, DSMMaliyeti FROM KarZararFIFOAlisFiyati('+CONVERT(NVARCHAR, @Owner)+', '''+ CONVERT(NVARCHAR,@BitisTarihi) + ''', 1)
      )

'
ELSE
SET @SQLx = '
WITH 
	DBMM(StokInd, DBMMiktari, DBMMaliyeti) AS 
      (
           select StokInd, DSMMiktari, DSMMaliyeti FROM KarZararLIFOAlisFiyati('+ CONVERT(NVARCHAR, @Owner)+', '''+ CONVERT(NVARCHAR,@BaslangicTarihi) + ''', 0)
      ),
	   
	DSMM(StokInd, DSMMiktari, DSMMaliyeti) AS 
      (
           select StokInd, DSMMiktari, DSMMaliyeti FROM KarZararLIFOAlisFiyati('+CONVERT(NVARCHAR, @Owner)+', '''+ CONVERT(NVARCHAR,@BitisTarihi) + ''', 1)
      )

'

SET @SQLx = @SQLx + ' SELECT NULL AS Owner, d1.StokInd, d1.DBMMiktari, d1.DBMMaliyeti,
	  d2.DSMMiktari, d2.DSMMaliyeti
	  FROM DBMM d1 
	  inner join DSMM d2 on d1.StokInd = d2.StokInd
'

EXEC (@SQLx)

END
GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
CREATE PROCEDURE[dbo].[spMarketNakitTahsilatListesi] 
(
	@baslikInds nvarchar(MAX)
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	SET @SQLx = '
				SELECT
					Owner,
					Parabirimi,
					Kur,
					SUM(h.Tutar * h.Kur) as Tutar
				FROM 
					Hareketler as h WITH(NOLOCK)
				WHERE 
					TipInd = 38 AND ' + @baslikInds + '
					AND h.VardiyaKartInd = 0
				GROUP BY
					h.Owner,
					h.ParaBirimi,
					h.Kur
				'
	EXEC (@SQLx)
END

GO
CREATE PROCEDURE[dbo].[spPerakendeSatisRaporuDokumu] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@StokInd int,
	@StokGrupInd int,
	@Owner int
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	DECLARE @SQLxgroup NVARCHAR(MAX)
	DECLARE @SQLxorder NVARCHAR(MAX)
	DECLARE @SQLu nvarchar(max)
	DECLARE @SQLc nvarchar(max)

	SET @SQLx = ' SELECT 
						H.Owner,
						Sb.SubeAdi, 
						SG.GrupAdi, 
						H.StokInd, 
						S.StokKodu, 
						S.StokAdi, 
						S.MuhasebeKodu, 
						SUM(H.Miktar) AS Miktar, 
						SUM(H.Miktar*H.Fiyat)/SUM(H.Miktar) AS OrtalamaFiyat,
						SUM(H.Miktar*H.Fiyat) AS Tutar
					FROM GirisCikisHareketleri H WITH(NOLOCK)
					INNER JOIN Subeler Sb WITH(NOLOCK) ON H.Owner = Sb.Ind
					INNER JOIN Stoklar S WITH(NOLOCK) ON H.StokInd = S.Ind
					INNER JOIN StokGruplari SG WITH(NOLOCK) ON S.GrupInd = SG.Ind
					WHERE 
						TipInd = 504 AND 
						Miktar > 0 AND
						Tarih >= ''' + CONVERT(NVARCHAR, @BaslangicTarihi) + ''' AND 
						Tarih <= ''' + CONVERT(NVARCHAR, @BitisTarihi) + ''''
	SET @SQLu = ' UNION ALL '
	SET @SQLc = ' SELECT 
						H.Owner,
						Sb.SubeAdi, 
						SG.GrupAdi, 
						H.StokInd, 
						S.StokKodu, 
						S.StokAdi,
						S.MuhasebeKodu, 						
						SUM(H.Miktar) AS Miktar, 
						SUM(H.Miktar*H.Fiyat)/SUM(H.Miktar) AS OrtalamaFiyat, 
						SUM(H.Miktar*H.Fiyat) AS Tutar
					FROM GirisCikisHareketleri H WITH(NOLOCK)
					INNER JOIN Subeler Sb WITH(NOLOCK) ON H.Owner = Sb.Ind
					INNER JOIN Stoklar S WITH(NOLOCK) ON H.StokInd = S.Ind
					INNER JOIN StokGruplari SG WITH(NOLOCK) ON S.GrupInd = SG.Ind
					WHERE
						HesapAdi = ''IBMPOS'' AND
						TipIndAltHareket = 5 AND 
						Miktar > 0 AND
						Tarih >= ''' + CONVERT(NVARCHAR, @BaslangicTarihi) + ''' AND 
						Tarih <= ''' + CONVERT(NVARCHAR, @BitisTarihi) + ''''
	
	SET @SQLxgroup = ' GROUP BY
						H.Owner,
						Sb.SubeAdi, 
						SG.GrupAdi, 
						H.StokInd, 
						S.StokKodu, 
						S.StokAdi,
						S.MuhasebeKodu
					 '
	SET @SQLxorder = ' ORDER BY
						Sb.SubeAdi, 
						SG.GrupAdi,
						S.StokKodu
					 '
IF (@Owner = 0 AND @StokGrupInd != 0 AND @StokInd = 0)
		SET @SQLx = @SQLx + ' AND SG.Ind = ' + CONVERT(NVARCHAR, @StokGrupInd) + ' '
IF (@Owner = 0 AND @StokGrupInd = 0 AND @StokInd != 0)
		SET @SQLx = @SQLx + ' AND H.StokInd = ' + CONVERT(NVARCHAR, @StokInd) + ' '
IF (@Owner != 0 AND @StokGrupInd = 0 AND @StokInd = 0)
		SET @SQLx = @SQLx + ' AND H.Owner = ' + CONVERT(NVARCHAR, @Owner) + ' '
IF (@Owner != 0 AND @StokGrupInd != 0 AND @StokInd = 0)
		SET @SQLx = @SQLx + ' AND H.Owner = ' + CONVERT(NVARCHAR, @Owner) + ' AND SG.Ind = ' + CONVERT(NVARCHAR, @StokGrupInd) + ' '
IF (@Owner != 0 AND @StokGrupInd = 0 AND @StokInd != 0)
		SET @SQLx = @SQLx + ' AND H.Owner = ' + CONVERT(NVARCHAR, @Owner) + ' AND H.StokInd = ' + CONVERT(NVARCHAR, @StokInd) + ' '
IF (@Owner = 0 AND @StokGrupInd != 0 AND @StokInd = 0)
		SET @SQLc = @SQLc + ' AND SG.Ind = ' + CONVERT(NVARCHAR, @StokGrupInd) + ' '
IF (@Owner = 0 AND @StokGrupInd = 0 AND @StokInd != 0)
		SET @SQLc = @SQLc + ' AND H.StokInd = ' + CONVERT(NVARCHAR, @StokInd) + ' '
IF (@Owner != 0 AND @StokGrupInd = 0 AND @StokInd = 0)
		SET @SQLc = @SQLc + ' AND H.Owner = ' + CONVERT(NVARCHAR, @Owner) + ' '
IF (@Owner != 0 AND @StokGrupInd != 0 AND @StokInd = 0)
		SET @SQLc = @SQLc + ' AND H.Owner = ' + CONVERT(NVARCHAR, @Owner) + ' AND SG.Ind = ' + CONVERT(NVARCHAR, @StokGrupInd) + ' '
IF (@Owner != 0 AND @StokGrupInd = 0 AND @StokInd != 0)
		SET @SQLc = @SQLc + ' AND H.Owner = ' + CONVERT(NVARCHAR, @Owner) + ' AND H.StokInd = ' + CONVERT(NVARCHAR, @StokInd) + ' '

	SET @SQLx = @SQLx + @SQLxgroup + @SQLu + @SQLc + @SQLxgroup + @SQLxorder
	EXEC (@SQLx)

END



GO
CREATE PROCEDURE[dbo].[spSatisRaporuDokumu] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@cariInd int,
    @depoInds nvarchar(max),
    @stokInds nvarchar(max),
	@TipInd int,@filter NVARCHAR(MAX)
	--@kasiyerKodu nvarchar(50)
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	DECLARE @SQLxgroup NVARCHAR(MAX)
	DECLARE @SQLxtempsatirTip NVARCHAR(MAX)
	DECLARE @SQLxtempsatirDepo NVARCHAR(MAX)
	DECLARE @SQLxtempsatirCari NVARCHAR(MAX)
	DECLARE @SQLxtempsatirStok NVARCHAR(MAX)
	--DECLARE @SQLxtempsatirKasiyerKodu NVARCHAR(MAX)
	DECLARE @filter1 NVARCHAR(MAX)
	SET @SQLx = ' SELECT 
					h1.Owner,
                    h1.TipIndAltHareket AS TipInd,  
					h1.StokInd, 
					h1.GrupInd, 
					sg.GrupAdi,
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani,
					h1.FaturaIadeMi,
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar
					,
					CASE WHEN ( SUM(Miktar)> 0) 
						THEN (SUM(Tutar)/SUM(Miktar)) 
						ELSE 0 END as OrtalamaFiyat
					,
					0.00 as Iskonto
					,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani *Miktar)/SUM(Miktar)
					ELSE SUM(h1.KarOrani *Miktar) END AS KarOrani
					
				  FROM 
					SatisRaporDokumu as h1 WITH(NOLOCK)
					inner join StokGruplari sg WITH(NOLOCK)
					on h1.GrupInd=sg.Ind
				  WHERE  
					h1.Tarih >= ''' + CONVERT(NVARCHAR, @BaslangicTarihi) + ''' AND 
					h1.Tarih <= ''' + CONVERT(NVARCHAR, @BitisTarihi) + ''''
	SET @SQLxgroup = ' GROUP BY
							h1.Owner, h1.TipIndAltHareket, h1.StokInd, h1.GrupInd,sg.GrupAdi, h1.StokKodu, h1.StokAdi, h1.KDVOrani, h1.FaturaIadeMi
					 '
	SET @SQLxtempsatirTip  = ' AND (h1.TipIndAltHareket = ' + CONVERT(VARCHAR, @TipInd) + 'OR h1.TipIndAltHareket = 40) '
	SET @SQLxtempsatirDepo = ' AND (h1.DepoInd IN (' + @depoInds + ') or h1.DepoInd is null) '
	SET @SQLxtempsatirDepo = ' AND ' + @depoInds + ' '
	SET @SQLxtempsatirCari = ' AND  h1.HesapInd = ' + CONVERT(NVARCHAR, @cariInd)
	SET @SQLxtempsatirStok = ' AND h1.StokInd IN (' + @stokInds + ') '
	SET @SQLxtempsatirStok = ' AND ' + @stokInds + ' '
	--SET @SQLxtempsatirKasiyerKodu = ' AND h1.KasiyerKodu = ' + @kasiyerKodu + ' ' 
	IF(@TipInd = 504) -- Market + Vardiya
		BEGIN
			IF (@cariInd=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
		END
	ELSE IF(@TipInd = 40) -- Vardiya
		BEGIN
			SET @SQLxtempsatirTip = ' AND h1.TipIndAltHareket = ' + CONVERT(VARCHAR, @TipInd)
			IF (@cariInd=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
		END
	ELSE IF(@TipInd = 5042) -- Market
		BEGIN
			SET @SQLxtempsatirTip = ' AND h1.TipIndAltHareket != 40 '
			IF (@cariInd=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
		END
	ELSE IF(@TipInd = 1000) -- Akaryakıt
		BEGIN
			SET @SQLxtempsatirTip = ' AND (h1.TipIndAltHareket != 504 OR h1.TipIndAltHareket != 40) '
			IF (@cariInd=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
		END
	ELSE IF(@TipInd = 50440) -- Akaryakıt + Market
		BEGIN
			SET @SQLxtempsatirTip = ' AND h1.TipIndAltHareket != 40 '
			IF (@cariInd=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
		END
	ELSE -- Hepsi
		BEGIN
			IF (@cariInd=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo
			ELSE IF (@cariInd=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirStok
			ELSE IF (@cariInd!=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo
			ELSE IF (@cariInd!=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok
				
		END
	IF(	@filter!='')
		BEGIN
			SET @filter1='(h1.Owner IS NULL or h1.Owner = '+@filter +' )'
			SET @SQLx = @SQLx +' and ' + @filter1
		END
	SET @SQLx = @SQLx + @SQLxgroup
	EXEC (@SQLx)
	--PRINT @SQLx
END
GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
CREATE PROCEDURE[dbo].[spSatisRaporuDokumuDepoBazli] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@TipInd int,@filter NVARCHAR(MAX)
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	SET @SQLx = '
				SELECT
					h1.Owner,
					h1.TipIndAltHareket as TipInd,
					h1.DepoInd,
					h1.DepoKodu,
					h1.DepoAdi,
					h1.StokInd,
					h1.StokAdi,
					h1.KDVOrani,
					SUM(Cikan) as Cikan,
					SUM(Tutar) as Tutar,
					CASE WHEN (SUM(Cikan) > 0) 
					THEN (SUM(Tutar) / SUM(Cikan)) 
					ELSE 0
					END as BirimFiyat,
					0.00 as Iskonto
				FROM
					SatisRaporDokumuDepoBazli AS h1 WITH(NOLOCK)
				WHERE
					h1.StokInd IS NOT NULL 
					AND 
					(
						h1.Tarih >= ''' + CONVERT(NVARCHAR, @BaslangicTarihi) + ''' 
						AND h1.Tarih <= ''' + CONVERT(NVARCHAR, @BitisTarihi) + '''
					) 
				'
	DECLARE @SQLxgroup NVARCHAR(MAX)
	SET @SQLxgroup = '
					 GROUP BY
						h1.Owner,
						h1.TipIndAltHareket,
						h1.DepoInd,
						h1.DepoKodu,
						h1.DepoAdi,
						h1.StokInd,
						h1.StokAdi,
						h1.KDVOrani
					 '
	DECLARE @SQLxorder NVARCHAR(MAX)
	SET @SQLxorder = '
					 ORDER BY
						h1.Owner,
						h1.DepoKodu,
						h1.StokAdi
					 '
	IF(@TipInd = 504) -- Market + Vardiya
		BEGIN
			SET @SQLx = @SQLx + ' AND (h1.TipIndAltHareket = ' + CONVERT(VARCHAR, @TipInd) + ' OR h1.TipIndAltHareket = 40) ' +' ' + @filter + @SQLxgroup + @SQLxorder
		END
	ELSE IF(@TipInd = 40) -- Vardiya
		BEGIN
			SET @SQLx = @SQLx + ' AND  h1.TipIndAltHareket = ' + CONVERT(VARCHAR, @TipInd) +' ' + @filter + @SQLxgroup + @SQLxorder
		END
	ELSE IF(@TipInd = 5042) -- Market
		BEGIN
			SET @SQLx = @SQLx + ' AND  h1.TipIndAltHareket != 40 ' +' ' + @filter + @SQLxgroup + @SQLxorder
		END
	ELSE IF(@TipInd = 1000) -- Akaryakıt
		BEGIN
			SET @SQLx = @SQLx + ' AND (h1.TipIndAltHareket != 504 OR h1.TipIndAltHareket != 40) ' +' ' + @filter + @SQLxgroup + @SQLxorder
		END
	ELSE IF(@TipInd = 50440) -- Akaryakıt + Market
		BEGIN
			SET @SQLx = @SQLx + ' AND h1.TipIndAltHareket != 40 ' +' ' + @filter + @SQLxgroup + @SQLxorder
		END
	ELSE -- Hepsi
		BEGIN
			SET @SQLx = @SQLx +' ' + @filter + @SQLxgroup + @SQLxorder
		END
	EXEC (@SQLx)
END

GO


CREATE PROCEDURE [dbo].[spSayimDuzelt]
(
	@owner int,
	@starihi datetime,
	@bInd int
)
AS
	BEGIN

		DECLARE @TipInd int, @StokInd int, @StokKodu nvarchar(50), @StokAdi nvarchar(100), @DepoInd int, @DepoKodu nvarchar(50), @DepoAdi nvarchar(100), @miktar int, @smiktar int
		DECLARE SayimMiktar_Cursor CURSOR FOR
		SELECT StokInd
		FROM Hareketler WHERE TipInd = 112 AND Owner = @owner AND BaslikInd = @bInd;
		OPEN SayimMiktar_Cursor;
		FETCH NEXT FROM SayimMiktar_Cursor
		INTO @StokInd;
		WHILE @@FETCH_STATUS = 0
		   BEGIN
   				SET @DepoInd = (SELECT Ind FROM Hesaplar WITH(NOLOCK) WHERE TipInd = 205 AND Owner = @owner AND StokInd IS NULL)
				SET @DepoKodu = (SELECT HesapKodu FROM Hesaplar WITH(NOLOCK) WHERE TipInd = 205 AND Owner = @owner AND StokInd IS NULL)
				SET @DepoAdi = (SELECT HesapAdi FROM Hesaplar  WITH(NOLOCK) WHERE TipInd = 205 AND Owner = @owner AND StokInd IS NULL)

				SET @miktar = (SELECT SUM(Giren-Cikan) FROM GirisCikisHareketleri WITH(NOLOCK) WHERE StokInd = @StokInd AND Owner = @owner and Tarih <= @starihi and DepoInd = @DepoInd)
				IF @miktar IS NULL
					SET @miktar = 0
				SET @StokKodu = (SELECT StokKodu FROM Stoklar WITH(NOLOCK) WHERE Ind = @StokInd)
				SET @StokAdi = (SELECT StokAdi FROM Stoklar WITH(NOLOCK) WHERE Ind = @StokInd)
				set @smiktar = (SELECT SayimMiktari FROM Hareketler WITH(NOLOCK) WHERE Owner = @owner AND TipInd = 112 AND StokInd = @StokInd AND BaslikInd = @bInd)

				print Convert(varchar(50), @StokKodu) + ' stok kodu ile ilgili islem yapiliyor'

				UPDATE Hareketler SET Miktar = @miktar WHERE StokInd = @StokInd AND Owner = @owner AND TipInd = 112 AND BaslikInd = @bInd

				SET @miktar = @smiktar - @miktar;
				
				IF @miktar > 0
					SET @TipInd = 29;
				IF @miktar < 0
					SET @TipInd = 30;
				IF @miktar != 0
				BEGIN
					INSERT INTO Hareketler (Owner,TipInd,BaslikInd,StokInd,StokKodu,StokAdi,Miktar,Carpan,DepoInd,DepoKodu,DepoAdi,PerakendeInd,PerakendeKasaIslemTarihi)
					VALUES (@owner, @TipInd, @bInd, @StokInd, @StokKodu, @StokAdi, @miktar, 1, @DepoInd, @DepoKodu, @DepoAdi, 0, @starihi)
					PRINT Convert(varchar(50), @TipInd) + ';' + Convert(varchar(50), @StokKodu) + '; Stok Kodlu Urun ;' + Convert(varchar(50), @miktar) + '; adet olarak Sayılmıştır'
				END

				FETCH NEXT FROM SayimMiktar_Cursor
				INTO @StokInd;
		   END;
		PRINT 'İ Ş L E M   T A M A M L A N D I   T E Ş E K K Ü R   E D E R İ Z'
		CLOSE SayimMiktar_Cursor;
		DEALLOCATE SayimMiktar_Cursor;

END
GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
CREATE PROCEDURE[dbo].[spSonSatisFiyatlar] 
(	
	@Tarih datetime,
	@TipInd int--,
    --@stokInds nvarchar(max)
)
AS
BEGIN
	DECLARE @SQLxpre NVARCHAR(MAX)
	DECLARE @SQLxend NVARCHAR(MAX)
	DECLARE @SQLxtempsatirTip NVARCHAR(MAX)
	--DECLARE @SQLxtempsatirStk NVARCHAR(MAX)
	DECLARE @SQLx NVARCHAR(MAX)
	SET @SQLxpre = ' SELECT 
						null as Owner, * 
					 FROM
					 (
						SELECT
							Ind,
							Tarih,
							StokInd,
							ROW_NUMBER() OVER(
							PARTITION BY StokInd 
							ORDER BY Tarih DESC, Ind DESC) AS Position, 
							Fiyat
						FROM SatisHareketleri WITH(NOLOCK)
						WHERE 
							Tarih <= ''' + CONVERT(NVARCHAR, @Tarih) + ''''
	SET @SQLxend = ' ) AS Result
					 WHERE Position=1 ORDER BY StokInd'
	SET @SQLxtempsatirTip  = ' AND (TipInd = 40 OR TipInd = ' + CONVERT(VARCHAR, @TipInd) + ') '
	--SET @SQLxtempsatirStk  = ' AND StokInd IN (' + @stokInds + ')'
	IF(@TipInd = 504) -- Market + Vardiya
		SET @SQLx = @SQLxpre + @SQLxtempsatirTip + @SQLxend
	ELSE IF(@TipInd = 40) -- Vardiya
		BEGIN
			SET @SQLxtempsatirTip  = ' AND (TipInd = ' + CONVERT(VARCHAR, @TipInd) + ') '
			SET @SQLx = @SQLxpre + @SQLxtempsatirTip + @SQLxend
		END
	ELSE IF(@TipInd = 5042) -- Market
		BEGIN
			SET @SQLxtempsatirTip  = ' AND (TipInd = 504) '
			SET @SQLx = @SQLxpre + @SQLxtempsatirTip + @SQLxend
		END
	ELSE IF(@TipInd = 1000) -- Akaryakıt
		BEGIN
			SET @SQLxtempsatirTip  = ' AND (TipInd != 40 OR TipInd != 504) '
			SET @SQLx = @SQLxpre + @SQLxtempsatirTip + @SQLxend
		END
	ELSE IF(@TipInd = 50440) -- Akaryakıt + Market
		BEGIN
			SET @SQLxtempsatirTip  = ' AND (TipInd != 40) '
			SET @SQLx = @SQLxpre + @SQLxtempsatirTip + @SQLxend
		END
	ELSE
		SET @SQLx = @SQLxpre + @SQLxend
	--SET @SQLx = @SQLx + @SQLxtempsatirStk
	EXEC (@SQLx)
	--PRINT @SQLx
END

GO
CREATE PROCEDURE[dbo].[spStoklar] 

AS BEGIN WITH TblX(StokInd,GrupInd,StokAdi,StokKodu) AS 
(
SELECT
   Ind AS StokInd,
   GrupInd,
   StokAdi,
   StokKodu
   FROM
   Stoklar 
)	
select StokInd, GrupInd, StokAdi, StokKodu FROM TblX ORDER BY StokInd

END
GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go


CREATE PROCEDURE[dbo].[spStokMiktarlari] 
(	
	 @tarih DATETIME, @stokInd INT,@filter NVARCHAR(MAX)
)
AS
BEGIN
DECLARE @SQLx NVARCHAR(MAX)

	SET @SQLx = '
		SELECT
		Owner AS Owner,
		StokInd AS StokInd,
		SUM(Giren) as GirilenMiktar, 
		SUM(Cikan) as CikilanMiktar
	FROM GirisCikisHareketleri WITH(NOLOCK)
	WHERE
		StokInd = '+CONVERT(NVARCHAR, @stokInd) +'
		AND Tarih <= '''+CONVERT(NVARCHAR,@tarih)+''''
	IF(	@filter!='')
		SET @SQLx = @SQLx +' ' + @filter
	SET @SQLx = @SQLx +' GROUP BY Owner,StokInd' 
	--PRINT @SQLx
	EXEC (@SQLx )


END
GO
CREATE PROCEDURE[dbo].[spStokMiktarlariWithoutStokInd] 
(	
	 @tarih DATETIME, @filter NVARCHAR(MAX)
)
AS
BEGIN
DECLARE @SQLx NVARCHAR(MAX)

	SET @SQLx = '
		SELECT
		Owner AS Owner,
		StokInd AS StokInd,
		SUM(Giren) as GirilenMiktar, 
		SUM(Cikan) as CikilanMiktar
	FROM GirisCikisHareketleri WITH(NOLOCK)
	WHERE
		Tarih <= '''+CONVERT(NVARCHAR,@tarih)+''''
	IF(	@filter!='')
		SET @SQLx = @SQLx +' ' + @filter
	SET @SQLx = @SQLx +' GROUP BY Owner,StokInd' 
	--PRINT @SQLx
	EXEC (@SQLx )
END

GO
CREATE PROCEDURE[dbo].[spStokMiktarTutariWithoutStokInd] 

AS BEGIN WITH TblX(Owner,StokInd,GrupInd,StokAdi,StokKodu,Miktar,Tutar) AS 
(
SELECT
		GC.Owner AS Owner,
		GC.StokInd AS StokInd,
		ST.GrupInd,ST.StokAdi,ST.StokKodu,
	SUM(GC.Giren - GC.Cikan) as Miktar,
	SUM(GC.Giren - GC.Cikan)*  S.Tutar AS Tutar
	FROM GirisCikisHareketleri as GC WITH(NOLOCK)
	INNER JOIN StokDetaylari AS S WITH(NOLOCK)
	ON GC.StokInd = S.StokInd 
	INNER JOIN Stoklar AS ST WITH(NOLOCK)
	ON GC.StokInd = ST.Ind 
	WHERE 
	S.IsAnaFiyat = 1
	GROUP BY GC.Owner, GC.StokInd, ST.GrupInd, ST.StokAdi, ST.StokKodu, Miktar, S.Tutar
)	

select SUM(Miktar) as  Miktar, SUM(Tutar) as Tutar, StokInd, GrupInd, StokAdi, StokKodu, Owner from TblX GROUP BY Owner, StokInd, GrupInd, StokAdi, StokKodu ORDER BY StokInd

END
GO
CREATE PROCEDURE [dbo].[spStokSatisDetayDokumu] 
(	
	@BaslangicTarihi datetime,
	@BitisTarihi datetime,
	@cariInd int,
    @depoInds nvarchar(max),
    @stokInds nvarchar(max),
	@TipInd int,
	@filter NVARCHAR(MAX),
	@kasiyerKodu nvarchar(50)
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	DECLARE @SQLxgroup NVARCHAR(MAX)
	DECLARE @SQLxtempsatirTip NVARCHAR(MAX)
	DECLARE @SQLxtempsatirDepo NVARCHAR(MAX)
	DECLARE @SQLxtempsatirCari NVARCHAR(MAX)
	DECLARE @SQLxtempsatirStok NVARCHAR(MAX)
	DECLARE @SQLxtempsatirKasiyerKodu NVARCHAR(MAX)
	SET @SQLx = ' SELECT 
					h1.Owner, 
					h1.StokInd, 
					h1.StokKodu, 
					h1.StokAdi, 
					h1.KDVOrani, 
					SUM(Miktar) as Miktar, 
					SUM(Tutar) as Tutar,
					h1.Fiyat as OrtalamaFiyat,
					0 as GrupInd,
					0.00 as Iskonto,
					CASE WHEN ( SUM(Miktar)> 0)
					THEN SUM(h1.KarOrani * Miktar) / SUM(Miktar)
					ELSE SUM(h1.KarOrani * Miktar) END AS KarOrani,
					h1.KasiyerKodu
				  FROM 
					SatisRaporDokumu as h1 WITH(NOLOCK)
				  WHERE  
					h1.Tarih >= ''' + CONVERT(NVARCHAR, @BaslangicTarihi) + ''' AND 
					h1.Tarih <= ''' + CONVERT(NVARCHAR, @BitisTarihi) + ''''
	SET @SQLxgroup = ' GROUP BY
							h1.Owner, h1.StokInd, h1.StokKodu, h1.StokAdi, h1.Fiyat, h1.KDVOrani, h1.KasiyerKodu'
	SET @SQLxtempsatirTip  = ' AND (h1.TipIndAltHareket = ' + CONVERT(VARCHAR, @TipInd) + 'OR h1.TipIndAltHareket = 40) '
	--SET @SQLxtempsatirDepo = ' AND (h1.DepoInd IN (' + @depoInds + ') or h1.DepoInd is null) '
	SET @SQLxtempsatirDepo = ' AND ' + @depoInds + ' '
	SET @SQLxtempsatirCari = ' AND  h1.HesapInd = ' + CONVERT(NVARCHAR, @cariInd)
	--SET @SQLxtempsatirStok = ' AND h1.StokInd IN (' + @stokInds + ') '
	SET @SQLxtempsatirStok = ' AND ' + @stokInds + ' '
	SET @SQLxtempsatirKasiyerKodu = ' AND h1.KasiyerKodu = ' + @kasiyerKodu + ' '
	IF(@TipInd = 504) -- Market + Vardiya
		BEGIN
			IF (@cariInd=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
		END
	ELSE IF(@TipInd = 40) -- Vardiya
		BEGIN
			SET @SQLxtempsatirTip = ' AND h1.TipIndAltHareket = ' + CONVERT(VARCHAR, @TipInd)
			IF (@cariInd=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
		END
	ELSE IF(@TipInd = 5042) -- Market
		BEGIN
			SET @SQLxtempsatirTip = ' AND h1.TipIndAltHareket = 504 '
			IF (@cariInd=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
		END
	ELSE IF(@TipInd = 1000) -- Akaryakıt
		BEGIN
			SET @SQLxtempsatirTip = ' AND (h1.TipIndAltHareket != 504 OR h1.TipIndAltHareket != 40) '
			IF (@cariInd=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
		END
	ELSE IF(@TipInd = 50440) -- Akaryakıt + Market
		BEGIN
			SET @SQLxtempsatirTip = ' AND h1.TipIndAltHareket != 40 '
			IF (@cariInd=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds ='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirTip
			ELSE IF (@cariInd!=0 and @stokInds !='')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirTip
		END
	ELSE -- Hepsi
		BEGIN
			IF (@cariInd=0 and @stokInds ='' and @kasiyerKodu = '')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo
			ELSE IF (@cariInd=0 and @stokInds ='' and @kasiyerKodu != '')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirKasiyerKodu
			ELSE IF (@cariInd=0 and @stokInds !='' and @kasiyerKodu = '')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirStok
			ELSE IF (@cariInd=0 and @stokInds !='' and @kasiyerKodu != '')
				SET @SQLx = @SQLx + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirKasiyerKodu
			ELSE IF (@cariInd!=0 and @stokInds ='' and @kasiyerKodu = '')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo
			ELSE IF (@cariInd!=0 and @stokInds ='' and @kasiyerKodu != '')
					SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirKasiyerKodu
			ELSE IF (@cariInd!=0 and @stokInds !='' and @kasiyerKodu = '')
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok
			ELSE IF (@cariInd!=0 and @stokInds !='' and @kasiyerKodu != '')	
				SET @SQLx = @SQLx + @SQLxtempsatirCari + @SQLxtempsatirDepo + @SQLxtempsatirStok + @SQLxtempsatirKasiyerKodu
		END
	IF(	@filter!='')
		SET @SQLx = @SQLx +' ' + @filter
	SET @SQLx = @SQLx + @SQLxgroup
	EXEC (@SQLx)
	--PRINT @SQLx
END
 
GO
CREATE PROCEDURE [dbo].[spSuAnkiStokSatisFiyatiTumTipler]
(
	@Owner INT,
	@StokInd INT
)
--RETURNS DECIMAL(28,13)
AS
BEGIN

	DECLARE @_Result DECIMAL(28,13)
	DECLARE @_FiyatInd INT

	if (@Owner=0) set @Owner = null

	SELECT top 1 @_Result = Fiyat
	FROM GirisCikisHareketleri GC WITH(NOLOCK)
	WHERE StokInd = @StokInd AND GC.Owner = @Owner
		AND Cikan > 0 
	order by Ind desc

	IF (@_Result IS NOT NULL)
	BEGIN
		SELECT  @_Result  as Fiyat, @Owner as Owner
		GOTO SON;
	END	

	SELECT 
		TOP 1
		@_FiyatInd = FiyatInd
	FROM 
		SatisFiyatiSiralamaWithStokInd SF
	WHERE 
		SF.Owner = @Owner AND 
		StokInd = @StokInd 
	ORDER BY 
		SiraNo 


	IF (@_FiyatInd IS NULL)
	BEGIN	
		if (@_Result is null)
		begin
			SELECT @_Result = Tutar
			FROM StokDetaylari SD WITH(NOLOCK)
			WHERE StokInd = @StokInd AND SD.Owner = @Owner
				AND TipInd = 501 and IsAnaFiyat = 1
		end

		if (@_Result is null)
		begin
			SELECT @_Result = Tutar
			FROM StokDetaylari SD WITH(NOLOCK)
			WHERE StokInd = @StokInd AND SD.Owner is null
				AND TipInd = 501 and IsAnaFiyat = 1
		end
		if (@_Result is null)
		begin
			SELECT 
				@_Result = Tutar 
			FROM 
				dbo.CBSatisFiyatiListesi CB WITH(NOLOCK)
			WHERE 
				CB.Owner is null AND
				(StokInd=@StokInd) AND
				TipInd=501 
		end
	END
	ELSE
	BEGIN
		SELECT 
			@_Result = Tutar 
		FROM 
			dbo.CBSatisFiyatiListesi WITH(NOLOCK)
		WHERE 
			Ind=@_FiyatInd

	 END

	SELECT @_Result  as Fiyat, @Owner as Owner
	
	END
SON:




GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
CREATE PROCEDURE[dbo].[spVardiyaCikisListe] 
(	
	@VardiyaKartInds nvarchar(max)
	, @Sube int
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	SET @SQLx = '
				SELECT 
					Owner
					, ListeAdi
					, SUM(Tutar) AS Tutar
				FROM 
					VardiyaCikis WITH(NOLOCK)
				WHERE 
					' + @VardiyaKartInds
	IF(@Sube != 0)
		SET @SQLx = @SQLx + ' AND Owner = ' + CONVERT(NVARCHAR, @Sube)
	SET @SQLx = @SQLx + ' GROUP BY 
					ListeAdi
					, Owner
				'
	EXEC (@SQLx)
END

GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
CREATE PROCEDURE[dbo].[spVardiyaEskiSayaclar] 
(	
	@VardiyaKartInds nvarchar(max)
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	SET @SQLx = '
				SELECT * FROM
					(SELECT 
						SayacaAitDepoStok.Owner,
						SayacaAitDepoStok.StokInd,
						SayacInd,
						SayacKodu,
						SayacAdi,
						MIN(EskiEndeks) AS EskiEndeks,
						MIN(EskiEndeks)+SUM(YeniEndeks-EskiEndeks) AS YeniEndeks,
						SUM(Aktarma) AS Aktarma,
						SUM(YeniEndeks-EskiEndeks-Aktarma) AS Fark,
						Fiyat,
						SUM(Tutar) as Tutar,	
						SayacaAitDepoStok.OtomasyonKodu AS OtomasyonKodu
					FROM
						Hareketler WITH(NOLOCK)
					LEFT JOIN SayacaAitDepoStok WITH(NOLOCK) ON SayacaAitDepoStok.Ind = Hareketler.SayacInd  
					WHERE TipInd = 39 AND ' + @VardiyaKartInds + '
					GROUP BY 
						SayacInd,
						SayacaAitDepoStok.Owner,
						SayacKodu,
						SayacAdi,
						SayacaAitDepoStok.StokInd,
						Fiyat,
						SayacaAitDepoStok.OtomasyonKodu) AS VardiyaEskiSayaclarWithTumSubelerinSayacinaAitDepoStoklarla
				WHERE
					VardiyaEskiSayaclarWithTumSubelerinSayacinaAitDepoStoklarla.EskiEndeks != VardiyaEskiSayaclarWithTumSubelerinSayacinaAitDepoStoklarla.YeniEndeks
				'
	EXEC (@SQLx)
END

GO
CREATE PROCEDURE[dbo].[spVardiyaKKToplamTutarlari] 
(	
	@VardiyaKartInds nvarchar(max)
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	SET @SQLx = '
					SELECT 
						Owner,
						KKHesapInd,
						KKHesapAdi,
						SUM(Tutar) AS ToplamTutar
					FROM 
						KKVardiyaTutarlariView WITH(NOLOCK)
					WHERE 
						VardiyaKartInd IN (' + @VardiyaKartInds + ')
					GROUP BY 
						Owner,
						KKHesapInd,
						KKHesapKodu,
						KKHesapAdi			
				'
	EXEC (@SQLx)
END

 

GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
CREATE PROCEDURE[dbo].[spVardiyaNakitTahsilatListesi] 
(
	@vardiyaKartInds nvarchar(MAX)
	, @Sube int
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	SET @SQLx = '
					SELECT
						Owner,
						Parabirimi,
						Kur,
						SUM(Tutar * Kur) as Tutar,
						''Vardiya'' AS Kaynak
					FROM 
						Hareketler WITH(NOLOCK)
					WHERE 
						(
							TipInd = 38
							OR TipInd = 42
						) 
						AND ' + @vardiyaKartInds
	IF(@Sube != 0)
		SET @SQLx = @SQLx + ' AND Owner = ' + CONVERT(NVARCHAR, @Sube)
	SET @SQLx = @SQLx + ' GROUP BY
						Owner,
						ParaBirimi,
						Kur
				'
	EXEC (@SQLx)
END

GO
CREATE PROCEDURE[dbo].[spVardiyaPerakendeSatisToplamlari] 
(	
	@VardiyaKartInds nvarchar(max)
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	SET @SQLx = '
					SELECT 
						b.Owner,
						b.VardiyaNo AS VardiyaNo,
						SUM(Fiyat*Miktar) AS ToplamTutar
					FROM 
						Hareketler AS h WITH(NOLOCK) ,basliklar AS b WITH(NOLOCK)
					WHERE  	
						h.vardiyaKartInd = b.Ind
 						AND h.TipInd=40 
 						AND h.vardiyaKartInd IN (' + @VardiyaKartInds + ')
					GROUP BY 
						b.owner,
						b.VardiyaNo
				'
	EXEC (@SQLx)
END

 

GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
CREATE PROCEDURE[dbo].[spVardiyaPersonelAcikFazlaTurev] 
(	
	@vardiyaInd NVARCHAR(MAX), @filter NVARCHAR(MAX)
)
AS
BEGIN
	DECLARE @SQLx NVARCHAR(MAX)
	SET @SQLx = ' SELECT NULL AS Owner, VardiyaKartInd, ISNULL(SUM(Tutar),0) AS Tutar FROM VardiyaPersonelAcikFazla(''' + @vardiyaInd + ''') WHERE 0=0 '
	IF(	@filter!='')
		SET @SQLx = @SQLx +' ' + @filter
	SET @SQLx = @SQLx +' GROUP BY VardiyaKartInd'
	EXEC (@SQLx)
	--PRINT @SQLx
END

GO
set ANSI_NULLS ON
set QUOTED_IDENTIFIER ON
go
CREATE PROCEDURE[dbo].[spVardiyaPersonelAcikFazlaTurev2] 
(	
	@vardiyaInd NVARCHAR(MAX), @filter NVARCHAR(MAX)
)
AS
BEGIN
	 IF OBJECT_ID('tempdb..#tmpKayitlar') IS NOT NULL
       DROP TABLE #tmpKayitlar

		SELECT 
		Hareketler.Owner,
		Hareketler.VardiyaKartInd,	
		SUM(
			CASE  WHEN (Hareketler.TipInd in (25,45,9,46,533,19,48))
			THEN Hareketler.Tutar*Hareketler.Kur 
			WHEN (Hareketler.TipInd in (20,47))
			THEN Hareketler.Tutar
			WHEN Hareketler.TipInd IN (39,44) AND (Basliklar.OtomasyonVardiyaInd IS NULL OR Basliklar.OtomasyonVardiyaInd <1)
			THEN (ABS(YeniEndeks-EskiEndeks)-Aktarma)*Fiyat
			WHEN Hareketler.TipInd IN (39,44) AND (Basliklar.OtomasyonVardiyaInd >0)
			THEN Hareketler.Tutar
			WHEN Hareketler.TipInd IN (43,40)
			THEN Miktar*Carpan*Fiyat
			ELSE 0
			END
		) as GirisTutar,
		SUM(
			CASE  WHEN (Hareketler.TipInd in (26,42,49,13,50,17,52,11,53))
			THEN Hareketler.Tutar*Hareketler.Kur 
			WHEN (Hareketler.TipInd in (18,51))
			THEN Hareketler.Tutar
			WHEN (Hareketler.TipInd in (54,10))
			THEN Hareketler.Tutar
			WHEN (Hareketler.TipInd in (41,37) AND (Basliklar.OtomasyonVardiyaInd IS NULL OR Basliklar.OtomasyonVardiyaInd <1))
			THEN Miktar*Carpan*Fiyat
			WHEN (Hareketler.TipInd in (41,37) AND (Basliklar.OtomasyonVardiyaInd >0))
			THEN Hareketler.Tutar
			WHEN (Hareketler.TipInd in (38))
			THEN Tutar*Kur
			ELSE 0
			END
		) as CikisTutar
		into #tmpKayitlar
	FROM Hareketler WITH(NOLOCK)
	LEFT JOIN Basliklar WITH(NOLOCK) ON Basliklar.Ind = Hareketler.VardiyaKartInd

	WHERE Hareketler.VardiyaKartInd IN (SELECT * FROM fnSplit(@vardiyaInd,','))
	GROUP BY Hareketler.Owner,Hareketler.VardiyaKartInd


	SELECT DISTINCT
		NULL AS Owner,
		Dokum.VardiyaKartInd,
		SUM((Dokum.CikisTutar-Dokum.GirisTutar)/VardiyaPersonelSayisi.Sayi) as Tutar,
	
(SELECT     COUNT(Ind) FROM   Hareketler as b
     WHERE      (b.VardiyaKartInd = Hareketler.VardiyaKartInd) AND (b.TipInd = 39 OR
                    b.TipInd = 44)) AS AdetSatis
	FROM #tmpKayitlar Dokum
	LEFT JOIN Hareketler WITH(NOLOCK) ON Hareketler.VardiyaKartInd=Dokum.VardiyaKartInd AND TipInd IN (33,35)
	LEFT JOIN VardiyaPersonelSayisi WITH(NOLOCK) ON Hareketler.VardiyaKartInd=VardiyaPersonelSayisi.VardiyaKartInd
	WHERE
		Hareketler.PersonelHesapKodu IS NOT NULL
		GROUP BY Dokum.VardiyaKartInd, Hareketler.VardiyaKartInd 
END

GO
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

DROP PROCEDURE [dbo].[DropProcedures]
GO
CREATE PROCEDURE [spZRaporPersonelEksikPerakendeSatislarForSatisKasasi]
	-- Add the parameters for the stored procedure here
	@Ind int,
	@Owner int,
	@KullaniciInd int
AS
BEGIN
	DECLARE @LocalInd as int
	DECLARE @LocalOwner as int
	DECLARE @LocalKullaniciInd as int
	SET @LocalInd = @Ind
	SET @LocalOwner = @Owner
	SET @LocalKullaniciInd = @KullaniciInd
	DECLARE @dokum TABLE
	(
	RowId int not null primary key identity(1,1),
    Owner int,
	HareketInd int,
	PerakendeSatisTarihSaat DateTime
	) 
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;

	
	DECLARE @DokumSayisi as int
	DECLARE @InsertHareketInd as int
	DECLARE @InsertPerakendeSatisTarihSaat as Datetime
	insert into @dokum
	SELECT 
		T.Owner,
		T.HareketInd AS HareketInd,
		T.PerakendeSatisTarihSaat AS PerakendeSatisTarihSaat
	FROM
	(
		SELECT
		Owner, 
		Ind AS HareketInd,
		PerakendeKasaIslemTarihi AS PerakendeSatisTarihSaat
		FROM Hareketler WITH(NOLOCK)
		WHERE Owner = @LocalOwner AND TipInd = 504 AND Ind >  @LocalInd AND
		Ind NOT IN(SELECT IslemInd FROM SatisKasasi WITH(NOLOCK) WHERE Tablo= 'Hareketler')
	) AS T


	SET @DokumSayisi = @@ROWCOUNT
	IF @DokumSayisi > 0
	BEGIN
		DECLARE @CurrentRow as int
		SET @CurrentRow = 0
		WHILE @CurrentRow < @DokumSayisi
			BEGIN
				SET @CurrentRow = @CurrentRow + 1
				SELECT @InsertHareketInd = HareketInd, @InsertPerakendeSatisTarihSaat = PerakendeSatisTarihSaat  FROM @dokum where RowId = @CurrentRow			
				INSERT INTO SatisKasasi(Owner,IslemInd,Tablo,KullaniciInd,BaslikInd,Tarih,IsYeniSatis,PerakendeKasaIslemTarihi)
				VALUES (@LocalOwner, @InsertHareketInd, 'Hareketler', @LocalKullaniciInd, NULL, CONVERT(datetime, @InsertPerakendeSatisTarihSaat), 1, @InsertPerakendeSatisTarihSaat)
			END
	END
END
GO



-- **** WEBOTHER ÇALIŞIYOR ****

DELETE FROM Hareketler WHERE TipInd = 71
GO
UPDATE Basliklar SET FFarkiFaturaInd = 0 WHERE FFarkiFaturaInd IS NULL AND TipInd = 101
GO
UPDATE Hareketler SET GercekFiyat = Fiyat WHERE GercekFiyat IS NULL AND TipInd = 3
GO
IF EXISTS (
    SELECT *
    FROM sys.objects
    WHERE [type] = 'TR' AND [name] = 'AyarlarUpdated'
    )
    DROP TRIGGER AyarlarUpdated;
	go
CREATE TRIGGER [dbo].[AyarlarUpdated] 
   ON  [dbo].[Ayarlar]
   AFTER UPDATE
AS 
BEGIN
	
	SET NOCOUNT ON;
	declare @EskiTipInd AS INT
	SELECT @EskiTipInd = TipInd FROM deleted 

	declare @YeniTipInd AS INT
	SELECT @YeniTipInd = TipInd FROM inserted 

	declare @Ind AS INT
	SELECT @Ind = Ind FROM inserted 

	if (@EskiTipInd = 301 AND @YeniTipInd != 301)
	BEGIN
		UPDATE Ayarlar SET TipInd = 301 WHERE Ind = @Ind
	END
END
GO
UPDATE Hareketler SET Senet = 0 WHERE TipInd IN (11,14) AND Senet IS NULL
UPDATE Basliklar SET Aktarildi = 0 WHERE TipInd IN (101,102,105) AND Aktarildi IS NULL
UPDATE Hareketler SET Aktarildi = 0 WHERE TipInd IN (9,10,11,13,14,509,510,533) AND Aktarildi IS NULL

GO
update Hareketler set TipInd = 37, DurumInd = 3 where BaslikInd in 
(select Ind from Basliklar where TipInd = 111 and DurumInd = 3 and FisPortfoyu = 1)
and DurumInd is null and TipInd = 41
GO
UPDATE FiyatDegisimi SET DosyaGonderildi = 1 WHERE DosyaGonderildi IS NULL
UPDATE FiyatDegisimi SET YeniStok = 0 WHERE YeniStok IS NULL
GO
UPDATE Hesaplar SET MuhteviyatDurumu = 2 WHERE TipInd IN (206,207) AND MuhteviyatDurumu IS NULL
GO
	DECLARE @StokInd INT, @recCount INT
	DECLARE StokCursor CURSOR FOR 
	SELECT Ind FROM Stoklar WHERE GrupInd IS NULL OR GrupInd = 0


	OPEN StokCursor;
	FETCH NEXT FROM StokCursor
	INTO @StokInd
	WHILE @@FETCH_STATUS = 0
	BEGIN
		SET @recCount=(SELECT COUNT(*) FROM StokGruplari WHERE GrupAdi = 'GRUPSUZ')
		IF (@recCount=0)
		BEGIN
			INSERT INTO StokGruplari (Owner, GrupAdi, ParentInd, SiraNo)
			SELECT NULL, 'GRUPSUZ', NULL, MAX(SiraNo) + 1 FROM StokGruplari
		END
		ELSE
		BEGIN
			UPDATE Stoklar SET GrupInd = (SELECT Top 1 Ind FROM StokGruplari WHERE GrupAdi = 'GRUPSUZ') WHERE Ind = @StokInd
		END
		FETCH NEXT FROM StokCursor
		INTO @StokInd
	END

	CLOSE StokCursor
	DEALLOCATE StokCursor
GO
UPDATE Hesaplar SET DekontCarisi = 0 WHERE TipInd = 201 AND DekontCarisi IS NULL
GO
UPDATE Hesaplar SET EFaturaOnayliGonder = 0 WHERE TipInd = 201 AND EFaturaOnayliGonder IS NULL
GO
/*
*514 - SmartCard 515 - ExtraCard giderlestirilmesi isleminin sadece gider kartina degil, 
	cari ye de baglanabilmesi icin yapilan guncellemenin gecmis verileri etkilememesi icin 
	default olarak gider e baglama islemi...
	526 - Gider Karti Eslestirmesi 
	527 - Cari Karti Eslestirmesi
*/

UPDATE StokDetaylari SET GiderMiCariMi = 526 WHERE GiderMiCariMi  IS NULL AND TipInd in (514,515) 
GO
UPDATE Hareketler SET Tutar = (Tutar /(1+ (KDVOrani/100))) 
              WHERE Ind IN 
			  (SELECT H.Ind FROM Hareketler H INNER JOIN Basliklar B ON H.BaslikInd=B.Ind
		      WHERE B.TipInd = 102 
			  AND B.DurumInd = 12 
			  AND H.TipInd = 6 
			  AND H.Tutar != 0 
			  AND H.KDVOrani != 0
			  AND H.Miktar != 0
			  AND H.Fiyat != 0 
			  AND ((ROUND((H.Tutar/(H.Miktar*H.Fiyat)),2)*100)-100)!= 0 
			  AND (H.KDVOrani-((ROUND((H.Tutar/(H.Miktar*H.Fiyat)),2)*100)-100)) < 2)
GO
UPDATE HesapDetaylari SET CekLimiti = 0 WHERE TipInd = 520 AND CekLimiti IS NULL
UPDATE HesapDetaylari SET KefaletLimiti = 0 WHERE TipInd = 520 AND KefaletLimiti IS NULL
UPDATE HesapDetaylari SET DigerKrediKullanimDegeri = 0 WHERE TipInd = 520 AND DigerKrediKullanimDegeri IS NULL
UPDATE HesapDetaylari SET CekCiroMarjOrani = 1 WHERE TipInd = 520 AND (CekCiroMarjOrani IS NULL OR CekCiroMarjOrani = 0)
GO
DELETE FROM
	RolMenuleri
WHERE 
	SayfaInd IN (153, 389, 390, 391, 392)
	AND
	ParentInd IN (145, 146)
DELETE FROM
	RolMenuleri
WHERE 
	SayfaInd = 395
	AND
	ParentInd = 394
GO
DELETE FROM
	Hareketler
WHERE
	Ind IN
	(
		SELECT 
			h.Ind
		FROM
			dbo.Hareketler AS h
		WHERE
		(
			h.TipInd = 30
			or h.TipInd = 29
		) 
		AND (h.Miktar = 0)
		AND h.Miktar IS NOT NULL
	)
DELETE FROM
	Hareketler
WHERE
	Ind IN
	(
		SELECT 
			h.Ind
		FROM
			dbo.Hareketler AS h
		WHERE
		(
			h.TipInd = 3
		) 
		AND (h.Miktar = 0 OR h.Fiyat = 0 OR h.Miktar IS NULL OR h.Fiyat IS NULL)
	)
DELETE FROM
	Hareketler
WHERE
	Ind IN
	(
		SELECT 
			h.Ind
		FROM
			dbo.Hareketler AS h
		WHERE
		(
			h.TipInd = 57
		) 
		AND (h.Tutar = 0 OR h.Tutar IS NULL)
	)
GO
UPDATE H SET H.KDVOrani = KG.KDVOrani 
FROM Hareketler H INNER JOIN Stoklar S 
ON H.StokInd = S.Ind INNER JOIN KDVGruplari KG 
ON S.SatisKDVGrupInd = KG.Ind WHERE H.TipInd = 504 AND H.KDVOrani != KG.KDVOrani
GO
DELETE FROM SatisKasasi WHERE IslemInd = 0
 
go

CREATE STATISTICS [_dta_stat_2052202361_66_1] ON [dbo].[Hareketler]([SayacInd], [Ind])
go

CREATE STATISTICS [_dta_stat_2052202361_64_1_66] ON [dbo].[Hareketler]([VardiyaKartInd], [Ind], [SayacInd])
go

CREATE STATISTICS [_dta_stat_2139154666_9_10] ON [dbo].[StokDetaylari]([Tutar], [IsAnaFiyat])
go

CREATE STATISTICS [_dta_stat_2139154666_4_10_9] ON [dbo].[StokDetaylari]([StokInd], [IsAnaFiyat], [Tutar])
go

CREATE STATISTICS [_dta_stat_1972202076_1_8] ON [dbo].[HesapDetaylari]([Ind], [DepoInd])
go

CREATE STATISTICS [_dta_stat_1216723387_6_1] ON [dbo].[Hesaplar]([StokInd], [Ind])
go

CREATE STATISTICS [_dta_stat_55671246_1_3] ON [dbo].[Stoklar]([Ind], [StokKodu])

GO

CREATE STATISTICS [_dta_stat_1847677630_29_1] ON [dbo].[Basliklar]([OtomasyonVardiyaInd], [Ind])

go

CREATE STATISTICS [_dta_stat_2052202361_66_64_3] ON [dbo].[Hareketler]([SayacInd], [VardiyaKartInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_2052202361_64_3_1_32] ON [dbo].[Hareketler]([VardiyaKartInd], [TipInd], [Ind], [Fiyat])
go

CREATE STATISTICS [_dta_stat_2052202361_71_32_64_3] ON [dbo].[Hareketler]([Aktarma], [Fiyat], [VardiyaKartInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_2052202361_32_71_1_64_3] ON [dbo].[Hareketler]([Fiyat], [Aktarma], [Ind], [VardiyaKartInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_2052202361_32_71_66_1_64] ON [dbo].[Hareketler]([Fiyat], [Aktarma], [SayacInd], [Ind], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_2052202361_71_32_66_64_3] ON [dbo].[Hareketler]([Aktarma], [Fiyat], [SayacInd], [VardiyaKartInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_2052202361_1_66_64_3_32_71] ON [dbo].[Hareketler]([Ind], [SayacInd], [VardiyaKartInd], [TipInd], [Fiyat], [Aktarma])
go

CREATE STATISTICS [_dta_stat_1972202076_8_3] ON [dbo].[HesapDetaylari]([DepoInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1972202076_2_1_6_7_12_9_13] ON [dbo].[HesapDetaylari]([Owner], [Ind], [SayacKodu], [SayacAdi], [AzalanEndeks], [SayacEndeksi], [OtomasyonKodu])
go

CREATE STATISTICS [_dta_stat_1972202076_1_3_2_6_7_12_9_13] ON [dbo].[HesapDetaylari]([Ind], [TipInd], [Owner], [SayacKodu], [SayacAdi], [AzalanEndeks], [SayacEndeksi], [OtomasyonKodu])
go

CREATE STATISTICS [_dta_stat_1972202076_1_8_3_2_6_7_12_9_13] ON [dbo].[HesapDetaylari]([Ind], [DepoInd], [TipInd], [Owner], [SayacKodu], [SayacAdi], [AzalanEndeks], [SayacEndeksi], [OtomasyonKodu])
go

CREATE STATISTICS [_dta_stat_2139154666_9_3] ON [dbo].[StokDetaylari]([Tutar], [TipInd])
go

CREATE STATISTICS [_dta_stat_2139154666_1_3_10] ON [dbo].[StokDetaylari]([Ind], [TipInd], [IsAnaFiyat])
go

CREATE STATISTICS [_dta_stat_2139154666_10_3_4] ON [dbo].[StokDetaylari]([IsAnaFiyat], [TipInd], [StokInd])
go

CREATE STATISTICS [_dta_stat_2139154666_3_10_9_4] ON [dbo].[StokDetaylari]([TipInd], [IsAnaFiyat], [Tutar], [StokInd])
go

CREATE STATISTICS [_dta_stat_2139154666_4_1_10_9] ON [dbo].[StokDetaylari]([StokInd], [Ind], [IsAnaFiyat], [Tutar])
go

CREATE STATISTICS [_dta_stat_2139154666_10_1_4_3_9] ON [dbo].[StokDetaylari]([IsAnaFiyat], [Ind], [StokInd], [TipInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_2052202361_30_36] ON [dbo].[Hareketler]([ParaBirimi], [Tutar])
go

CREATE STATISTICS [_dta_stat_2052202361_86_30_36] ON [dbo].[Hareketler]([KaynakInd], [ParaBirimi], [Tutar])
go

CREATE STATISTICS [_dta_stat_2052202361_30_47_36] ON [dbo].[Hareketler]([ParaBirimi], [DurumInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_2052202361_2_30_36] ON [dbo].[Hareketler]([Owner], [ParaBirimi], [Tutar])
go

CREATE STATISTICS [_dta_stat_2052202361_30_1_36] ON [dbo].[Hareketler]([ParaBirimi], [Ind], [Tutar])
go

CREATE STATISTICS [_dta_stat_2052202361_36_1_89] ON [dbo].[Hareketler]([Tutar], [Ind], [HedefInd])
go

CREATE STATISTICS [_dta_stat_2052202361_47_36_1_3] ON [dbo].[Hareketler]([DurumInd], [Tutar], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_2052202361_2_30_47_36] ON [dbo].[Hareketler]([Owner], [ParaBirimi], [DurumInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_2052202361_1_30_3_4] ON [dbo].[Hareketler]([Ind], [ParaBirimi], [TipInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_2052202361_2_36_1_3] ON [dbo].[Hareketler]([Owner], [Tutar], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_2052202361_36_47_1_2] ON [dbo].[Hareketler]([Tutar], [DurumInd], [Ind], [Owner])
go

CREATE STATISTICS [_dta_stat_2052202361_8_36_1_3_64] ON [dbo].[Hareketler]([BankaHesapInd], [Tutar], [Ind], [TipInd], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_2052202361_1_64_3_36_2] ON [dbo].[Hareketler]([Ind], [VardiyaKartInd], [TipInd], [Tutar], [Owner])
go

CREATE STATISTICS [_dta_stat_2052202361_1_4_3_36_30_2] ON [dbo].[Hareketler]([Ind], [BaslikInd], [TipInd], [Tutar], [ParaBirimi], [Owner])
go

CREATE STATISTICS [_dta_stat_2052202361_1_8_64_4_3_36] ON [dbo].[Hareketler]([Ind], [BankaHesapInd], [VardiyaKartInd], [BaslikInd], [TipInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_2052202361_1_36_2_30_3_64_89_86] ON [dbo].[Hareketler]([Ind], [Tutar], [Owner], [ParaBirimi], [TipInd], [VardiyaKartInd], [HedefInd], [KaynakInd])
go

CREATE STATISTICS [_dta_stat_2052202361_1_36_47_30_3_64_8_4] ON [dbo].[Hareketler]([Ind], [Tutar], [DurumInd], [ParaBirimi], [TipInd], [VardiyaKartInd], [BankaHesapInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_2052202361_30_1_47_36_2_3_64_8] ON [dbo].[Hareketler]([ParaBirimi], [Ind], [DurumInd], [Tutar], [Owner], [TipInd], [VardiyaKartInd], [BankaHesapInd])
go

CREATE STATISTICS [_dta_stat_2052202361_2_89_86_30_64_3_47_36] ON [dbo].[Hareketler]([Owner], [HedefInd], [KaynakInd], [ParaBirimi], [VardiyaKartInd], [TipInd], [DurumInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_2052202361_36_1_8_2_3_64_30_4] ON [dbo].[Hareketler]([Tutar], [Ind], [BankaHesapInd], [Owner], [TipInd], [VardiyaKartInd], [ParaBirimi], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_2052202361_30_64_1_3_47_36_2_89_86] ON [dbo].[Hareketler]([ParaBirimi], [VardiyaKartInd], [Ind], [TipInd], [DurumInd], [Tutar], [Owner], [HedefInd], [KaynakInd])
go

CREATE STATISTICS [_dta_stat_2052202361_1_36_30_3_64_4_2_47_8] ON [dbo].[Hareketler]([Ind], [Tutar], [ParaBirimi], [TipInd], [VardiyaKartInd], [BaslikInd], [Owner], [DurumInd], [BankaHesapInd])
go

CREATE STATISTICS [_dta_stat_2052202361_36_1_86_30_3_64_47_2_8_4] ON [dbo].[Hareketler]([Tutar], [Ind], [KaynakInd], [ParaBirimi], [TipInd], [VardiyaKartInd], [DurumInd], [Owner], [BankaHesapInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_2052202361_89_30_36_1_3_86_64_47_2_8] ON [dbo].[Hareketler]([HedefInd], [ParaBirimi], [Tutar], [Ind], [TipInd], [KaynakInd], [VardiyaKartInd], [DurumInd], [Owner], [BankaHesapInd])
go

CREATE STATISTICS [_dta_stat_1847677630_6_1] ON [dbo].[Basliklar]([HesapInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1847677630_25_2_3] ON [dbo].[Basliklar]([VardiyaNo], [Owner], [TipInd])
go

CREATE STATISTICS [_dta_stat_1847677630_2_3_1] ON [dbo].[Basliklar]([Owner], [TipInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1847677630_1_5_2_25] ON [dbo].[Basliklar]([Ind], [Tarih], [Owner], [VardiyaNo])
go

CREATE STATISTICS [_dta_stat_1847677630_25_2_5_6_3] ON [dbo].[Basliklar]([VardiyaNo], [Owner], [Tarih], [HesapInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1847677630_1_2_25_3_6] ON [dbo].[Basliklar]([Ind], [Owner], [VardiyaNo], [TipInd], [HesapInd])
go

CREATE STATISTICS [_dta_stat_1847677630_1_2_3_6_5] ON [dbo].[Basliklar]([Ind], [Owner], [TipInd], [HesapInd], [Tarih])
go

CREATE STATISTICS [_dta_stat_1847677630_1_5_3_2_25_6] ON [dbo].[Basliklar]([Ind], [Tarih], [TipInd], [Owner], [VardiyaNo], [HesapInd])
go

CREATE STATISTICS [_dta_stat_1216723387_35_1] ON [dbo].[Hesaplar]([ParaBirimi], [Ind])
GO

CREATE STATISTICS [stat_hareketler_perakendeInd_stokInd] ON [dbo].[Hareketler]([PerakendeInd], [StokInd])
GO

CREATE STATISTICS [_dta_stat_1346312056_1_89] ON [dbo].[Hareketler]([Ind], [HedefInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_47] ON [dbo].[Hareketler]([TipInd], [PersonelHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_54_38] ON [dbo].[Hareketler]([GiderInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_40_22] ON [dbo].[Hareketler]([DepoInd], [StokInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_24] ON [dbo].[Hareketler]([Ind], [StokAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_33_1] ON [dbo].[Hareketler]([Kur], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_3_75] ON [dbo].[Hareketler]([TipInd], [IslemTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_76_1] ON [dbo].[Hareketler]([PerakendeInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_1_86] ON [dbo].[Hareketler]([Ind], [KaynakInd])
go

CREATE STATISTICS [_dta_stat_1346312056_4_8] ON [dbo].[Hareketler]([BaslikInd], [BankaHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_95] ON [dbo].[Hareketler]([Ind], [KasayaIslensinMi])
go

CREATE STATISTICS [_dta_stat_1346312056_49_4] ON [dbo].[Hareketler]([DurumInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_6] ON [dbo].[Hareketler]([Ind], [CariHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_27_4] ON [dbo].[Hareketler]([Miktar], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_75_49] ON [dbo].[Hareketler]([IslemTarihi], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_4_54] ON [dbo].[Hareketler]([BaslikInd], [GiderInd])
go

CREATE STATISTICS [_dta_stat_1346312056_32_4] ON [dbo].[Hareketler]([ParaBirimi], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_70] ON [dbo].[Hareketler]([Ind], [SayacKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_38] ON [dbo].[Hareketler]([Owner], [TipInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_3] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_34_2_3] ON [dbo].[Hareketler]([Fiyat], [Owner], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_13_12_38] ON [dbo].[Hareketler]([KKHesapAdi], [KKHesapKodu], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_22_1_40] ON [dbo].[Hareketler]([StokInd], [Ind], [DepoInd])
go

CREATE STATISTICS [_dta_stat_1346312056_23_24_34] ON [dbo].[Hareketler]([StokKodu], [StokAdi], [Fiyat])
go

CREATE STATISTICS [_dta_stat_1346312056_3_27_1] ON [dbo].[Hareketler]([TipInd], [Miktar], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_70_3_34] ON [dbo].[Hareketler]([SayacKodu], [TipInd], [Fiyat])
go

CREATE STATISTICS [_dta_stat_1346312056_3_2_47] ON [dbo].[Hareketler]([TipInd], [Owner], [PersonelHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_76_4_3] ON [dbo].[Hareketler]([PerakendeInd], [BaslikInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_4_2_38] ON [dbo].[Hareketler]([BaslikInd], [Owner], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_82_2_3] ON [dbo].[Hareketler]([Rid], [Owner], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_11_2] ON [dbo].[Hareketler]([Ind], [KKHesapInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_4_3_27] ON [dbo].[Hareketler]([BaslikInd], [TipInd], [Miktar])
go

CREATE STATISTICS [_dta_stat_1346312056_54_14_56] ON [dbo].[Hareketler]([GiderInd], [GirisTarihi], [GiderAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_4_1_54] ON [dbo].[Hareketler]([BaslikInd], [Ind], [GiderInd])
go

CREATE STATISTICS [_dta_stat_1346312056_86_3_14] ON [dbo].[Hareketler]([KaynakInd], [TipInd], [GirisTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_14_1_2] ON [dbo].[Hareketler]([GirisTarihi], [Ind], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_95_3_14] ON [dbo].[Hareketler]([KasayaIslensinMi], [TipInd], [GirisTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_34_66_3] ON [dbo].[Hareketler]([Fiyat], [VardiyaKartInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_70_34_2] ON [dbo].[Hareketler]([SayacKodu], [Fiyat], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_3_38_32] ON [dbo].[Hareketler]([TipInd], [Tutar], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_56_55_14] ON [dbo].[Hareketler]([GiderAdi], [GiderKodu], [GirisTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_14_38_1] ON [dbo].[Hareketler]([GirisTarihi], [Tutar], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_1_8_9] ON [dbo].[Hareketler]([Ind], [BankaHesapInd], [BankaHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_82_3_66] ON [dbo].[Hareketler]([Rid], [TipInd], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_66_32_2] ON [dbo].[Hareketler]([VardiyaKartInd], [ParaBirimi], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_54_19_7] ON [dbo].[Hareketler]([GiderInd], [Aciklama], [CariHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_40_2_3] ON [dbo].[Hareketler]([DepoInd], [Owner], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_11_12] ON [dbo].[Hareketler]([Ind], [KKHesapInd], [KKHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_1_11_3] ON [dbo].[Hareketler]([Ind], [KKHesapInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_33_3] ON [dbo].[Hareketler]([Owner], [Kur], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_8_38] ON [dbo].[Hareketler]([TipInd], [BankaHesapInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_1_3_75] ON [dbo].[Hareketler]([Ind], [TipInd], [IslemTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_68_1_3] ON [dbo].[Hareketler]([SayacInd], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_34_68_1_66] ON [dbo].[Hareketler]([Fiyat], [SayacInd], [Ind], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_10_14_1_3] ON [dbo].[Hareketler]([BankaHesapAdi], [GirisTarihi], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_22_1_27_4] ON [dbo].[Hareketler]([StokInd], [Ind], [Miktar], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_8_49_2] ON [dbo].[Hareketler]([TipInd], [BankaHesapInd], [DurumInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_3_2_72_66] ON [dbo].[Hareketler]([TipInd], [Owner], [YeniEndeks], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_8_66_38_14] ON [dbo].[Hareketler]([BankaHesapInd], [VardiyaKartInd], [Tutar], [GirisTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_48_47_66_3] ON [dbo].[Hareketler]([PersonelHesapAdi], [PersonelHesapKodu], [VardiyaKartInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_48_47_14_95] ON [dbo].[Hareketler]([PersonelHesapAdi], [PersonelHesapKodu], [GirisTarihi], [KasayaIslensinMi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_27_31_3] ON [dbo].[Hareketler]([Ind], [Miktar], [Carpan], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_43_3_49] ON [dbo].[Hareketler]([Ind], [HedefBankaInd], [TipInd], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_83_60_5] ON [dbo].[Hareketler]([TipInd], [HedefHesapInd], [CiroCariInd], [CariHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_40_1_3_4] ON [dbo].[Hareketler]([DepoInd], [Ind], [TipInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_40_3_27_4] ON [dbo].[Hareketler]([DepoInd], [TipInd], [Miktar], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_53_52] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [GelirAdi], [GelirKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_1_11] ON [dbo].[Hareketler]([Owner], [TipInd], [Ind], [KKHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_66_46_47] ON [dbo].[Hareketler]([TipInd], [VardiyaKartInd], [PersonelHesapInd], [PersonelHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_2_39_27_38] ON [dbo].[Hareketler]([Owner], [YazarKasaFisNo], [Miktar], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_66_3_70_34] ON [dbo].[Hareketler]([VardiyaKartInd], [TipInd], [SayacKodu], [Fiyat])
go

CREATE STATISTICS [_dta_stat_1346312056_14_54_19_7] ON [dbo].[Hareketler]([GirisTarihi], [GiderInd], [Aciklama], [CariHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_4_14_3_38] ON [dbo].[Hareketler]([BaslikInd], [GirisTarihi], [TipInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_2_48_47_66] ON [dbo].[Hareketler]([Owner], [PersonelHesapAdi], [PersonelHesapKodu], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_34_49_39_22] ON [dbo].[Hareketler]([Fiyat], [DurumInd], [YazarKasaFisNo], [StokInd])
go

CREATE STATISTICS [_dta_stat_1346312056_83_4_3_2] ON [dbo].[Hareketler]([HedefHesapInd], [BaslikInd], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_32_19] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [ParaBirimi], [Aciklama])
go

CREATE STATISTICS [_dta_stat_1346312056_3_4_5_83] ON [dbo].[Hareketler]([TipInd], [BaslikInd], [CariHesapInd], [HedefHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_68_1_70_69] ON [dbo].[Hareketler]([SayacInd], [Ind], [SayacKodu], [SayacAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_23_24_34] ON [dbo].[Hareketler]([Ind], [StokKodu], [StokAdi], [Fiyat])
go

CREATE STATISTICS [_dta_stat_1346312056_75_4_2_1] ON [dbo].[Hareketler]([IslemTarihi], [BaslikInd], [Owner], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_3_2_1_33] ON [dbo].[Hareketler]([TipInd], [Owner], [Ind], [Kur])
go

CREATE STATISTICS [_dta_stat_1346312056_66_3_49_14] ON [dbo].[Hareketler]([VardiyaKartInd], [TipInd], [DurumInd], [GirisTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_2_14_66_3] ON [dbo].[Hareketler]([Owner], [GirisTarihi], [VardiyaKartInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_4_22_2] ON [dbo].[Hareketler]([Ind], [BaslikInd], [StokInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_32_38] ON [dbo].[Hareketler]([Owner], [TipInd], [ParaBirimi], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_3_66_68_73] ON [dbo].[Hareketler]([TipInd], [VardiyaKartInd], [SayacInd], [Aktarma])
go

CREATE STATISTICS [_dta_stat_1346312056_3_32_66_38] ON [dbo].[Hareketler]([TipInd], [ParaBirimi], [VardiyaKartInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_32_1_2_3] ON [dbo].[Hareketler]([ParaBirimi], [Ind], [Owner], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_8_1_2_3] ON [dbo].[Hareketler]([BankaHesapInd], [Ind], [Owner], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_56_55_54_38] ON [dbo].[Hareketler]([GiderAdi], [GiderKodu], [GiderInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_3_14_38_32] ON [dbo].[Hareketler]([TipInd], [GirisTarihi], [Tutar], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_27_31_3_22] ON [dbo].[Hareketler]([Miktar], [Carpan], [TipInd], [StokInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_83_3] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [HedefHesapInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_49_22_4] ON [dbo].[Hareketler]([TipInd], [DurumInd], [StokInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_14_38_1] ON [dbo].[Hareketler]([Owner], [GirisTarihi], [Tutar], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_3_40_22_1] ON [dbo].[Hareketler]([TipInd], [DepoInd], [StokInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_2_36_3_22] ON [dbo].[Hareketler]([Owner], [KDVOrani], [TipInd], [StokInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_49_5_60] ON [dbo].[Hareketler]([TipInd], [DurumInd], [CariHesapInd], [CiroCariInd])
go

CREATE STATISTICS [_dta_stat_1346312056_4_40_22_3] ON [dbo].[Hareketler]([BaslikInd], [DepoInd], [StokInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_1_76_4] ON [dbo].[Hareketler]([TipInd], [Ind], [PerakendeInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_66_3] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [VardiyaKartInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_75_49_66] ON [dbo].[Hareketler]([Owner], [IslemTarihi], [DurumInd], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_2_32_66] ON [dbo].[Hareketler]([Ind], [Owner], [ParaBirimi], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_32_14_1_2] ON [dbo].[Hareketler]([ParaBirimi], [GirisTarihi], [Ind], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_14_32_66_38] ON [dbo].[Hareketler]([GirisTarihi], [ParaBirimi], [VardiyaKartInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_1_75_5_3_2] ON [dbo].[Hareketler]([Ind], [IslemTarihi], [CariHesapInd], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_1_57_3_8_49] ON [dbo].[Hareketler]([Ind], [CiroBankaInd], [TipInd], [BankaHesapInd], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_22_3_23_24_4] ON [dbo].[Hareketler]([StokInd], [TipInd], [StokKodu], [StokAdi], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_66_3_75_1_4] ON [dbo].[Hareketler]([VardiyaKartInd], [TipInd], [IslemTarihi], [Ind], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_14_38_89_32] ON [dbo].[Hareketler]([TipInd], [GirisTarihi], [Tutar], [HedefInd], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_48_47_66] ON [dbo].[Hareketler]([Owner], [TipInd], [PersonelHesapAdi], [PersonelHesapKodu], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_32_1_3_14_66] ON [dbo].[Hareketler]([ParaBirimi], [Ind], [TipInd], [GirisTarihi], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_32_33_1_66] ON [dbo].[Hareketler]([Owner], [ParaBirimi], [Kur], [Ind], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_66_3_4_22] ON [dbo].[Hareketler]([Ind], [VardiyaKartInd], [TipInd], [BaslikInd], [StokInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_54_3_66_32] ON [dbo].[Hareketler]([Ind], [GiderInd], [TipInd], [VardiyaKartInd], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_76_22_4_3_27] ON [dbo].[Hareketler]([PerakendeInd], [StokInd], [BaslikInd], [TipInd], [Miktar])
go

CREATE STATISTICS [_dta_stat_1346312056_22_3_4_27_40] ON [dbo].[Hareketler]([StokInd], [TipInd], [BaslikInd], [Miktar], [DepoInd])
go

CREATE STATISTICS [_dta_stat_1346312056_14_66_3_38_1] ON [dbo].[Hareketler]([GirisTarihi], [VardiyaKartInd], [TipInd], [Tutar], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_48_47_19] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [PersonelHesapAdi], [PersonelHesapKodu], [Aciklama])
go

CREATE STATISTICS [_dta_stat_1346312056_1_32_38_14_2] ON [dbo].[Hareketler]([Ind], [ParaBirimi], [Tutar], [GirisTarihi], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_23_24_1_66_3] ON [dbo].[Hareketler]([StokKodu], [StokAdi], [Ind], [VardiyaKartInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_66_68_3_2_72] ON [dbo].[Hareketler]([VardiyaKartInd], [SayacInd], [TipInd], [Owner], [YeniEndeks])
go

CREATE STATISTICS [_dta_stat_1346312056_3_4_27_31_1] ON [dbo].[Hareketler]([TipInd], [BaslikInd], [Miktar], [Carpan], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_23_24_27_31_3] ON [dbo].[Hareketler]([StokKodu], [StokAdi], [Miktar], [Carpan], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_5_3_2] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [CariHesapInd], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_1_32_66_38_95] ON [dbo].[Hareketler]([Ind], [ParaBirimi], [VardiyaKartInd], [Tutar], [KasayaIslensinMi])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_66_38_49] ON [dbo].[Hareketler]([Owner], [TipInd], [VardiyaKartInd], [Tutar], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_2_1_40_4] ON [dbo].[Hareketler]([TipInd], [Owner], [Ind], [DepoInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_4_2_36_22_3] ON [dbo].[Hareketler]([BaslikInd], [Owner], [KDVOrani], [StokInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_40_1_3_27_4] ON [dbo].[Hareketler]([DepoInd], [Ind], [TipInd], [Miktar], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_2_3_38_48] ON [dbo].[Hareketler]([Ind], [Owner], [TipInd], [Tutar], [PersonelHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_48_47_3_2_38] ON [dbo].[Hareketler]([PersonelHesapAdi], [PersonelHesapKodu], [TipInd], [Owner], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_14_38_32] ON [dbo].[Hareketler]([Owner], [TipInd], [GirisTarihi], [Tutar], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_2_48_47_3] ON [dbo].[Hareketler]([Ind], [Owner], [PersonelHesapAdi], [PersonelHesapKodu], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_8_3_2_66_32] ON [dbo].[Hareketler]([BankaHesapInd], [TipInd], [Owner], [VardiyaKartInd], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_3_2_1_36_22] ON [dbo].[Hareketler]([TipInd], [Owner], [Ind], [KDVOrani], [StokInd])
go

CREATE STATISTICS [_dta_stat_1346312056_54_1_3_4_2] ON [dbo].[Hareketler]([GiderInd], [Ind], [TipInd], [BaslikInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_49_3_60_4_5] ON [dbo].[Hareketler]([DurumInd], [TipInd], [CiroCariInd], [BaslikInd], [CariHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_4_2_3_75] ON [dbo].[Hareketler]([Ind], [BaslikInd], [Owner], [TipInd], [IslemTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_3_14_38_86_32] ON [dbo].[Hareketler]([TipInd], [GirisTarihi], [Tutar], [KaynakInd], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_60_4_3_5_83] ON [dbo].[Hareketler]([CiroCariInd], [BaslikInd], [TipInd], [CariHesapInd], [HedefHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_70_2_3_34_66] ON [dbo].[Hareketler]([SayacKodu], [Owner], [TipInd], [Fiyat], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_27_4_1] ON [dbo].[Hareketler]([Owner], [TipInd], [Miktar], [BaslikInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_1_66_2_3_32] ON [dbo].[Hareketler]([Ind], [VardiyaKartInd], [Owner], [TipInd], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_22_1_2_3_40] ON [dbo].[Hareketler]([StokInd], [Ind], [Owner], [TipInd], [DepoInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_8_49_38_4] ON [dbo].[Hareketler]([TipInd], [BankaHesapInd], [DurumInd], [Tutar], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_11_12_13_1_3] ON [dbo].[Hareketler]([KKHesapInd], [KKHesapKodu], [KKHesapAdi], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_14_38_1_86] ON [dbo].[Hareketler]([TipInd], [GirisTarihi], [Tutar], [Ind], [KaynakInd])
go

CREATE STATISTICS [_dta_stat_1346312056_32_89_1_3_14] ON [dbo].[Hareketler]([ParaBirimi], [HedefInd], [Ind], [TipInd], [GirisTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_2_8_9_10_14] ON [dbo].[Hareketler]([Owner], [BankaHesapInd], [BankaHesapKodu], [BankaHesapAdi], [GirisTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_3_66_32_14_95] ON [dbo].[Hareketler]([TipInd], [VardiyaKartInd], [ParaBirimi], [GirisTarihi], [KasayaIslensinMi])
go

CREATE STATISTICS [_dta_stat_1346312056_40_1_22_4_3] ON [dbo].[Hareketler]([DepoInd], [Ind], [StokInd], [BaslikInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_66_75_49_3_38] ON [dbo].[Hareketler]([VardiyaKartInd], [IslemTarihi], [DurumInd], [TipInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_1_49_66_2_3] ON [dbo].[Hareketler]([Ind], [DurumInd], [VardiyaKartInd], [Owner], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_66_1_34] ON [dbo].[Hareketler]([Owner], [TipInd], [VardiyaKartInd], [Ind], [Fiyat])
go

CREATE STATISTICS [_dta_stat_1346312056_3_49_34_22_39] ON [dbo].[Hareketler]([TipInd], [DurumInd], [Fiyat], [StokInd], [YazarKasaFisNo])
go

CREATE STATISTICS [_dta_stat_1346312056_66_46_47_48_3] ON [dbo].[Hareketler]([VardiyaKartInd], [PersonelHesapInd], [PersonelHesapKodu], [PersonelHesapAdi], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_49_4_2_5] ON [dbo].[Hareketler]([TipInd], [DurumInd], [BaslikInd], [Owner], [CariHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_2_1_72_66] ON [dbo].[Hareketler]([TipInd], [Owner], [Ind], [YeniEndeks], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_32_33_66_3] ON [dbo].[Hareketler]([Owner], [ParaBirimi], [Kur], [VardiyaKartInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_1_14_32] ON [dbo].[Hareketler]([Owner], [TipInd], [Ind], [GirisTarihi], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_2_66_46_47_48] ON [dbo].[Hareketler]([Owner], [VardiyaKartInd], [PersonelHesapInd], [PersonelHesapKodu], [PersonelHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_14_32_38_1_48] ON [dbo].[Hareketler]([GirisTarihi], [ParaBirimi], [Tutar], [Ind], [PersonelHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_32_1_4] ON [dbo].[Hareketler]([Owner], [TipInd], [ParaBirimi], [Ind], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_4_66_3_23_24] ON [dbo].[Hareketler]([BaslikInd], [VardiyaKartInd], [TipInd], [StokKodu], [StokAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_49_3_8_38_1] ON [dbo].[Hareketler]([DurumInd], [TipInd], [BankaHesapInd], [Tutar], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_38_1_3_14_32] ON [dbo].[Hareketler]([Tutar], [Ind], [TipInd], [GirisTarihi], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_3_49_14_66_32] ON [dbo].[Hareketler]([TipInd], [DurumInd], [GirisTarihi], [VardiyaKartInd], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_3_49_4_1_34] ON [dbo].[Hareketler]([TipInd], [DurumInd], [BaslikInd], [Ind], [Fiyat])
go

CREATE STATISTICS [_dta_stat_1346312056_1_66_38_14_2] ON [dbo].[Hareketler]([Ind], [VardiyaKartInd], [Tutar], [GirisTarihi], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_3_2_14_54_4] ON [dbo].[Hareketler]([TipInd], [Owner], [GirisTarihi], [GiderInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_8_3_66_32_1] ON [dbo].[Hareketler]([BankaHesapInd], [TipInd], [VardiyaKartInd], [ParaBirimi], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_48_47_14_32_38] ON [dbo].[Hareketler]([PersonelHesapAdi], [PersonelHesapKodu], [GirisTarihi], [ParaBirimi], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_14_54_4_1_3] ON [dbo].[Hareketler]([GirisTarihi], [GiderInd], [BaslikInd], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_66_3_38_2_14_1] ON [dbo].[Hareketler]([VardiyaKartInd], [TipInd], [Tutar], [Owner], [GirisTarihi], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_1_32_3_49_14_2] ON [dbo].[Hareketler]([Ind], [ParaBirimi], [TipInd], [DurumInd], [GirisTarihi], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_22_23_24_34_3_4] ON [dbo].[Hareketler]([StokInd], [StokKodu], [StokAdi], [Fiyat], [TipInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_1_2_14_54_56] ON [dbo].[Hareketler]([TipInd], [Ind], [Owner], [GirisTarihi], [GiderInd], [GiderAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_40_4_22_27] ON [dbo].[Hareketler]([Owner], [TipInd], [DepoInd], [BaslikInd], [StokInd], [Miktar])
go

CREATE STATISTICS [_dta_stat_1346312056_4_2_3_75_66_1] ON [dbo].[Hareketler]([BaslikInd], [Owner], [TipInd], [IslemTarihi], [VardiyaKartInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_54_1_19_7_3_4] ON [dbo].[Hareketler]([GiderInd], [Ind], [Aciklama], [CariHesapAdi], [TipInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_23_24_30_31_29_34] ON [dbo].[Hareketler]([StokKodu], [StokAdi], [BirimAdi], [Carpan], [AnaBirimAdi], [Fiyat])
go

CREATE STATISTICS [_dta_stat_1346312056_4_3_1_14_32_66] ON [dbo].[Hareketler]([BaslikInd], [TipInd], [Ind], [GirisTarihi], [ParaBirimi], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_2_49_1_14_5] ON [dbo].[Hareketler]([TipInd], [Owner], [DurumInd], [Ind], [GirisTarihi], [CariHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_38_1_8_43_49] ON [dbo].[Hareketler]([TipInd], [Tutar], [Ind], [BankaHesapInd], [HedefBankaInd], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_27_22_4_40_1_2] ON [dbo].[Hareketler]([Miktar], [StokInd], [BaslikInd], [DepoInd], [Ind], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_3_14_54_2_19_7] ON [dbo].[Hareketler]([TipInd], [GirisTarihi], [GiderInd], [Owner], [Aciklama], [CariHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_68_70_69_34_66_3] ON [dbo].[Hareketler]([SayacInd], [SayacKodu], [SayacAdi], [Fiyat], [VardiyaKartInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_22_39_3_4_49_34] ON [dbo].[Hareketler]([StokInd], [YazarKasaFisNo], [TipInd], [BaslikInd], [DurumInd], [Fiyat])
go

CREATE STATISTICS [_dta_stat_1346312056_2_39_24_27_38_4] ON [dbo].[Hareketler]([Owner], [YazarKasaFisNo], [StokAdi], [Miktar], [Tutar], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_66_3_46_47_48] ON [dbo].[Hareketler]([Owner], [VardiyaKartInd], [TipInd], [PersonelHesapInd], [PersonelHesapKodu], [PersonelHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_68_70_69_34_1_66] ON [dbo].[Hareketler]([SayacInd], [SayacKodu], [SayacAdi], [Fiyat], [Ind], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_2_14_1_8_9] ON [dbo].[Hareketler]([TipInd], [Owner], [GirisTarihi], [Ind], [BankaHesapInd], [BankaHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_66_14_38_1_10_9] ON [dbo].[Hareketler]([VardiyaKartInd], [GirisTarihi], [Tutar], [Ind], [BankaHesapAdi], [BankaHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_4_1_2_39_27_38] ON [dbo].[Hareketler]([BaslikInd], [Ind], [Owner], [YazarKasaFisNo], [Miktar], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_3_22_4_1_2_40] ON [dbo].[Hareketler]([TipInd], [StokInd], [BaslikInd], [Ind], [Owner], [DepoInd])
go

CREATE STATISTICS [_dta_stat_1346312056_86_32_1_3_14_38] ON [dbo].[Hareketler]([KaynakInd], [ParaBirimi], [Ind], [TipInd], [GirisTarihi], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_95_3_66_38] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [KasayaIslensinMi], [TipInd], [VardiyaKartInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_1_22_3_27_31_4] ON [dbo].[Hareketler]([Ind], [StokInd], [TipInd], [Miktar], [Carpan], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_13_14_2_49_3_11] ON [dbo].[Hareketler]([KKHesapAdi], [GirisTarihi], [Owner], [DurumInd], [TipInd], [KKHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_37_36_30_3_22] ON [dbo].[Hareketler]([Ind], [Iskonto], [KDVOrani], [BirimAdi], [TipInd], [StokInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_1_2_14_54_19] ON [dbo].[Hareketler]([TipInd], [Ind], [Owner], [GirisTarihi], [GiderInd], [Aciklama])
go

CREATE STATISTICS [_dta_stat_1346312056_4_1_2_3_27_40] ON [dbo].[Hareketler]([BaslikInd], [Ind], [Owner], [TipInd], [Miktar], [DepoInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_36_2_3_4_22] ON [dbo].[Hareketler]([Ind], [KDVOrani], [Owner], [TipInd], [BaslikInd], [StokInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_66_3_2_32_33] ON [dbo].[Hareketler]([Ind], [VardiyaKartInd], [TipInd], [Owner], [ParaBirimi], [Kur])
go

CREATE STATISTICS [_dta_stat_1346312056_54_14_19_7_1_3] ON [dbo].[Hareketler]([GiderInd], [GirisTarihi], [Aciklama], [CariHesapAdi], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_22_1_39_3_4_49] ON [dbo].[Hareketler]([StokInd], [Ind], [YazarKasaFisNo], [TipInd], [BaslikInd], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_2_75_49_66_3] ON [dbo].[Hareketler]([Ind], [Owner], [IslemTarihi], [DurumInd], [VardiyaKartInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_66_2_32_14_95] ON [dbo].[Hareketler]([TipInd], [VardiyaKartInd], [Owner], [ParaBirimi], [GirisTarihi], [KasayaIslensinMi])
go

CREATE STATISTICS [_dta_stat_1346312056_2_14_3_38_1_32] ON [dbo].[Hareketler]([Owner], [GirisTarihi], [TipInd], [Tutar], [Ind], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_54_14_1_3_66_2] ON [dbo].[Hareketler]([GiderInd], [GirisTarihi], [Ind], [TipInd], [VardiyaKartInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_1_66_2_3_38_49] ON [dbo].[Hareketler]([Ind], [VardiyaKartInd], [Owner], [TipInd], [Tutar], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_14_95_1_3_32_66] ON [dbo].[Hareketler]([GirisTarihi], [KasayaIslensinMi], [Ind], [TipInd], [ParaBirimi], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_14_38_1_32_89] ON [dbo].[Hareketler]([TipInd], [GirisTarihi], [Tutar], [Ind], [ParaBirimi], [HedefInd])
go

CREATE STATISTICS [_dta_stat_1346312056_66_3_1_11_12_13] ON [dbo].[Hareketler]([VardiyaKartInd], [TipInd], [Ind], [KKHesapInd], [KKHesapKodu], [KKHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_4_2_38_3_13] ON [dbo].[Hareketler]([Ind], [BaslikInd], [Owner], [Tutar], [TipInd], [KKHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_27_37_36_30_3] ON [dbo].[Hareketler]([Ind], [Miktar], [Iskonto], [KDVOrani], [BirimAdi], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_54_55_56_3_4] ON [dbo].[Hareketler]([Ind], [GiderInd], [GiderKodu], [GiderAdi], [TipInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_48_47_3_38_4] ON [dbo].[Hareketler]([Ind], [PersonelHesapAdi], [PersonelHesapKodu], [TipInd], [Tutar], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_4_66_1_23_24] ON [dbo].[Hareketler]([TipInd], [BaslikInd], [VardiyaKartInd], [Ind], [StokKodu], [StokAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_27_1_22_76_3_2] ON [dbo].[Hareketler]([Miktar], [Ind], [StokInd], [PerakendeInd], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_8_9_10_14_3_2] ON [dbo].[Hareketler]([BankaHesapInd], [BankaHesapKodu], [BankaHesapAdi], [GirisTarihi], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_3_49_14_2_66_32] ON [dbo].[Hareketler]([TipInd], [DurumInd], [GirisTarihi], [Owner], [VardiyaKartInd], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_14_19_7_1_54_3] ON [dbo].[Hareketler]([GirisTarihi], [Aciklama], [CariHesapAdi], [Ind], [GiderInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_54_14_56_3_4] ON [dbo].[Hareketler]([Ind], [GiderInd], [GirisTarihi], [GiderAdi], [TipInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_54_55_56_3_1] ON [dbo].[Hareketler]([Owner], [GiderInd], [GiderKodu], [GiderAdi], [TipInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_7_6_53_19] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [CariHesapAdi], [CariHesapKodu], [GelirAdi], [Aciklama])
go

CREATE STATISTICS [_dta_stat_1346312056_8_9_10_14_1_3] ON [dbo].[Hareketler]([BankaHesapInd], [BankaHesapKodu], [BankaHesapAdi], [GirisTarihi], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_56_14_95_1_7_6] ON [dbo].[Hareketler]([GiderAdi], [GirisTarihi], [KasayaIslensinMi], [Ind], [CariHesapAdi], [CariHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_19_7_1_54_3_4] ON [dbo].[Hareketler]([Aciklama], [CariHesapAdi], [Ind], [GiderInd], [TipInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_3_8_43_49_57] ON [dbo].[Hareketler]([Ind], [TipInd], [BankaHesapInd], [HedefBankaInd], [DurumInd], [CiroBankaInd])
go

CREATE STATISTICS [_dta_stat_1346312056_66_1_2_3_70_34] ON [dbo].[Hareketler]([VardiyaKartInd], [Ind], [Owner], [TipInd], [SayacKodu], [Fiyat])
go

CREATE STATISTICS [_dta_stat_1346312056_66_1_2_3_4_27] ON [dbo].[Hareketler]([VardiyaKartInd], [Ind], [Owner], [TipInd], [BaslikInd], [Miktar])
go

CREATE STATISTICS [_dta_stat_1346312056_3_8_43_49_57_38] ON [dbo].[Hareketler]([TipInd], [BankaHesapInd], [HedefBankaInd], [DurumInd], [CiroBankaInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_1_54_3_66_2_32] ON [dbo].[Hareketler]([Ind], [GiderInd], [TipInd], [VardiyaKartInd], [Owner], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_66_4_3_27_40] ON [dbo].[Hareketler]([Ind], [VardiyaKartInd], [BaslikInd], [TipInd], [Miktar], [DepoInd])
go

CREATE STATISTICS [_dta_stat_1346312056_8_14_1_3_66_2] ON [dbo].[Hareketler]([BankaHesapInd], [GirisTarihi], [Ind], [TipInd], [VardiyaKartInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_49_3_14_1_32_66_38] ON [dbo].[Hareketler]([DurumInd], [TipInd], [GirisTarihi], [Ind], [ParaBirimi], [VardiyaKartInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_1_22_27_37_36_30_3] ON [dbo].[Hareketler]([Ind], [StokInd], [Miktar], [Iskonto], [KDVOrani], [BirimAdi], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_4_37_36_30_3_22] ON [dbo].[Hareketler]([Ind], [BaslikInd], [Iskonto], [KDVOrani], [BirimAdi], [TipInd], [StokInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_3_66_68_70_69_34] ON [dbo].[Hareketler]([Ind], [TipInd], [VardiyaKartInd], [SayacInd], [SayacKodu], [SayacAdi], [Fiyat])
go

CREATE STATISTICS [_dta_stat_1346312056_2_66_3_32_1_14_54] ON [dbo].[Hareketler]([Owner], [VardiyaKartInd], [TipInd], [ParaBirimi], [Ind], [GirisTarihi], [GiderInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_14_19_7_1_54] ON [dbo].[Hareketler]([Owner], [TipInd], [GirisTarihi], [Aciklama], [CariHesapAdi], [Ind], [GiderInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_2_75_7_66_3_49] ON [dbo].[Hareketler]([Ind], [Owner], [IslemTarihi], [CariHesapAdi], [VardiyaKartInd], [TipInd], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_10_14_3_2_1_8_9] ON [dbo].[Hareketler]([BankaHesapAdi], [GirisTarihi], [TipInd], [Owner], [Ind], [BankaHesapInd], [BankaHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_8_38_4_3_1_43_49] ON [dbo].[Hareketler]([BankaHesapInd], [Tutar], [BaslikInd], [TipInd], [Ind], [HedefBankaInd], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_8_3_66_2_32_14] ON [dbo].[Hareketler]([Ind], [BankaHesapInd], [TipInd], [VardiyaKartInd], [Owner], [ParaBirimi], [GirisTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_75_60_3_2_49_19] ON [dbo].[Hareketler]([Ind], [IslemTarihi], [CiroCariInd], [TipInd], [Owner], [DurumInd], [Aciklama])
go

CREATE STATISTICS [_dta_stat_1346312056_4_1_14_54_19_7_3] ON [dbo].[Hareketler]([BaslikInd], [Ind], [GirisTarihi], [GiderInd], [Aciklama], [CariHesapAdi], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_1_22_76_4_27_2] ON [dbo].[Hareketler]([TipInd], [Ind], [StokInd], [PerakendeInd], [BaslikInd], [Miktar], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_95_14_1_2_3_32_66] ON [dbo].[Hareketler]([KasayaIslensinMi], [GirisTarihi], [Ind], [Owner], [TipInd], [ParaBirimi], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_3_38_43_49_57_8] ON [dbo].[Hareketler]([Ind], [TipInd], [Tutar], [HedefBankaInd], [DurumInd], [CiroBankaInd], [BankaHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_14_32_38_1_19_2_3] ON [dbo].[Hareketler]([GirisTarihi], [ParaBirimi], [Tutar], [Ind], [Aciklama], [Owner], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_66_38_2_1_4_48] ON [dbo].[Hareketler]([TipInd], [VardiyaKartInd], [Tutar], [Owner], [Ind], [BaslikInd], [PersonelHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_4_1_3_2_14_54_56] ON [dbo].[Hareketler]([BaslikInd], [Ind], [TipInd], [Owner], [GirisTarihi], [GiderInd], [GiderAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_14_3_49_2_1_11_12] ON [dbo].[Hareketler]([GirisTarihi], [TipInd], [DurumInd], [Owner], [Ind], [KKHesapInd], [KKHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_22_23_24_27_31_3_4] ON [dbo].[Hareketler]([StokInd], [StokKodu], [StokAdi], [Miktar], [Carpan], [TipInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_23_24_27_31_3_22] ON [dbo].[Hareketler]([Ind], [StokKodu], [StokAdi], [Miktar], [Carpan], [TipInd], [StokInd])
go

CREATE STATISTICS [_dta_stat_1346312056_22_1_2_3_27_72_76] ON [dbo].[Hareketler]([StokInd], [Ind], [Owner], [TipInd], [Miktar], [YeniEndeks], [PerakendeInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_22_3_27_2_66_76] ON [dbo].[Hareketler]([Ind], [StokInd], [TipInd], [Miktar], [Owner], [VardiyaKartInd], [PerakendeInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_49_14_66_1_32] ON [dbo].[Hareketler]([Owner], [TipInd], [DurumInd], [GirisTarihi], [VardiyaKartInd], [Ind], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_3_54_14_2_55_56_1] ON [dbo].[Hareketler]([TipInd], [GiderInd], [GirisTarihi], [Owner], [GiderKodu], [GiderAdi], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_54_1_56_55_3_66_38] ON [dbo].[Hareketler]([GiderInd], [Ind], [GiderAdi], [GiderKodu], [TipInd], [VardiyaKartInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_66_32_38_95_14_1_2] ON [dbo].[Hareketler]([VardiyaKartInd], [ParaBirimi], [Tutar], [KasayaIslensinMi], [GirisTarihi], [Ind], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_1_23_24_30_31_29_34] ON [dbo].[Hareketler]([Ind], [StokKodu], [StokAdi], [BirimAdi], [Carpan], [AnaBirimAdi], [Fiyat])
go

CREATE STATISTICS [_dta_stat_1346312056_4_2_3_1_14_32_66] ON [dbo].[Hareketler]([BaslikInd], [Owner], [TipInd], [Ind], [GirisTarihi], [ParaBirimi], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_48_47_66_14_32_38_95] ON [dbo].[Hareketler]([PersonelHesapAdi], [PersonelHesapKodu], [VardiyaKartInd], [GirisTarihi], [ParaBirimi], [Tutar], [KasayaIslensinMi])
go

CREATE STATISTICS [_dta_stat_1346312056_4_1_22_3_23_24_34] ON [dbo].[Hareketler]([BaslikInd], [Ind], [StokInd], [TipInd], [StokKodu], [StokAdi], [Fiyat])
go

CREATE STATISTICS [_dta_stat_1346312056_1_3_49_38_57_8_4] ON [dbo].[Hareketler]([Ind], [TipInd], [DurumInd], [Tutar], [CiroBankaInd], [BankaHesapInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_3_13_12_2_14_38] ON [dbo].[Hareketler]([Ind], [TipInd], [KKHesapAdi], [KKHesapKodu], [Owner], [GirisTarihi], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_11_12_13_14_2_49_3] ON [dbo].[Hareketler]([KKHesapInd], [KKHesapKodu], [KKHesapAdi], [GirisTarihi], [Owner], [DurumInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_4_2_39_24_27_38] ON [dbo].[Hareketler]([Ind], [BaslikInd], [Owner], [YazarKasaFisNo], [StokAdi], [Miktar], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_22_1_24_23_3_4_27] ON [dbo].[Hareketler]([StokInd], [Ind], [StokAdi], [StokKodu], [TipInd], [BaslikInd], [Miktar])
go

CREATE STATISTICS [_dta_stat_1346312056_14_95_1_3_66_2_38] ON [dbo].[Hareketler]([GirisTarihi], [KasayaIslensinMi], [Ind], [TipInd], [VardiyaKartInd], [Owner], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_3_2_1_14_83_19_49] ON [dbo].[Hareketler]([TipInd], [Owner], [Ind], [GirisTarihi], [HedefHesapInd], [Aciklama], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_49_4_1_22_34_39] ON [dbo].[Hareketler]([TipInd], [DurumInd], [BaslikInd], [Ind], [StokInd], [Fiyat], [YazarKasaFisNo])
go

CREATE STATISTICS [_dta_stat_1346312056_1_4_3_22_23_24_27_31] ON [dbo].[Hareketler]([Ind], [BaslikInd], [TipInd], [StokInd], [StokKodu], [StokAdi], [Miktar], [Carpan])
go

CREATE STATISTICS [_dta_stat_1346312056_4_3_1_2_14_54_55_56] ON [dbo].[Hareketler]([BaslikInd], [TipInd], [Ind], [Owner], [GirisTarihi], [GiderInd], [GiderKodu], [GiderAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_48_47_66_32_19_38] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [PersonelHesapAdi], [PersonelHesapKodu], [VardiyaKartInd], [ParaBirimi], [Aciklama], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_22_1_3_27_4_40_2_76] ON [dbo].[Hareketler]([StokInd], [Ind], [TipInd], [Miktar], [BaslikInd], [DepoInd], [Owner], [PerakendeInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_66_4_27_40_1_22] ON [dbo].[Hareketler]([Owner], [TipInd], [VardiyaKartInd], [BaslikInd], [Miktar], [DepoInd], [Ind], [StokInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_4_3_8_43_49_57_38] ON [dbo].[Hareketler]([Ind], [BaslikInd], [TipInd], [BankaHesapInd], [HedefBankaInd], [DurumInd], [CiroBankaInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_1_3_49_2_14_13_11_12] ON [dbo].[Hareketler]([Ind], [TipInd], [DurumInd], [Owner], [GirisTarihi], [KKHesapAdi], [KKHesapInd], [KKHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_1_4_3_22_27_37_36_30] ON [dbo].[Hareketler]([Ind], [BaslikInd], [TipInd], [StokInd], [Miktar], [Iskonto], [KDVOrani], [BirimAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_75_49_66_3_38_14_32] ON [dbo].[Hareketler]([Ind], [IslemTarihi], [DurumInd], [VardiyaKartInd], [TipInd], [Tutar], [GirisTarihi], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_22_27_3_23_24_30_34_38] ON [dbo].[Hareketler]([StokInd], [Miktar], [TipInd], [StokKodu], [StokAdi], [BirimAdi], [Fiyat], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_1_4_14_54_19_7] ON [dbo].[Hareketler]([Owner], [TipInd], [Ind], [BaslikInd], [GirisTarihi], [GiderInd], [Aciklama], [CariHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_2_3_72_27_22_76_4] ON [dbo].[Hareketler]([Ind], [Owner], [TipInd], [YeniEndeks], [Miktar], [StokInd], [PerakendeInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_86_32_1_2_3_14_66_38_95] ON [dbo].[Hareketler]([KaynakInd], [ParaBirimi], [Ind], [Owner], [TipInd], [GirisTarihi], [VardiyaKartInd], [Tutar], [KasayaIslensinMi])
go

CREATE STATISTICS [_dta_stat_1346312056_66_3_2_38_1_14_32_53_52] ON [dbo].[Hareketler]([VardiyaKartInd], [TipInd], [Owner], [Tutar], [Ind], [GirisTarihi], [ParaBirimi], [GelirAdi], [GelirKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_2_22_1_3_27_4_24_23_5] ON [dbo].[Hareketler]([Owner], [StokInd], [Ind], [TipInd], [Miktar], [BaslikInd], [StokAdi], [StokKodu], [CariHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_3_2_49_75_5_19_14_60] ON [dbo].[Hareketler]([Ind], [TipInd], [Owner], [DurumInd], [IslemTarihi], [CariHesapInd], [Aciklama], [GirisTarihi], [CiroCariInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_2_75_14_7_6_10_53_56] ON [dbo].[Hareketler]([Ind], [Owner], [IslemTarihi], [GirisTarihi], [CariHesapAdi], [CariHesapKodu], [BankaHesapAdi], [GelirAdi], [GiderAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_3_2_1_14_66_38_8_10_9] ON [dbo].[Hareketler]([TipInd], [Owner], [Ind], [GirisTarihi], [VardiyaKartInd], [Tutar], [BankaHesapInd], [BankaHesapAdi], [BankaHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_4_22_3_2_27_40_24_23_5] ON [dbo].[Hareketler]([BaslikInd], [StokInd], [TipInd], [Owner], [Miktar], [DepoInd], [StokAdi], [StokKodu], [CariHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_22_23_24_30_31_29_34_3_4] ON [dbo].[Hareketler]([StokInd], [StokKodu], [StokAdi], [BirimAdi], [Carpan], [AnaBirimAdi], [Fiyat], [TipInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_66_75_49_38_32_14_8] ON [dbo].[Hareketler]([Owner], [TipInd], [VardiyaKartInd], [IslemTarihi], [DurumInd], [Tutar], [ParaBirimi], [GirisTarihi], [BankaHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_54_1_3_14_32_66_38_95_49] ON [dbo].[Hareketler]([GiderInd], [Ind], [TipInd], [GirisTarihi], [ParaBirimi], [VardiyaKartInd], [Tutar], [KasayaIslensinMi], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_8_3_14_32_66_38_95_49] ON [dbo].[Hareketler]([Ind], [BankaHesapInd], [TipInd], [GirisTarihi], [ParaBirimi], [VardiyaKartInd], [Tutar], [KasayaIslensinMi], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_4_22_3_27_36_2_24_23] ON [dbo].[Hareketler]([Ind], [BaslikInd], [StokInd], [TipInd], [Miktar], [KDVOrani], [Owner], [StokAdi], [StokKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_4_40_1_22_66_68_76_3_27] ON [dbo].[Hareketler]([BaslikInd], [DepoInd], [Ind], [StokInd], [VardiyaKartInd], [SayacInd], [PerakendeInd], [TipInd], [Miktar])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_75_49_66_38_1_14_32] ON [dbo].[Hareketler]([Owner], [TipInd], [IslemTarihi], [DurumInd], [VardiyaKartInd], [Tutar], [Ind], [GirisTarihi], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_13_12_3_14_38_4_2_32] ON [dbo].[Hareketler]([Ind], [KKHesapAdi], [KKHesapKodu], [TipInd], [GirisTarihi], [Tutar], [BaslikInd], [Owner], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_24_23_5_1_36_3_4_27_2] ON [dbo].[Hareketler]([StokAdi], [StokKodu], [CariHesapInd], [Ind], [KDVOrani], [TipInd], [BaslikInd], [Miktar], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_1_4_2_3_14_32_38_48_47] ON [dbo].[Hareketler]([Ind], [BaslikInd], [Owner], [TipInd], [GirisTarihi], [ParaBirimi], [Tutar], [PersonelHesapAdi], [PersonelHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_1_22_3_27_23_24_30_34_38] ON [dbo].[Hareketler]([Ind], [StokInd], [TipInd], [Miktar], [StokKodu], [StokAdi], [BirimAdi], [Fiyat], [Tutar])
go

CREATE STATISTICS [_dta_stat_1346312056_2_5_1_36_3_27_4_22_24] ON [dbo].[Hareketler]([Owner], [CariHesapInd], [Ind], [KDVOrani], [TipInd], [Miktar], [BaslikInd], [StokInd], [StokAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_22_23_24_27_30_34_38_36_2] ON [dbo].[Hareketler]([StokInd], [StokKodu], [StokAdi], [Miktar], [BirimAdi], [Fiyat], [Tutar], [KDVOrani], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_5_19_3_2_83_49_75] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [CariHesapInd], [Aciklama], [TipInd], [Owner], [HedefHesapInd], [DurumInd], [IslemTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_48_47_3_38_4_2_13_12_14] ON [dbo].[Hareketler]([PersonelHesapAdi], [PersonelHesapKodu], [TipInd], [Tutar], [BaslikInd], [Owner], [KKHesapAdi], [KKHesapKodu], [GirisTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_3_27_4_40_22_1_2_66_68_72] ON [dbo].[Hareketler]([TipInd], [Miktar], [BaslikInd], [DepoInd], [StokInd], [Ind], [Owner], [VardiyaKartInd], [SayacInd], [YeniEndeks])
go

CREATE STATISTICS [_dta_stat_1346312056_1_66_3_38_49_75_2_32_14_8] ON [dbo].[Hareketler]([Ind], [VardiyaKartInd], [TipInd], [Tutar], [DurumInd], [IslemTarihi], [Owner], [ParaBirimi], [GirisTarihi], [BankaHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_22_4_3_40_2_27_36_5_24_23] ON [dbo].[Hareketler]([StokInd], [BaslikInd], [TipInd], [DepoInd], [Owner], [Miktar], [KDVOrani], [CariHesapInd], [StokAdi], [StokKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_1_66_68_3_2_72_27_22_76_4] ON [dbo].[Hareketler]([Ind], [VardiyaKartInd], [SayacInd], [TipInd], [Owner], [YeniEndeks], [Miktar], [StokInd], [PerakendeInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_27_2_1_76_72_4_40_22_66] ON [dbo].[Hareketler]([TipInd], [Miktar], [Owner], [Ind], [PerakendeInd], [YeniEndeks], [BaslikInd], [DepoInd], [StokInd], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_1346312056_40_4_22_27_1_3_36_2_24_23] ON [dbo].[Hareketler]([DepoInd], [BaslikInd], [StokInd], [Miktar], [Ind], [TipInd], [KDVOrani], [Owner], [StokAdi], [StokKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_4_3_1_22_23_24_30_31_29_34] ON [dbo].[Hareketler]([BaslikInd], [TipInd], [Ind], [StokInd], [StokKodu], [StokAdi], [BirimAdi], [Carpan], [AnaBirimAdi], [Fiyat])
go

CREATE STATISTICS [_dta_stat_1346312056_3_14_32_66_38_95_49_75_54_1] ON [dbo].[Hareketler]([TipInd], [GirisTarihi], [ParaBirimi], [VardiyaKartInd], [Tutar], [KasayaIslensinMi], [DurumInd], [IslemTarihi], [GiderInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_2_22_24_23_5_1_36_3_27_4] ON [dbo].[Hareketler]([Owner], [StokInd], [StokAdi], [StokKodu], [CariHesapInd], [Ind], [KDVOrani], [TipInd], [Miktar], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_38_1_4_2_48_47_13_12_14] ON [dbo].[Hareketler]([TipInd], [Tutar], [Ind], [BaslikInd], [Owner], [PersonelHesapAdi], [PersonelHesapKodu], [KKHesapAdi], [KKHesapKodu], [GirisTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_8_66_4_3_14_32_38_95_49] ON [dbo].[Hareketler]([Ind], [BankaHesapInd], [VardiyaKartInd], [BaslikInd], [TipInd], [GirisTarihi], [ParaBirimi], [Tutar], [KasayaIslensinMi], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_22_27_2_3_23_24_30_34_38_36] ON [dbo].[Hareketler]([StokInd], [Miktar], [Owner], [TipInd], [StokKodu], [StokAdi], [BirimAdi], [Fiyat], [Tutar], [KDVOrani])
go

CREATE STATISTICS [_dta_stat_1346312056_1_23_24_30_34_38_36_3_22_27_2] ON [dbo].[Hareketler]([Ind], [StokKodu], [StokAdi], [BirimAdi], [Fiyat], [Tutar], [KDVOrani], [TipInd], [StokInd], [Miktar], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_3_14_38_1_4_2_32_66_48_47_13] ON [dbo].[Hareketler]([TipInd], [GirisTarihi], [Tutar], [Ind], [BaslikInd], [Owner], [ParaBirimi], [VardiyaKartInd], [PersonelHesapAdi], [PersonelHesapKodu], [KKHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_66_3_32_2_38_1_14_95_7_6_53] ON [dbo].[Hareketler]([VardiyaKartInd], [TipInd], [ParaBirimi], [Owner], [Tutar], [Ind], [GirisTarihi], [KasayaIslensinMi], [CariHesapAdi], [CariHesapKodu], [GelirAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_4_3_38_66_2_13_12_14_32_48] ON [dbo].[Hareketler]([Ind], [BaslikInd], [TipInd], [Tutar], [VardiyaKartInd], [Owner], [KKHesapAdi], [KKHesapKodu], [GirisTarihi], [ParaBirimi], [PersonelHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_75_2_3_1_14_32_66_38_95_89_86] ON [dbo].[Hareketler]([IslemTarihi], [Owner], [TipInd], [Ind], [GirisTarihi], [ParaBirimi], [VardiyaKartInd], [Tutar], [KasayaIslensinMi], [HedefInd], [KaynakInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_66_1_14_32_38_19_95_7_6] ON [dbo].[Hareketler]([Owner], [TipInd], [VardiyaKartInd], [Ind], [GirisTarihi], [ParaBirimi], [Tutar], [Aciklama], [KasayaIslensinMi], [CariHesapAdi], [CariHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_14_3_38_1_4_32_66_95_49_75_8] ON [dbo].[Hareketler]([GirisTarihi], [TipInd], [Tutar], [Ind], [BaslikInd], [ParaBirimi], [VardiyaKartInd], [KasayaIslensinMi], [DurumInd], [IslemTarihi], [BankaHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_66_3_38_2_48_47_1_4_13_12_14] ON [dbo].[Hareketler]([VardiyaKartInd], [TipInd], [Tutar], [Owner], [PersonelHesapAdi], [PersonelHesapKodu], [Ind], [BaslikInd], [KKHesapAdi], [KKHesapKodu], [GirisTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_4_3_2_1_49_14_75_5_83_60_19] ON [dbo].[Hareketler]([BaslikInd], [TipInd], [Owner], [Ind], [DurumInd], [GirisTarihi], [IslemTarihi], [CariHesapInd], [HedefHesapInd], [CiroCariInd], [Aciklama])
go

CREATE STATISTICS [_dta_stat_1346312056_23_24_30_34_38_36_3_22_27_2_4] ON [dbo].[Hareketler]([StokKodu], [StokAdi], [BirimAdi], [Fiyat], [Tutar], [KDVOrani], [TipInd], [StokInd], [Miktar], [Owner], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_38_13_12_2_3_4_14_32_48_47] ON [dbo].[Hareketler]([Ind], [Tutar], [KKHesapAdi], [KKHesapKodu], [Owner], [TipInd], [BaslikInd], [GirisTarihi], [ParaBirimi], [PersonelHesapAdi], [PersonelHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_49_66_2_3_75_38_1_14_32_95_89] ON [dbo].[Hareketler]([DurumInd], [VardiyaKartInd], [Owner], [TipInd], [IslemTarihi], [Tutar], [Ind], [GirisTarihi], [ParaBirimi], [KasayaIslensinMi], [HedefInd])
go

CREATE STATISTICS [_dta_stat_1346312056_27_1_4_3_22_66_76_2_40_68_72] ON [dbo].[Hareketler]([Miktar], [Ind], [BaslikInd], [TipInd], [StokInd], [VardiyaKartInd], [PerakendeInd], [Owner], [DepoInd], [SayacInd], [YeniEndeks])
go

CREATE STATISTICS [_dta_stat_1346312056_13_12_3_14_38_4_2_32_66_48_47] ON [dbo].[Hareketler]([KKHesapAdi], [KKHesapKodu], [TipInd], [GirisTarihi], [Tutar], [BaslikInd], [Owner], [ParaBirimi], [VardiyaKartInd], [PersonelHesapAdi], [PersonelHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_27_1_2_3_40_4_22_24_23_5_36] ON [dbo].[Hareketler]([Miktar], [Ind], [Owner], [TipInd], [DepoInd], [BaslikInd], [StokInd], [StokAdi], [StokKodu], [CariHesapInd], [KDVOrani])
go

CREATE STATISTICS [_dta_stat_1346312056_3_66_32_38_1_4_2_48_47_13_12_14] ON [dbo].[Hareketler]([TipInd], [VardiyaKartInd], [ParaBirimi], [Tutar], [Ind], [BaslikInd], [Owner], [PersonelHesapAdi], [PersonelHesapKodu], [KKHesapAdi], [KKHesapKodu], [GirisTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_2_66_3_38_32_1_14_95_49_75_8_54] ON [dbo].[Hareketler]([Owner], [VardiyaKartInd], [TipInd], [Tutar], [ParaBirimi], [Ind], [GirisTarihi], [KasayaIslensinMi], [DurumInd], [IslemTarihi], [BankaHesapInd], [GiderInd])
go

CREATE STATISTICS [_dta_stat_1346312056_66_14_3_38_1_32_95_49_75_8_4_2] ON [dbo].[Hareketler]([VardiyaKartInd], [GirisTarihi], [TipInd], [Tutar], [Ind], [ParaBirimi], [KasayaIslensinMi], [DurumInd], [IslemTarihi], [BankaHesapInd], [BaslikInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1346312056_1_54_38_2_3_14_32_66_95_89_86_49] ON [dbo].[Hareketler]([Ind], [GiderInd], [Tutar], [Owner], [TipInd], [GirisTarihi], [ParaBirimi], [VardiyaKartInd], [KasayaIslensinMi], [HedefInd], [KaynakInd], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_66_38_14_1_8_2_3_32_95_89_86_49] ON [dbo].[Hareketler]([VardiyaKartInd], [Tutar], [GirisTarihi], [Ind], [BankaHesapInd], [Owner], [TipInd], [ParaBirimi], [KasayaIslensinMi], [HedefInd], [KaynakInd], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_22_2_3_27_4_1_23_24_30_34_38_36] ON [dbo].[Hareketler]([StokInd], [Owner], [TipInd], [Miktar], [BaslikInd], [Ind], [StokKodu], [StokAdi], [BirimAdi], [Fiyat], [Tutar], [KDVOrani])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_14_32_66_38_95_89_86_49_75_54_1] ON [dbo].[Hareketler]([Owner], [TipInd], [GirisTarihi], [ParaBirimi], [VardiyaKartInd], [Tutar], [KasayaIslensinMi], [HedefInd], [KaynakInd], [DurumInd], [IslemTarihi], [GiderInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1346312056_1_8_66_4_2_3_14_32_38_95_89_86_49] ON [dbo].[Hareketler]([Ind], [BankaHesapInd], [VardiyaKartInd], [BaslikInd], [Owner], [TipInd], [GirisTarihi], [ParaBirimi], [Tutar], [KasayaIslensinMi], [HedefInd], [KaynakInd], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_56_55_48_47_66_13_12_32_14_75_49] ON [dbo].[Hareketler]([Owner], [TipInd], [GiderAdi], [GiderKodu], [PersonelHesapAdi], [PersonelHesapKodu], [VardiyaKartInd], [KKHesapAdi], [KKHesapKodu], [ParaBirimi], [GirisTarihi], [IslemTarihi], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_56_55_54_3_66_38_2_48_47_4_13_12_14_32] ON [dbo].[Hareketler]([GiderAdi], [GiderKodu], [GiderInd], [TipInd], [VardiyaKartInd], [Tutar], [Owner], [PersonelHesapAdi], [PersonelHesapKodu], [BaslikInd], [KKHesapAdi], [KKHesapKodu], [GirisTarihi], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_4_3_38_2_1_14_32_66_95_89_86_49_75_8] ON [dbo].[Hareketler]([BaslikInd], [TipInd], [Tutar], [Owner], [Ind], [GirisTarihi], [ParaBirimi], [VardiyaKartInd], [KasayaIslensinMi], [HedefInd], [KaynakInd], [DurumInd], [IslemTarihi], [BankaHesapInd])
go

CREATE STATISTICS [_dta_stat_1346312056_14_95_1_48_47_19_2_3_66_38_54_56_55_4] ON [dbo].[Hareketler]([GirisTarihi], [KasayaIslensinMi], [Ind], [PersonelHesapAdi], [PersonelHesapKodu], [Aciklama], [Owner], [TipInd], [VardiyaKartInd], [Tutar], [GiderInd], [GiderAdi], [GiderKodu], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_66_38_1_2_54_56_55_48_47_4_13_12_14_32] ON [dbo].[Hareketler]([TipInd], [VardiyaKartInd], [Tutar], [Ind], [Owner], [GiderInd], [GiderAdi], [GiderKodu], [PersonelHesapAdi], [PersonelHesapKodu], [BaslikInd], [KKHesapAdi], [KKHesapKodu], [GirisTarihi], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_56_55_19_2_3_32_66_38_95_48_47_54_4] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [GiderAdi], [GiderKodu], [Aciklama], [Owner], [TipInd], [ParaBirimi], [VardiyaKartInd], [Tutar], [KasayaIslensinMi], [PersonelHesapAdi], [PersonelHesapKodu], [GiderInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_56_55_48_47_66_13_12_3_14_49_86_89_54_32_2_75] ON [dbo].[Hareketler]([GiderAdi], [GiderKodu], [PersonelHesapAdi], [PersonelHesapKodu], [VardiyaKartInd], [KKHesapAdi], [KKHesapKodu], [TipInd], [GirisTarihi], [DurumInd], [KaynakInd], [HedefInd], [GiderInd], [ParaBirimi], [Owner], [IslemTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_66_3_49_2_75_38_1_7_32_6_19_14_8_10_9_95] ON [dbo].[Hareketler]([VardiyaKartInd], [TipInd], [DurumInd], [Owner], [IslemTarihi], [Tutar], [Ind], [CariHesapAdi], [ParaBirimi], [CariHesapKodu], [Aciklama], [GirisTarihi], [BankaHesapInd], [BankaHesapAdi], [BankaHesapKodu], [KasayaIslensinMi])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_66_32_38_14_95_49_75_8_54_56_55_48_47_4] ON [dbo].[Hareketler]([Owner], [TipInd], [VardiyaKartInd], [ParaBirimi], [Tutar], [GirisTarihi], [KasayaIslensinMi], [DurumInd], [IslemTarihi], [BankaHesapInd], [GiderInd], [GiderAdi], [GiderKodu], [PersonelHesapAdi], [PersonelHesapKodu], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1346312056_3_14_66_38_1_2_8_32_95_54_56_55_48_47_4_13] ON [dbo].[Hareketler]([TipInd], [GirisTarihi], [VardiyaKartInd], [Tutar], [Ind], [Owner], [BankaHesapInd], [ParaBirimi], [KasayaIslensinMi], [GiderInd], [GiderAdi], [GiderKodu], [PersonelHesapAdi], [PersonelHesapKodu], [BaslikInd], [KKHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_89_32_1_2_3_14_66_38_95_86_49_75_8_54_4_7] ON [dbo].[Hareketler]([HedefInd], [ParaBirimi], [Ind], [Owner], [TipInd], [GirisTarihi], [VardiyaKartInd], [Tutar], [KasayaIslensinMi], [KaynakInd], [DurumInd], [IslemTarihi], [BankaHesapInd], [GiderInd], [BaslikInd], [CariHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_32_19_89_3_14_38_86_2_66_49_75_7_6_8_10] ON [dbo].[Hareketler]([Ind], [ParaBirimi], [Aciklama], [HedefInd], [TipInd], [GirisTarihi], [Tutar], [KaynakInd], [Owner], [VardiyaKartInd], [DurumInd], [IslemTarihi], [CariHesapAdi], [CariHesapKodu], [BankaHesapInd], [BankaHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_32_6_19_2_3_14_66_38_8_10_9_53_52_95_54] ON [dbo].[Hareketler]([Ind], [ParaBirimi], [CariHesapKodu], [Aciklama], [Owner], [TipInd], [GirisTarihi], [VardiyaKartInd], [Tutar], [BankaHesapInd], [BankaHesapAdi], [BankaHesapKodu], [GelirAdi], [GelirKodu], [KasayaIslensinMi], [GiderInd])
go

CREATE STATISTICS [_dta_stat_1346312056_66_3_2_1_14_32_38_95_89_86_49_75_8_54_4_13] ON [dbo].[Hareketler]([VardiyaKartInd], [TipInd], [Owner], [Ind], [GirisTarihi], [ParaBirimi], [Tutar], [KasayaIslensinMi], [HedefInd], [KaynakInd], [DurumInd], [IslemTarihi], [BankaHesapInd], [GiderInd], [BaslikInd], [KKHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_14_95_1_7_6_53_19_2_3_32_66_38_56_89_86_49] ON [dbo].[Hareketler]([GirisTarihi], [KasayaIslensinMi], [Ind], [CariHesapAdi], [CariHesapKodu], [GelirAdi], [Aciklama], [Owner], [TipInd], [ParaBirimi], [VardiyaKartInd], [Tutar], [GiderAdi], [HedefInd], [KaynakInd], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_66_3_38_32_14_95_49_75_8_54_4_2_56_55_48] ON [dbo].[Hareketler]([Ind], [VardiyaKartInd], [TipInd], [Tutar], [ParaBirimi], [GirisTarihi], [KasayaIslensinMi], [DurumInd], [IslemTarihi], [BankaHesapInd], [GiderInd], [BaslikInd], [Owner], [GiderAdi], [GiderKodu], [PersonelHesapAdi])
go

CREATE STATISTICS [_dta_stat_1346312056_2_3_66_14_38_8_32_95_54_56_55_48_47_4_13_12] ON [dbo].[Hareketler]([Owner], [TipInd], [VardiyaKartInd], [GirisTarihi], [Tutar], [BankaHesapInd], [ParaBirimi], [KasayaIslensinMi], [GiderInd], [GiderAdi], [GiderKodu], [PersonelHesapAdi], [PersonelHesapKodu], [BaslikInd], [KKHesapAdi], [KKHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_1_66_3_32_38_2_14_95_49_75_8_54_56_55_48_47] ON [dbo].[Hareketler]([Ind], [VardiyaKartInd], [TipInd], [ParaBirimi], [Tutar], [Owner], [GirisTarihi], [KasayaIslensinMi], [DurumInd], [IslemTarihi], [BankaHesapInd], [GiderInd], [GiderAdi], [GiderKodu], [PersonelHesapAdi], [PersonelHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_7_6_56_19_95_3_38_32_89_86_2_66_49_75] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [CariHesapAdi], [CariHesapKodu], [GiderAdi], [Aciklama], [KasayaIslensinMi], [TipInd], [Tutar], [ParaBirimi], [HedefInd], [KaynakInd], [Owner], [VardiyaKartInd], [DurumInd], [IslemTarihi])
go

CREATE STATISTICS [_dta_stat_1346312056_2_56_55_48_47_66_13_12_3_14_75_49_54_32_38_95] ON [dbo].[Hareketler]([Owner], [GiderAdi], [GiderKodu], [PersonelHesapAdi], [PersonelHesapKodu], [VardiyaKartInd], [KKHesapAdi], [KKHesapKodu], [TipInd], [GirisTarihi], [IslemTarihi], [DurumInd], [GiderInd], [ParaBirimi], [Tutar], [KasayaIslensinMi])
go

CREATE STATISTICS [_dta_stat_1346312056_32_86_1_19_2_3_66_38_49_75_7_6_14_8_10_9] ON [dbo].[Hareketler]([ParaBirimi], [KaynakInd], [Ind], [Aciklama], [Owner], [TipInd], [VardiyaKartInd], [Tutar], [DurumInd], [IslemTarihi], [CariHesapAdi], [CariHesapKodu], [GirisTarihi], [BankaHesapInd], [BankaHesapAdi], [BankaHesapKodu])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_10_9_66_19_38_2_3_32_53_52_56_55_95_54] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [BankaHesapAdi], [BankaHesapKodu], [VardiyaKartInd], [Aciklama], [Tutar], [Owner], [TipInd], [ParaBirimi], [GelirAdi], [GelirKodu], [GiderAdi], [GiderKodu], [KasayaIslensinMi], [GiderInd])
go

CREATE STATISTICS [_dta_stat_1346312056_1_8_66_14_38_10_9_19_2_3_32_53_52_56_55_95] ON [dbo].[Hareketler]([Ind], [BankaHesapInd], [VardiyaKartInd], [GirisTarihi], [Tutar], [BankaHesapAdi], [BankaHesapKodu], [Aciklama], [Owner], [TipInd], [ParaBirimi], [GelirAdi], [GelirKodu], [GiderAdi], [GiderKodu], [KasayaIslensinMi])
go

CREATE STATISTICS [_dta_stat_1346312056_1_14_32_53_52_19_2_3_66_38_56_55_95_48_47_54] ON [dbo].[Hareketler]([Ind], [GirisTarihi], [ParaBirimi], [GelirAdi], [GelirKodu], [Aciklama], [Owner], [TipInd], [VardiyaKartInd], [Tutar], [GiderAdi], [GiderKodu], [KasayaIslensinMi], [PersonelHesapAdi], [PersonelHesapKodu], [GiderInd])
go

CREATE STATISTICS [_dta_stat_165575628_1_34] ON [dbo].[Basliklar]([Ind], [OdemeTarihi])
go

CREATE STATISTICS [_dta_stat_165575628_20_33] ON [dbo].[Basliklar]([GiderInd], [TahsilatTutari])
go

CREATE STATISTICS [_dta_stat_165575628_1_16] ON [dbo].[Basliklar]([Ind], [FaturaInd])
go

CREATE STATISTICS [_dta_stat_165575628_24_2] ON [dbo].[Basliklar]([VardiyaKartInd], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_13_37] ON [dbo].[Basliklar]([Aktif], [FaturaIadeMi])
go

CREATE STATISTICS [_dta_stat_165575628_1_39] ON [dbo].[Basliklar]([Ind], [KasaNo])
go

CREATE STATISTICS [_dta_stat_165575628_24_5] ON [dbo].[Basliklar]([VardiyaKartInd], [Tarih])
go

CREATE STATISTICS [_dta_stat_165575628_2_13_5] ON [dbo].[Basliklar]([Owner], [Aktif], [Tarih])
go

CREATE STATISTICS [_dta_stat_165575628_1_24_2] ON [dbo].[Basliklar]([Ind], [VardiyaKartInd], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_1_10_3] ON [dbo].[Basliklar]([Ind], [DepoInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_165575628_28_1_24] ON [dbo].[Basliklar]([PlakaNo], [Ind], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_165575628_2_6_3] ON [dbo].[Basliklar]([Owner], [HesapInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_165575628_26_1_3] ON [dbo].[Basliklar]([KartNo], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_165575628_39_3_2] ON [dbo].[Basliklar]([KasaNo], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_13_1_5] ON [dbo].[Basliklar]([Aktif], [Ind], [Tarih])
go

CREATE STATISTICS [_dta_stat_165575628_6_13_20] ON [dbo].[Basliklar]([HesapInd], [Aktif], [GiderInd])
go

CREATE STATISTICS [_dta_stat_165575628_1_37_7] ON [dbo].[Basliklar]([Ind], [FaturaIadeMi], [HesapKodu])
go

CREATE STATISTICS [_dta_stat_165575628_13_23_2] ON [dbo].[Basliklar]([Aktif], [Iskonto], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_28_1_3] ON [dbo].[Basliklar]([PlakaNo], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_165575628_26_1_2] ON [dbo].[Basliklar]([KartNo], [Ind], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_1_6_24] ON [dbo].[Basliklar]([Ind], [HesapInd], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_165575628_6_1_34] ON [dbo].[Basliklar]([HesapInd], [Ind], [OdemeTarihi])
go

CREATE STATISTICS [_dta_stat_165575628_26_3_2] ON [dbo].[Basliklar]([KartNo], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_1_4_34] ON [dbo].[Basliklar]([Ind], [BelgeNo], [OdemeTarihi])
go

CREATE STATISTICS [_dta_stat_165575628_3_2_4] ON [dbo].[Basliklar]([TipInd], [Owner], [BelgeNo])
go

CREATE STATISTICS [_dta_stat_165575628_16_1_5] ON [dbo].[Basliklar]([FaturaInd], [Ind], [Tarih])
go

CREATE STATISTICS [_dta_stat_165575628_8_7_24_2] ON [dbo].[Basliklar]([HesapAdi], [HesapKodu], [VardiyaKartInd], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_1_3_2_39] ON [dbo].[Basliklar]([Ind], [TipInd], [Owner], [KasaNo])
go

CREATE STATISTICS [_dta_stat_165575628_3_6_2_4] ON [dbo].[Basliklar]([TipInd], [HesapInd], [Owner], [BelgeNo])
go

CREATE STATISTICS [_dta_stat_165575628_24_3_2_15] ON [dbo].[Basliklar]([VardiyaKartInd], [TipInd], [Owner], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_1_3_2_4] ON [dbo].[Basliklar]([Ind], [TipInd], [Owner], [BelgeNo])
go

CREATE STATISTICS [_dta_stat_165575628_1_6_3_24] ON [dbo].[Basliklar]([Ind], [HesapInd], [TipInd], [VardiyaKartInd])
go

CREATE STATISTICS [_dta_stat_165575628_3_2_13_6] ON [dbo].[Basliklar]([TipInd], [Owner], [Aktif], [HesapInd])
go

CREATE STATISTICS [_dta_stat_165575628_15_24_1_3] ON [dbo].[Basliklar]([DurumInd], [VardiyaKartInd], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_165575628_1_13_37_3] ON [dbo].[Basliklar]([Ind], [Aktif], [FaturaIadeMi], [TipInd])
go

CREATE STATISTICS [_dta_stat_165575628_15_3_6_5] ON [dbo].[Basliklar]([DurumInd], [TipInd], [HesapInd], [Tarih])
go

CREATE STATISTICS [_dta_stat_165575628_1_4_5_34] ON [dbo].[Basliklar]([Ind], [BelgeNo], [Tarih], [OdemeTarihi])
go

CREATE STATISTICS [_dta_stat_165575628_1_3_15_2] ON [dbo].[Basliklar]([Ind], [TipInd], [DurumInd], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_1_6_23_20] ON [dbo].[Basliklar]([Ind], [HesapInd], [Iskonto], [GiderInd])
go

CREATE STATISTICS [_dta_stat_165575628_2_15_13_5] ON [dbo].[Basliklar]([Owner], [DurumInd], [Aktif], [Tarih])
go

CREATE STATISTICS [_dta_stat_165575628_5_6_2_13] ON [dbo].[Basliklar]([Tarih], [HesapInd], [Owner], [Aktif])
go

CREATE STATISTICS [_dta_stat_165575628_5_2_3_37] ON [dbo].[Basliklar]([Tarih], [Owner], [TipInd], [FaturaIadeMi])
go

CREATE STATISTICS [_dta_stat_165575628_26_2_3_25] ON [dbo].[Basliklar]([KartNo], [Owner], [TipInd], [VardiyaNo])
go

CREATE STATISTICS [_dta_stat_165575628_20_1_3_2] ON [dbo].[Basliklar]([GiderInd], [Ind], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_3_5_13_15] ON [dbo].[Basliklar]([TipInd], [Tarih], [Aktif], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_6_2_5_15] ON [dbo].[Basliklar]([HesapInd], [Owner], [Tarih], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_2_8_7_1] ON [dbo].[Basliklar]([Owner], [HesapAdi], [HesapKodu], [Ind])
go

CREATE STATISTICS [_dta_stat_165575628_6_7_8_1] ON [dbo].[Basliklar]([HesapInd], [HesapKodu], [HesapAdi], [Ind])
go

CREATE STATISTICS [_dta_stat_165575628_1_6_2_15] ON [dbo].[Basliklar]([Ind], [HesapInd], [Owner], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_1_3_5_13] ON [dbo].[Basliklar]([Ind], [TipInd], [Tarih], [Aktif])
go

CREATE STATISTICS [_dta_stat_165575628_5_20_1_3] ON [dbo].[Basliklar]([Tarih], [GiderInd], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_165575628_5_10_3_1] ON [dbo].[Basliklar]([Tarih], [DepoInd], [TipInd], [Ind])
go

CREATE STATISTICS [_dta_stat_165575628_3_15_13_2] ON [dbo].[Basliklar]([TipInd], [DurumInd], [Aktif], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_8_6_2_15] ON [dbo].[Basliklar]([HesapAdi], [HesapInd], [Owner], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_1_24_3_28] ON [dbo].[Basliklar]([Ind], [VardiyaKartInd], [TipInd], [PlakaNo])
go

CREATE STATISTICS [_dta_stat_165575628_2_10_3_5_1] ON [dbo].[Basliklar]([Owner], [DepoInd], [TipInd], [Tarih], [Ind])
go

CREATE STATISTICS [_dta_stat_165575628_1_2_13_3_15] ON [dbo].[Basliklar]([Ind], [Owner], [Aktif], [TipInd], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_20_22_1_6_23] ON [dbo].[Basliklar]([GiderInd], [GiderAdi], [Ind], [HesapInd], [Iskonto])
go

CREATE STATISTICS [_dta_stat_165575628_26_5_2_3_25] ON [dbo].[Basliklar]([KartNo], [Tarih], [Owner], [TipInd], [VardiyaNo])
go

CREATE STATISTICS [_dta_stat_165575628_1_24_3_2_15] ON [dbo].[Basliklar]([Ind], [VardiyaKartInd], [TipInd], [Owner], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_3_1_6_7_8] ON [dbo].[Basliklar]([TipInd], [Ind], [HesapInd], [HesapKodu], [HesapAdi])
go

CREATE STATISTICS [_dta_stat_165575628_1_25_3_2_26] ON [dbo].[Basliklar]([Ind], [VardiyaNo], [TipInd], [Owner], [KartNo])
go

CREATE STATISTICS [_dta_stat_165575628_1_23_16_3_5] ON [dbo].[Basliklar]([Ind], [Iskonto], [FaturaInd], [TipInd], [Tarih])
go

CREATE STATISTICS [_dta_stat_165575628_1_5_2_3_37] ON [dbo].[Basliklar]([Ind], [Tarih], [Owner], [TipInd], [FaturaIadeMi])
go

CREATE STATISTICS [_dta_stat_165575628_1_13_20_3_2] ON [dbo].[Basliklar]([Ind], [Aktif], [GiderInd], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_1_5_3_20_13] ON [dbo].[Basliklar]([Ind], [Tarih], [TipInd], [GiderInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_165575628_3_13_2_5_37] ON [dbo].[Basliklar]([TipInd], [Aktif], [Owner], [Tarih], [FaturaIadeMi])
go

CREATE STATISTICS [_dta_stat_165575628_1_2_13_15_5] ON [dbo].[Basliklar]([Ind], [Owner], [Aktif], [DurumInd], [Tarih])
go

CREATE STATISTICS [_dta_stat_165575628_6_5_3_13_2] ON [dbo].[Basliklar]([HesapInd], [Tarih], [TipInd], [Aktif], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_2_3_5_15_13] ON [dbo].[Basliklar]([Owner], [TipInd], [Tarih], [DurumInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_165575628_2_20_5_3_15] ON [dbo].[Basliklar]([Owner], [GiderInd], [Tarih], [TipInd], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_3_16_1_5_13] ON [dbo].[Basliklar]([TipInd], [FaturaInd], [Ind], [Tarih], [Aktif])
go

CREATE STATISTICS [_dta_stat_165575628_1_3_6_2_4] ON [dbo].[Basliklar]([Ind], [TipInd], [HesapInd], [Owner], [BelgeNo])
go

CREATE STATISTICS [_dta_stat_165575628_1_2_13_5_6] ON [dbo].[Basliklar]([Ind], [Owner], [Aktif], [Tarih], [HesapInd])
go

CREATE STATISTICS [_dta_stat_165575628_15_6_3_2_13] ON [dbo].[Basliklar]([DurumInd], [HesapInd], [TipInd], [Owner], [Aktif])
go

CREATE STATISTICS [_dta_stat_165575628_1_24_5_2_25] ON [dbo].[Basliklar]([Ind], [VardiyaKartInd], [Tarih], [Owner], [VardiyaNo])
go

CREATE STATISTICS [_dta_stat_165575628_3_1_16_5_15] ON [dbo].[Basliklar]([TipInd], [Ind], [FaturaInd], [Tarih], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_2_3_5_1_20] ON [dbo].[Basliklar]([Owner], [TipInd], [Tarih], [Ind], [GiderInd])
go

CREATE STATISTICS [_dta_stat_165575628_15_3_2_5_1_20] ON [dbo].[Basliklar]([DurumInd], [TipInd], [Owner], [Tarih], [Ind], [GiderInd])
go

CREATE STATISTICS [_dta_stat_165575628_5_15_1_23_3_16] ON [dbo].[Basliklar]([Tarih], [DurumInd], [Ind], [Iskonto], [TipInd], [FaturaInd])
go

CREATE STATISTICS [_dta_stat_165575628_2_3_5_6_4_1] ON [dbo].[Basliklar]([Owner], [TipInd], [Tarih], [HesapInd], [BelgeNo], [Ind])
go

CREATE STATISTICS [_dta_stat_165575628_5_6_2_15_13_1] ON [dbo].[Basliklar]([Tarih], [HesapInd], [Owner], [DurumInd], [Aktif], [Ind])
go

CREATE STATISTICS [_dta_stat_165575628_5_6_2_15_3_4] ON [dbo].[Basliklar]([Tarih], [HesapInd], [Owner], [DurumInd], [TipInd], [BelgeNo])
go

CREATE STATISTICS [_dta_stat_165575628_1_5_3_25_24_6] ON [dbo].[Basliklar]([Ind], [Tarih], [TipInd], [VardiyaNo], [VardiyaKartInd], [HesapInd])
go

CREATE STATISTICS [_dta_stat_165575628_1_2_13_5_3_15] ON [dbo].[Basliklar]([Ind], [Owner], [Aktif], [Tarih], [TipInd], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_5_1_23_15_3_13] ON [dbo].[Basliklar]([Tarih], [Ind], [Iskonto], [DurumInd], [TipInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_165575628_2_6_1_8_15_3] ON [dbo].[Basliklar]([Owner], [HesapInd], [Ind], [HesapAdi], [DurumInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_165575628_25_5_1_3_2_26] ON [dbo].[Basliklar]([VardiyaNo], [Tarih], [Ind], [TipInd], [Owner], [KartNo])
go

CREATE STATISTICS [_dta_stat_165575628_1_6_3_2_5_20] ON [dbo].[Basliklar]([Ind], [HesapInd], [TipInd], [Owner], [Tarih], [GiderInd])
go

CREATE STATISTICS [_dta_stat_165575628_3_6_5_15_13_37] ON [dbo].[Basliklar]([TipInd], [HesapInd], [Tarih], [DurumInd], [Aktif], [FaturaIadeMi])
go

CREATE STATISTICS [_dta_stat_165575628_1_6_20_13_3_2] ON [dbo].[Basliklar]([Ind], [HesapInd], [GiderInd], [Aktif], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_2_20_22_1_13_34] ON [dbo].[Basliklar]([Owner], [GiderInd], [GiderAdi], [Ind], [Aktif], [OdemeTarihi])
go

CREATE STATISTICS [_dta_stat_165575628_6_5_3_20_13_2] ON [dbo].[Basliklar]([HesapInd], [Tarih], [TipInd], [GiderInd], [Aktif], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_5_2_3_1_13_37] ON [dbo].[Basliklar]([Tarih], [Owner], [TipInd], [Ind], [Aktif], [FaturaIadeMi])
go

CREATE STATISTICS [_dta_stat_165575628_5_6_2_3_15_13] ON [dbo].[Basliklar]([Tarih], [HesapInd], [Owner], [TipInd], [DurumInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_165575628_1_20_22_5_3_2_13] ON [dbo].[Basliklar]([Ind], [GiderInd], [GiderAdi], [Tarih], [TipInd], [Owner], [Aktif])
go

CREATE STATISTICS [_dta_stat_165575628_5_25_8_7_24_2_6] ON [dbo].[Basliklar]([Tarih], [VardiyaNo], [HesapAdi], [HesapKodu], [VardiyaKartInd], [Owner], [HesapInd])
go

CREATE STATISTICS [_dta_stat_165575628_37_1_38_3_5_15_13] ON [dbo].[Basliklar]([FaturaIadeMi], [Ind], [TesisatKodu], [TipInd], [Tarih], [DurumInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_165575628_25_5_8_7_2_6_3] ON [dbo].[Basliklar]([VardiyaNo], [Tarih], [HesapAdi], [HesapKodu], [Owner], [HesapInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_165575628_5_3_15_13_20_2_1] ON [dbo].[Basliklar]([Tarih], [TipInd], [DurumInd], [Aktif], [GiderInd], [Owner], [Ind])
go

CREATE STATISTICS [_dta_stat_165575628_2_8_7_3_1_5_25] ON [dbo].[Basliklar]([Owner], [HesapAdi], [HesapKodu], [TipInd], [Ind], [Tarih], [VardiyaNo])
go

CREATE STATISTICS [_dta_stat_165575628_6_33_20_1_3_2_5] ON [dbo].[Basliklar]([HesapInd], [TahsilatTutari], [GiderInd], [Ind], [TipInd], [Owner], [Tarih])
go

CREATE STATISTICS [_dta_stat_165575628_1_33_20_3_2_5_13] ON [dbo].[Basliklar]([Ind], [TahsilatTutari], [GiderInd], [TipInd], [Owner], [Tarih], [Aktif])
go

CREATE STATISTICS [_dta_stat_165575628_3_6_5_2_15_1_4] ON [dbo].[Basliklar]([TipInd], [HesapInd], [Tarih], [Owner], [DurumInd], [Ind], [BelgeNo])
go

CREATE STATISTICS [_dta_stat_165575628_2_8_7_3_24_5_25_6] ON [dbo].[Basliklar]([Owner], [HesapAdi], [HesapKodu], [TipInd], [VardiyaKartInd], [Tarih], [VardiyaNo], [HesapInd])
go

CREATE STATISTICS [_dta_stat_165575628_3_2_5_20_13_33_15_1] ON [dbo].[Basliklar]([TipInd], [Owner], [Tarih], [GiderInd], [Aktif], [TahsilatTutari], [DurumInd], [Ind])
go

CREATE STATISTICS [_dta_stat_165575628_8_6_2_1_3_5_15_4] ON [dbo].[Basliklar]([HesapAdi], [HesapInd], [Owner], [Ind], [TipInd], [Tarih], [DurumInd], [BelgeNo])
go

CREATE STATISTICS [_dta_stat_165575628_2_3_5_6_28_4_1_8] ON [dbo].[Basliklar]([Owner], [TipInd], [Tarih], [HesapInd], [PlakaNo], [BelgeNo], [Ind], [HesapAdi])
go

CREATE STATISTICS [_dta_stat_165575628_1_5_3_15_13_20_2_6] ON [dbo].[Basliklar]([Ind], [Tarih], [TipInd], [DurumInd], [Aktif], [GiderInd], [Owner], [HesapInd])
go

CREATE STATISTICS [_dta_stat_165575628_1_13_34_3_2_5_33_15] ON [dbo].[Basliklar]([Ind], [Aktif], [OdemeTarihi], [TipInd], [Owner], [Tarih], [TahsilatTutari], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_8_5_6_2_15_3_28_4] ON [dbo].[Basliklar]([HesapAdi], [Tarih], [HesapInd], [Owner], [DurumInd], [TipInd], [PlakaNo], [BelgeNo])
go

CREATE STATISTICS [_dta_stat_165575628_20_13_1_6_22_34_3_2] ON [dbo].[Basliklar]([GiderInd], [Aktif], [Ind], [HesapInd], [GiderAdi], [OdemeTarihi], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_6_5_3_15_13_20_2_1] ON [dbo].[Basliklar]([HesapInd], [Tarih], [TipInd], [DurumInd], [Aktif], [GiderInd], [Owner], [Ind])
go

CREATE STATISTICS [_dta_stat_165575628_28_1_6_2_15_8_3_5] ON [dbo].[Basliklar]([PlakaNo], [Ind], [HesapInd], [Owner], [DurumInd], [HesapAdi], [TipInd], [Tarih])
go

CREATE STATISTICS [_dta_stat_165575628_5_3_20_13_2_1_6_33_15] ON [dbo].[Basliklar]([Tarih], [TipInd], [GiderInd], [Aktif], [Owner], [Ind], [HesapInd], [TahsilatTutari], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_1_5_6_2_15_3_28_4_8] ON [dbo].[Basliklar]([Ind], [Tarih], [HesapInd], [Owner], [DurumInd], [TipInd], [PlakaNo], [BelgeNo], [HesapAdi])
go

CREATE STATISTICS [_dta_stat_165575628_3_2_5_20_13_15_1_6_22] ON [dbo].[Basliklar]([TipInd], [Owner], [Tarih], [GiderInd], [Aktif], [DurumInd], [Ind], [HesapInd], [GiderAdi])
go

CREATE STATISTICS [_dta_stat_165575628_1_7_8_37_38_3_5_15_13] ON [dbo].[Basliklar]([Ind], [HesapKodu], [HesapAdi], [FaturaIadeMi], [TesisatKodu], [TipInd], [Tarih], [DurumInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_165575628_1_3_6_5_15_13_37_4_34] ON [dbo].[Basliklar]([Ind], [TipInd], [HesapInd], [Tarih], [DurumInd], [Aktif], [FaturaIadeMi], [BelgeNo], [OdemeTarihi])
go

CREATE STATISTICS [_dta_stat_165575628_37_1_38_3_6_5_15_13_7_8] ON [dbo].[Basliklar]([FaturaIadeMi], [Ind], [TesisatKodu], [TipInd], [HesapInd], [Tarih], [DurumInd], [Aktif], [HesapKodu], [HesapAdi])
go

CREATE STATISTICS [_dta_stat_165575628_1_3_2_5_20_13_6_22_34_33] ON [dbo].[Basliklar]([Ind], [TipInd], [Owner], [Tarih], [GiderInd], [Aktif], [HesapInd], [GiderAdi], [OdemeTarihi], [TahsilatTutari])
go

CREATE STATISTICS [_dta_stat_165575628_20_22_1_13_34_3_2_5_33_15] ON [dbo].[Basliklar]([GiderInd], [GiderAdi], [Ind], [Aktif], [OdemeTarihi], [TipInd], [Owner], [Tarih], [TahsilatTutari], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_1_20_5_3_2_13_6_22_34_15] ON [dbo].[Basliklar]([Ind], [GiderInd], [Tarih], [TipInd], [Owner], [Aktif], [HesapInd], [GiderAdi], [OdemeTarihi], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_3_6_5_15_13_1_4_34_7_8_37] ON [dbo].[Basliklar]([TipInd], [HesapInd], [Tarih], [DurumInd], [Aktif], [Ind], [BelgeNo], [OdemeTarihi], [HesapKodu], [HesapAdi], [FaturaIadeMi])
go

CREATE STATISTICS [_dta_stat_165575628_20_6_33_1_3_2_5_13_15_22_34] ON [dbo].[Basliklar]([GiderInd], [HesapInd], [TahsilatTutari], [Ind], [TipInd], [Owner], [Tarih], [Aktif], [DurumInd], [GiderAdi], [OdemeTarihi])
go

CREATE STATISTICS [_dta_stat_165575628_1_7_8_37_38_3_6_5_15_13_4] ON [dbo].[Basliklar]([Ind], [HesapKodu], [HesapAdi], [FaturaIadeMi], [TesisatKodu], [TipInd], [HesapInd], [Tarih], [DurumInd], [Aktif], [BelgeNo])
go

CREATE STATISTICS [_dta_stat_165575628_1_6_20_33_22_23_3_2_5_13_34_15] ON [dbo].[Basliklar]([Ind], [HesapInd], [GiderInd], [TahsilatTutari], [GiderAdi], [Iskonto], [TipInd], [Owner], [Tarih], [Aktif], [OdemeTarihi], [DurumInd])
go

CREATE STATISTICS [_dta_stat_165575628_1_37_38_3_6_5_15_13_4_34_7_8] ON [dbo].[Basliklar]([Ind], [FaturaIadeMi], [TesisatKodu], [TipInd], [HesapInd], [Tarih], [DurumInd], [Aktif], [BelgeNo], [OdemeTarihi], [HesapKodu], [HesapAdi])
go

CREATE STATISTICS [_dta_stat_165575628_1_6_23_33_20_3_2_5_13_34_4_17_18_19_21_22] ON [dbo].[Basliklar]([Ind], [HesapInd], [Iskonto], [TahsilatTutari], [GiderInd], [TipInd], [Owner], [Tarih], [Aktif], [OdemeTarihi], [BelgeNo], [GelirInd], [GelirKodu], [GelirAdi], [GiderKodu], [GiderAdi])
go

CREATE STATISTICS [_dta_stat_165575628_1_20_5_3_2_13_6_34_4_23_17_18_19_21_22_32] ON [dbo].[Basliklar]([Ind], [GiderInd], [Tarih], [TipInd], [Owner], [Aktif], [HesapInd], [OdemeTarihi], [BelgeNo], [Iskonto], [GelirInd], [GelirKodu], [GelirAdi], [GiderKodu], [GiderAdi], [Yuvarlama])
go

CREATE STATISTICS [_dta_stat_1317579732_8_3] ON [dbo].[SatisKasasi]([IsYeniSatis], [IslemInd])
go

CREATE STATISTICS [_dta_stat_1317579732_1_7] ON [dbo].[SatisKasasi]([Ind], [Tarih])
go

CREATE STATISTICS [_dta_stat_1317579732_8_6_1] ON [dbo].[SatisKasasi]([IsYeniSatis], [BaslikInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1317579732_8_6_3] ON [dbo].[SatisKasasi]([IsYeniSatis], [BaslikInd], [IslemInd])
go

CREATE STATISTICS [_dta_stat_1317579732_8_5_6] ON [dbo].[SatisKasasi]([IsYeniSatis], [KullaniciInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1317579732_4_7_8] ON [dbo].[SatisKasasi]([Tablo], [Tarih], [IsYeniSatis])
go

CREATE STATISTICS [_dta_stat_1317579732_1_3_8] ON [dbo].[SatisKasasi]([Ind], [IslemInd], [IsYeniSatis])
go

CREATE STATISTICS [_dta_stat_1317579732_2_1_6] ON [dbo].[SatisKasasi]([Owner], [Ind], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1317579732_1_4_2] ON [dbo].[SatisKasasi]([Ind], [Tablo], [Owner])
go

CREATE STATISTICS [_dta_stat_1317579732_1_5_2] ON [dbo].[SatisKasasi]([Ind], [KullaniciInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1317579732_2_3_5] ON [dbo].[SatisKasasi]([Owner], [IslemInd], [KullaniciInd])
go

CREATE STATISTICS [_dta_stat_1317579732_4_2_8] ON [dbo].[SatisKasasi]([Tablo], [Owner], [IsYeniSatis])
go

CREATE STATISTICS [_dta_stat_1317579732_2_8_6] ON [dbo].[SatisKasasi]([Owner], [IsYeniSatis], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1317579732_5_8_4] ON [dbo].[SatisKasasi]([KullaniciInd], [IsYeniSatis], [Tablo])
go

CREATE STATISTICS [_dta_stat_1317579732_6_1_4] ON [dbo].[SatisKasasi]([BaslikInd], [Ind], [Tablo])
go

CREATE STATISTICS [_dta_stat_1317579732_3_4_5_2] ON [dbo].[SatisKasasi]([IslemInd], [Tablo], [KullaniciInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1317579732_6_5_8_4] ON [dbo].[SatisKasasi]([BaslikInd], [KullaniciInd], [IsYeniSatis], [Tablo])
go

CREATE STATISTICS [_dta_stat_1317579732_3_2_8_4] ON [dbo].[SatisKasasi]([IslemInd], [Owner], [IsYeniSatis], [Tablo])
go

CREATE STATISTICS [_dta_stat_1317579732_2_5_8_3] ON [dbo].[SatisKasasi]([Owner], [KullaniciInd], [IsYeniSatis], [IslemInd])
go

CREATE STATISTICS [_dta_stat_1317579732_1_5_8_2] ON [dbo].[SatisKasasi]([Ind], [KullaniciInd], [IsYeniSatis], [Owner])
go

CREATE STATISTICS [_dta_stat_1317579732_1_3_2_8] ON [dbo].[SatisKasasi]([Ind], [IslemInd], [Owner], [IsYeniSatis])
go

CREATE STATISTICS [_dta_stat_1317579732_5_2_1_4] ON [dbo].[SatisKasasi]([KullaniciInd], [Owner], [Ind], [Tablo])
go

CREATE STATISTICS [_dta_stat_1317579732_1_5_8_4] ON [dbo].[SatisKasasi]([Ind], [KullaniciInd], [IsYeniSatis], [Tablo])
go

CREATE STATISTICS [_dta_stat_1317579732_1_6_4_2] ON [dbo].[SatisKasasi]([Ind], [BaslikInd], [Tablo], [Owner])
go

CREATE STATISTICS [_dta_stat_1317579732_2_8_5_6] ON [dbo].[SatisKasasi]([Owner], [IsYeniSatis], [KullaniciInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1317579732_2_6_4_8] ON [dbo].[SatisKasasi]([Owner], [BaslikInd], [Tablo], [IsYeniSatis])
go

CREATE STATISTICS [_dta_stat_1317579732_3_5_8_4] ON [dbo].[SatisKasasi]([IslemInd], [KullaniciInd], [IsYeniSatis], [Tablo])
go

CREATE STATISTICS [_dta_stat_1317579732_1_6_3_8] ON [dbo].[SatisKasasi]([Ind], [BaslikInd], [IslemInd], [IsYeniSatis])
go

CREATE STATISTICS [_dta_stat_1317579732_4_8_1_3_5] ON [dbo].[SatisKasasi]([Tablo], [IsYeniSatis], [Ind], [IslemInd], [KullaniciInd])
go

CREATE STATISTICS [_dta_stat_1317579732_3_1_5_8_2] ON [dbo].[SatisKasasi]([IslemInd], [Ind], [KullaniciInd], [IsYeniSatis], [Owner])
go

CREATE STATISTICS [_dta_stat_1317579732_1_2_8_4_3] ON [dbo].[SatisKasasi]([Ind], [Owner], [IsYeniSatis], [Tablo], [IslemInd])
go

CREATE STATISTICS [_dta_stat_1317579732_8_4_7_3_6] ON [dbo].[SatisKasasi]([IsYeniSatis], [Tablo], [Tarih], [IslemInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1317579732_8_2_4_1_6] ON [dbo].[SatisKasasi]([IsYeniSatis], [Owner], [Tablo], [Ind], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1317579732_6_2_4_5_8] ON [dbo].[SatisKasasi]([BaslikInd], [Owner], [Tablo], [KullaniciInd], [IsYeniSatis])
go

CREATE STATISTICS [_dta_stat_1317579732_2_3_4_8_6] ON [dbo].[SatisKasasi]([Owner], [IslemInd], [Tablo], [IsYeniSatis], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1317579732_6_1_5_8_2] ON [dbo].[SatisKasasi]([BaslikInd], [Ind], [KullaniciInd], [IsYeniSatis], [Owner])
go

CREATE STATISTICS [_dta_stat_1317579732_1_3_6_2_8] ON [dbo].[SatisKasasi]([Ind], [IslemInd], [BaslikInd], [Owner], [IsYeniSatis])
go

CREATE STATISTICS [_dta_stat_1317579732_5_6_2_1_4] ON [dbo].[SatisKasasi]([KullaniciInd], [BaslikInd], [Owner], [Ind], [Tablo])
go

CREATE STATISTICS [_dta_stat_1317579732_5_4_2_8_1_3] ON [dbo].[SatisKasasi]([KullaniciInd], [Tablo], [Owner], [IsYeniSatis], [Ind], [IslemInd])
go

CREATE STATISTICS [_dta_stat_1317579732_1_3_6_5_8_2] ON [dbo].[SatisKasasi]([Ind], [IslemInd], [BaslikInd], [KullaniciInd], [IsYeniSatis], [Owner])
go

CREATE STATISTICS [_dta_stat_1317579732_3_6_8_4_1_7] ON [dbo].[SatisKasasi]([IslemInd], [BaslikInd], [IsYeniSatis], [Tablo], [Ind], [Tarih])
go

CREATE STATISTICS [_dta_stat_1317579732_5_2_4_8_3_6] ON [dbo].[SatisKasasi]([KullaniciInd], [Owner], [Tablo], [IsYeniSatis], [IslemInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1317579732_8_4_1_3_6_5] ON [dbo].[SatisKasasi]([IsYeniSatis], [Tablo], [Ind], [IslemInd], [BaslikInd], [KullaniciInd])
go

CREATE STATISTICS [_dta_stat_1317579732_8_4_1_6_3_2] ON [dbo].[SatisKasasi]([IsYeniSatis], [Tablo], [Ind], [BaslikInd], [IslemInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1317579732_6_4_8_1_5_2_3] ON [dbo].[SatisKasasi]([BaslikInd], [Tablo], [IsYeniSatis], [Ind], [KullaniciInd], [Owner], [IslemInd])
go

CREATE STATISTICS [_dta_stat_661577395_1_26] ON [dbo].[Hesaplar]([Ind], [BankaInd])
go

CREATE STATISTICS [_dta_stat_661577395_6_2] ON [dbo].[Hesaplar]([StokInd], [Owner])
go

CREATE STATISTICS [_dta_stat_661577395_37_6] ON [dbo].[Hesaplar]([Raf], [StokInd])
go

CREATE STATISTICS [_dta_stat_661577395_3_40] ON [dbo].[Hesaplar]([TipInd], [FisPortfoyu])
go

CREATE STATISTICS [_dta_stat_661577395_3_36] ON [dbo].[Hesaplar]([TipInd], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_661577395_4_3_2] ON [dbo].[Hesaplar]([HesapKodu], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_661577395_36_1_26] ON [dbo].[Hesaplar]([ParaBirimi], [Ind], [BankaInd])
go

CREATE STATISTICS [_dta_stat_661577395_2_3_41] ON [dbo].[Hesaplar]([Owner], [TipInd], [OtomasyonKodu])
go

CREATE STATISTICS [_dta_stat_661577395_2_1_6] ON [dbo].[Hesaplar]([Owner], [Ind], [StokInd])
go

CREATE STATISTICS [_dta_stat_661577395_1_6_3] ON [dbo].[Hesaplar]([Ind], [StokInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_661577395_37_1_36] ON [dbo].[Hesaplar]([Raf], [Ind], [ParaBirimi])
go

CREATE STATISTICS [_dta_stat_661577395_2_3_40] ON [dbo].[Hesaplar]([Owner], [TipInd], [FisPortfoyu])
go

CREATE STATISTICS [_dta_stat_661577395_5_10_4] ON [dbo].[Hesaplar]([HesapAdi], [OzelKodu], [HesapKodu])
go

CREATE STATISTICS [_dta_stat_661577395_3_1_26] ON [dbo].[Hesaplar]([TipInd], [Ind], [BankaInd])
go

CREATE STATISTICS [_dta_stat_661577395_4_1_2] ON [dbo].[Hesaplar]([HesapKodu], [Ind], [Owner])
go

CREATE STATISTICS [_dta_stat_661577395_2_3_5] ON [dbo].[Hesaplar]([Owner], [TipInd], [HesapAdi])
go

CREATE STATISTICS [_dta_stat_661577395_2_36_3] ON [dbo].[Hesaplar]([Owner], [ParaBirimi], [TipInd])
go

CREATE STATISTICS [_dta_stat_661577395_3_32_2] ON [dbo].[Hesaplar]([TipInd], [Aktif], [Owner])
go

CREATE STATISTICS [_dta_stat_661577395_4_5_1_10] ON [dbo].[Hesaplar]([HesapKodu], [HesapAdi], [Ind], [OzelKodu])
go

CREATE STATISTICS [_dta_stat_661577395_3_1_2_38] ON [dbo].[Hesaplar]([TipInd], [Ind], [Owner], [GrupInd])
go

CREATE STATISTICS [_dta_stat_661577395_3_2_6_9] ON [dbo].[Hesaplar]([TipInd], [Owner], [StokInd], [OzelKodInd])
go

CREATE STATISTICS [_dta_stat_661577395_1_36_3_26] ON [dbo].[Hesaplar]([Ind], [ParaBirimi], [TipInd], [BankaInd])
go

CREATE STATISTICS [_dta_stat_661577395_5_3_41_2] ON [dbo].[Hesaplar]([HesapAdi], [TipInd], [OtomasyonKodu], [Owner])
go

CREATE STATISTICS [_dta_stat_661577395_3_2_1_26] ON [dbo].[Hesaplar]([TipInd], [Owner], [Ind], [BankaInd])
go

CREATE STATISTICS [_dta_stat_661577395_37_1_3_6_2] ON [dbo].[Hesaplar]([Raf], [Ind], [TipInd], [StokInd], [Owner])
go

CREATE STATISTICS [_dta_stat_661577395_37_3_6_2_9] ON [dbo].[Hesaplar]([Raf], [TipInd], [StokInd], [Owner], [OzelKodInd])
go

CREATE STATISTICS [_dta_stat_1381579960_1_2] ON [dbo].[StokDetaylari]([Ind], [Owner])
go

CREATE STATISTICS [_dta_stat_1381579960_12_10_4] ON [dbo].[StokDetaylari]([GiderInd], [IsAnaFiyat], [StokInd])
go

CREATE STATISTICS [_dta_stat_1381579960_12_1_3] ON [dbo].[StokDetaylari]([GiderInd], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_1381579960_3_4_1] ON [dbo].[StokDetaylari]([TipInd], [StokInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1381579960_4_5_3] ON [dbo].[StokDetaylari]([StokInd], [Barkod], [TipInd])
go

CREATE STATISTICS [_dta_stat_1381579960_3_2_1] ON [dbo].[StokDetaylari]([TipInd], [Owner], [Ind])
go

CREATE STATISTICS [_dta_stat_1381579960_4_3_2] ON [dbo].[StokDetaylari]([StokInd], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_1381579960_12_5_3] ON [dbo].[StokDetaylari]([GiderInd], [Barkod], [TipInd])
go

CREATE STATISTICS [_dta_stat_1381579960_4_1_2_3] ON [dbo].[StokDetaylari]([StokInd], [Ind], [Owner], [TipInd])
go

CREATE STATISTICS [_dta_stat_1381579960_4_9_2_3] ON [dbo].[StokDetaylari]([StokInd], [Tutar], [Owner], [TipInd])
go

CREATE STATISTICS [_dta_stat_1381579960_3_1_2_4_9] ON [dbo].[StokDetaylari]([TipInd], [Ind], [Owner], [StokInd], [Tutar])
go

CREATE STATISTICS [_dta_stat_1381579960_2_3_10_4_1] ON [dbo].[StokDetaylari]([Owner], [TipInd], [IsAnaFiyat], [StokInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1445580188_1_5] ON [dbo].[Stoklar]([Ind], [AnaBirimInd])
go

CREATE STATISTICS [_dta_stat_1445580188_4_3] ON [dbo].[Stoklar]([StokAdi], [StokKodu])
go

CREATE STATISTICS [_dta_stat_1445580188_9_2] ON [dbo].[Stoklar]([Aktif], [Owner])
go

CREATE STATISTICS [_dta_stat_1445580188_1_7] ON [dbo].[Stoklar]([Ind], [AlisKDVGrupInd])
go

CREATE STATISTICS [_dta_stat_1445580188_6_1] ON [dbo].[Stoklar]([GrupInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1445580188_1_2_8] ON [dbo].[Stoklar]([Ind], [Owner], [SatisKDVGrupInd])
go

CREATE STATISTICS [_dta_stat_1445580188_1_2_9] ON [dbo].[Stoklar]([Ind], [Owner], [Aktif])
go

CREATE STATISTICS [_dta_stat_1445580188_9_1_3] ON [dbo].[Stoklar]([Aktif], [Ind], [StokKodu])
go

CREATE STATISTICS [_dta_stat_1445580188_1_4_3] ON [dbo].[Stoklar]([Ind], [StokAdi], [StokKodu])
go

CREATE STATISTICS [_dta_stat_1445580188_6_9_2] ON [dbo].[Stoklar]([GrupInd], [Aktif], [Owner])
go

CREATE STATISTICS [_dta_stat_1445580188_5_8_1] ON [dbo].[Stoklar]([AnaBirimInd], [SatisKDVGrupInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1445580188_1_2_5_8] ON [dbo].[Stoklar]([Ind], [Owner], [AnaBirimInd], [SatisKDVGrupInd])
go

CREATE STATISTICS [_dta_stat_1445580188_1_8_4_3] ON [dbo].[Stoklar]([Ind], [SatisKDVGrupInd], [StokAdi], [StokKodu])
go

CREATE STATISTICS [_dta_stat_1445580188_1_6_9_2] ON [dbo].[Stoklar]([Ind], [GrupInd], [Aktif], [Owner])
go

CREATE STATISTICS [_dta_stat_1445580188_8_7_1_2] ON [dbo].[Stoklar]([SatisKDVGrupInd], [AlisKDVGrupInd], [Ind], [Owner])
go

CREATE STATISTICS [_dta_stat_1445580188_1_2_3_4_5_6_7_8_9] ON [dbo].[Stoklar]([Ind], [Owner], [StokKodu], [StokAdi], [AnaBirimInd], [GrupInd], [AlisKDVGrupInd], [SatisKDVGrupInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_629577281_3_4] ON [dbo].[HesapDetaylari]([TipInd], [CariHesapInd])
go

CREATE STATISTICS [_dta_stat_629577281_3_2_8] ON [dbo].[HesapDetaylari]([TipInd], [Owner], [DepoInd])
go

CREATE STATISTICS [_dta_stat_629577281_2_10_3] ON [dbo].[HesapDetaylari]([Owner], [AdaGrubu], [TipInd])
go

CREATE STATISTICS [_dta_stat_629577281_2_13_3] ON [dbo].[HesapDetaylari]([Owner], [OtomasyonKodu], [TipInd])
go

CREATE STATISTICS [_dta_stat_629577281_3_10_5_2] ON [dbo].[HesapDetaylari]([TipInd], [AdaGrubu], [Plaka], [Owner])
go

CREATE STATISTICS [_dta_stat_629577281_1_4_3_8] ON [dbo].[HesapDetaylari]([Ind], [CariHesapInd], [TipInd], [DepoInd])
go

CREATE STATISTICS [_dta_stat_629577281_8_10_3_2] ON [dbo].[HesapDetaylari]([DepoInd], [AdaGrubu], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_629577281_3_2_1_8_13] ON [dbo].[HesapDetaylari]([TipInd], [Owner], [Ind], [DepoInd], [OtomasyonKodu])
go

CREATE STATISTICS [_dta_stat_629577281_1_3_8_2_4] ON [dbo].[HesapDetaylari]([Ind], [TipInd], [DepoInd], [Owner], [CariHesapInd])
go

CREATE STATISTICS [_dta_stat_2052202361_5_2] ON [dbo].[Hareketler]([CariHesapInd], [Owner])
go

CREATE STATISTICS [_dta_stat_2052202361_58_3_4] ON [dbo].[Hareketler]([CiroCariInd], [TipInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_2052202361_4_2_3] ON [dbo].[Hareketler]([BaslikInd], [Owner], [TipInd])
go

CREATE STATISTICS [_dta_stat_2052202361_2_3_83_47] ON [dbo].[Hareketler]([Owner], [TipInd], [HedefHesapInd], [DurumInd])
go

CREATE STATISTICS [_dta_stat_2052202361_2_58_3_4] ON [dbo].[Hareketler]([Owner], [CiroCariInd], [TipInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_2052202361_1_4_5_2_3] ON [dbo].[Hareketler]([Ind], [BaslikInd], [CariHesapInd], [Owner], [TipInd])
go

CREATE STATISTICS [_dta_stat_2052202361_5_4_3_47_83_58] ON [dbo].[Hareketler]([CariHesapInd], [BaslikInd], [TipInd], [DurumInd], [HedefHesapInd], [CiroCariInd])
go

CREATE STATISTICS [_dta_stat_2052202361_3_47_5_2_58_4] ON [dbo].[Hareketler]([TipInd], [DurumInd], [CariHesapInd], [Owner], [CiroCariInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_2052202361_3_5_2_83_47_58_4] ON [dbo].[Hareketler]([TipInd], [CariHesapInd], [Owner], [HedefHesapInd], [DurumInd], [CiroCariInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_2052202361_3_5_47_1_4_2_83_58] ON [dbo].[Hareketler]([TipInd], [CariHesapInd], [DurumInd], [Ind], [BaslikInd], [Owner], [HedefHesapInd], [CiroCariInd])
go

CREATE STATISTICS [_dta_stat_1216723387_1_3_4_5] ON [dbo].[Hesaplar]([Ind], [TipInd], [HesapKodu], [HesapAdi])
go

CREATE STATISTICS [_dta_stat_1680725040_6_13] ON [dbo].[Basliklar]([HesapInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_1680725040_1_27_15] ON [dbo].[Basliklar]([Ind], [FisPortfoyu], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1680725040_15_13_1] ON [dbo].[Basliklar]([DurumInd], [Aktif], [Ind])
go

CREATE STATISTICS [_dta_stat_1680725040_6_15_13] ON [dbo].[Basliklar]([HesapInd], [DurumInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_1680725040_1_15_3_27] ON [dbo].[Basliklar]([Ind], [DurumInd], [TipInd], [FisPortfoyu])
go

CREATE STATISTICS [_dta_stat_1680725040_1_15_13_6_23_27] ON [dbo].[Basliklar]([Ind], [DurumInd], [Aktif], [HesapInd], [Iskonto], [FisPortfoyu])
go

CREATE STATISTICS [_dta_stat_1680725040_6_2_1_13_23_32_15] ON [dbo].[Basliklar]([HesapInd], [Owner], [Ind], [Aktif], [Iskonto], [Yuvarlama], [DurumInd])
go

CREATE STATISTICS [_dta_stat_1680725040_1_15_3_6_2_13_23] ON [dbo].[Basliklar]([Ind], [DurumInd], [TipInd], [HesapInd], [Owner], [Aktif], [Iskonto])
go

CREATE STATISTICS [_dta_stat_1680725040_6_1_3_2_13_23_32] ON [dbo].[Basliklar]([HesapInd], [Ind], [TipInd], [Owner], [Aktif], [Iskonto], [Yuvarlama])
go

CREATE STATISTICS [_dta_stat_1680725040_13_1_6_15_3_27_2_23] ON [dbo].[Basliklar]([Aktif], [Ind], [HesapInd], [DurumInd], [TipInd], [FisPortfoyu], [Owner], [Iskonto])
go

CREATE STATISTICS [_dta_stat_1680725040_3_1_2_5_15_6_13_23_27] ON [dbo].[Basliklar]([TipInd], [Ind], [Owner], [Tarih], [DurumInd], [HesapInd], [Aktif], [Iskonto], [FisPortfoyu])
go

CREATE STATISTICS [_dta_stat_1680725040_1_6_13_23_32_15_3_2_5_27] ON [dbo].[Basliklar]([Ind], [HesapInd], [Aktif], [Iskonto], [Yuvarlama], [DurumInd], [TipInd], [Owner], [Tarih], [FisPortfoyu])
GO
CREATE STATISTICS [_dta_stat_2052202361_3_58] ON [dbo].[Hareketler]([TipInd], [CiroCariInd])
go

CREATE STATISTICS [_dta_stat_2052202361_5_1] ON [dbo].[Hareketler]([CariHesapInd], [Ind])
go

CREATE STATISTICS [_dta_stat_2052202361_2_47_3] ON [dbo].[Hareketler]([Owner], [DurumInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_2052202361_1_64_2] ON [dbo].[Hareketler]([Ind], [VardiyaKartInd], [Owner])
go

CREATE STATISTICS [_dta_stat_2052202361_2_3_1_4] ON [dbo].[Hareketler]([Owner], [TipInd], [Ind], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_2052202361_4_1_64_2] ON [dbo].[Hareketler]([BaslikInd], [Ind], [VardiyaKartInd], [Owner])
go

CREATE STATISTICS [_dta_stat_2052202361_47_3_1_2_4] ON [dbo].[Hareketler]([DurumInd], [TipInd], [Ind], [Owner], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_2052202361_1_7_10_13_51_54_85] ON [dbo].[Hareketler]([Ind], [CariHesapAdi], [BankaHesapAdi], [KKHesapAdi], [GelirAdi], [GiderAdi], [HedefHesapAdi])
go

CREATE STATISTICS [_dta_stat_2052202361_4_1_2_3_7_10_13_51_54_85] ON [dbo].[Hareketler]([BaslikInd], [Ind], [Owner], [TipInd], [CariHesapAdi], [BankaHesapAdi], [KKHesapAdi], [GelirAdi], [GiderAdi], [HedefHesapAdi])
go

CREATE STATISTICS [_dta_stat_2052202361_1_3_2_83_19_14_7_10_13_51] ON [dbo].[Hareketler]([Ind], [TipInd], [Owner], [HedefHesapInd], [Aciklama], [GirisTarihi], [CariHesapAdi], [BankaHesapAdi], [KKHesapAdi], [GelirAdi])
go

CREATE STATISTICS [_dta_stat_2052202361_1_2_3_47_5_19_14_7_10_13_51] ON [dbo].[Hareketler]([Ind], [Owner], [TipInd], [DurumInd], [CariHesapInd], [Aciklama], [GirisTarihi], [CariHesapAdi], [BankaHesapAdi], [KKHesapAdi], [GelirAdi])
go

CREATE STATISTICS [_dta_stat_2052202361_58_1_3_2_19_73_7_10_13_51_54_4] ON [dbo].[Hareketler]([CiroCariInd], [Ind], [TipInd], [Owner], [Aciklama], [IslemTarihi], [CariHesapAdi], [BankaHesapAdi], [KKHesapAdi], [GelirAdi], [GiderAdi], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_2052202361_83_1_19_14_7_10_13_51_54_3_2_47] ON [dbo].[Hareketler]([HedefHesapInd], [Ind], [Aciklama], [GirisTarihi], [CariHesapAdi], [BankaHesapAdi], [KKHesapAdi], [GelirAdi], [GiderAdi], [TipInd], [Owner], [DurumInd])
go

CREATE STATISTICS [_dta_stat_2052202361_5_83_58_1_3_2_19_14_73_7_10_13_51_54] ON [dbo].[Hareketler]([CariHesapInd], [HedefHesapInd], [CiroCariInd], [Ind], [TipInd], [Owner], [Aciklama], [GirisTarihi], [IslemTarihi], [CariHesapAdi], [BankaHesapAdi], [KKHesapAdi], [GelirAdi], [GiderAdi])
go

CREATE STATISTICS [_dta_stat_2052202361_47_3_5_83_58_1_2_19_14_73_7_10_13_51_54] ON [dbo].[Hareketler]([DurumInd], [TipInd], [CariHesapInd], [HedefHesapInd], [CiroCariInd], [Ind], [Owner], [Aciklama], [GirisTarihi], [IslemTarihi], [CariHesapAdi], [BankaHesapAdi], [KKHesapAdi], [GelirAdi], [GiderAdi])
go

CREATE STATISTICS [_dta_stat_2052202361_1_5_19_14_7_10_13_51_54_3_2_47_73_58_4] ON [dbo].[Hareketler]([Ind], [CariHesapInd], [Aciklama], [GirisTarihi], [CariHesapAdi], [BankaHesapAdi], [KKHesapAdi], [GelirAdi], [GiderAdi], [TipInd], [Owner], [DurumInd], [IslemTarihi], [CiroCariInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_2052202361_1_3_64_2_5_19_14_7_10_13_51_54_83_47_15_18] ON [dbo].[Hareketler]([Ind], [TipInd], [VardiyaKartInd], [Owner], [CariHesapInd], [Aciklama], [GirisTarihi], [CariHesapAdi], [BankaHesapAdi], [KKHesapAdi], [GelirAdi], [GiderAdi], [HedefHesapInd], [DurumInd], [VadeTarihi], [CekNo])
go

CREATE STATISTICS [_dta_stat_2052202361_3_1_4_64_2_47_5_83_58_19_14_73_7_10_13_51] ON [dbo].[Hareketler]([TipInd], [Ind], [BaslikInd], [VardiyaKartInd], [Owner], [DurumInd], [CariHesapInd], [HedefHesapInd], [CiroCariInd], [Aciklama], [GirisTarihi], [IslemTarihi], [CariHesapAdi], [BankaHesapAdi], [KKHesapAdi], [GelirAdi])
go

CREATE STATISTICS [_dta_stat_2052202361_3_5_1_2_19_14_7_10_13_51_54_83_47_15_18_73] ON [dbo].[Hareketler]([TipInd], [CariHesapInd], [Ind], [Owner], [Aciklama], [GirisTarihi], [CariHesapAdi], [BankaHesapAdi], [KKHesapAdi], [GelirAdi], [GiderAdi], [HedefHesapInd], [DurumInd], [VadeTarihi], [CekNo], [IslemTarihi])
go

CREATE STATISTICS [_dta_stat_2052202361_4_1_3_64_2_5_19_14_7_10_13_51_54_83_47_15] ON [dbo].[Hareketler]([BaslikInd], [Ind], [TipInd], [VardiyaKartInd], [Owner], [CariHesapInd], [Aciklama], [GirisTarihi], [CariHesapAdi], [BankaHesapAdi], [KKHesapAdi], [GelirAdi], [GiderAdi], [HedefHesapInd], [DurumInd], [VadeTarihi])
go

CREATE STATISTICS [_dta_stat_2052202361_1_5_73_7_10_13_51_54_85_15_18_3_2_47_58_4] ON [dbo].[Hareketler]([Ind], [CariHesapInd], [IslemTarihi], [CariHesapAdi], [BankaHesapAdi], [KKHesapAdi], [GelirAdi], [GiderAdi], [HedefHesapAdi], [VadeTarihi], [CekNo], [TipInd], [Owner], [DurumInd], [CiroCariInd], [BaslikInd])
go

CREATE STATISTICS [_dta_stat_1680725040_1_27] ON [dbo].[Basliklar]([Ind], [FisPortfoyu])
go

CREATE STATISTICS [_dta_stat_1680725040_15_3] ON [dbo].[Basliklar]([DurumInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1680725040_6_3_13] ON [dbo].[Basliklar]([HesapInd], [TipInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_1680725040_13_1_6] ON [dbo].[Basliklar]([Aktif], [Ind], [HesapInd])
go

CREATE STATISTICS [_dta_stat_1680725040_6_15_3_13] ON [dbo].[Basliklar]([HesapInd], [DurumInd], [TipInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_1680725040_1_15_3_13] ON [dbo].[Basliklar]([Ind], [DurumInd], [TipInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_1680725040_1_6_15_3_27] ON [dbo].[Basliklar]([Ind], [HesapInd], [DurumInd], [TipInd], [FisPortfoyu])
go

CREATE STATISTICS [_dta_stat_1680725040_3_13_15_27_1] ON [dbo].[Basliklar]([TipInd], [Aktif], [DurumInd], [FisPortfoyu], [Ind])
go

CREATE STATISTICS [_dta_stat_1680725040_6_27_1_3_13] ON [dbo].[Basliklar]([HesapInd], [FisPortfoyu], [Ind], [TipInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_1680725040_1_3_13_6_15_27] ON [dbo].[Basliklar]([Ind], [TipInd], [Aktif], [HesapInd], [DurumInd], [FisPortfoyu])
go

CREATE STATISTICS [_dta_stat_1680725040_3_13_15_1_6_34_17_18_20_21_19_22_27] ON [dbo].[Basliklar]([TipInd], [Aktif], [DurumInd], [Ind], [HesapInd], [OdemeTarihi], [GelirInd], [GelirKodu], [GiderInd], [GiderKodu], [GelirAdi], [GiderAdi], [FisPortfoyu])
go

CREATE STATISTICS [_dta_stat_1216723387_4_5] ON [dbo].[Hesaplar]([HesapKodu], [HesapAdi])
go

CREATE STATISTICS [_dta_stat_1216723387_1_4_5] ON [dbo].[Hesaplar]([Ind], [HesapKodu], [HesapAdi])
GO

CREATE STATISTICS [_dta_stat_2052202361_2_37] ON [dbo].[Hareketler]([Owner], [YazarKasaFisNo])
go

CREATE STATISTICS [_dta_stat_1847677630_3_1_24] ON [dbo].[Basliklar]([TipInd], [Ind], [VardiyaKartInd])
GO

CREATE STATISTICS [_dta_stat_1346312056_1_3] ON [dbo].[Hareketler]([Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_2_1_3] ON [dbo].[Hareketler]([Owner], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_1346312056_4_1_3_2] ON [dbo].[Hareketler]([BaslikInd], [Ind], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_1_2] ON [dbo].[Basliklar]([Ind], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_3_2] ON [dbo].[Basliklar]([TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_165575628_1_3_2] ON [dbo].[Basliklar]([Ind], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_661577395_3_1_2] ON [dbo].[Hesaplar]([TipInd], [Ind], [Owner])
go

CREATE STATISTICS [_dta_stat_661577395_37_1_3] ON [dbo].[Hesaplar]([Raf], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_1381579960_3_1] ON [dbo].[StokDetaylari]([TipInd], [Ind])
go

CREATE STATISTICS [_dta_stat_1381579960_4_3] ON [dbo].[StokDetaylari]([StokInd], [TipInd])
go

CREATE STATISTICS [_dta_stat_1381579960_10_1_3] ON [dbo].[StokDetaylari]([IsAnaFiyat], [Ind], [TipInd])
go

CREATE STATISTICS [_dta_stat_1381579960_10_4_3] ON [dbo].[StokDetaylari]([IsAnaFiyat], [StokInd], [TipInd])
GO

CREATE STATISTICS [_dta_stat_1445580188_12_1] ON [dbo].[Stoklar]([KasiyerFiyatDegistirebilir], [Ind])
go

CREATE STATISTICS [_dta_stat_1445580188_2_1_3_4_5_6_7_8_9] ON [dbo].[Stoklar]([Owner], [Ind], [StokKodu], [StokAdi], [AnaBirimInd], [GrupInd], [AlisKDVGrupInd], [SatisKDVGrupInd], [Aktif])
go

----------------------------------------Ulaş Aydıner

CREATE STATISTICS [_dta_stat_821577965_4_1_38_3_23] ON [dbo].[Hareketler]([BaslikInd], [Ind], [Iskonto], [TipInd], [StokInd])
go

CREATE STATISTICS [_dta_stat_821577965_3_4_23_41_1_38] ON [dbo].[Hareketler]([TipInd], [BaslikInd], [StokInd], [DepoInd], [Ind], [Iskonto])
go

CREATE STATISTICS [_dta_stat_821577965_1_38_3_23_41_28_37_31] ON [dbo].[Hareketler]([Ind], [Iskonto], [TipInd], [StokInd], [DepoInd], [Miktar], [KDVOrani], [BirimAdi])
go

CREATE STATISTICS [_dta_stat_821577965_3_23_4_1_41_28_38_37_31] ON [dbo].[Hareketler]([TipInd], [StokInd], [BaslikInd], [Ind], [DepoInd], [Miktar], [Iskonto], [KDVOrani], [BirimAdi])
go

CREATE STATISTICS [_dta_stat_885578193_9_2] ON [dbo].[Hesaplar]([OzelKodInd], [Owner])
go

CREATE STATISTICS [_dta_stat_885578193_1_9] ON [dbo].[Hesaplar]([Ind], [OzelKodInd])
go

CREATE STATISTICS [_dta_stat_885578193_1_2_9] ON [dbo].[Hesaplar]([Ind], [Owner], [OzelKodInd])
go

CREATE STATISTICS [_dta_stat_197575742_1_6_3_23_5_2] ON [dbo].[Basliklar]([Ind], [HesapInd], [TipInd], [Iskonto], [Tarih], [Owner])
go

CREATE STATISTICS [_dta_stat_197575742_23_5_6_2_15_13] ON [dbo].[Basliklar]([Iskonto], [Tarih], [HesapInd], [Owner], [DurumInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_197575742_23_5_6_13_3_2] ON [dbo].[Basliklar]([Iskonto], [Tarih], [HesapInd], [Aktif], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_197575742_1_6_13_23_5_3_2] ON [dbo].[Basliklar]([Ind], [HesapInd], [Aktif], [Iskonto], [Tarih], [TipInd], [Owner])
go

CREATE STATISTICS [_dta_stat_197575742_23_5_6_2_3_15_13] ON [dbo].[Basliklar]([Iskonto], [Tarih], [HesapInd], [Owner], [TipInd], [DurumInd], [Aktif])
go

CREATE STATISTICS [_dta_stat_197575742_13_15_1_6_23_5_2] ON [dbo].[Basliklar]([Aktif], [DurumInd], [Ind], [HesapInd], [Iskonto], [Tarih], [Owner])
go

----------------------------------------Ulaş Aydıner
 

GO
UPDATE Stoklar SET KasiyerKoduVarMi = 0 WHERE KasiyerKoduVarMi IS NULL
UPDATE Stoklar SET KasiyerFiyatDegistirebilir = 0 WHERE KasiyerFiyatDegistirebilir IS NULL
GO
IF EXISTS (
    SELECT *
    FROM sys.objects
    WHERE [type] = 'TR' AND [name] = 'SubelerUpdated'
    )
    DROP TRIGGER SubelerUpdated;
	go
CREATE TRIGGER [dbo].[SubelerUpdated] 
   ON  [dbo].[Subeler]
   AFTER UPDATE
AS 
BEGIN
	
	SET NOCOUNT ON;
	declare @EskiIsSatis AS BIT
	SELECT @EskiIsSatis = IsSatis FROM deleted 

	declare @YeniIsSatis AS INT
	SELECT @YeniIsSatis = IsSatis FROM inserted 

	declare @Ind AS INT
	SELECT @Ind = Ind FROM inserted 

	if (@EskiIsSatis = '1' AND @YeniIsSatis = '0')
	BEGIN
		UPDATE Subeler SET IsSatis = '1' WHERE Ind = @Ind
	END
END

GO
--Bu bolum guncelleme kayitli olan cari rollerini bozdugu icin kapatilmistir. Yalin
--DELETE FROM dbo.RolMenuleri WHERE Ind IN (SELECT Ind FROM dbo.RolMenuleri WHERE RolInd=(SELECT Ind FROM roller WHERE RolAdi='WebCari'))
--DELETE FROM roller WHERE Ind = (SELECT Ind FROM roller WHERE RolAdi='WebCari')
GO

If (select COUNT(*) from dbo.KurBilgileri WHERE ParaBirimi LIKE '%TL%') > 1
BEGIN
	DELETE FROM KUR WHERE 
		(KurInd IN (SELECT Ind FROM KurBilgileri WHERE ParaBirimi = 'YTL')
		OR ParaBirimi = 'YTL')
	DELETE KurBilgileri WHERE ParaBirimi = 'YTL'
END
GO
UPDATE Hesaplar SET ParaBirimi = 'TL' WHERE ParaBirimi = 'YTL';
GO
UPDATE KurBilgileri SET ParaBirimi = 'TL' WHERE ParaBirimi = 'YTL';
GO
UPDATE Ayarlar SET AnaParaBirimi = 'TL' WHERE	AnaParaBirimi = 'YTL';
GO
UPDATE StokDetaylari SET ParaBirimi= 'TL' WHERE TipInd = 501 AND ParaBirimi = 'YTL';
GO
UPDATE Hareketler SET ParaBirimi = 'TL' WHERE ParaBirimi = 'YTL';

GO
CREATE NONCLUSTERED INDEX [IX_CariStokRiskLimitleri_CariIndStokInd_IndOwnerRiskLimitiLt] ON [dbo].[CariStokRiskLimitleri]
( [CariInd] ASC, [StokInd] ASC )
INCLUDE ( [Ind], [Owner], [RiskLimitiLt] )

	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_CariStokRiskLimitleri_CariIndStokInd_IndOwnerRiskLimitiLt'
 
GO
CREATE NONCLUSTERED INDEX [IX_Ayarlar_TipInd_IndOtomasyonFirmaKoduOwner] ON [dbo].[Ayarlar]
(
	[TipInd] ASC
)
INCLUDE ( 	[Ind],
	[OtomasyonFirmaKodu],
	[Owner]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Ayarlar_TipInd_IndOtomasyonFirmaKoduOwner'
 
GO
CREATE NONCLUSTERED INDEX [IX_Basliklar_OwnerVardiyaNoTarihTipIndIndHesapInd] ON [dbo].[Basliklar]
(
	[Owner] ASC,
	[VardiyaNo] ASC,
	[Tarih] ASC,
	[TipInd] ASC,
	[Ind] ASC,
	[HesapInd] ASC
)
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_OwnerVardiyaNoTarihTipIndIndHesapInd' 

GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_TipInd] ON [dbo].[Basliklar]
(
	[TipInd] ASC
)
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_TipInd'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_TipInd_IndTarihAktifDurumIndFaturaIadeMi] ON [dbo].[Basliklar] ([TipInd])
INCLUDE ([Ind],[Tarih],[Aktif],[DurumInd],[FaturaIadeMi])
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_TipInd_IndTarihAktifDurumIndFaturaIadeMi'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_TipIndIndTarihOwnerVardiyaNo] ON [dbo].[Basliklar]
(
	[TipInd] ASC,
	[Ind] ASC,
	[Tarih] ASC,
	[Owner] ASC,
	[VardiyaNo] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_TipIndIndTarihOwnerVardiyaNo'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_TipIndHesapIndIndTarihOwnerVardiyaNo] ON [dbo].[Basliklar]
(
	[TipInd] ASC,
	[HesapInd] ASC,
	[Ind] ASC,
	[Tarih] ASC,
	[Owner] ASC,
	[VardiyaNo] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_TipIndHesapIndIndTarihOwnerVardiyaNo'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_Ind_VardiyaNo] ON [dbo].[Basliklar]
(
	[Ind] ASC
)
INCLUDE ( 	[VardiyaNo])	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_Ind_VardiyaNo'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_Ind_OtomasyonVardiyaInd] ON [dbo].[Basliklar]
(
	[Ind] ASC
)
INCLUDE ( 	[OtomasyonVardiyaInd]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_Ind_OtomasyonVardiyaInd'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_IndTipIndVardiyaKartInd_HesapIndHesapKoduHesapAdiAciklamaVardiyaNoPlakaNoOtomasyonVardiyaInd] ON [dbo].[Basliklar]
(
	[Ind] ASC,
	[TipInd] ASC,
	[VardiyaKartInd] ASC
)
INCLUDE ( 	[BelgeNo],
	[HesapInd],
	[HesapKodu],
	[HesapAdi],
	[Aciklama],
	[VardiyaNo],
	[PlakaNo],
	[OtomasyonVardiyaInd]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_IndTipIndVardiyaKartInd_HesapIndHesapKoduHesapAdiAciklamaVardiyaNoPlakaNoOtomasyonVardiyaInd'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_VardiyaKartInd] ON [dbo].[Basliklar]
(
	[VardiyaKartInd] ASC
)
INCLUDE ( 	[Ind]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO
SET ANSI_PADDING ON
PRINT 'Added Index: IX_Basliklar_VardiyaKartInd'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_TipIndIndOwner_BelgeNoTarihAciklamaDepoIndDepoKoduDepoAdi] ON [dbo].[Basliklar]
(
	[TipInd] ASC,
	[Ind] ASC,
	[Owner] ASC
)
INCLUDE ( 	[BelgeNo],
	[Tarih],
	[Aciklama],
	[DepoInd],
	[DepoKodu],
	[DepoAdi]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_TipIndIndOwner_BelgeNoTarihAciklamaDepoIndDepoKoduDepoAdi'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_DurumIndTarihIndTipIndAktifFaturaIndIskonto_HesapInd] ON [dbo].[Basliklar]
(
	[DurumInd] ASC,
	[Tarih] ASC,
	[Ind] ASC,
	[TipInd] ASC,
	[Aktif] ASC,
	[FaturaInd] ASC,
	[Iskonto] ASC
)
INCLUDE ( 	[HesapInd]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_DurumIndTarihIndTipIndAktifFaturaIndIskonto_HesapInd'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_TipIndOwnerIndTarihVardiyaNo_AciklamaKartNoOtomasyonVardiyaIndBaslangicBitis] ON [dbo].[Basliklar]
(
	[TipInd] ASC,
	[Owner] ASC,
	[Ind] ASC,
	[Tarih] ASC,
	[VardiyaNo] ASC
)
INCLUDE ( 	[Aciklama],
	[KartNo],
	[OtomasyonVardiyaInd],
	[Baslangic],
	[Bitis]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_TipIndOwnerIndTarihVardiyaNo_AciklamaKartNoOtomasyonVardiyaIndBaslangicBitis'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_HesapIndOwnerDurumIndIndTipIndTarihPlakaNoBelgeNoHesapAdi_Aciklama] ON [dbo].[Basliklar]
(
	[HesapInd] ASC,
	[Owner] ASC,
	[DurumInd] ASC,
	[Ind] ASC,
	[TipInd] ASC,
	[Tarih] ASC,
	[PlakaNo] ASC,
	[BelgeNo] ASC,
	[HesapAdi] ASC
)
INCLUDE ( 	[Aciklama]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_HesapIndOwnerDurumIndIndTipIndTarihPlakaNoBelgeNoHesapAdi_Aciklama'
GO
CREATE NONCLUSTERED INDEX [IX_Basliklar_TipInd_IndOwnerHesapIndVardiyaKartInd] ON [dbo].[Basliklar]
(
	[TipInd] ASC
)
INCLUDE ( 	[Ind],
	[Owner],
	[HesapInd],
	[VardiyaKartInd])	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_TipInd_IndOwnerHesapIndVardiyaKartInd'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_TipInd_IndTarih] ON [dbo].[Basliklar]
(
	[TipInd] ASC
)
INCLUDE ( 	[Ind],
	[Tarih]) WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_TipInd_IndTarih'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_TipInd_IndFaturaInd] ON [dbo].[Basliklar]
(
	[TipInd] ASC
)
INCLUDE ( 	[Ind],
	[FaturaInd]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_TipInd_IndFaturaInd'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_TipIndDurumInd_Ind] ON [dbo].[Basliklar]
(
	[TipInd] ASC,
	[DurumInd] ASC
)
INCLUDE ( 	[Ind]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_TipIndDurumInd_Ind'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_TipIndAktif_Ind] ON [dbo].[Basliklar]
(
	[TipInd] ASC,
	[Aktif] ASC
)
INCLUDE ( 	[Ind],
	[DurumInd]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_TipIndAktif_Ind'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_TarihAktif_Ind] ON [dbo].[Basliklar]
(
	[Tarih] ASC,
	[Aktif] ASC
)
INCLUDE ( 	[Ind]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_TarihAktif_Ind'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_Tarih_IndTipIndHesapIndAktifDurumIndIskonto] ON [dbo].[Basliklar]
(
	[Tarih] ASC
)
INCLUDE ( 	[Ind],
	[TipInd],
	[HesapInd],
	[Aktif],
	[DurumInd],
	[Iskonto]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_Tarih_IndTipIndHesapIndAktifDurumIndIskonto'
GO
CREATE NONCLUSTERED INDEX [IX_Basliklar_TipIndFaturaInd_Ind] ON [dbo].[Basliklar]
(
	[TipInd] ASC,
	[FaturaInd] ASC
)
INCLUDE ( 	[Ind]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_TipIndFaturaInd_Ind'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_TipIndTarihGiderInd_ALL] ON [dbo].[Basliklar]
(
	[TipInd] ASC,
	[Tarih] ASC,
	[GiderInd] ASC
)
INCLUDE ( 	[Ind],
	[Owner],
	[BelgeNo],
	[HesapInd],
	[Aciklama],
	[Aktif],
	[GelirInd],
	[GelirKodu],
	[GelirAdi],
	[GiderKodu],
	[GiderAdi],
	[Iskonto],
	[Yuvarlama],
	[OdemeTarihi],
	[KDVDahil]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_TipIndTarihGiderInd_ALL'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_HesapInd] ON [dbo].[Basliklar]
(
	[HesapInd] ASC
)
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Basliklar_HesapInd'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_Tarih] ON [dbo].[Basliklar]
(
	[Tarih] ASC
)
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Basliklar_Tarih'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_Ind_TipIndTarihAktifDurumInd] ON [dbo].[Basliklar]
(
	[Ind] ASC
)
INCLUDE ( [TipInd] ,[Tarih],[Aktif]	,[DurumInd])
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Basliklar_Ind_TipIndTarihAktifDurumInd'
GO

CREATE NONCLUSTERED INDEX [IX_Basliklar_TipIndTarih_Ind]
ON [dbo].[Basliklar] ([TipInd],[Tarih])
INCLUDE ([Ind])
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Basliklar_TipIndTarih_Ind'
 
GO
CREATE NONCLUSTERED INDEX [IX_FiyatDegisimi_Owner_IndStokIndtarihParaBirimiTutar] ON [dbo].[FiyatDegisimi]
(
	[Owner] ASC
)
INCLUDE ( 	[Ind],
	[StokInd],
	[tarih],
	[ParaBirimi],
	[Tutar]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_FiyatDegisimi_Owner_IndStokIndtarihParaBirimiTutar' 
 
GO
CREATE NONCLUSTERED INDEX [IX_Hareketler_LONG01_VadeTarihiCekNoMiktarFiyatKDVOraniIskontoTutarGiderAdiHedefHesapAdiNetMiktar] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[DurumInd] ASC,
	[BaslikInd] ASC,
	[Ind] ASC,
	[VardiyaKartInd] ASC,
	[Owner] ASC,
	[CariHesapInd] ASC,
	[HedefHesapInd] ASC,
	[CiroCariInd] ASC,
	[GirisTarihi] ASC,
	[IslemTarihi] ASC,
	[CariHesapAdi] ASC,
	[BankaHesapAdi] ASC,
	[KKHesapAdi] ASC,
	[GelirAdi] ASC
)
INCLUDE ( 	[VadeTarihi],
	[CekNo],
	[Miktar],
	[Fiyat],
	[KDVOrani],
	[Iskonto],
	[Tutar],
	[GiderAdi],
	[HedefHesapAdi],
	[NetMiktar]) 
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_LONG01_VadeTarihiCekNoMiktarFiyatKDVOraniIskontoTutarGiderAdiHedefHesapAdiNetMiktar'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndIndBaslikIndVardiyaKartIndTutarDurumIndBankaHesapIndOwnerHedefIndKaynakIndParaBirimi] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[Ind] ASC,
	[BaslikInd] ASC,
	[VardiyaKartInd] ASC,
	[Tutar] ASC,
	[DurumInd] ASC,
	[BankaHesapInd] ASC,
	[Owner] ASC,
	[HedefInd] ASC,
	[KaynakInd] ASC,
	[ParaBirimi] ASC
)
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_TipIndIndBaslikIndVardiyaKartIndTutarDurumIndBankaHesapIndOwnerHedefIndKaynakIndParaBirimi'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndVardiyaKartIndIndTutarOwnerParaBirimi] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[VardiyaKartInd] ASC,
	[Ind] ASC,
	[Tutar] ASC,
	[Owner] ASC,
	[ParaBirimi] ASC
)
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_TipIndVardiyaKartIndIndTutarOwnerParaBirimi'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndVardiyaKartIndIndTutarOwnerParaBirimiHedefIndKaynakIndDurumIndBankaHesapIndBaslikInd] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[VardiyaKartInd] ASC,
	[Ind] ASC,
	[Tutar] ASC,
	[Owner] ASC,
	[ParaBirimi] ASC,
	[HedefInd] ASC,
	[KaynakInd] ASC,
	[DurumInd] ASC,
	[BankaHesapInd] ASC,
	[BaslikInd] ASC
)
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_TipIndVardiyaKartIndIndTutarOwnerParaBirimiHedefIndKaynakIndDurumIndBankaHesapIndBaslikInd'
GO


CREATE NONCLUSTERED INDEX [IX_Hareketler_BaslikIndTipIndIndVardiyaKartIndTutarDurumIndBankaHesapIndOwnerHedefIndKaynakIndParaBirimi] ON [dbo].[Hareketler]
(
	[BaslikInd] ASC,
	[TipInd] ASC,
	[Ind] ASC,
	[VardiyaKartInd] ASC,
	[Tutar] ASC,
	[DurumInd] ASC,
	[BankaHesapInd] ASC,
	[Owner] ASC,
	[HedefInd] ASC,
	[KaynakInd] ASC,
	[ParaBirimi] ASC
)
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_BaslikIndTipIndIndVardiyaKartIndTutarDurumIndBankaHesapIndOwnerHedefIndKaynakIndParaBirimi'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndBaslikInd_IndOwnerCariHesapIndMiktarCarpanFiyatKDVOraniIskontoTutarDurumIndCiroCariIndHedefHesapIndNetMiktar] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[BaslikInd] ASC
)
INCLUDE ( 	[Ind],
	[Owner],
	[CariHesapInd],
	[Miktar],
	[Carpan],
	[Fiyat],
	[KDVOrani],
	[Iskonto],
	[Tutar],
	[DurumInd],
	[CiroCariInd],
	[HedefHesapInd],
	[NetMiktar]
) 
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_TipIndBaslikInd_IndOwnerCariHesapIndMiktarCarpanFiyatKDVOraniIskontoTutarDurumIndCiroCariIndHedefHesapIndNetMiktar'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndBaslikIndInd] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[BaslikInd] ASC,
	[Ind] ASC
)
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

GO
SET ANSI_PADDING ON
PRINT 'Added Index: IX_Hareketler_TipIndBaslikIndInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndVardiyaKartIndIndOwner_LONG03] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[VardiyaKartInd] ASC,
	[Ind] ASC,
	[Owner] ASC
)
INCLUDE ( 	[Miktar],
	[Carpan],
	[Kur],
	[Fiyat],
	[Tutar],
	[PersonelHesapInd],
	[PersonelHesapKodu],
	[PersonelHesapAdi],
	[EskiEndeks],
	[YeniEndeks],
	[Aktarma]
) 
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_TipIndVardiyaKartIndIndOwner_MiktarCarpanKurFiyatTutarPersonelHesapIndPersonelHesapKoduPersonelHesapAdiEskiEndeksYeniEndeksAktarma'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndVardiyaKartIndIndSayacIndFiyatAktarma_TutarEskiEndeksYeniEndeks] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[VardiyaKartInd] ASC,
	[Ind] ASC,
	[SayacInd] ASC,
	[Fiyat] ASC,
	[Aktarma] ASC
)
INCLUDE ( 	[Tutar],
	[EskiEndeks],
	[YeniEndeks]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_TipIndVardiyaKartIndIndSayacIndFiyatAktarma_TutarEskiEndeksYeniEndeks'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_BaslikIndOwnerYazarKasaFisNo_MiktarFiyatTutar] ON [dbo].[Hareketler]
(
	[BaslikInd] ASC,
	[Owner] ASC,
	[YazarKasaFisNo] ASC
)
INCLUDE ( 	[Miktar],
	[Fiyat],
	[Tutar]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_BaslikIndOwnerYazarKasaFisNo_MiktarFiyatTutar'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_VardiyaKartIndOwnerTipInd_MiktarCarpanKurFiyatTutarEskiEndeksYeniEndeksAktarma] ON [dbo].[Hareketler]
(
	[VardiyaKartInd] ASC,
	[Owner] ASC,
	[TipInd] ASC
)
INCLUDE ( 	[Miktar],
	[Carpan],
	[Kur],
	[Fiyat],
	[Tutar],
	[EskiEndeks],
	[YeniEndeks],
	[Aktarma]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_VardiyaKartIndOwnerTipInd_MiktarCarpanKurFiyatTutarEskiEndeksYeniEndeksAktarma'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndOwnerBaslikIndInd_StokIndStokKoduStokAdiMiktarSatisFiyatiDepoIndDepoKoduDepoAdiSayimMiktariAlisFiyati] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[Owner] ASC,
	[BaslikInd] ASC,
	[Ind] ASC
)
INCLUDE ( 	[StokInd],
	[StokKodu],
	[StokAdi],
	[Miktar],
	[SatisFiyati],
	[DepoInd],
	[DepoKodu],
	[DepoAdi],
	[SayimMiktari],
	[AlisFiyati]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_TipIndOwnerBaslikIndInd_StokIndStokKoduStokAdiMiktarSatisFiyatiDepoIndDepoKoduDepoAdiSayimMiktariAlisFiyati'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_LONG02_LONG02] ON [dbo].[Hareketler]
(
	[Owner] ASC,
	[TipInd] ASC,
	[ParaBirimi] ASC,
	[VardiyaKartInd] ASC,
	[Tutar] ASC,
	[Ind] ASC,
	[GirisTarihi] ASC,
	[KasayaIslensinMi] ASC,
	[Aciklama] ASC,
	[GelirAdi] ASC,
	[CariHesapAdi] ASC,
	[CariHesapKodu] ASC,
	[GiderAdi] ASC,
	[HedefInd] ASC,
	[KaynakInd] ASC,
	[DurumInd] ASC
)
INCLUDE ( 	[BaslikInd],
	[CariHesapInd],
	[BankaHesapInd],
	[BankaHesapKodu],
	[BankaHesapAdi],
	[KKHesapKodu],
	[KKHesapAdi],
	[VadeTarihi],
	[CekNo],
	[Miktar],
	[Kur],
	[Fiyat],
	[PersonelHesapInd],
	[PersonelHesapKodu],
	[PersonelHesapAdi],
	[GelirInd],
	[GelirKodu],
	[GiderInd],
	[GiderKodu],
	[IslemTarihi]
) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_LONG02_LONG02'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_BaslikIndOwnerYazarKasaFisNoStokAdiMiktarTutar_Fiyat] ON [dbo].[Hareketler]
(
	[BaslikInd] ASC,
	[Owner] ASC,
	[YazarKasaFisNo] ASC,
	[StokAdi] ASC,
	[Miktar] ASC,
	[Tutar] ASC
)
INCLUDE ( 	[Fiyat]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_BaslikIndOwnerYazarKasaFisNoStokAdiMiktarTutar_Fiyat'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipInd_BaslikIndStokIndMiktarCarpanDepoInd] ON [dbo].[Hareketler]
(
	[TipInd] ASC
)
INCLUDE ( 	[BaslikInd],
	[StokInd],
	[Miktar],
	[Carpan],
	[DepoInd]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_TipInd_BaslikIndStokIndMiktarCarpanDepoInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_OwnerTipInd_VardiyaKartIndSayacIndEskiEndeksYeniEndeksAktarma] ON [dbo].[Hareketler]
(
	[Owner] ASC,
	[TipInd] ASC
)
INCLUDE ( 	[VardiyaKartInd],
	[SayacInd],
	[EskiEndeks],
	[YeniEndeks],
	[Aktarma]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_OwnerTipInd_VardiyaKartIndSayacIndEskiEndeksYeniEndeksAktarma'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndStokInd_IndBaslikIndOwnerMiktarCarpanDepoInd] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[StokInd] ASC
)
INCLUDE ( 	[Ind],
	[BaslikInd],
	[Owner],
	[Miktar],
	[Carpan],
	[DepoInd]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_TipIndStokInd_IndBaslikIndOwnerMiktarCarpanDepoInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndSayacInd_VardiyaKartIndEskiEndeksYeniEndeksAktarma] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[SayacInd] ASC
)
INCLUDE ( 	[VardiyaKartInd],
	[EskiEndeks],
	[YeniEndeks],
	[Aktarma],
	[Tutar]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_TipIndSayacInd_VardiyaKartIndEskiEndeksYeniEndeksAktarma'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_OwnerTipInd_IndStokIndMiktarCarpan] ON [dbo].[Hareketler]
(
	[Owner] ASC,
	[TipInd] ASC
)
INCLUDE ( 	[Ind],
	[StokInd],
	[Miktar],
	[Carpan]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_OwnerTipInd_IndStokIndMiktarCarpan'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipInd_OwnerBaslikIndStokIndMiktarCarpan] ON [dbo].[Hareketler]
(
	[TipInd] ASC
)
INCLUDE ( 	[Owner],
	[BaslikInd],
	[StokInd],
	[Miktar],
	[Carpan]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_TipInd_OwnerBaslikIndStokIndMiktarCarpan'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_BaslikInd_OwnerTipIndStokIndFiyatDepoInd] ON [dbo].[Hareketler]
(
	[BaslikInd] ASC
)
INCLUDE ( 	[Owner],
	[TipInd],
	[StokInd],
	[Fiyat],
	[DepoInd]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_BaslikInd_OwnerTipIndStokIndFiyatDepoInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_PerakendeInd] ON [dbo].[Hareketler]
(
	[PerakendeInd] ASC
)
INCLUDE ( 	[DepoInd]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_PerakendeInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_StokIndPerakendeInd] ON [dbo].[Hareketler]
(
	[StokInd] ASC,
	[PerakendeInd] ASC
)
INCLUDE ( 	[DepoInd]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_StokIndPerakendeInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndParaBirimiVardiyaKartIndGirisTarihi_OwnerTutar] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[ParaBirimi] ASC,
	[VardiyaKartInd] ASC,
	[GirisTarihi] ASC
)
INCLUDE ( 	[Owner],
	[Tutar]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_TipIndParaBirimiVardiyaKartIndGirisTarihi_OwnerTutar'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndParaBirimiVardiyaKartIndKasayaIslensinMiGirisTarihiTutar] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[ParaBirimi] ASC,
	[VardiyaKartInd] ASC,
	[KasayaIslensinMi] ASC,
	[GirisTarihi] ASC,
	[Tutar] ASC
)
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_TipIndParaBirimiVardiyaKartIndKasayaIslensinMiGirisTarihiTutar'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndGirisTarihi_OwnerKKHesapIndKKHesapKoduKKHesapAdiTutar] ON [dbo].[Hareketler]
(
	[GirisTarihi] ASC,
	[TipInd] ASC
)
INCLUDE ( 	[Owner],
	[KKHesapInd],
	[KKHesapKodu],
	[KKHesapAdi],
	[Tutar]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_TipIndGirisTarihi_OwnerKKHesapIndKKHesapKoduKKHesapAdiTutar'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndOwner_IndCariHesapIndGirisTarihiAciklamaTutar] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[Owner] ASC
)
INCLUDE ( 	[Ind],
	[CariHesapInd],
	[GirisTarihi],
	[Aciklama],
	[Tutar]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_TipIndOwner_IndCariHesapIndGirisTarihiAciklamaTutar'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndVardiyaKartInd_OwnerFiyatTutarSayacIndSayacAdSayacKoduEskiEndeksYeniEndeksAktarma] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[VardiyaKartInd] ASC
)
INCLUDE ( 	[Owner],
	[Fiyat],
	[Tutar],
	[SayacInd],
	[SayacAdi],
	[SayacKodu],
	[EskiEndeks],
	[YeniEndeks],
	[Aktarma]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_TipIndVardiyaKartInd_OwnerFiyatTutarSayacIndSayacAdSayacKoduEskiEndeksYeniEndeksAktarma'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipInd_IndBaslikIndStokIndMiktarBirimAdiFiyatKDVOraniIskonto] ON [dbo].[Hareketler]
(
	[TipInd] ASC
)
INCLUDE ( 	[Ind],
	[BaslikInd],
	[StokInd],
	[Miktar],
	[BirimAdi],
	[Fiyat],
	[KDVOrani],
	[Iskonto]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_TipInd_IndBaslikIndStokIndMiktarBirimAdiFiyatKDVOraniIskonto'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndFiyat_IndVardiyaKartIndSayacInd] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[Fiyat] ASC
)
INCLUDE ( 	[Ind],
	[VardiyaKartInd],
	[SayacInd]) 
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_TipIndFiyat_IndVardiyaKartIndSayacInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndBaslikIndDepoIndVardiyaKartIndStokIndGelirInd] ON [dbo].[Hareketler]
(
	[TipInd] ASC,
	[BaslikInd] ASC,
	[DepoInd] ASC,
	[VardiyaKartInd] ASC,
	[StokInd] ASC,
	[GelirInd] ASC
)
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_TipIndBaslikIndDepoIndVardiyaKartIndStokIndGelirInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_PerakendeIndStokInd] ON [dbo].[Hareketler]
(
	[PerakendeInd] ASC,
	[StokInd] ASC
)
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_PerakendeIndStokInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_OwnerTipInd_IndTipIndGirisTarihiDepoIndDepoKoduDepoAdiOwner] ON [dbo].[Hareketler] 
(
	[Owner] ASC,
	[TipInd] ASC
)
INCLUDE (Ind,
	GirisTarihi,
	DepoInd,
	DepoKodu,
	DepoAdi) 
	WHERE Owner IS NOT NULL
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hareketler_OwnerTipInd_IndTipIndGirisTarihiDepoIndDepoKoduDepoAdiOwner'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_DepoInd_StokIndPerakendeInd] ON [dbo].[Hareketler]
(
	[DepoInd]
)
INCLUDE ([StokInd],
		[PerakendeInd])
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_DepoInd_StokIndPerakendeInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndBaslikIndOwner_IndStokIndStokKoduStokAdiMiktarDepoIndDepoKoduDepoAdiSayimMiktari] ON [dbo].[Hareketler]
(
	[TipInd],
	[BaslikInd],
	[Owner]
)
INCLUDE ([Ind],
		[StokInd],
		[StokKodu],
		[StokAdi],
		[Miktar],
		[DepoInd],
		[DepoKodu],
		[DepoAdi],
		[SayimMiktari])
WHERE Owner IS NOT NULL
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_TipIndBaslikIndOwner_IndStokIndStokKoduStokAdiMiktarDepoIndDepoKoduDepoAdiSayimMiktari'


GO
CREATE NONCLUSTERED INDEX [IX_Hareketler_OwnerTipIndStokInd_IndBaslikIndMiktarFiyatIskonto] ON [dbo].[Hareketler] 
([Owner],[TipInd],[StokInd])
INCLUDE ([Ind],[BaslikInd],[Miktar],[Fiyat],[Iskonto])
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_OwnerTipIndStokInd_IndBaslikIndMiktarFiyatIskonto'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_BaslikIndStokIndMiktar_Iskonto]
ON [dbo].[Hareketler] ([BaslikInd],[StokInd],[Miktar])
INCLUDE ([Iskonto])
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_BaslikIndStokIndMiktar_Iskonto'
 
GO
CREATE NONCLUSTERED INDEX [IX_Hareketler_TipInd_IndOwnerFiyatKDVOraniIskontoTutarVardiyaKartIndSayacIndSayacAdiSayacKoduEskiEndeksYeniEndeksAktarma]
ON [dbo].[Hareketler] ([TipInd])
INCLUDE ([Ind],[Owner],[Fiyat],[KDVOrani],[Iskonto],[Tutar],[VardiyaKartInd],[SayacInd],[SayacAdi],[SayacKodu],[EskiEndeks],[YeniEndeks],[Aktarma])
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_TipInd_IndOwnerFiyatKDVOraniIskontoTutarVardiyaKartIndSayacIndSayacAdiSayacKoduEskiEndeksYeniEndeksAktarma'

GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_CiroCariIndIslemTarihi_OwnerTutar] 
ON [dbo].[Hareketler] ([CiroCariInd], [IslemTarihi])  
INCLUDE ([Owner], [Tutar])
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_CiroCariIndIslemTarihi_OwnerTutar'

GO

CREATE INDEX [IX_Hareketler_OwnerTipIndStokIndMiktar_PerakendeKasaIslemTarihi_DurumIndIslemTarihi] 
ON [dbo].[Hareketler] ([Owner], [TipInd], [StokInd], [Miktar], [PerakendeKasaIslemTarihi])  
INCLUDE ([DurumInd], [IslemTarihi])
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_OwnerTipIndStokIndMiktar_PerakendeKasaIslemTarihi_DurumIndIslemTarihi'

GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_OwnerTutarTeslimTarihiSayacIndEskiEndeksYeniEndeks]
ON [dbo].[Hareketler] ([Owner],[TeslimTarihi],[SayacInd],[Tutar],[EskiEndeks],[YeniEndeks])
	WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_OwnerTutarTeslimTarihiSayacIndEskiEndeksYeniEndeks'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_SayacIndTeslimTarihi_OwnerTutar]
ON [dbo].[Hareketler] ([SayacInd],[TeslimTarihi])
INCLUDE ([Owner],[Tutar])

PRINT 'Added Index: IX_Hareketler_SayacIndTeslimTarihi_OwnerTutar'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndMiktar_IndOwnerStokIndCarpanFiyat]
ON [dbo].[Hareketler] ([TipInd],[Miktar])
INCLUDE ([Ind],[Owner],[StokInd],[Carpan],[Fiyat])

PRINT 'Added Index: IX_Hareketler_TipIndMiktar_IndOwnerStokIndCarpanFiyat'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_BaslikInd_IskontoTutar]--Ulaþ Aydýner
ON [dbo].[Hareketler]([BaslikInd] ASC)
INCLUDE ([Iskonto],[Tutar])
WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_BaslikInd_IskontoTutar'
GO

CREATE NONCLUSTERED INDEX [IX_BaslikIndStokIndTipIndIndDepoInd_MiktarBirimAdiFiyatKDVOraniIskontoTutarGercekFiyat]--Ulaþ Aydýner
ON [dbo].[Hareketler] ([BaslikInd] ASC, [StokInd] ASC, [TipInd] ASC, [Ind] ASC,[DepoInd] ASC)
INCLUDE ([Miktar],[BirimAdi],[Fiyat],[KDVOrani],[Iskonto],[Tutar],[GercekFiyat]) WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]

PRINT 'Added Index: IX_BaslikIndStokIndTipIndIndDepoInd_MiktarBirimAdiFiyatKDVOraniIskontoTutarGercekFiyat'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_TipIndStokIndIndDepoIndBaslikIndMiktarIskontoKDVOraniBirimAdi_FiyatTutarGercekFiyat] --Ulaþ Aydýner
ON [dbo].[Hareketler] ([TipInd] ASC,[StokInd] ASC,[Ind] ASC,[DepoInd] ASC,[BaslikInd] ASC,[Miktar] ASC,[Iskonto] ASC,[KDVOrani] ASC,[BirimAdi] ASC)
INCLUDE ([Fiyat],[Tutar],[GercekFiyat]) WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_TipIndStokIndIndDepoIndBaslikIndMiktarIskontoKDVOraniBirimAdi_FiyatTutarGercekFiyat'
GO

CREATE NONCLUSTERED INDEX [IX_Hareketler_BaslikIndStokIndDepoIndTipIndIndIskonto_Tutar] --Ulaþ Aydýner
ON [dbo].[Hareketler] ([BaslikInd] ASC,[StokInd] ASC,[DepoInd] ASC,[TipInd] ASC,[Ind] ASC,[Iskonto] ASC)
INCLUDE ([Tutar]) WITH (SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF) ON [PRIMARY]

PRINT 'Added Index: IX_Hareketler_BaslikIndStokIndDepoIndTipIndIndIskonto_Tutar'
 
GO 
CREATE NONCLUSTERED INDEX [IX_HesapDetaylari_TipIndIndOwnerSayacKoduSayacAdiAzalanEndeksSayacEndeksiOtomasyonKoduDepoInd] ON [dbo].[HesapDetaylari]
(
	[TipInd] ASC,
	[Ind] ASC,
	[Owner] ASC,
	[SayacKodu] ASC,
	[SayacAdi] ASC,
	[AzalanEndeks] ASC,
	[SayacEndeksi] ASC,
	[OtomasyonKodu] ASC,
	[DepoInd] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_HesapDetaylari_TipIndIndOwnerSayacKoduSayacAdiAzalanEndeksSayacEndeksiOtomasyonKoduDepoInd'
GO
CREATE NONCLUSTERED INDEX [IX_HesapDetaylari_DepoInd_Ind]
ON [dbo].[HesapDetaylari] ([DepoInd])
INCLUDE ([Ind])
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_HesapDetaylari_DepoInd_Ind'


GO

GO
CREATE NONCLUSTERED INDEX [IX_Hesaplar_IndParaBirimi] ON [dbo].[Hesaplar]
(
	[Ind] ASC,
	[ParaBirimi] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hesaplar_IndParaBirimi'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_TipInd_LONG01] ON [dbo].[Hesaplar]
(
	[TipInd] ASC
)
INCLUDE ( 	[Ind],
	[Owner],
	[HesapKodu],
	[HesapAdi],
	[OzelKodInd],
	[OzelKodu],
	[Adres],
	[Telefon],
	[Gsm],
	[Faks],
	[Sehir],
	[EPosta],
	[VergiDairesi],
	[VergiNo],
	[TcKimlikNo],
	[RiskLimiti],
	[Aciklama],
	[Aktif],
	[FaturaVadesi],
	[OdemeVadesi],
	[Faiz],
	[ParaBirimi],
	[FisPortfoyu],
	[OtomasyonKodu],
	[Iskonto],
	[AkaryakitIskonto],
	[TeminatKoduInd],
	[TeminatKodu],
	[FiloKodu],
	[RiskLimitiLt],
	[MuhasebeKodu],
	[IskontoX],
	[AkaryakitIskontoX],
	[HesapBankaAdi],
	[HesapIbanNo],
	[IlgiliKisi]) 
	
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_Hesaplar_TipInd_LONG01'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_TipIndOwner_IndHesapKoduHesapAdiStokIndKapasiteMinimumSeviyeOzelKodIndRaf] ON [dbo].[Hesaplar]
(
	[TipInd] ASC,
	[Owner] ASC
)
INCLUDE ( 	[Ind],
	[HesapKodu],
	[HesapAdi],
	[StokInd],
	[Kapasite],
	[MinimumSeviye],
	[OzelKodInd],
	[Raf]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_TipIndOwner_IndHesapKoduHesapAdiStokIndKapasiteMinimumSeviyeOzelKodIndRaf'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_Ind_Owner] ON [dbo].[Hesaplar]
(
	[Ind] ASC
)
INCLUDE ( 	[Owner]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_Ind_Owner'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_Ind_LONG02] ON [dbo].[Hesaplar]
(
	[Ind] ASC
)
INCLUDE ( 	[Owner],
	[TipInd],
	[HesapKodu],
	[HesapAdi],
	[StokInd],
	[Kapasite],
	[MinimumSeviye],
	[OzelKodInd],
	[OzelKodu],
	[BankaInd],
	[MusteriKomisyon],
	[BankaAdi],
	[ParaBirimi],
	[Raf]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_Ind_LONG02'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_IndTipIndGrupIndOwner_LONG03] ON [dbo].[Hesaplar]
(
	[Ind] ASC,
	[TipInd] ASC,
	[GrupInd] ASC,
	[Owner] ASC
)
INCLUDE ( 	[HesapKodu],
	[HesapAdi],
	[Adres],
	[Telefon],
	[Gsm],
	[EPosta],
	[NetMaas],
	[GirisTarihi],
	[CikisTarihi],
	[AyrilmaSebebi],
	[Prim],
	[OtomasyonKodu]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_IndTipIndGrupIndOwner_LONG03'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_IndHesapKoduHesapAdiOzelKodu_OzelKodInd] ON [dbo].[Hesaplar]
(
	[Ind] ASC,
	[HesapKodu] ASC,
	[HesapAdi] ASC,
	[OzelKodu] ASC
)
INCLUDE ( 	[OzelKodInd]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_IndHesapKoduHesapAdiOzelKodu_OzelKodInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_IndStokInd] ON [dbo].[Hesaplar]
(
	[Ind] ASC,
	[StokInd] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_IndStokInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_OwnerInd] ON [dbo].[Hesaplar]
(
	[Owner] ASC,
	[Ind] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_OwnerInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_OwnerTipIndStokInd] ON [dbo].[Hesaplar]
(
	[Owner] ASC,
	[TipInd] ASC,
	[StokInd] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_OwnerTipIndStokInd'
GO


CREATE NONCLUSTERED INDEX [IX_Hesaplar_TipIndOwnerInd_LONG04] ON [dbo].[Hesaplar]
(
	[TipInd] ASC,
	[Owner] ASC,
	[Ind] ASC
)
INCLUDE ( 	[HesapKodu],
	[HesapAdi],
	[StokInd],
	[OzelKodInd],
	[OzelKodu],
	[Adres],
	[Telefon],
	[Gsm],
	[Faks],
	[Sehir],
	[EPosta],
	[VergiDairesi],
	[VergiNo],
	[TcKimlikNo],
	[RiskLimiti],
	[Aciklama],
	[Aktif],
	[FaturaVadesi],
	[OdemeVadesi],
	[ParaBirimi],
	[FisPortfoyu],
	[OtomasyonKodu],
	[Iskonto],
	[AkaryakitIskonto],
	[RiskLimitiLt]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_TipIndOwnerInd_LONG04'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_TipIndOwnerIndParaBirimiBankaInd_HesapKoduHesapAdiMusteriKomisyon] ON [dbo].[Hesaplar]
(
	[TipInd] ASC,
	[Owner] ASC,
	[Ind] ASC,
	[ParaBirimi] ASC,
	[BankaInd] ASC
)
INCLUDE ( 	[HesapKodu],
	[HesapAdi],
	[MusteriKomisyon]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_TipIndOwnerIndParaBirimiBankaInd_HesapKoduHesapAdiMusteriKomisyon'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_TipIndOwnerIndStokInd_HesapKoduHesapAdiKapasiteMinimumSeviye] ON [dbo].[Hesaplar]
(
	[TipInd] ASC,
	[Owner] ASC,
	[Ind] ASC,
	[StokInd] ASC
)
INCLUDE ( 	[HesapKodu],
	[HesapAdi],
	[Kapasite],
	[MinimumSeviye]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_TipIndOwnerIndStokInd_HesapKoduHesapAdiKapasiteMinimumSeviye'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_TipIndStokIndOwner_IndHesapKoduHesapAdi] ON [dbo].[Hesaplar]
(
	[TipInd] ASC,
	[StokInd] ASC,
	[Owner] ASC
)
INCLUDE ( 	[Ind],
	[HesapKodu],
	[HesapAdi]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_TipIndStokIndOwner_IndHesapKoduHesapAdi'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_TipIndStokIndOwnerOzelKodInd] ON [dbo].[Hesaplar]
(
	[TipInd] ASC,
	[StokInd] ASC,
	[Owner] ASC,
	[OzelKodInd] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_TipIndStokIndOwnerOzelKodInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_AktifTipIndOwner_LONG05] ON [dbo].[Hesaplar]
(
	[Aktif] ASC,
	[TipInd] ASC,
	[Owner] ASC
)
INCLUDE ( 	[Ind],
	[HesapKodu],
	[HesapAdi],
	[OzelKodInd],
	[OzelKodu],
	[Adres],
	[Telefon],
	[Gsm],
	[Faks],
	[Sehir],
	[EPosta],
	[VergiDairesi],
	[VergiNo],
	[TcKimlikNo],
	[RiskLimiti],
	[Aciklama],
	[FaturaVadesi],
	[OdemeVadesi],
	[Faiz],
	[ParaBirimi],
	[FisPortfoyu],
	[OtomasyonKodu],
	[Iskonto],
	[AkaryakitIskonto],
	[TeminatKoduInd],
	[TeminatKodu],
	[FiloKodu],
	[RiskLimitiLt],
	[MuhasebeKodu],
	[IskontoX],
	[AkaryakitIskontoX],
	[HesapBankaAdi],
	[HesapIbanNo],
	[IlgiliKisi]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_AktifTipIndOwner_LONG05'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_HesapKoduInd_HesapAdiBankaIndBankaAdi] ON [dbo].[Hesaplar]
(
	[HesapKodu] ASC,
	[Ind] ASC
)
INCLUDE ( 	[HesapAdi],
	[BankaInd],
	[BankaAdi]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_HesapKoduInd_HesapAdiBankaIndBankaAdi'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_StokInd] ON [dbo].[Hesaplar]
(
	[StokInd] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_StokInd'
GO

CREATE NONCLUSTERED INDEX [IX_Hesaplar_TipInd_StokInd] ON [dbo].[Hesaplar]
(
	[TipInd] ASC
)
INCLUDE ( 	[StokInd]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Hesaplar_TipInd_StokInd'
 
GO

CREATE NONCLUSTERED INDEX [IX_SatisFiyatiSiralama_FiyatIndOwner] ON [dbo].[SatisFiyatiSiralama]
(
	[FiyatInd] DESC,
	[Owner] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_SatisFiyatiSiralama_FiyatIndOwner'
GO

CREATE NONCLUSTERED INDEX [IX_SatisFiyatiSiralama_Owner_FiyatIndSiraNo] ON [dbo].[SatisFiyatiSiralama] 
(
	[Owner] ASC
)
INCLUDE ([FiyatInd],
		[SiraNo])
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_SatisFiyatiSiralama_Owner_FiyatIndSiraNo'
 
GO

CREATE NONCLUSTERED INDEX [IX_SatisKasasi_BaslikIndOwnerIsYeniSatisKullaniciInd_IndIslemInd] ON [dbo].[SatisKasasi]
(
	[BaslikInd] ASC,
	[Owner] ASC,
	[IsYeniSatis] ASC,
	[KullaniciInd] ASC
)
INCLUDE ( 	[Ind],
	[IslemInd]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_SatisKasasi_BaslikIndOwnerIsYeniSatisKullaniciInd_IndIslemInd'
GO

CREATE NONCLUSTERED INDEX [IX_SatisKasasi_IsYeniSatisOwnerIndKullaniciIndIslemInd] ON [dbo].[SatisKasasi]
(
	[IsYeniSatis] ASC,
	[Owner] ASC,
	[Ind] ASC,
	[KullaniciInd] ASC,
	[IslemInd] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_SatisKasasi_IsYeniSatisOwnerIndKullaniciIndIslemInd'
GO


CREATE NONCLUSTERED INDEX [IX_SatisKasasi_IslemIndTabloIsYeniSatis_BaslikInd] ON [dbo].[SatisKasasi]
(
	[IslemInd] ASC,
	[Tablo] ASC,
	[IsYeniSatis] ASC
)
INCLUDE ( 	[BaslikInd])	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_SatisKasasi_IslemIndTabloIsYeniSatis_BaslikInd'
GO

CREATE NONCLUSTERED INDEX [IX_SatisKasasi_TabloIsYeniSatis_IslemIndBaslikInd] ON [dbo].[SatisKasasi]
(
	[Tablo] ASC,
	[IsYeniSatis] ASC
)
INCLUDE ( 	[IslemInd],
	[BaslikInd]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_SatisKasasi_TabloIsYeniSatis_IslemIndBaslikInd'
GO

CREATE NONCLUSTERED INDEX [IX_AlisSatis_TabloBaslikIndIsYeniSatis_IslemInd] ON [dbo].[SatisKasasi]
(
	[Tablo] ASC,
	[BaslikInd] ASC,
	[IsYeniSatis] ASC
)
INCLUDE ( 	[IslemInd])	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_AlisSatis_TabloBaslikIndIsYeniSatis_IslemInd'
GO

CREATE NONCLUSTERED INDEX [IX_SatisKasasi_KullaniciIndIsYeniSatisOwnerTablo] ON [dbo].[SatisKasasi]
(
	[KullaniciInd] ASC,
	[IsYeniSatis] ASC,
	[Owner] ASC,
	[Tablo] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_SatisKasasi_KullaniciIndIsYeniSatisOwnerTablo'
GO

CREATE NONCLUSTERED INDEX [IX_SatisKasasi_TabloBasliklarIndIsYeniSatis_IslemInd] ON [dbo].[SatisKasasi]
(
	[Tablo] ASC,
	[BaslikInd] ASC,
	[IsYeniSatis] ASC
)
INCLUDE ( 	[IslemInd],
	[KullaniciInd]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_SatisKasasi_TabloBasliklarIndIsYeniSatis_IslemInd'
GO

CREATE NONCLUSTERED INDEX [IX_SatisKasasi_TabloIsYeniSatis_IslemIndKullaniciIndBaslikInd] ON [dbo].[SatisKasasi]
(
	[Tablo] ASC,
	[IsYeniSatis] ASC
)
INCLUDE ( 	[IslemInd],
	[KullaniciInd],
	[BaslikInd]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_SatisKasasi_TabloIsYeniSatis_IslemIndKullaniciIndBaslikInd'
 
GO

CREATE NONCLUSTERED INDEX [IX_StokDetaylari_IsAnaFiyatStokIndTutar] ON [dbo].[StokDetaylari]
(
	[IsAnaFiyat] ASC,
	[StokInd] ASC,
	[Tutar] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_StokDetaylari_IsAnaFiyatStokIndTutar'
GO

CREATE NONCLUSTERED INDEX [IX_StokDetaylari_TipInd_IndOwnerStokIndBarkodBirimInd] ON [dbo].[StokDetaylari]
(
	[TipInd] ASC
)
INCLUDE ( 	[Ind],
	[Owner],
	[StokInd],
	[Barkod],
	[BirimInd])	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_StokDetaylari_TipInd_IndOwnerStokIndBarkodBirimInd'
GO

CREATE NONCLUSTERED INDEX [IX_StokDetaylari_TipInd_IndOwnerStokIndFiyatAdiBirimIndParaBirimiTutarIsAnaFiyat] ON [dbo].[StokDetaylari]
(
	[TipInd] ASC
)
INCLUDE ( 	[Ind],
	[Owner],
	[StokInd],
	[FiyatAdi],
	[BirimInd],
	[ParaBirimi],
	[Tutar],
	[IsAnaFiyat])	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_StokDetaylari_TipInd_IndOwnerStokIndFiyatAdiBirimIndParaBirimiTutarIsAnaFiyat'
GO

CREATE NONCLUSTERED INDEX [IX_StokDetaylari_TipIndStokInd_Barkod] ON [dbo].[StokDetaylari]
(
	[TipInd] ASC,
	[StokInd] ASC
)
INCLUDE ( 	[Barkod]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_StokDetaylari_TipIndStokInd_Barkod'
GO

CREATE NONCLUSTERED INDEX [IX_StokDetaylari_TipIndStokIndOwnerInd_BarkodBirimIndParaBirimiTutarIsAnaFiyatMuhasebeKoduGiderInd] ON [dbo].[StokDetaylari]
(
	[TipInd] ASC,
	[StokInd] ASC,
	[Owner] ASC,
	[Ind] ASC
)
INCLUDE ( 	[Barkod],
	[BirimInd],
	[ParaBirimi],
	[Tutar],
	[IsAnaFiyat],
	[MuhasebeKodu],
	[GiderInd])	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_StokDetaylari_TipIndStokIndOwnerInd_BarkodBirimIndParaBirimiTutarIsAnaFiyatMuhasebeKoduGiderInd'
 
GO

CREATE NONCLUSTERED INDEX [IX_StokGruplari_Owner_IndGrupAdiParentIndSiraNo] ON [dbo].[StokGruplari]
(
	[Owner] ASC
)
INCLUDE ( 	[Ind],
	[GrupAdi],
	[ParentInd],
	[SiraNo]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_StokGruplari_Owner_IndGrupAdiParentIndSiraNo'
 
GO
CREATE NONCLUSTERED INDEX [IX_Stoklar_IndOwnerStokKoduStokAdiAnaBirimIndGrupIndAlisKDVGrupIndSatisKDVGrupIndAktif] ON [dbo].[Stoklar]
(
	[Ind] ASC,
	[Owner] ASC,
	[StokKodu] ASC,
	[StokAdi] ASC,
	[AnaBirimInd] ASC,
	[GrupInd] ASC,
	[AlisKDVGrupInd] ASC,
	[SatisKDVGrupInd] ASC,
	[Aktif] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Stoklar_IndOwnerStokKoduStokAdiAnaBirimIndGrupIndAlisKDVGrupIndSatisKDVGrupIndAktif'
GO

CREATE NONCLUSTERED INDEX [IX_Stoklar_IndMuhasebeKodu] ON [dbo].[Stoklar]
(
	[Ind] ASC,
	[MuhasebeKodu] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Stoklar_IndMuhasebeKodu'
GO

CREATE NONCLUSTERED INDEX [IX_Stoklar_IndGrupInd] ON [dbo].[Stoklar]
(
	[Ind] ASC,
	[GrupInd] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Stoklar_IndGrupInd'
GO

CREATE NONCLUSTERED INDEX [IX_Stoklar_IndSatisKDVGrupInd] ON [dbo].[Stoklar]
(
	[Ind] ASC,
	[SatisKDVGrupInd] ASC
)	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Stoklar_IndSatisKDVGrupInd'
GO

CREATE NONCLUSTERED INDEX [IX_Stoklar_AktifGrupInd_Ind] ON [dbo].[Stoklar]
(
	[Aktif] ASC,
	[GrupInd] ASC
)
INCLUDE ( 	[Ind]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Stoklar_AktifGrupInd_Ind'
GO


CREATE NONCLUSTERED INDEX [IX_Stoklar_SatisKDVGrupIndAktif_Ind] ON [dbo].[Stoklar]
(
	[SatisKDVGrupInd] ASC,
	[Aktif] ASC
)
INCLUDE ( 	[Ind]) 	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Stoklar_SatisKDVGrupIndAktif_Ind'
GO

CREATE NONCLUSTERED INDEX [IX_Stoklar_Owner_IndStokKoduStokAdiAnaBirimIndGrupIndAlisKDVGrupIndSatisKDVGrupIndAktif] ON [dbo].[Stoklar]
(
	[Owner]
)
INCLUDE ([Ind],
		[StokKodu],
		[StokAdi],
		[AnaBirimInd],
		[GrupInd],
		[AlisKDVGrupInd],
		[SatisKDVGrupInd],
		[Aktif])	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Stoklar_Owner_IndStokKoduStokAdiAnaBirimIndGrupIndAlisKDVGrupIndSatisKDVGrupIndAktif'
GO

CREATE NONCLUSTERED INDEX [IX_Stoklar_Ind_GrupInd] ON [dbo].[Stoklar] 
(
	[Ind] ASC
)
INCLUDE ( [GrupInd])	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Stoklar_Ind_GrupInd'
GO


CREATE NONCLUSTERED INDEX [IX_Stoklar_Aktif_IndOwnerStokKoduStokAdiGrupIndAlisKDVGrupIndSatisKDVGrupInd]
ON [dbo].[Stoklar] ([Aktif])
INCLUDE ([Ind],[Owner],[StokKodu],[StokAdi],[GrupInd],[AlisKDVGrupInd],[SatisKDVGrupInd])
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]

PRINT 'Added Index: IX_Stoklar_Aktif_IndOwnerStokKoduStokAdiGrupIndAlisKDVGrupIndSatisKDVGrupInd'
GO
 

CREATE NONCLUSTERED INDEX [IX_SubeGruplari_Owner] ON [dbo].[SubeGruplari]
(
	[Owner] ASC
)
	 WITH (PAD_INDEX = ON, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
PRINT 'Added Index: IX_SubeGruplari_Owner'
GO
 
